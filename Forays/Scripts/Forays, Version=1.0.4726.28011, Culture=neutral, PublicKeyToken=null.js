/* Generated by JSIL v0.7.6 build 24569. See http://jsil.org/ for more information. */ 
var $asm00 = JSIL.DeclareAssembly("Forays, Version=1.0.4726.28011, Culture=neutral, PublicKeyToken=null");

JSIL.SetEntryPoint($asm00, $asm00.TypeRef("Forays.Game"), "Main", new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm01.TypeRef("System.String")])]));

JSIL.DeclareNamespace("Forays");
JSIL.MakeEnum(
  "Forays.TileType", true, {
    WALL: 0, 
    FLOOR: 1, 
    DOOR_O: 2, 
    DOOR_C: 3, 
    STAIRS: 4, 
    CHEST: 5, 
    FIREPIT: 6, 
    STALAGMITE: 7, 
    QUICKFIRE_TRAP: 8, 
    TELEPORT_TRAP: 9, 
    LIGHT_TRAP: 10, 
    UNDEAD_TRAP: 11, 
    GRENADE_TRAP: 12, 
    STUN_TRAP: 13, 
    ALARM_TRAP: 14, 
    DARKNESS_TRAP: 15, 
    POISON_GAS_TRAP: 16, 
    DIM_VISION_TRAP: 17, 
    ICE_TRAP: 18, 
    PHANTOM_TRAP: 19, 
    HIDDEN_DOOR: 20, 
    COMBAT_SHRINE: 21, 
    DEFENSE_SHRINE: 22, 
    MAGIC_SHRINE: 23, 
    SPIRIT_SHRINE: 24, 
    STEALTH_SHRINE: 25, 
    RUINED_SHRINE: 26, 
    SPELL_EXCHANGE_SHRINE: 27, 
    RUBBLE: 28, 
    FIRE_GEYSER: 29, 
    STATUE: 30, 
    HEALING_POOL: 31, 
    FOG_VENT: 32, 
    POISON_GAS_VENT: 33, 
    STONE_SLAB: 34, 
    CHASM: 35
  }, false
);

JSIL.MakeEnum(
  "Forays.FeatureType", true, {
    GRENADE: 0, 
    TROLL_CORPSE: 1, 
    TROLL_SEER_CORPSE: 2, 
    QUICKFIRE: 3, 
    RUNE_OF_RETREAT: 4, 
    FOG: 5, 
    POISON_GAS: 6, 
    SLIME: 7, 
    FUNGUS: 8, 
    FUNGUS_ACTIVE: 9, 
    FUNGUS_PRIMED: 10
  }, false
);

JSIL.MakeEnum(
  "Forays.ActorType", true, {
    PLAYER: 0, 
    RAT: 1, 
    FIRE_DRAKE: 2, 
    GOBLIN: 3, 
    LARGE_BAT: 4, 
    WOLF: 5, 
    SKELETON: 6, 
    BLOOD_MOTH: 7, 
    SWORDSMAN: 8, 
    DARKNESS_DWELLER: 9, 
    CARNIVOROUS_BRAMBLE: 10, 
    FROSTLING: 11, 
    DREAM_WARRIOR: 12, 
    CULTIST: 13, 
    GOBLIN_ARCHER: 14, 
    GOBLIN_SHAMAN: 15, 
    MIMIC: 16, 
    SKULKING_KILLER: 17, 
    ZOMBIE: 18, 
    DIRE_RAT: 19, 
    ROBED_ZEALOT: 20, 
    SHADOW: 21, 
    BANSHEE: 22, 
    WARG: 23, 
    PHASE_SPIDER: 24, 
    DERANGED_ASCETIC: 25, 
    POLTERGEIST: 26, 
    CAVERN_HAG: 27, 
    COMPY: 28, 
    NOXIOUS_WORM: 29, 
    BERSERKER: 30, 
    TROLL: 31, 
    VAMPIRE: 32, 
    CRUSADING_KNIGHT: 33, 
    SKELETAL_SABERTOOTH: 34, 
    MUD_ELEMENTAL: 35, 
    ENTRANCER: 36, 
    MARBLE_HORROR: 37, 
    OGRE: 38, 
    ORC_GRENADIER: 39, 
    SHADOWVEIL_DUELIST: 40, 
    CARRION_CRAWLER: 41, 
    SPELLMUDDLE_PIXIE: 42, 
    STONE_GOLEM: 43, 
    PYREN_ARCHER: 44, 
    ORC_ASSASSIN: 45, 
    TROLL_SEER: 46, 
    MECHANICAL_KNIGHT: 47, 
    ORC_WARMAGE: 48, 
    LASHER_FUNGUS: 49, 
    NECROMANCER: 50, 
    LUMINOUS_AVENGER: 51, 
    CORPSETOWER_BEHEMOTH: 52, 
    DREAM_CLONE: 53, 
    MUD_TENTACLE: 54, 
    MARBLE_HORROR_STATUE: 55, 
    PHANTOM: 56, 
    PHANTOM_ZOMBIE: 57, 
    PHANTOM_CRUSADER: 58, 
    PHANTOM_TIGER: 59, 
    PHANTOM_OGRE: 60, 
    PHANTOM_BEHEMOTH: 61, 
    PHANTOM_BLIGHTWING: 62, 
    PHANTOM_SWORDMASTER: 63, 
    PHANTOM_ARCHER: 64, 
    PHANTOM_CONSTRICTOR: 65
  }, false
);

JSIL.MakeEnum(
  "Forays.AttrType", true, {
    STEALTHY: 0, 
    UNDEAD: 1, 
    CONSTRUCT: 2, 
    PLANTLIKE: 3, 
    DEMON: 4, 
    MEDIUM_HUMANOID: 5, 
    HUMANOID_INTELLIGENCE: 6, 
    KEEN_SENSES: 7, 
    BLINDSIGHT: 8, 
    SMALL: 9, 
    FLYING: 10, 
    WANDERING: 11, 
    NEVER_MOVES: 12, 
    SHADOW_CLOAK: 13, 
    NOTICED: 14, 
    PLAYER_NOTICED: 15, 
    ENHANCED_TORCH: 16, 
    MAGICAL_BLOOD: 17, 
    KEEN_EYES: 18, 
    TOUGH: 19, 
    LONG_STRIDE: 20, 
    RUNIC_BIRTHMARK: 21, 
    LOW_LIGHT_VISION: 22, 
    DARKVISION: 23, 
    REGENERATING: 24, 
    REGENERATES_FROM_DEATH: 25, 
    NO_ITEM: 26, 
    STUNNED: 27, 
    PARALYZED: 28, 
    POISONED: 29, 
    FROZEN: 30, 
    ON_FIRE: 31, 
    CATCHING_FIRE: 32, 
    STARTED_CATCHING_FIRE_THIS_TURN: 33, 
    AFRAID: 34, 
    SLOWED: 35, 
    MAGICAL_DROWSINESS: 36, 
    ASLEEP: 37, 
    AGGRAVATING: 38, 
    CURSED_WEAPON: 39, 
    DETECTING_MONSTERS: 40, 
    BLOODSCENT: 41, 
    TELEPORTING: 42, 
    LIGHT_ALLERGY: 43, 
    DESTROYED_BY_SUNLIGHT: 44, 
    DIM_VISION: 45, 
    DIM_LIGHT: 46, 
    FIRE_HIT: 47, 
    COLD_HIT: 48, 
    POISON_HIT: 49, 
    PARALYSIS_HIT: 50, 
    FORCE_HIT: 51, 
    DIM_VISION_HIT: 52, 
    STALAGMITE_HIT: 53, 
    STUN_HIT: 54, 
    LIFE_DRAIN_HIT: 55, 
    GRAB_HIT: 56, 
    FIERY_ARROWS: 57, 
    RESIST_SLASH: 58, 
    RESIST_PIERCE: 59, 
    RESIST_BASH: 60, 
    RESIST_FIRE: 61, 
    RESIST_COLD: 62, 
    RESIST_ELECTRICITY: 63, 
    IMMUNE_FIRE: 64, 
    IMMUNE_COLD: 65, 
    IMMUNE_ARROWS: 66, 
    IMMUNE_TOXINS: 67, 
    RESIST_NECK_SNAP: 68, 
    COOLDOWN_1: 69, 
    COOLDOWN_2: 70, 
    BLESSED: 71, 
    HOLY_SHIELDED: 72, 
    ARCANE_SHIELDED: 73, 
    SPORE_BURST: 74, 
    SPELL_DISRUPTION: 75, 
    MECHANICAL_SHIELD: 76, 
    TURNS_VISIBLE: 77, 
    RESTING: 78, 
    RUNNING: 79, 
    WAITING: 80, 
    AUTOEXPLORE: 81, 
    DEFENSIVE_STANCE: 82, 
    TUMBLING: 83, 
    BLOOD_BOILED: 84, 
    SHADOWSIGHT: 85, 
    IN_COMBAT: 86, 
    CONVICTION: 87, 
    KILLSTREAK: 88, 
    DISTRACTED: 89, 
    ALERTED: 90, 
    AMNESIA_STUN: 91, 
    COMPY_POISON_COUNTER: 92, 
    COMPY_POISON_WARNING: 93, 
    COMPY_POISON_LETHAL: 94, 
    UNFROZEN: 95, 
    GRABBED: 96, 
    GRABBING: 97, 
    BONUS_COMBAT: 98, 
    BONUS_DEFENSE: 99, 
    BONUS_MAGIC: 100, 
    BONUS_SPIRIT: 101, 
    BONUS_STEALTH: 102, 
    INVULNERABLE: 103, 
    SMALL_GROUP: 104, 
    MEDIUM_GROUP: 105, 
    LARGE_GROUP: 106, 
    BOSS_MONSTER: 107, 
    NUM_ATTRS: 108, 
    NO_ATTR: 109
  }, false
);

JSIL.MakeEnum(
  "Forays.SpellType", true, {
    SHINE: 0, 
    IMMOLATE: 1, 
    FORCE_PALM: 2, 
    FREEZE: 3, 
    BLINK: 4, 
    SCORCH: 5, 
    BLOODSCENT: 6, 
    LIGHTNING_BOLT: 7, 
    SHADOWSIGHT: 8, 
    VOLTAIC_SURGE: 9, 
    MAGIC_HAMMER: 10, 
    RETREAT: 11, 
    GLACIAL_BLAST: 12, 
    PASSAGE: 13, 
    FLASHFIRE: 14, 
    SONIC_BOOM: 15, 
    COLLAPSE: 16, 
    FORCE_BEAM: 17, 
    AMNESIA: 18, 
    BLIZZARD: 19, 
    BLESS: 20, 
    MINOR_HEAL: 21, 
    HOLY_SHIELD: 22, 
    NUM_SPELLS: 23, 
    NO_SPELL: 24
  }, false
);

JSIL.MakeEnum(
  "Forays.SkillType", true, {
    COMBAT: 0, 
    DEFENSE: 1, 
    MAGIC: 2, 
    SPIRIT: 3, 
    STEALTH: 4, 
    NUM_SKILLS: 5, 
    NO_SKILL: 6
  }, false
);

JSIL.MakeEnum(
  "Forays.FeatType", true, {
    QUICK_DRAW: 0, 
    LETHALITY: 1, 
    LUNGE: 2, 
    DRIVE_BACK: 3, 
    SILENT_CHAINMAIL: 4, 
    ARMORED_MAGE: 5, 
    FULL_DEFENSE: 6, 
    TUMBLE: 7, 
    MASTERS_EDGE: 8, 
    STUDENTS_LUCK: 9, 
    ARCANE_SHIELD: 10, 
    FORCE_OF_WILL: 11, 
    CONVICTION: 12, 
    ENDURING_SOUL: 13, 
    FEEL_NO_PAIN: 14, 
    BOILING_BLOOD: 15, 
    DISTRACT: 16, 
    DISARM_TRAP: 17, 
    NECK_SNAP: 18, 
    DANGER_SENSE: 19, 
    NUM_FEATS: 20, 
    NO_FEAT: 21
  }, false
);

JSIL.MakeEnum(
  "Forays.ConsumableType", true, {
    HEALING: 0, 
    REGENERATION: 1, 
    TOXIN_IMMUNITY: 2, 
    CLARITY: 3, 
    CLOAKING: 4, 
    BLINKING: 5, 
    TELEPORTATION: 6, 
    PASSAGE: 7, 
    TIME: 8, 
    DETECT_MONSTERS: 9, 
    MAGIC_MAP: 10, 
    SUNLIGHT: 11, 
    DARKNESS: 12, 
    PRISMATIC: 13, 
    FREEZING: 14, 
    QUICKFIRE: 15, 
    FOG: 16, 
    BANDAGE: 17
  }, false
);

JSIL.MakeEnum(
  "Forays.WeaponType", true, {
    SWORD: 0, 
    MACE: 1, 
    DAGGER: 2, 
    STAFF: 3, 
    BOW: 4, 
    FLAMEBRAND: 5, 
    MACE_OF_FORCE: 6, 
    VENOMOUS_DAGGER: 7, 
    STAFF_OF_MAGIC: 8, 
    HOLY_LONGBOW: 9, 
    NUM_WEAPONS: 10, 
    NO_WEAPON: 11
  }, false
);

JSIL.MakeEnum(
  "Forays.ArmorType", true, {
    LEATHER: 0, 
    CHAINMAIL: 1, 
    FULL_PLATE: 2, 
    ELVEN_LEATHER: 3, 
    CHAINMAIL_OF_ARCANA: 4, 
    FULL_PLATE_OF_RESISTANCE: 5, 
    NUM_ARMORS: 6, 
    NO_ARMOR: 7
  }, false
);

JSIL.MakeEnum(
  "Forays.MagicItemType", true, {
    PENDANT_OF_LIFE: 0, 
    RING_OF_RESISTANCE: 1, 
    RING_OF_PROTECTION: 2, 
    CLOAK_OF_DISAPPEARANCE: 3, 
    NUM_MAGIC_ITEMS: 4, 
    NO_MAGIC_ITEM: 5
  }, false
);

JSIL.MakeEnum(
  "Forays.DamageType", true, {
    NORMAL: 0, 
    FIRE: 1, 
    COLD: 2, 
    ELECTRIC: 3, 
    POISON: 4, 
    HEAL: 5, 
    SLASHING: 6, 
    BASHING: 7, 
    PIERCING: 8, 
    MAGIC: 9, 
    NONE: 10
  }, false
);

JSIL.MakeEnum(
  "Forays.DamageClass", true, {
    PHYSICAL: 0, 
    MAGICAL: 1, 
    NO_TYPE: 2
  }, false
);

JSIL.MakeEnum(
  "Forays.EventType", true, {
    ANY_EVENT: 0, 
    MOVE: 1, 
    REMOVE_ATTR: 2, 
    CHECK_FOR_HIDDEN: 3, 
    RELATIVELY_SAFE: 4, 
    POLTERGEIST: 5, 
    MIMIC: 6, 
    REGENERATING_FROM_DEATH: 7, 
    GRENADE: 8, 
    BLAST_FUNGUS: 9, 
    STALAGMITE: 10, 
    FIRE_GEYSER: 11, 
    FIRE_GEYSER_ERUPTION: 12, 
    FOG_VENT: 13, 
    FOG: 14, 
    POISON_GAS_VENT: 15, 
    POISON_GAS: 16, 
    STONE_SLAB: 17, 
    MARBLE_HORROR: 18, 
    QUICKFIRE: 19, 
    BOSS_SIGN: 20, 
    BOSS_ARRIVE: 21, 
    FLOOR_COLLAPSE: 22, 
    CEILING_COLLAPSE: 23
  }, false
);

JSIL.MakeEnum(
  "Forays.OptionType", true, {
    LAST_TARGET: 0, 
    AUTOPICKUP: 1, 
    NO_ROMAN_NUMERALS: 2, 
    HIDE_OLD_MESSAGES: 3, 
    HIDE_COMMANDS: 4, 
    NEVER_DISPLAY_TIPS: 5, 
    ALWAYS_RESET_TIPS: 6
  }, false
);

(function Game$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Forays.Item)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Forays.ConsumableType)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize(System.Array.Of($asm01.System.String))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm01.System.Int32)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm01.System.OperatingSystem)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm01.System.Environment)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Forays.Global)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm01.System.Console)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm01.System.String)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.Forays.Screen)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.Forays.Color)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.Forays.colorchar)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.Forays.Dict$b2.Of($asm00.Forays.AttrType, $asm01.System.Int32))) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm01.System.Char)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm00.Forays.cstr)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm01.System.Boolean)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm01.System.IO.File)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm01.System.ConsoleKeyInfo)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm00.Forays.Actor)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm00.Forays.ActorType)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm00.Forays.AttrType)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.Item))) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.FeatType))) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.SpellType))) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm02.System.Collections.Generic.LinkedList$b1.Of($asm00.Forays.WeaponType))) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm00.Forays.WeaponType)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm02.System.Collections.Generic.LinkedList$b1.Of($asm00.Forays.ArmorType))) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm00.Forays.ArmorType)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm00.Forays.Map)) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm00.Forays.Buffer)) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize($asm00.Forays.Queue)) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm00.Forays.PhysicalObject)) ();
  };
  var $T20 = function () {
    return ($T20 = JSIL.Memoize($asm00.Forays.Event)) ();
  };
  var $T21 = function () {
    return ($T21 = JSIL.Memoize($asm00.Forays.Tile)) ();
  };
  var $T22 = function () {
    return ($T22 = JSIL.Memoize($asm01.System.IO.StreamReader)) ();
  };
  var $T23 = function () {
    return ($T23 = JSIL.Memoize($asm01.System.IO.TextReader)) ();
  };
  var $T24 = function () {
    return ($T24 = JSIL.Memoize($asm00.Forays.OptionType)) ();
  };
  var $T25 = function () {
    return ($T25 = JSIL.Memoize($asm01.System.Convert)) ();
  };
  var $T26 = function () {
    return ($T26 = JSIL.Memoize($asm01.System.Void)) ();
  };
  var $T27 = function () {
    return ($T27 = JSIL.Memoize($asm01.System.IO.StreamWriter)) ();
  };
  var $T28 = function () {
    return ($T28 = JSIL.Memoize($asm01.System.IO.TextWriter)) ();
  };
  var $T29 = function () {
    return ($T29 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm01.System.String))) ();
  };
  var $T2A = function () {
    return ($T2A = JSIL.Memoize($asm00.Forays.EventType)) ();
  };
  var $T2B = function () {
    return ($T2B = JSIL.Memoize($asm01.System.IO.FileStream)) ();
  };
  var $T2C = function () {
    return ($T2C = JSIL.Memoize($asm01.System.IO.FileMode)) ();
  };
  var $T2D = function () {
    return ($T2D = JSIL.Memoize($asm01.System.IO.BinaryReader)) ();
  };
  var $T2E = function () {
    return ($T2E = JSIL.Memoize($asm01.System.Collections.Generic.Dictionary$b2.Of($asm01.System.Int32, $asm00.Forays.PhysicalObject))) ();
  };
  var $T2F = function () {
    return ($T2F = JSIL.Memoize($asm00.Forays.Dict$b2.Of($asm00.Forays.PhysicalObject, $asm01.System.Int32))) ();
  };
  var $T30 = function () {
    return ($T30 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.Actor))) ();
  };
  var $T31 = function () {
    return ($T31 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.LevelType))) ();
  };
  var $T32 = function () {
    return ($T32 = JSIL.Memoize($asm00.Forays.LevelType)) ();
  };
  var $T33 = function () {
    return ($T33 = JSIL.Memoize($asm00.Forays.FeatType)) ();
  };
  var $T34 = function () {
    return ($T34 = JSIL.Memoize($asm00.Forays.SpellType)) ();
  };
  var $T35 = function () {
    return ($T35 = JSIL.Memoize($asm00.Forays.Map_PosArray$b1.Of($asm00.Forays.Actor))) ();
  };
  var $T36 = function () {
    return ($T36 = JSIL.Memoize($asm00.Forays.SkillType)) ();
  };
  var $T37 = function () {
    return ($T37 = JSIL.Memoize($asm00.Forays.Dict$b2.Of($asm00.Forays.SkillType, $asm01.System.Int32))) ();
  };
  var $T38 = function () {
    return ($T38 = JSIL.Memoize($asm00.Forays.Dict$b2.Of($asm00.Forays.FeatType, $asm01.System.Int32))) ();
  };
  var $T39 = function () {
    return ($T39 = JSIL.Memoize($asm00.Forays.Dict$b2.Of($asm00.Forays.SpellType, $asm01.System.Int32))) ();
  };
  var $T3A = function () {
    return ($T3A = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.pos))) ();
  };
  var $T3B = function () {
    return ($T3B = JSIL.Memoize($asm00.Forays.pos)) ();
  };
  var $T3C = function () {
    return ($T3C = JSIL.Memoize($asm02.System.Collections.Generic.LinkedList$b1.Of($asm00.Forays.MagicItemType))) ();
  };
  var $T3D = function () {
    return ($T3D = JSIL.Memoize($asm00.Forays.MagicItemType)) ();
  };
  var $T3E = function () {
    return ($T3E = JSIL.Memoize($asm00.Forays.Map_PosArray$b1.Of($asm00.Forays.Tile))) ();
  };
  var $T3F = function () {
    return ($T3F = JSIL.Memoize($asm00.Forays.TileType)) ();
  };
  var $T40 = function () {
    return ($T40 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.FeatureType))) ();
  };
  var $T41 = function () {
    return ($T41 = JSIL.Memoize($asm00.Forays.FeatureType)) ();
  };
  var $T42 = function () {
    return ($T42 = JSIL.Memoize($asm01.System.Exception)) ();
  };
  var $T43 = function () {
    return ($T43 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.Tile))) ();
  };
  var $T44 = function () {
    return ($T44 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.PhysicalObject))) ();
  };
  var $T45 = function () {
    return ($T45 = JSIL.Memoize($asm01.System.IO.Stream)) ();
  };
  var $T46 = function () {
    return ($T46 = JSIL.Memoize($asm01.System.Object)) ();
  };
  var $T47 = function () {
    return ($T47 = JSIL.Memoize(System.Array.Of($asm01.System.Object))) ();
  };
  var $T48 = function () {
    return ($T48 = JSIL.Memoize(System.Array.Of($asm01.System.Char))) ();
  };
  var $T49 = function () {
    return ($T49 = JSIL.Memoize($asm00.Forays.Dict$b2.Of($asm00.Forays.TutorialTopic, $asm01.System.Boolean))) ();
  };
  var $T4A = function () {
    return ($T4A = JSIL.Memoize($asm00.Forays.Help)) ();
  };
  var $T4B = function () {
    return ($T4B = JSIL.Memoize($asm00.Forays.TutorialTopic)) ();
  };
  var $T4C = function () {
    return ($T4C = JSIL.Memoize($asm00.Forays.Extensions)) ();
  };
  var $T4D = function () {
    return ($T4D = JSIL.Memoize(System.Array.Of($asm00.Forays.colorchar))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.colorchar")
      ], []))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.colorchar"), [
        $asm00.TypeRef("Forays.Color"), $asm00.TypeRef("Forays.Color"), 
        $asm01.TypeRef("System.Char")
      ]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.cstr")
      ], []))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.cstr"), [$asm00.TypeRef("Forays.Color"), $asm01.TypeRef("System.String")]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $asm01.TypeRef("System.String")
      ], []))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.colorchar")
      ], []))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.colorchar"), [$asm00.TypeRef("Forays.Color"), $asm01.TypeRef("System.Char")]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Actor"), [
        $asm00.TypeRef("Forays.ActorType"), $asm01.TypeRef("System.String"), 
        $asm01.TypeRef("System.Char"), $asm00.TypeRef("Forays.Color"), 
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.AttrType")])
      ]))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Item")]), []))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.FeatType")]), []))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.SpellType")]), []))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.IO.StreamReader"), [$asm01.TypeRef("System.String")]))) ();
  };
  var $S0C = function () {
    return ($S0C = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Int32"), [$asm01.TypeRef("System.String")], []))) ();
  };
  var $S0D = function () {
    return ($S0D = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.IO.StreamWriter"), [$asm01.TypeRef("System.String"), $asm01.TypeRef("System.Boolean")]))) ();
  };
  var $S0E = function () {
    return ($S0E = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm01.TypeRef("System.String")], []))) ();
  };
  var $S0F = function () {
    return ($S0F = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm01.TypeRef("System.Int32")], []))) ();
  };
  var $S10 = function () {
    return ($S10 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.colorchar"), [$asm01.TypeRef("System.Char"), $asm00.TypeRef("Forays.Color")]))) ();
  };
  var $S11 = function () {
    return ($S11 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm01.TypeRef("System.String")]), []))) ();
  };
  var $S12 = function () {
    return ($S12 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Event"), [
        $asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.EventType")
      ]))) ();
  };
  var $S13 = function () {
    return ($S13 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.IO.FileStream"), [$asm01.TypeRef("System.String"), $asm01.TypeRef("System.IO.FileMode")]))) ();
  };
  var $S14 = function () {
    return ($S14 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.IO.BinaryReader"), [$asm01.TypeRef("System.IO.Stream")]))) ();
  };
  var $S15 = function () {
    return ($S15 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.Dictionary`2", [$asm01.TypeRef("System.Int32"), $asm00.TypeRef("Forays.PhysicalObject")]), []))) ();
  };
  var $S16 = function () {
    return ($S16 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Dict`2", [$asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Int32")]), []))) ();
  };
  var $S17 = function () {
    return ($S17 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Actor")]), []))) ();
  };
  var $S18 = function () {
    return ($S18 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.LevelType")]), []))) ();
  };
  var $S19 = function () {
    return ($S19 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Actor"), []))) ();
  };
  var $S1A = function () {
    return ($S1A = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Item"), []))) ();
  };
  var $S1B = function () {
    return ($S1B = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Tile"), []))) ();
  };
  var $S1C = function () {
    return ($S1C = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Exception"), [$asm01.TypeRef("System.String")]))) ();
  };
  var $S1D = function () {
    return ($S1D = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Actor")]), [$asm01.TypeRef("System.Int32")]))) ();
  };
  var $S1E = function () {
    return ($S1E = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Event"), []))) ();
  };
  var $S1F = function () {
    return ($S1F = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), []))) ();
  };
  var $S20 = function () {
    return ($S20 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.PhysicalObject")]), []))) ();
  };
  var $S21 = function () {
    return ($S21 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $asm01.TypeRef("System.Char")
      ], []))) ();
  };
  var $S22 = function () {
    return ($S22 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm01.TypeRef("System.Char")], []))) ();
  };
  var $S23 = function () {
    return ($S23 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.cstr")
      ], []))) ();
  };
  var $S24 = function () {
    return ($S24 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.cstr"), [$asm01.TypeRef("System.String"), $asm00.TypeRef("Forays.Color")]))) ();
  };

  function Game__ctor () {
  };

  function Game_$lMainMenu$gm__0 (item) {
    return ((item.Item$type$value.valueOf() === 0) || (item.Item$type$value === $T01().TELEPORTATION));
  };

  function Game_Main (args) {
    var platform = $T05().get_OSVersion().get_Platform().valueOf();
    if (!((platform !== 4) && 
        (platform !== 6) && (platform !== 128))) {
      $T06().LINUX = true;
    }
    $T07().set_CursorVisible(false);
    if ($T06().LINUX) {
      $T07().SetCursorPosition(0, 0);
      if (!(($T07().get_BufferWidth() >= 80) && ($T07().get_BufferHeight() >= 25))) {
        $T07().Write("Please resize your terminal to 80x25, then press any key.");
        $T07().SetCursorPosition(0, 1);
        $T07().Write(
          System.String.PadRight("         Current dimensions are {0}x{1}.", 57, ' '), 
          $T07().get_BufferWidth(), 
          $T07().get_BufferHeight()
        );
        $T07().ReadKey(true);
        $T07().SetCursorPosition(0, 0);
        if (!(($T07().get_BufferWidth() >= 80) && ($T07().get_BufferHeight() >= 25))) {
          $T05().Exit(0);
        }
      }
      $T09().Blank();
    } else {
      $T07().set_Title("Forays into Norrendrin");
      $T07().set_BufferHeight(25);
    }
    $T07().set_TreatControlCAsInput(true);

    for (var i = 0; i < 24; i = ((i + 1) | 0)) {
      var color_ = $T0A().Yellow;
      if (i === 18) {
        color_ = $T0A().Green;
      }
      if (i > 18) {
        color_ = $T0A().DarkGray;
      }

      for (var j = 0; j < 80; j = ((j + 1) | 0)) {
        if ($T06().titlescreen[i][j].charCodeAt(0) !== " ".charCodeAt(0)) {
          if (!(($T06().titlescreen[i][j].charCodeAt(0) !== "#".charCodeAt(0)) || $T06().LINUX)) {
            $S00().CallStatic($T09(), "WriteChar", null, i, j, $S01().Construct($T0A().Black, $T0A().Yellow, " "));
          } else {
            $S00().CallStatic($T09(), "WriteChar", null, i, j, $S01().Construct(color_, $T0A().Black, $T06().titlescreen[i][j]));
          }
        }
      }
    }
    $T07().ReadKey(true);
    $thisType.MainMenu();
  };

  function Game_MainMenu () {
    var $temp00, $temp01, $temp02, $temp03, $temp04, $temp05, $temp06, $temp07, $temp08, $temp09, $temp0A, $temp0B, $temp0C, $temp0D;
    var $s00 = new JSIL.MethodSignature($asm01.System.Boolean, [$asm00.TypeRef("Forays.WeaponType")], []);
    var $s01 = new JSIL.MethodSignature($asm02.TypeRef("System.Collections.Generic.LinkedListNode`1", [$asm00.TypeRef("Forays.WeaponType")]), [$asm00.TypeRef("Forays.WeaponType")], []);
    var $s02 = new JSIL.MethodSignature($asm01.System.Boolean, [$asm00.TypeRef("Forays.ArmorType")], []);
    var $s03 = new JSIL.MethodSignature($asm02.TypeRef("System.Collections.Generic.LinkedListNode`1", [$asm00.TypeRef("Forays.ArmorType")]), [$asm00.TypeRef("Forays.ArmorType")], []);
    var $s04 = new JSIL.MethodSignature($asm02.TypeRef("System.Collections.Generic.LinkedListNode`1", [$asm00.TypeRef("Forays.MagicItemType")]), [$asm00.TypeRef("Forays.MagicItemType")], []);
    var attrs = null, attrs2 = null, attrs3 = null, attrs4 = null, attrs5 = null;

    var $label0 = 0;
  $labelgroup0: 
    while (true) {
      switch ($label0) {
        case 0: /* $entry0 */ 
          var b = (System.String.PadRight("", 30, ' '));
          var num = -1;
          var c = "-";
          var b2 = "";

          while (true) {
            $T09().Blank();
            $S02().CallStatic($T09(), "WriteMapString", null, 1, 0, $S03().Construct($T0A().Yellow, "Forays into Norrendrin version 0.7.0 "));
            var flag = $T10().Exists("forays.sav");
            if (!flag) {
              $S04().CallStatic($T09(), "WriteMapString", null, 4, 0, "[a] Start a new game");
            } else {
              $S04().CallStatic($T09(), "WriteMapString", null, 4, 0, "[a] Resume saved game");
            }
            $S04().CallStatic($T09(), "WriteMapString", null, 5, 0, "[b] How to play");
            $S04().CallStatic($T09(), "WriteMapString", null, 6, 0, "[c] High scores");
            $S04().CallStatic($T09(), "WriteMapString", null, 7, 0, "[d] Quit");

            for (var i = 0; i < 4; i = ((i + 1) | 0)) {
              $S05().CallStatic($T09(), "WriteMapChar", null, ((i + 4) | 0), 1, $S06().Construct($T0A().Cyan, String.fromCharCode(((i + 97) | 0))));
            }
            $T09().ResetColors();
            $T07().SetCursorPosition(13, 11);
            switch ($T07().ReadKey(true).get_KeyChar()) {
              case "a": 
                $T06().GAME_OVER = false;
                $T06().BOSS_KILLED = false;
                $T06().SAVING = false;
                $T06().LoadOptions();
                var game = new $thisType();
                if (!flag) {
                  game.player = $S07().Construct($T13().PLAYER, "you", "@", $T0A().White, 100, 100, 0, 0, JSIL.Array.New($T14(), [$T14().HUMANOID_INTELLIGENCE]));
                  game.player.Actor$inv$value = $S08().Construct();
                  $T12().feats_in_order = $S09().Construct();
                  $T12().partial_feats_in_order = $S09().Construct();
                  $T12().spells_in_order = $S0A().Construct();
                  $s00.CallVirtual("Remove", null, game.player.weapons, $T19().NO_WEAPON);
                  $s01.Call($T18().prototype, "AddLast", null, game.player.weapons, $T19().SWORD);
                  $s01.Call($T18().prototype, "AddLast", null, game.player.weapons, $T19().MACE);
                  $s01.Call($T18().prototype, "AddLast", null, game.player.weapons, $T19().DAGGER);
                  $s01.Call($T18().prototype, "AddLast", null, game.player.weapons, $T19().STAFF);
                  $s01.Call($T18().prototype, "AddLast", null, game.player.weapons, $T19().BOW);
                  $s02.CallVirtual("Remove", null, game.player.armors, $T1B().NO_ARMOR);
                  $s03.Call($T1A().prototype, "AddLast", null, game.player.armors, $T1B().LEATHER);
                  $s03.Call($T1A().prototype, "AddLast", null, game.player.armors, $T1B().CHAINMAIL);
                  $s03.Call($T1A().prototype, "AddLast", null, game.player.armors, $T1B().FULL_PLATE);
                }
                game.M = new ($T1C())(game);
                game.B = new ($T1D())(game);
                game.Q = new ($T1E())(game);
                $T1C().Map$Q$value = game.Q;
                $T1C().Map$B$value = game.B;
                $T1F().PhysicalObject$M$value = game.M;
                $T1F().PhysicalObject$M$value = game.M;
                $T12().Actor$Q$value = game.Q;
                $T12().Actor$B$value = game.B;
                $T12().Actor$player$value = game.player;
                $T1F().PhysicalObject$M$value = game.M;
                $T00().Item$Q$value = game.Q;
                $T00().Item$B$value = game.B;
                $T00().Item$player$value = game.player;
                $T20().Event$Q$value = game.Q;
                $T20().Event$B$value = game.B;
                $T20().Event$M$value = game.M;
                $T20().Event$player$value = game.player;
                $T1F().PhysicalObject$M$value = game.M;
                $T21().Tile$B$value = game.B;
                $T21().Tile$Q$value = game.Q;
                $T21().Tile$player$value = game.player;
                if (!flag) {
                  $T12().player_name = "";
                  if ($T10().Exists("name.txt")) {
                    var streamReader = $S0B().Construct("name.txt");
                    var text = streamReader.ReadLine();
                    $T12().player_name = text;
                    var num2 = 1;
                    if (!($T06().Option($T24().NO_ROMAN_NUMERALS) || (streamReader.Peek() === -1))) {
                      num2 = $S0C().CallStatic($T25(), "ToInt32", null, streamReader.ReadLine());
                      if (num2 > 1) {
                        $T12().player_name = (($T12().player_name + " " + $T06().RomanNumeral(num2)));
                      }
                    }
                    streamReader.Close();
                    var streamWriter = $S0D().Construct("name.txt", false);
                    $S0E().CallVirtual("WriteLine", null, streamWriter, text);
                    if (!$T06().Option($T24().NO_ROMAN_NUMERALS)) {
                      $S0F().CallVirtual("WriteLine", null, streamWriter, ((num2 + 1) | 0));
                    }
                    streamWriter.Close();
                  }

                  while ($T12().player_name == "") {
                    $T07().set_CursorVisible(false);
                    game.B.DisplayNow(System.String.PadRight("", 66, ' '), false);
                    game.B.DisplayNow("Enter name: ", false);
                    $T12().player_name = $T06().EnterString(26);
                  }
                  game.M.GenerateLevelTypes();
                  game.M.GenerateLevel();
                  $T09().Blank();
                  $S04().CallStatic($T09(), "WriteMapString", null, 0, 0, System.String.PadRight("", 66, "-"));
                  $S04().CallStatic($T09(), "WriteMapString", null, 1, 0, "[a] Toughness - You have a slight resistance to physical damage.");
                  $S04().CallStatic($T09(), "WriteMapString", null, 2, 0, "[b] Magical blood - Your natural recovery is faster than normal.");
                  $S04().CallStatic($T09(), "WriteMapString", null, 3, 0, "[c] Low-light vision - You can see farther in darkness.");
                  $S04().CallStatic($T09(), "WriteMapString", null, 4, 0, "[d] Keen eyes - You're better at spotting traps and aiming arrows.");
                  $S04().CallStatic($T09(), "WriteMapString", null, 5, 0, "[e] Long stride - You walk a good bit faster than normal.");
                  $S04().CallStatic($T09(), "WriteMapString", null, 6, 0, System.String.PadRight("", 66, "-"));
                  $S04().CallStatic($T09(), "WriteMapString", null, 9, 4, "(Your character will keep the chosen trait");
                  $S04().CallStatic($T09(), "WriteMapString", null, 10, 4, "     for his or her entire adventuring career.)");
                  if (!$T10().Exists("name.txt")) {
                    $S04().CallStatic($T09(), "WriteMapString", null, 18, 5, "[ ] Automatically name future characters after this one.");
                    $S05().CallStatic($T09(), "WriteMapChar", null, 18, 6, $S10().Construct("n", $T0A().Cyan));
                  }

                  for (var j = 0; j < 5; j = ((j + 1) | 0)) {
                    $S05().CallStatic($T09(), "WriteMapChar", null, ((j + 1) | 0), 1, $S06().Construct($T0A().Cyan, String.fromCharCode(((j + 97) | 0))));
                  }
                  $S04().CallStatic($T09(), "WriteMapString", null, -1, 0, "Select a trait: ");
                  $T07().set_CursorVisible(true);
                  $T06().quickstartinfo = $S11().Construct();
                  var flag3 = false;

                  while (!flag3) {
                    var keyChar = $T07().ReadKey(true).get_KeyChar();
                    switch (keyChar) {
                      case "a": 
                        flag3 = true;
                        var expr_5B2 = (attrs = game.player.attrs);
                        var num3 = $T0C().prototype.get_Item.call(attrs, $T14().TOUGH);
                        $T0C().prototype.set_Item.call(expr_5B2, $T14().TOUGH, ((num3 + 1) | 0));
                        $T06().quickstartinfo.Add("tough");
                        break;

                      case "b": 
                        flag3 = true;
                        var expr_5EE = (attrs2 = game.player.attrs);
                        num3 = $T0C().prototype.get_Item.call(attrs2, $T14().MAGICAL_BLOOD);
                        $T0C().prototype.set_Item.call(expr_5EE, $T14().MAGICAL_BLOOD, ((num3 + 1) | 0));
                        $T06().quickstartinfo.Add("magical_blood");
                        break;

                      case "c": 
                        flag3 = true;
                        var expr_62A = (attrs3 = game.player.attrs);
                        num3 = $T0C().prototype.get_Item.call(attrs3, $T14().LOW_LIGHT_VISION);
                        $T0C().prototype.set_Item.call(expr_62A, $T14().LOW_LIGHT_VISION, ((num3 + 1) | 0));
                        $T06().quickstartinfo.Add("low_light_vision");
                        break;

                      case "d": 
                        flag3 = true;
                        var expr_666 = (attrs4 = game.player.attrs);
                        num3 = $T0C().prototype.get_Item.call(attrs4, $T14().KEEN_EYES);
                        $T0C().prototype.set_Item.call(expr_666, $T14().KEEN_EYES, ((num3 + 1) | 0));
                        $T06().quickstartinfo.Add("keen_eyes");
                        break;

                      case "e": 
                        flag3 = true;
                        var expr_6A2 = (attrs5 = game.player.attrs);
                        num3 = $T0C().prototype.get_Item.call(attrs5, $T14().LONG_STRIDE);
                        $T0C().prototype.set_Item.call(expr_6A2, $T14().LONG_STRIDE, ((num3 + 1) | 0));
                        game.player.Actor$speed$value = 80;
                        $T06().quickstartinfo.Add("long_stride");
                        break;

                      default: 
                        if (keyChar.charCodeAt(0) === "n".charCodeAt(0)) {
                          if (!$T10().Exists("name.txt")) {
                            var streamWriter2 = $S0D().Construct("name.txt", false);
                            $S0E().CallVirtual("WriteLine", null, streamWriter2, $T12().player_name);
                            if (!$T06().Option($T24().NO_ROMAN_NUMERALS)) {
                              $S0E().CallVirtual("WriteLine", null, streamWriter2, "2");
                            }
                            streamWriter2.Close();
                            $S04().CallStatic($T09(), "WriteMapString", null, 18, 5, "(to stop automatically naming characters, delete name.txt)");
                            $T07().SetCursorPosition(29, 1);
                          }
                        }
                        break;

                    }
                  }
                  var event = $S12().Construct(game.player, 0, $T2A().MOVE);
                  event.Event$tiebreaker$value = 0;
                  game.Q.Add(event);
                  game.player.UpdateRadius(0, 6, true);
                  $T00().Create($T01().HEALING, game.player);
                  $T00().Create($T01().BLINKING, game.player);
                  $T00().Create($T01().BANDAGE, game.player);
                  $T00().Create($T01().BANDAGE, game.player);
                  if (false) {
                    game.player.Actor$level$value = 1;
                  } else {
                    var streamWriter3 = $S0D().Construct("quickstart.txt", false);

                    for (var a$0 = $T06().quickstartinfo._items, i$0 = 0, l$0 = $T06().quickstartinfo._size; i$0 < l$0; ($temp00 = i$0, 
                        i$0 = ((i$0 + 1) | 0), 
                        $temp00)) {
                      var current = a$0[i$0];
                      $S0E().CallVirtual("WriteLine", null, streamWriter3, current.toLowerCase());
                    }
                    streamWriter3.Close();
                    $T06().quickstartinfo = null;
                  }
                } else {
                  var fileStream = $S13().Construct("forays.sav", $T2C().Open);
                  var binaryReader = $S14().Construct(fileStream);
                  var dictionary = $S15().Construct();
                  dictionary.Add(0, null);
                  var dict = $S16().Construct();
                  var list = $S17().Construct();
                  var dict2 = $S16().Construct();
                  var list2 = $S17().Construct();
                  $T12().player_name = binaryReader.ReadString();
                  game.M.Map$current_level$value = binaryReader.ReadInt32();
                  game.M.level_types = $S18().Construct();

                  for (var k = 0; k < 20; k = ((k + 1) | 0)) {
                    game.M.level_types.Add($T32().$Cast(binaryReader.ReadInt32()));
                  }
                  game.M.set_wiz_lite(binaryReader.ReadBoolean());
                  game.M.Map$wiz_dark$value = binaryReader.ReadBoolean();
                  $T12().feats_in_order = $S09().Construct();
                  $T12().partial_feats_in_order = $S09().Construct();
                  $T12().spells_in_order = $S0A().Construct();
                  var num4 = binaryReader.ReadInt32();

                  for (var l = 0; l < num4; l = ((l + 1) | 0)) {
                    $T12().feats_in_order.Add($T33().$Cast(binaryReader.ReadInt32()));
                  }
                  var num5 = binaryReader.ReadInt32();

                  for (var m = 0; m < num5; m = ((m + 1) | 0)) {
                    $T12().partial_feats_in_order.Add($T33().$Cast(binaryReader.ReadInt32()));
                  }
                  var num6 = binaryReader.ReadInt32();

                  for (var n = 0; n < num6; n = ((n + 1) | 0)) {
                    $T12().spells_in_order.Add($T34().$Cast(binaryReader.ReadInt32()));
                  }
                  var num7 = binaryReader.ReadInt32();

                  for (var num8 = 0; num8 < num7; num8 = ((num8 + 1) | 0)) {
                    var actor = $S19().Construct();
                    var key = binaryReader.ReadInt32();
                    dictionary.Add(key, actor);
                    actor.set_row(binaryReader.ReadInt32());
                    actor.set_col(binaryReader.ReadInt32());
                    $T35().prototype.set_Item.call(game.M.actor, 
                      actor.get_row(), 
                      actor.get_col(), 
                      actor
                    );
                    actor.PhysicalObject$$name$value = binaryReader.ReadString();
                    actor.PhysicalObject$the_name$value = binaryReader.ReadString();
                    actor.PhysicalObject$a_name$value = binaryReader.ReadString();
                    actor.PhysicalObject$symbol$value = binaryReader.ReadChar();
                    actor.PhysicalObject$color$value = $T0A().$Cast(binaryReader.ReadInt32());
                    actor.Actor$type$value = $T13().$Cast(binaryReader.ReadInt32());
                    if (actor.Actor$type$value.valueOf() === 0) {
                      game.player = actor;
                      $T12().Actor$player$value = actor;
                      $T1D().Buffer$player$value = actor;
                      $T00().Item$player$value = actor;
                      $T1C().Map$player$value = actor;
                      $T20().Event$player$value = actor;
                      $T21().Tile$player$value = actor;
                    }
                    actor.Actor$maxhp$value = binaryReader.ReadInt32();
                    actor.Actor$curhp$value = binaryReader.ReadInt32();
                    actor.Actor$speed$value = binaryReader.ReadInt32();
                    actor.Actor$level$value = binaryReader.ReadInt32();
                    actor.PhysicalObject$light_radius$value = binaryReader.ReadInt32();
                    var num9 = binaryReader.ReadInt32();
                    if (dictionary.ContainsKey(num9)) {
                      actor.Actor$target$value = $T12().$Cast(dictionary.get_Item(num9));
                    } else {
                      actor.Actor$target$value = null;
                      list.Add(actor);
                      $T2F().prototype.set_Item.call(dict, actor, num9);
                    }
                    var num10 = binaryReader.ReadInt32();

                    for (var num11 = 0; num11 < num10; num11 = ((num11 + 1) | 0)) {
                      var item = $S1A().Construct();
                      item.PhysicalObject$$name$value = binaryReader.ReadString();
                      item.PhysicalObject$the_name$value = binaryReader.ReadString();
                      item.PhysicalObject$a_name$value = binaryReader.ReadString();
                      item.PhysicalObject$symbol$value = binaryReader.ReadChar();
                      item.PhysicalObject$color$value = $T0A().$Cast(binaryReader.ReadInt32());
                      item.Item$type$value = $T01().$Cast(binaryReader.ReadInt32());
                      item.Item$quantity$value = binaryReader.ReadInt32();
                      item.Item$ignored$value = binaryReader.ReadBoolean();
                      actor.Actor$inv$value.Add(item);
                    }

                    for (var num12 = 0; num12 < 13; num12 = ((num12 + 1) | 0)) {
                      actor.Actor$F$value[num12] = $T34().$Cast(binaryReader.ReadInt32());
                    }
                    var num13 = binaryReader.ReadInt32();

                    for (var num14 = 0; num14 < num13; num14 = ((num14 + 1) | 0)) {
                      var key2 = $T14().$Cast(binaryReader.ReadInt32());
                      $T0C().prototype.set_Item.call(actor.attrs, key2, binaryReader.ReadInt32());
                    }
                    var num15 = binaryReader.ReadInt32();

                    for (var num16 = 0; num16 < num15; num16 = ((num16 + 1) | 0)) {
                      var key3 = $T36().$Cast(binaryReader.ReadInt32());
                      $T37().prototype.set_Item.call(actor.skills, key3, binaryReader.ReadInt32());
                    }
                    var num17 = binaryReader.ReadInt32();

                    for (var num18 = 0; num18 < num17; num18 = ((num18 + 1) | 0)) {
                      var key4 = $T33().$Cast(binaryReader.ReadInt32());
                      $T38().prototype.set_Item.call(actor.feats, key4, binaryReader.ReadInt32());
                    }
                    var num19 = binaryReader.ReadInt32();

                    for (var num20 = 0; num20 < num19; num20 = ((num20 + 1) | 0)) {
                      var key5 = $T34().$Cast(binaryReader.ReadInt32());
                      $T39().prototype.set_Item.call(actor.spells, key5, binaryReader.ReadInt32());
                    }
                    actor.magic_penalty = binaryReader.ReadInt32();
                    actor.time_of_last_action = binaryReader.ReadInt32();
                    actor.recover_time = binaryReader.ReadInt32();
                    var num21 = binaryReader.ReadInt32();

                    for (var num22 = 0; num22 < num21; num22 = ((num22 + 1) | 0)) {
                      actor.path.Add(new ($T3B())(binaryReader.ReadInt32(), binaryReader.ReadInt32()));
                    }
                    var num23 = binaryReader.ReadInt32();
                    if (dictionary.ContainsKey(num23)) {
                      actor.target_location = $T21().$Cast(dictionary.get_Item(num23));
                    } else {
                      actor.target_location = null;
                      list2.Add(actor);
                      $T2F().prototype.set_Item.call(dict2, actor, num23);
                    }
                    actor.player_visibility_duration = binaryReader.ReadInt32();
                    var num24 = binaryReader.ReadInt32();

                    for (var num25 = 0; num25 < num24; num25 = ((num25 + 1) | 0)) {
                      $s01.Call($T18().prototype, "AddLast", null, actor.weapons, $T19().$Cast(binaryReader.ReadInt32()));
                    }
                    var num26 = binaryReader.ReadInt32();

                    for (var num27 = 0; num27 < num26; num27 = ((num27 + 1) | 0)) {
                      $s03.Call($T1A().prototype, "AddLast", null, actor.armors, $T1B().$Cast(binaryReader.ReadInt32()));
                    }
                    var num28 = binaryReader.ReadInt32();

                    for (var num29 = 0; num29 < num28; num29 = ((num29 + 1) | 0)) {
                      $s04.Call($T3C().prototype, "AddLast", null, actor.magic_items, $T3D().$Cast(binaryReader.ReadInt32()));
                    }
                  }
                  var num30 = binaryReader.ReadInt32();

                  for (var num31 = 0; num31 < num30; num31 = ((num31 + 1) | 0)) {
                    var list3 = $S17().Construct();
                    var num32 = binaryReader.ReadInt32();

                    for (var num33 = 0; num33 < num32; num33 = ((num33 + 1) | 0)) {
                      list3.Add($T12().$Cast(dictionary.get_Item(binaryReader.ReadInt32())));
                    }

                    for (var a$1 = list3._items, i$1 = 0, l$1 = list3._size; i$1 < l$1; ($temp01 = i$1, 
                        i$1 = ((i$1 + 1) | 0), 
                        $temp01)) {
                      var current2 = a$1[i$1];
                      current2.group = list3;
                    }
                  }
                  var num34 = binaryReader.ReadInt32();

                  for (var num35 = 0; num35 < num34; num35 = ((num35 + 1) | 0)) {
                    var tile = $S1B().Construct();
                    var key6 = binaryReader.ReadInt32();
                    dictionary.Add(key6, tile);
                    tile.set_row(binaryReader.ReadInt32());
                    tile.set_col(binaryReader.ReadInt32());
                    $T3E().prototype.set_Item.call(game.M.tile, 
                      tile.get_row(), 
                      tile.get_col(), 
                      tile
                    );
                    tile.PhysicalObject$$name$value = binaryReader.ReadString();
                    tile.PhysicalObject$the_name$value = binaryReader.ReadString();
                    tile.PhysicalObject$a_name$value = binaryReader.ReadString();
                    tile.PhysicalObject$symbol$value = binaryReader.ReadChar();
                    tile.PhysicalObject$color$value = $T0A().$Cast(binaryReader.ReadInt32());
                    tile.Tile$type$value = $T3F().$Cast(binaryReader.ReadInt32());
                    tile.Tile$passable$value = binaryReader.ReadBoolean();
                    tile.set_opaque(binaryReader.ReadBoolean());
                    tile.Tile$seen$value = binaryReader.ReadBoolean();
                    tile.Tile$solid_rock$value = binaryReader.ReadBoolean();
                    tile.set_light_value(binaryReader.ReadInt32());
                    if (binaryReader.ReadBoolean()) {
                      tile.toggles_into = $T3F().$Cast(binaryReader.ReadInt32());
                    } else {
                      tile.toggles_into = null;
                    }
                    if (binaryReader.ReadBoolean()) {
                      tile.Tile$inv$value = $S1A().Construct();
                      tile.Tile$inv$value.PhysicalObject$$name$value = binaryReader.ReadString();
                      tile.Tile$inv$value.PhysicalObject$the_name$value = binaryReader.ReadString();
                      tile.Tile$inv$value.PhysicalObject$a_name$value = binaryReader.ReadString();
                      tile.Tile$inv$value.PhysicalObject$symbol$value = binaryReader.ReadChar();
                      tile.Tile$inv$value.PhysicalObject$color$value = $T0A().$Cast(binaryReader.ReadInt32());
                      tile.Tile$inv$value.Item$type$value = $T01().$Cast(binaryReader.ReadInt32());
                      tile.Tile$inv$value.Item$quantity$value = binaryReader.ReadInt32();
                      tile.Tile$inv$value.Item$ignored$value = binaryReader.ReadBoolean();
                    } else {
                      tile.Tile$inv$value = null;
                    }
                    var num36 = binaryReader.ReadInt32();

                    for (var num37 = 0; num37 < num36; num37 = ((num37 + 1) | 0)) {
                      tile.features.Add($T41().$Cast(binaryReader.ReadInt32()));
                    }
                  }

                  for (var a$2 = list._items, i$2 = 0, l$2 = list._size; i$2 < l$2; ($temp02 = i$2, 
                      i$2 = ((i$2 + 1) | 0), 
                      $temp02)) {
                    var current3 = a$2[i$2];
                    if (!dictionary.ContainsKey($T2F().prototype.get_Item.call(dict, current3))) {
                      throw $S1C().Construct("Error: some actors weren't loaded(1). ");
                    }
                    current3.Actor$target$value = $T12().$Cast(dictionary.get_Item($T2F().prototype.get_Item.call(dict, current3)));
                  }

                  for (var a$3 = list2._items, i$3 = 0, l$3 = list2._size; i$3 < l$3; ($temp03 = i$3, 
                      i$3 = ((i$3 + 1) | 0), 
                      $temp03)) {
                    var current4 = a$3[i$3];
                    if (!dictionary.ContainsKey($T2F().prototype.get_Item.call(dict2, current4))) {
                      throw $S1C().Construct("Error: some tiles weren't loaded(2). ");
                    }
                    current4.target_location = $T21().$Cast(dictionary.get_Item($T2F().prototype.get_Item.call(dict2, current4)));
                  }
                  var turn = binaryReader.ReadInt32();
                  game.Q.Queue$turn$value = -1;
                  var num38 = binaryReader.ReadInt32();
                  $T12().tiebreakers = $S1D().Construct(num38);

                  for (var num39 = 0; num39 < num38; num39 = ((num39 + 1) | 0)) {
                    var key7 = binaryReader.ReadInt32();
                    if (!dictionary.ContainsKey(key7)) {
                      $label0 = 1 /* goto IL_129E */ ;
                      continue $labelgroup0;
                    }
                    $T12().tiebreakers.Add($T12().$Cast(dictionary.get_Item(key7)));
                  }
                  var num40 = binaryReader.ReadInt32();

                  for (var num41 = 0; num41 < num40; num41 = ((num41 + 1) | 0)) {
                    var event2 = $S1E().Construct();
                    var key8 = binaryReader.ReadInt32();
                    if (!dictionary.ContainsKey(key8)) {
                      $label0 = 2 /* goto IL_12FC */ ;
                      continue $labelgroup0;
                    }
                    event2.Event$target$value = dictionary.get_Item(key8);
                    var num42 = binaryReader.ReadInt32();

                    for (var num43 = 0; num43 < num42; num43 = ((num43 + 1) | 0)) {
                      if (event2.area === null) {
                        event2.area = $S1F().Construct();
                      }
                      var key9 = binaryReader.ReadInt32();
                      if (!dictionary.ContainsKey(key9)) {
                        $label0 = 3 /* goto IL_1366 */ ;
                        continue $labelgroup0;
                      }
                      event2.area.Add($T21().$Cast(dictionary.get_Item(key9)));
                    }
                    event2.Event$delay$value = binaryReader.ReadInt32();
                    event2.Event$type$value = $T2A().$Cast(binaryReader.ReadInt32());
                    event2.Event$attr$value = $T14().$Cast(binaryReader.ReadInt32());
                    event2.Event$value$value = binaryReader.ReadInt32();
                    event2.Event$msg$value = binaryReader.ReadString();
                    var num44 = binaryReader.ReadInt32();

                    for (var num45 = 0; num45 < num44; num45 = ((num45 + 1) | 0)) {
                      if (event2.msg_objs === null) {
                        event2.msg_objs = $S20().Construct();
                      }
                      var key10 = binaryReader.ReadInt32();
                      if (!dictionary.ContainsKey(key10)) {
                        break $labelgroup0;
                      }
                      event2.msg_objs.Add(dictionary.get_Item(key10));
                    }
                    event2.Event$time_created$value = binaryReader.ReadInt32();
                    event2.Event$dead$value = binaryReader.ReadBoolean();
                    event2.Event$tiebreaker$value = binaryReader.ReadInt32();
                    game.Q.Add(event2);
                  }
                  game.Q.Queue$turn$value = turn;
                  var array = JSIL.Array.New($T08(), 20);

                  for (var num46 = 0; num46 < 20; num46 = ((num46 + 1) | 0)) {
                    array[num46] = binaryReader.ReadString();
                  }
                  game.B.SetPreviousMessages(array);
                  binaryReader.Close();
                  fileStream.Close();
                  $T10().Delete("forays.sav");
                }

                while (!$T06().GAME_OVER) {
                  game.Q.Pop();
                }
                $T07().set_CursorVisible(false);
                $T06().SaveOptions();
                num = game.M.Map$current_level$value;
                b = $T12().player_name;
                c = (!$T06().BOSS_KILLED ? "-" : "W");
                b2 = $T06().KILLED_BY;
                if (!$T06().SAVING) {
                  var list4 = $S11().Construct();
                  var num47 = 0;
                  var flag4 = false;
                  var streamReader2 = $S0B().Construct("highscore.txt");

                  for (var text2 = ""; (text2.length < 2) || (text2.substr(0, 2) != "--"); ) {
                    text2 = streamReader2.ReadLine();
                    list4.Add(text2);
                  }

                $loop35: 
                  for (text2 = "!!"; text2.substr(0, 2) != "--"; ) {
                    text2 = streamReader2.ReadLine();
                    if (text2.substr(0, 2) == "--") {
                      if (!(flag4 || (num47 >= 22))) {
                        list4.Add(JSIL.ConcatString.apply(null, JSIL.Array.New($T46(), [(game.M.Map$current_level$value).toString(), " ", (!$T06().BOSS_KILLED ? "-" : "W"), " ", $T12().player_name, " -- ", $T06().KILLED_BY])));
                      }
                      list4.Add(text2);
                      break $loop35;
                    }
                    if (num47 < 22) {
                      var array2 = (JSIL.SplitString(text2, JSIL.Array.New($T0D(), [" "])));
                      var num48 = $S0C().CallStatic($T25(), "ToInt32", null, array2[0]);
                      if (num48 < game.M.Map$current_level$value) {
                        if (!flag4) {
                          list4.Add(JSIL.ConcatString.apply(null, JSIL.Array.New($T46(), [(game.M.Map$current_level$value).toString(), " ", (!$T06().BOSS_KILLED ? "-" : "W"), " ", $T12().player_name, " -- ", $T06().KILLED_BY])));
                          num47 = ((num47 + 1) | 0);
                          flag4 = true;
                        }
                        if (num47 < 22) {
                          list4.Add(text2);
                          num47 = ((num47 + 1) | 0);
                        }
                      } else {
                        list4.Add(text2);
                        num47 = ((num47 + 1) | 0);
                      }
                    }
                  }
                  streamReader2.Close();
                  var streamWriter4 = $S0D().Construct("highscore.txt", false);

                  for (var a$4 = list4._items, i$4 = 0, l$4 = list4._size; i$4 < l$4; ($temp04 = i$4, 
                      i$4 = ((i$4 + 1) | 0), 
                      $temp04)) {
                    var current5 = a$4[i$4];
                    $S0E().CallVirtual("WriteLine", null, streamWriter4, current5);
                  }
                  streamWriter4.Close();
                }
                if (!($T06().QUITTING || $T06().SAVING)) {
                  game.player.DisplayStats(false);
                  if (!(!($T06().KILLED_BY != "giving up") || $T49().prototype.get_Item.call($T4A().displayed, $T4B().Consumables))) {
                    if (($T4C().Where$b1($T00())(game.player.Actor$inv$value, function Game_$lMainMenu$gm__0 (item) {
                            return ((item.Item$type$value.valueOf() === 0) || 
                              (item.Item$type$value === $T01().TELEPORTATION));
                          })).get_Count() > 0) {
                      $T4A().TutorialTip($T4B().Consumables);
                      $T06().SaveOptions();
                    }
                  }
                  var list5 = $S11().Construct();
                  list5.Add("See the map");
                  list5.Add("See last messages");
                  list5.Add("Examine your equipment");
                  list5.Add("Examine your inventory");
                  list5.Add("See character info");
                  list5.Add("Write this information to a file");
                  list5.Add("Done");
                  var flag5 = false;

                  while (!flag5) {
                    game.player.Select(
                      "Would you like to examine your character! ", 
                      System.String.PadRight("", 66, ' '), 
                      System.String.PadRight("", 66, ' '), 
                      list5, 
                      true, 
                      false, 
                      false
                    );
                    switch (game.player.GetSelection(
                        "Would you like to examine your character? ", 
                        7, 
                        true, 
                        false, 
                        false
                      )) {
                      case 0: 

                        for (var a$5 = game.M.AllTiles()._items, i$5 = 0, l$5 = game.M.AllTiles()._size; i$5 < l$5; ($temp05 = i$5, 
                            i$5 = ((i$5 + 1) | 0), 
                            $temp05)) {
                          var current6 = a$5[i$5];
                          if (!((current6.Tile$type$value === $T3F().FLOOR) || current6.IsTrap())) {
                            var flag6 = false;

                            for (var a$6 = current6.TilesAtDistance(1)._items, i$6 = 0, l$6 = current6.TilesAtDistance(1)._size; i$6 < l$6; ($temp06 = i$6, 
                                i$6 = ((i$6 + 1) | 0), 
                                $temp06)) {
                              var current7 = a$6[i$6];
                              if (current7.Tile$type$value.valueOf() !== 0) {
                                flag6 = true;
                              }
                            }
                            if (flag6) {
                              current6.Tile$seen$value = true;
                            }
                          }
                        }
                        game.B.DisplayNow("Press any key to continue. ");
                        $T07().set_CursorVisible(true);
                        $S21().CallStatic($T09(), "WriteMapChar", null, 0, 0, "-");
                        game.M.Draw();
                        $T07().ReadKey(true);
                        break;

                      case 1: 
                        $S04().CallStatic($T09(), "WriteMapString", null, 0, 0, System.String.PadRight("", 66, "-"));
                        var num49 = 1;

                        for (var a$7 = game.B.GetMessages()._items, i$7 = 0, l$7 = game.B.GetMessages()._size; i$7 < l$7; ($temp07 = i$7, 
                            i$7 = ((i$7 + 1) | 0), 
                            $temp07)) {
                          var current8 = a$7[i$7];
                          $S04().CallStatic($T09(), "WriteMapString", null, num49, 0, System.String.PadRight(current8, 66, ' '));
                          num49 = ((num49 + 1) | 0);
                        }
                        $S04().CallStatic($T09(), "WriteMapString", null, 21, 0, System.String.PadRight("", 66, "-"));
                        game.B.DisplayNow("Previous messages: ");
                        $T07().set_CursorVisible(true);
                        $T07().ReadKey(true);
                        break;

                      case 2: 
                        game.player.DisplayEquipment();
                        break;

                      case 3: 

                        for (var num50 = 1; num50 < 8; num50 = ((num50 + 1) | 0)) {
                          $S04().CallStatic($T09(), "WriteMapString", null, num50, 0, System.String.PadRight("", 66, ' '));
                        }
                        game.player.Select(
                          "In your pack: ", 
                          game.player.InventoryList(), 
                          true, 
                          false, 
                          false
                        );
                        $T07().ReadKey(true);
                        break;

                      case 4: 
                        game.player.DisplayCharacterInfo();
                        break;

                      case 5: 
                        game.B.DisplayNow("Enter file name: ");
                        $T07().set_CursorVisible(true);
                        var text3 = $T06().EnterString(40);
                        if (!(text3 == "")) {
                          var streamWriter5 = $S0D().Construct(text3, true);
                          game.player.DisplayCharacterInfo(false);
                          var currentScreen = $T09().GetCurrentScreen();

                          for (var num51 = 2; num51 < 25; num51 = ((num51 + 1) | 0)) {

                            for (var num52 = 0; num52 < 80; num52 = ((num52 + 1) | 0)) {
                              $S22().CallVirtual("Write", null, streamWriter5, currentScreen.Get(num51, num52).c);
                            }
                            streamWriter5.WriteLine();
                          }
                          streamWriter5.WriteLine();
                          $S0E().CallVirtual("WriteLine", null, streamWriter5, "Inventory: ");

                          for (var a$8 = game.player.InventoryList()._items, i$8 = 0, l$8 = game.player.InventoryList()._size; i$8 < l$8; ($temp08 = i$8, 
                              i$8 = ((i$8 + 1) | 0), 
                              $temp08)) {
                            var current9 = a$8[i$8];
                            $S0E().CallVirtual("WriteLine", null, streamWriter5, current9);
                          }
                          streamWriter5.WriteLine();
                          streamWriter5.WriteLine();

                          for (var a$9 = game.M.AllTiles()._items, i$9 = 0, l$9 = game.M.AllTiles()._size; i$9 < l$9; ($temp09 = i$9, 
                              i$9 = ((i$9 + 1) | 0), 
                              $temp09)) {
                            var current10 = a$9[i$9];
                            if (!((current10.Tile$type$value === $T3F().FLOOR) || current10.IsTrap())) {
                              var flag7 = false;

                              for (var a$a = current10.TilesAtDistance(1)._items, i$a = 0, l$a = current10.TilesAtDistance(1)._size; i$a < l$a; ($temp0A = i$a, 
                                  i$a = ((i$a + 1) | 0), 
                                  $temp0A)) {
                                var current11 = a$a[i$a];
                                if (current11.Tile$type$value.valueOf() !== 0) {
                                  flag7 = true;
                                }
                              }
                              if (flag7) {
                                current10.Tile$seen$value = true;
                              }
                            }
                          }
                          $S21().CallStatic($T09(), "WriteMapChar", null, 0, 0, "-");
                          game.M.Draw();
                          var num53 = 0;
                          var currentMap = $T09().GetCurrentMap();
                          var length = currentMap.length0;
                          var length2 = currentMap.length1;

                          for (var num54 = 0; num54 < length; num54 = ((num54 + 1) | 0)) {

                            for (var num55 = 0; num55 < length2; num55 = ((num55 + 1) | 0)) {
                              var colorchar = currentMap.Get(num54, num55).MemberwiseClone();
                              $S22().CallVirtual("Write", null, streamWriter5, colorchar.c);
                              num53 = ((num53 + 1) | 0);
                              if (num53 === 66) {
                                streamWriter5.WriteLine();
                                num53 = 0;
                              }
                            }
                          }
                          streamWriter5.WriteLine();
                          $S04().CallStatic($T09(), "WriteMapString", null, 0, 0, System.String.PadRight("", 66, "-"));
                          var num56 = 1;

                          for (var a$b = game.B.GetMessages()._items, i$b = 0, l$b = game.B.GetMessages()._size; i$b < l$b; ($temp0B = i$b, 
                              i$b = ((i$b + 1) | 0), 
                              $temp0B)) {
                            var current12 = a$b[i$b];
                            $S04().CallStatic($T09(), "WriteMapString", null, num56, 0, System.String.PadRight(current12, 66, ' '));
                            num56 = ((num56 + 1) | 0);
                          }
                          $S04().CallStatic($T09(), "WriteMapString", null, 21, 0, System.String.PadRight("", 66, "-"));
                          $S0E().CallVirtual("WriteLine", null, streamWriter5, "Last messages: ");
                          num53 = 0;
                          var currentMap2 = $T09().GetCurrentMap();
                          var length3 = currentMap2.length0;
                          var length4 = currentMap2.length1;

                          for (var num57 = 0; num57 < length3; num57 = ((num57 + 1) | 0)) {

                            for (var num58 = 0; num58 < length4; num58 = ((num58 + 1) | 0)) {
                              var colorchar2 = currentMap2.Get(num57, num58).MemberwiseClone();
                              $S22().CallVirtual("Write", null, streamWriter5, colorchar2.c);
                              num53 = ((num53 + 1) | 0);
                              if (num53 === 66) {
                                streamWriter5.WriteLine();
                                num53 = 0;
                              }
                            }
                          }
                          streamWriter5.WriteLine();
                          streamWriter5.Close();
                        }
                        break;

                      case 6: 
                        flag5 = true;
                        break;

                    }
                  }
                }
                break;

              case "b": 
                $T4A().DisplayHelp();
                break;

              case "c": 
                $T09().Blank();
                var list6 = $S11().Construct();
                var streamReader3 = $S0B().Construct("highscore.txt");

                for (var text4 = ""; (text4.length < 2) || (text4.substr(0, 2) != "--"); ) {
                  text4 = streamReader3.ReadLine();
                }

              $loop53: 
                for (text4 = "!!"; text4.substr(0, 2) != "--"; ) {
                  text4 = streamReader3.ReadLine();
                  if (text4.substr(0, 2) == "--") {
                    break $loop53;
                  }
                  list6.Add(text4);
                }
                streamReader3.Close();
                var num59 = 0;
                var num60 = 0;

                for (var a$c = list6._items, i$c = 0, l$c = list6._size; i$c < l$c; ($temp0C = i$c, 
                    i$c = ((i$c + 1) | 0), 
                    $temp0C)) {
                  var current13 = a$c[i$c];
                  var array3 = (JSIL.SplitString(current13, JSIL.Array.New($T0D(), [" "])));
                  var text5 = (current13.substr(((array3[0].length + 3) | 0)));
                  var num61 = (text5.lastIndexOf(" -- "));
                  var text6 = (text5.substr(0, num61));
                  var text7 = (text5.substr(((num61 + 4) | 0)));
                  if (text6.length > num59) {
                    num59 = text6.length;
                  }
                  if (text7.length > num60) {
                    num60 = text7.length;
                  }
                }
                var num62 = ((76 - ((num59 + num60) | 0)) | 0);
                var num63 = ((num62 / 2) | 0);
                var num64 = ((((num62 + 1) | 0) / 2) | 0);
                var num65 = ((num63 / 4) | 0);
                var num66 = ((num63 - ((num63 / 4) | 0)) | 0);
                var num67 = ((num64 - ((num64 / 4) | 0)) | 0);
                var num68 = ((num65 + ((num59 / 2) | 0)) | 0);
                var num69 = ((((((num65 + num66) | 0) + num59) | 0) + 1) | 0);
                var num70 = ((((((((((num65 + num66) | 0) + num67) | 0) + num59) | 0) + 4) | 0) + ((((num60 - 1) | 0) / 2) | 0)) | 0);
                var color_ = $T0A().Green;
                $S23().CallStatic($T09(), "WriteString", null, 0, 34, $S24().Construct("HIGH SCORES", $T0A().Yellow));
                $S23().CallStatic($T09(), "WriteString", null, 1, 34, $S24().Construct("-----------", $T0A().Cyan));
                $S23().CallStatic($T09(), "WriteString", null, 2, ((num68 - 4) | 0), $S24().Construct("Character", color_));
                $S23().CallStatic($T09(), "WriteString", null, 2, ((num69 - 2) | 0), $S24().Construct("Depth", color_));
                $S23().CallStatic($T09(), "WriteString", null, 2, ((num70 - 6) | 0), $S24().Construct("Cause of death", color_));
                var flag8 = false;
                var num71 = 3;

                for (var a$d = list6._items, i$d = 0, l$d = list6._size; i$d < l$d; ($temp0D = i$d, 
                    i$d = ((i$d + 1) | 0), 
                    $temp0D)) {
                  var current14 = a$d[i$d];
                  if (num71 <= 24) {
                    var array4 = (JSIL.SplitString(current14, JSIL.Array.New($T0D(), [" "])));
                    var num72 = $S0C().CallStatic($T25(), "ToInt32", null, array4[0]);
                    var c4 = (array4[1][0]);
                    var text8 = (current14.substr(((array4[0].length + 3) | 0)));
                    var num73 = (text8.lastIndexOf(" -- "));
                    var text9 = (text8.substr(0, num73));
                    var text10 = (text8.substr(((num73 + 4) | 0)));
                    var s_ = (JSIL.ConcatString(text10.substr(0, 1).toUpperCase(), text10.substr(1)));
                    if (!(flag8 || 
                        !(text9 == b) || 
                        (num72 !== num) || 
                        (c4.charCodeAt(0) !== c.charCodeAt(0)) || !(text10 == b2))) {
                      var color_2 = $T0A().Cyan;
                      flag8 = true;
                    } else {
                      color_2 = $T0A().White;
                    }
                    $S23().CallStatic($T09(), "WriteString", null, num71, num65, $S24().Construct(text9, color_2));
                    $S23().CallStatic($T09(), "WriteString", null, num71, ((((num65 + num66) | 0) + num59) | 0), $S24().Construct(System.String.PadLeft((num72).toString(), 2, ' '), color_2));
                    $S23().CallStatic($T09(), "WriteString", null, num71, ((((((((num65 + num66) | 0) + num67) | 0) + num59) | 0) + 4) | 0), $S24().Construct(s_, color_2));
                    if (c4.charCodeAt(0) === "W".charCodeAt(0)) {
                      $S23().CallStatic($T09(), "WriteString", null, num71, ((((((num65 + num66) | 0) + num59) | 0) + 3) | 0), $S24().Construct("W", $T0A().Yellow));
                    }
                    num71 = ((num71 + 1) | 0);
                  }
                }
                $T07().ReadKey(true);
                break;

              case "d": 
                $T06().Quit();
                break;

            }
            if ($T06().QUITTING) {
              $T06().Quit();
            }
          }

          $label0 = 1 /* goto IL_129E */ ;
          continue $labelgroup0;
        case 1: /* IL_129E */ 
          throw $S1C().Construct("Error: some actors weren't loaded(3). ");

          $label0 = 2 /* goto IL_12FC */ ;
          continue $labelgroup0;
        case 2: /* IL_12FC */ 
          throw $S1C().Construct("Error: some tiles/actors weren't loaded(4). ");

          $label0 = 3 /* goto IL_1366 */ ;
          continue $labelgroup0;
        case 3: /* IL_1366 */ 
          throw $S1C().Construct("Error: some tiles weren't loaded(5). ");
          break $labelgroup0;

      }
    }
    /* Original label IL_1420 */ 
    throw $S1C().Construct("Error: some actors/tiles weren't loaded(6). ");
  };

  JSIL.MakeClass($asm01.TypeRef("System.Object"), "Forays.Game", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], []), 
      Game__ctor
    );

    $.Method({Static:true , Public:false}, "$lMainMenu$gm__0", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Item")], []), 
      Game_$lMainMenu$gm__0
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "Main", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$.String])], []), 
      Game_Main
    );

    $.Method({Static:true , Public:false}, "MainMenu", 
      new JSIL.MethodSignature(null, [], []), 
      Game_MainMenu
    );

    $.Field({Static:false, Public:true }, "M", $asm00.TypeRef("Forays.Map")); 
    $.Field({Static:false, Public:true }, "Q", $asm00.TypeRef("Forays.Queue")); 
    $.Field({Static:false, Public:true }, "B", $asm00.TypeRef("Forays.Buffer")); 
    $.Field({Static:false, Public:true }, "player", $asm00.TypeRef("Forays.Actor")); 
    $.Field({Static:true , Public:false}, "$am", $asm00.TypeRef("Forays.Extensions/BooleanDelegate`1", [$asm00.TypeRef("Forays.Item")]))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function PhysicalObject$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Forays.Color)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm01.System.String)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm01.System.Char)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Forays.Map_PosArray$b1.Of($asm00.Forays.Actor))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm01.System.Int32)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Forays.Map)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.Actor))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Forays.Actor)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm01.System.Boolean)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm01.System.Console)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.Forays.pos)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm01.System.Void)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm01.System.Math)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm01.System.Single)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm00.Forays.TileType)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm00.Forays.Tile)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm00.Forays.Item)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.Tile))) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm00.Forays.Map_PosArray$b1.Of($asm00.Forays.Tile))) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm00.Forays.FeatureType)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.FeatureType))) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.pos))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Actor")]), []))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Int32"), [$asm00.TypeRef("Forays.pos")], []))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Int32"), [$asm00.TypeRef("Forays.PhysicalObject")], []))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature($asm00.TypeRef("Forays.Actor"), [$asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Int32")], []))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.MethodSignature($asm00.TypeRef("Forays.Actor"), [$asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), $asm01.TypeRef("System.Int32")], []))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), []))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Boolean"), [$asm00.TypeRef("Forays.TileType"), $asm01.TypeRef("System.Boolean")], []))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Boolean"), [$asm00.TypeRef("Forays.FeatureType"), $asm01.TypeRef("System.Boolean")], []))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.pos")]), []))) ();
  };

  function PhysicalObject__ctor$00 () {
    this.set_row(-1);
    this.set_col(-1);
    this.PhysicalObject$$name$value = "";
    this.PhysicalObject$a_name$value = "";
    this.PhysicalObject$the_name$value = "";
    this.PhysicalObject$symbol$value = "%";
    this.PhysicalObject$color$value = $T00().White;
    this.PhysicalObject$light_radius$value = 0;
  };

  function PhysicalObject__ctor$01 (name_, symbol_, color_) {
    this.set_row(-1);
    this.set_col(-1);
    this.SetName(name_);
    this.PhysicalObject$symbol$value = symbol_;
    this.PhysicalObject$color$value = color_;
    this.PhysicalObject$light_radius$value = 0;
  };

  function PhysicalObject_actor () {
    return $T03().prototype.get_Item.call($thisType.PhysicalObject$M$value.actor, 
      this.get_row(), 
      this.get_col()
    );
  };

  function PhysicalObject_ActorInDirection (dir) {
    switch (dir) {
      case 1: 
        if ($thisType.PhysicalObject$M$value.BoundsCheck(
            ((this.get_row() + 1) | 0), 
            ((this.get_col() - 1) | 0)
          )) {
          return $T03().prototype.get_Item.call($thisType.PhysicalObject$M$value.actor, 
            ((this.get_row() + 1) | 0), 
            ((this.get_col() - 1) | 0)
          );
        }
        break;

      case 2: 
        if ($thisType.PhysicalObject$M$value.BoundsCheck(
            ((this.get_row() + 1) | 0), 
            this.get_col()
          )) {
          return $T03().prototype.get_Item.call($thisType.PhysicalObject$M$value.actor, 
            ((this.get_row() + 1) | 0), 
            this.get_col()
          );
        }
        break;

      case 3: 
        if ($thisType.PhysicalObject$M$value.BoundsCheck(
            ((this.get_row() + 1) | 0), 
            ((this.get_col() + 1) | 0)
          )) {
          return $T03().prototype.get_Item.call($thisType.PhysicalObject$M$value.actor, 
            ((this.get_row() + 1) | 0), 
            ((this.get_col() + 1) | 0)
          );
        }
        break;

      case 4: 
        if ($thisType.PhysicalObject$M$value.BoundsCheck(
            this.get_row(), 
            ((this.get_col() - 1) | 0)
          )) {
          return $T03().prototype.get_Item.call($thisType.PhysicalObject$M$value.actor, 
            this.get_row(), 
            ((this.get_col() - 1) | 0)
          );
        }
        break;

      case 5: 
        if ($thisType.PhysicalObject$M$value.BoundsCheck(
            this.get_row(), 
            this.get_col()
          )) {
          return $T03().prototype.get_Item.call($thisType.PhysicalObject$M$value.actor, 
            this.get_row(), 
            this.get_col()
          );
        }
        break;

      case 6: 
        if ($thisType.PhysicalObject$M$value.BoundsCheck(
            this.get_row(), 
            ((this.get_col() + 1) | 0)
          )) {
          return $T03().prototype.get_Item.call($thisType.PhysicalObject$M$value.actor, 
            this.get_row(), 
            ((this.get_col() + 1) | 0)
          );
        }
        break;

      case 7: 
        if ($thisType.PhysicalObject$M$value.BoundsCheck(
            ((this.get_row() - 1) | 0), 
            ((this.get_col() - 1) | 0)
          )) {
          return $T03().prototype.get_Item.call($thisType.PhysicalObject$M$value.actor, 
            ((this.get_row() - 1) | 0), 
            ((this.get_col() - 1) | 0)
          );
        }
        break;

      case 8: 
        if ($thisType.PhysicalObject$M$value.BoundsCheck(
            ((this.get_row() - 1) | 0), 
            this.get_col()
          )) {
          return $T03().prototype.get_Item.call($thisType.PhysicalObject$M$value.actor, 
            ((this.get_row() - 1) | 0), 
            this.get_col()
          );
        }
        break;

      case 9: 
        if ($thisType.PhysicalObject$M$value.BoundsCheck(
            ((this.get_row() - 1) | 0), 
            ((this.get_col() + 1) | 0)
          )) {
          return $T03().prototype.get_Item.call($thisType.PhysicalObject$M$value.actor, 
            ((this.get_row() - 1) | 0), 
            ((this.get_col() + 1) | 0)
          );
        }
        break;

      default: 
        return null;

    }
    return null;
  };

  function PhysicalObject_ActorsAtDistance (dist) {
    var list = $S00().Construct();

    for (var i = ((this.get_row() - dist) | 0); i <= ((this.get_row() + dist) | 0); i = ((i + 1) | 0)) {

      for (var j = ((this.get_col() - dist) | 0); j <= ((this.get_col() + dist) | 0); j = ((j + 1) | 0)) {
        if (!((this.DistanceFrom(i, j) !== dist) || 
            !$thisType.PhysicalObject$M$value.BoundsCheck(i, j) || ($T03().prototype.get_Item.call($thisType.PhysicalObject$M$value.actor, i, j) === null))) {
          list.Add($T03().prototype.get_Item.call($thisType.PhysicalObject$M$value.actor, i, j));
        }
      }
    }
    return list;
  };

  function PhysicalObject_ActorsWithinDistance$02 (dist) {
    return this.ActorsWithinDistance(dist, false);
  };

  function PhysicalObject_ActorsWithinDistance$03 (dist, exclude_origin) {
    var list = $S00().Construct();

    for (var i = ((this.get_row() - dist) | 0); i <= ((this.get_row() + dist) | 0); i = ((i + 1) | 0)) {

      for (var j = ((this.get_col() - dist) | 0); j <= ((this.get_col() + dist) | 0); j = ((j + 1) | 0)) {
        if (!(((i === this.get_row()) && 
              (j === this.get_col()) && 
              exclude_origin) || 
            !$thisType.PhysicalObject$M$value.BoundsCheck(i, j) || ($T03().prototype.get_Item.call($thisType.PhysicalObject$M$value.actor, i, j) === null))) {
          list.Add($T03().prototype.get_Item.call($thisType.PhysicalObject$M$value.actor, i, j));
        }
      }
    }
    return list;
  };

  function PhysicalObject_AVisible () {
    return this.PhysicalObject$a_name$value;
  };

  function PhysicalObject_Cursor () {
    $T09().SetCursorPosition(
      ((this.get_col() + 13) | 0), 
      ((this.get_row() + 3) | 0)
    );
  };

  function PhysicalObject_DirectionOf$04 (obj) {
    return $S01().CallVirtual("DirectionOf", null, this, obj.p.MemberwiseClone());
  };

  function PhysicalObject_DirectionOf$05 (obj) {
    var num = (Math.abs(((obj.row - this.get_row()) | 0)));
    var num2 = (Math.abs(((obj.col - this.get_col()) | 0)));
    if (num === 0) {
      if (this.get_col() < obj.col) {
        return 6;
      }
      if (this.get_col() > obj.col) {
        return 4;
      }
      if (num2 === 0) {
        return 5;
      }
    }
    if (num2 === 0) {
      if (this.get_row() > obj.row) {
        return 8;
      }
      if (this.get_row() < obj.row) {
        return 2;
      }
    }
    if (((this.get_row() + this.get_col()) | 0) === ((obj.row + obj.col) | 0)) {
      if (this.get_row() > obj.row) {
        return 9;
      }
      if (this.get_row() < obj.row) {
        return 1;
      }
    }
    if (((this.get_row() - this.get_col()) | 0) === ((obj.row - obj.col) | 0)) {
      if (this.get_row() > obj.row) {
        return 7;
      }
      if (this.get_row() < obj.row) {
        return 3;
      }
    }
    var num3 = $T0C().Min(num, num2);
    var num4 = $T0C().Max(num, num2);
    if (this.get_row() < obj.row) {
      if (this.get_col() < obj.col) {
        var result = 3;
        if (num2 > num) {
          var num5 = 6;
        } else {
          num5 = 2;
        }
      } else {
        result = 1;
        if (num2 > num) {
          num5 = 4;
        } else {
          num5 = 2;
        }
      }
    } else if (this.get_col() < obj.col) {
      result = 9;
      if (num2 > num) {
        num5 = 6;
      } else {
        num5 = 8;
      }
    } else {
      result = 7;
      if (num2 > num) {
        num5 = 4;
      } else {
        num5 = 8;
      }
    }
    var result2 = num5;
    var num6 = +($T0D().$Cast(num3) / $T0D().$Cast(num4));
    if (num6 < 0.5) {
      return num5;
    }
    if (num6 > 0.5) {
      return result;
    }
    return result2;
  };

  function PhysicalObject_DirectionOfOnlyUnblocked$06 (tiletype) {
    return this.DirectionOfOnlyUnblocked(tiletype, false);
  };

  function PhysicalObject_DirectionOfOnlyUnblocked$07 (tiletype, orth) {
    var num = 0;
    var result = 0;

    for (var i = 1; i <= 9; i = ((i + 1) | 0)) {
      if (!((i === 5) || 
          (this.TileInDirection(i).Tile$type$value !== tiletype) || 
          (this.ActorInDirection(i) !== null) || 
          (this.TileInDirection(i).Tile$inv$value !== null) || (orth && 
            (((i % 2) | 0) !== 0)))) {
        num = ((num + 1) | 0);
        result = i;
      }
    }
    if (num > 1) {
      return -1;
    }
    if (num === 1) {
      return result;
    }
    return 0;
  };

  function PhysicalObject_DistanceFrom$08 (o) {
    return this.DistanceFrom(
      o.get_row(), 
      o.get_col()
    );
  };

  function PhysicalObject_DistanceFrom$09 (p) {
    return this.DistanceFrom(p.row, p.col);
  };

  function PhysicalObject_DistanceFrom$0A (r, c) {
    var num = (Math.abs(((r - this.get_row()) | 0)));
    var num2 = (Math.abs(((c - this.get_col()) | 0)));
    if (num2 > num) {
      return num2;
    }
    return num;
  };

  function PhysicalObject_EstimatedEuclideanDistanceFromX10$0B (o) {
    return this.EstimatedEuclideanDistanceFromX10(
      o.get_row(), 
      o.get_col()
    );
  };

  function PhysicalObject_EstimatedEuclideanDistanceFromX10$0C (p) {
    return this.EstimatedEuclideanDistanceFromX10(p.row, p.col);
  };

  function PhysicalObject_EstimatedEuclideanDistanceFromX10$0D (r, c) {
    var num = (((Math.abs(((r - this.get_row()) | 0))) * 10) | 0);
    var num2 = (((Math.abs(((c - this.get_col()) | 0))) * 10) | 0);
    if (num2 > num) {
      return ((num2 + ((num / 2) | 0)) | 0);
    }
    return ((num + ((num2 / 2) | 0)) | 0);
  };

  function PhysicalObject_FirstActorInExtendedLine$0E (obj) {
    return this.FirstActorInExtendedLine(obj, 1, -1);
  };

  function PhysicalObject_FirstActorInExtendedLine$0F (obj, max_distance) {
    return this.FirstActorInExtendedLine(obj, 1, max_distance);
  };

  function PhysicalObject_FirstActorInExtendedLine$10 (obj, num, max_distance) {
    var $temp00;
    if (obj === null) {
      return null;
    }
    var num2 = 0;
    var bestExtendedLine = this.GetBestExtendedLine(
      obj.get_row(), 
      obj.get_col()
    );
    bestExtendedLine.RemoveAt(0);

    for (var a$0 = bestExtendedLine._items, i$0 = 0, l$0 = bestExtendedLine._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      if (!current.Tile$passable$value) {
        var result = null;
        return result;
      }
      if (!((max_distance === -1) || ($S02().CallVirtual("DistanceFrom", null, this, current) <= max_distance))) {
        result = null;
        return result;
      }
      if ($T03().prototype.get_Item.call($thisType.PhysicalObject$M$value.actor, 
          current.get_row(), 
          current.get_col()
        ) !== null) {
        num2 = ((num2 + 1) | 0);
        if (num2 === num) {
          result = $T03().prototype.get_Item.call($thisType.PhysicalObject$M$value.actor, 
            current.get_row(), 
            current.get_col()
          );
          return result;
        }
      }
    }
    return null;
  };

  function PhysicalObject_FirstActorInLine$11 (obj) {
    return $S03().CallVirtual("FirstActorInLine", null, this, obj, 1);
  };

  function PhysicalObject_FirstActorInLine$12 (obj, num) {
    var $temp00;
    if (obj === null) {
      return null;
    }
    var num2 = 0;
    var bestLine = this.GetBestLine(
      obj.get_row(), 
      obj.get_col()
    );
    bestLine.RemoveAt(0);

    for (var a$0 = bestLine._items, i$0 = 0, l$0 = bestLine._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      if (!current.Tile$passable$value) {
        var result = null;
        return result;
      }
      if ($T03().prototype.get_Item.call($thisType.PhysicalObject$M$value.actor, 
          current.get_row(), 
          current.get_col()
        ) !== null) {
        num2 = ((num2 + 1) | 0);
        if (num2 === num) {
          result = $T03().prototype.get_Item.call($thisType.PhysicalObject$M$value.actor, 
            current.get_row(), 
            current.get_col()
          );
          return result;
        }
      }
    }
    return null;
  };

  function PhysicalObject_FirstActorInLine$13 (line) {
    return $S04().CallVirtual("FirstActorInLine", null, this, line, 1);
  };

  function PhysicalObject_FirstActorInLine$14 (line, num) {
    var $temp00;
    if (line === null) {
      return null;
    }
    var num2 = 0;
    var num3 = 0;

    for (var a$0 = line._items, i$0 = 0, l$0 = line._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      if (num3 !== 0) {
        if (!current.Tile$passable$value) {
          var result = null;
          return result;
        }
        if ($T03().prototype.get_Item.call($thisType.PhysicalObject$M$value.actor, 
            current.get_row(), 
            current.get_col()
          ) !== null) {
          num2 = ((num2 + 1) | 0);
          if (num2 === num) {
            result = $T03().prototype.get_Item.call($thisType.PhysicalObject$M$value.actor, 
              current.get_row(), 
              current.get_col()
            );
            return result;
          }
        }
      }
      num3 = ((num3 + 1) | 0);
    }
    return null;
  };

  function PhysicalObject_FirstSolidTileInLine$15 (obj) {
    return this.FirstSolidTileInLine(obj, 1);
  };

  function PhysicalObject_FirstSolidTileInLine$16 (obj, num) {
    var $temp00;
    if (obj === null) {
      return null;
    }
    var num2 = 0;
    var bestLine = this.GetBestLine(
      obj.get_row(), 
      obj.get_col()
    );
    bestLine.RemoveAt(0);

    for (var a$0 = bestLine._items, i$0 = 0, l$0 = bestLine._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      if (!current.Tile$passable$value) {
        num2 = ((num2 + 1) | 0);
        if (num2 === num) {
          return current;
        }
      }
    }
    return null;
  };

  function PhysicalObject_get_a_name () {
    return this.PhysicalObject$a_name$value;
  };

  function PhysicalObject_get_col () {
    return this.p.col;
  };

  function PhysicalObject_get_color () {
    return this.PhysicalObject$color$value;
  };

  function PhysicalObject_get_light_radius () {
    return this.PhysicalObject$light_radius$value;
  };

  function PhysicalObject_get_M () {
    return $thisType.PhysicalObject$M$value;
  };

  function PhysicalObject_get_$name () {
    return this.PhysicalObject$name$value;
  };

  function PhysicalObject_get_row () {
    return this.p.row;
  };

  function PhysicalObject_get_symbol () {
    return this.PhysicalObject$symbol$value;
  };

  function PhysicalObject_get_the_name () {
    return this.PhysicalObject$the_name$value;
  };

  function PhysicalObject_GetAlternateBresenhamLine$17 (o) {
    return this.GetAlternateBresenhamLine(
      o.get_row(), 
      o.get_col()
    );
  };

  function PhysicalObject_GetAlternateBresenhamLine$18 (r, c) {
    var i = this.get_row();
    var j = this.get_col();
    var num = (Math.abs(((c - j) | 0)));
    var num2 = (Math.abs(((r - i) | 0)));
    var num3 = 0;
    var list = $S05().Construct();
    if (num2 === 0) {
      if (num === 0) {
        list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, 
            this.get_row(), 
            this.get_col()
          ));
        return list;
      }

      for (; j < c; j = ((j + 1) | 0)) {
        list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
      }

      for (; j > c; j = ((j - 1) | 0)) {
        list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
      }
      list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, r, c));
      return list;
    } else {
      if (num === 0) {

        for (; i > r; i = ((i - 1) | 0)) {
          list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
        }

        for (; i < r; i = ((i + 1) | 0)) {
          list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
        }
        list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, r, c));
        return list;
      }
      if (((i + j) | 0) === ((r + c) | 0)) {

        for (; j < c; j = ((j + 1) | 0)) {
          list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
          i = ((i - 1) | 0);
        }

        for (; j > c; j = ((j - 1) | 0)) {
          list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
          i = ((i + 1) | 0);
        }
        list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, r, c));
        return list;
      }
      if (((i - j) | 0) === ((r - c) | 0)) {

        for (; j < c; j = ((j + 1) | 0)) {
          list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
          i = ((i + 1) | 0);
        }

        for (; j > c; j = ((j - 1) | 0)) {
          list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
          i = ((i - 1) | 0);
        }
        list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, r, c));
        return list;
      }
      if (i < r) {
        if (j < c) {
          if (num > num2) {

            for (; j < c; j = ((j + 1) | 0)) {
              list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
              num3 = ((num3 + num2) | 0);
              if ((num3 << 1) > num) {
                i = ((i + 1) | 0);
                num3 = ((num3 - num) | 0);
              }
            }
            list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, r, c));
            return list;
          }

          for (; i < r; i = ((i + 1) | 0)) {
            list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
            num3 = ((num3 + num) | 0);
            if ((num3 << 1) > num2) {
              j = ((j + 1) | 0);
              num3 = ((num3 - num2) | 0);
            }
          }
          list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, r, c));
          return list;
        } else {
          if (num > num2) {

            for (; j > c; j = ((j - 1) | 0)) {
              list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
              num3 = ((num3 + num2) | 0);
              if ((num3 << 1) > num) {
                i = ((i + 1) | 0);
                num3 = ((num3 - num) | 0);
              }
            }
            list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, r, c));
            return list;
          }

          for (; i < r; i = ((i + 1) | 0)) {
            list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
            num3 = ((num3 + num) | 0);
            if ((num3 << 1) > num2) {
              j = ((j - 1) | 0);
              num3 = ((num3 - num2) | 0);
            }
          }
          list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, r, c));
          return list;
        }
      } else if (j < c) {
        if (num > num2) {

          for (; j < c; j = ((j + 1) | 0)) {
            list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
            num3 = ((num3 + num2) | 0);
            if ((num3 << 1) > num) {
              i = ((i - 1) | 0);
              num3 = ((num3 - num) | 0);
            }
          }
          list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, r, c));
          return list;
        }

        for (; i > r; i = ((i - 1) | 0)) {
          list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
          num3 = ((num3 + num) | 0);
          if ((num3 << 1) > num2) {
            j = ((j + 1) | 0);
            num3 = ((num3 - num2) | 0);
          }
        }
        list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, r, c));
        return list;
      } else {
        if (num > num2) {

          for (; j > c; j = ((j - 1) | 0)) {
            list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
            num3 = ((num3 + num2) | 0);
            if ((num3 << 1) > num) {
              i = ((i - 1) | 0);
              num3 = ((num3 - num) | 0);
            }
          }
          list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, r, c));
          return list;
        }

        for (; i > r; i = ((i - 1) | 0)) {
          list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
          num3 = ((num3 + num) | 0);
          if ((num3 << 1) > num2) {
            j = ((j - 1) | 0);
            num3 = ((num3 - num2) | 0);
          }
        }
        list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, r, c));
        return list;
      }
    }
  };

  function PhysicalObject_GetAlternateExtendedBresenhamLine$19 (o) {
    return this.GetAlternateExtendedBresenhamLine(
      o.get_row(), 
      o.get_col()
    );
  };

  function PhysicalObject_GetAlternateExtendedBresenhamLine$1A (r, c) {
    var i = this.get_row();
    var j = this.get_col();
    var num = (Math.abs(((c - j) | 0)));
    var num2 = (Math.abs(((r - i) | 0)));
    var num3 = 0;
    var num4 = 66;
    var num5 = 22;
    var list = $S05().Construct();
    if (num2 === 0) {
      if (num === 0) {
        list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, 
            this.get_row(), 
            this.get_col()
          ));
        return list;
      }
      if (j < c) {

        for (; j <= ((num4 - 1) | 0); j = ((j + 1) | 0)) {
          list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
        }
      } else {

        for (; j >= 0; j = ((j - 1) | 0)) {
          list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
        }
      }
      return list;
    } else {
      if (num === 0) {
        if (i > r) {

          for (; i >= 0; i = ((i - 1) | 0)) {
            list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
          }
        } else {

          for (; i <= ((num5 - 1) | 0); i = ((i + 1) | 0)) {
            list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
          }
        }
        return list;
      }
      if (((i + j) | 0) === ((r + c) | 0)) {
        if (j < c) {

          for (; (j <= ((num4 - 1) | 0)) && (i >= 0); j = ((j + 1) | 0)) {
            list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
            i = ((i - 1) | 0);
          }
        } else {

          for (; (j >= 0) && (i <= ((num5 - 1) | 0)); j = ((j - 1) | 0)) {
            list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
            i = ((i + 1) | 0);
          }
        }
        return list;
      }
      if (((i - j) | 0) === ((r - c) | 0)) {
        if (j < c) {

          for (; (j <= ((num4 - 1) | 0)) && (i <= ((num5 - 1) | 0)); j = ((j + 1) | 0)) {
            list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
            i = ((i + 1) | 0);
          }
        } else {

          for (; (j >= 0) && (i >= 0); j = ((j - 1) | 0)) {
            list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
            i = ((i - 1) | 0);
          }
        }
        return list;
      }
      if (i < r) {
        if (j < c) {
          if (num > num2) {

            for (; (j <= ((num4 - 1) | 0)) && (i <= ((num5 - 1) | 0)); j = ((j + 1) | 0)) {
              list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
              num3 = ((num3 + num2) | 0);
              if ((num3 << 1) > num) {
                i = ((i + 1) | 0);
                num3 = ((num3 - num) | 0);
              }
            }
            return list;
          }

          for (; (i <= ((num5 - 1) | 0)) && (j <= ((num4 - 1) | 0)); i = ((i + 1) | 0)) {
            list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
            num3 = ((num3 + num) | 0);
            if ((num3 << 1) > num2) {
              j = ((j + 1) | 0);
              num3 = ((num3 - num2) | 0);
            }
          }
          return list;
        } else {
          if (num > num2) {

            for (; (j >= 0) && (i <= ((num5 - 1) | 0)); j = ((j - 1) | 0)) {
              list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
              num3 = ((num3 + num2) | 0);
              if ((num3 << 1) > num) {
                i = ((i + 1) | 0);
                num3 = ((num3 - num) | 0);
              }
            }
            return list;
          }

          for (; (i <= ((num5 - 1) | 0)) && (j >= 0); i = ((i + 1) | 0)) {
            list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
            num3 = ((num3 + num) | 0);
            if ((num3 << 1) > num2) {
              j = ((j - 1) | 0);
              num3 = ((num3 - num2) | 0);
            }
          }
          return list;
        }
      } else if (j < c) {
        if (num > num2) {

          for (; (j <= ((num4 - 1) | 0)) && (i >= 0); j = ((j + 1) | 0)) {
            list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
            num3 = ((num3 + num2) | 0);
            if ((num3 << 1) > num) {
              i = ((i - 1) | 0);
              num3 = ((num3 - num) | 0);
            }
          }
          return list;
        }

        for (; (i >= 0) && (j <= ((num4 - 1) | 0)); i = ((i - 1) | 0)) {
          list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
          num3 = ((num3 + num) | 0);
          if ((num3 << 1) > num2) {
            j = ((j + 1) | 0);
            num3 = ((num3 - num2) | 0);
          }
        }
        return list;
      } else {
        if (num > num2) {

          for (; (j >= 0) && (i >= 0); j = ((j - 1) | 0)) {
            list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
            num3 = ((num3 + num2) | 0);
            if ((num3 << 1) > num) {
              i = ((i - 1) | 0);
              num3 = ((num3 - num) | 0);
            }
          }
          return list;
        }

        for (; (i >= 0) && (j >= 0); i = ((i - 1) | 0)) {
          list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
          num3 = ((num3 + num) | 0);
          if ((num3 << 1) > num2) {
            j = ((j - 1) | 0);
            num3 = ((num3 - num2) | 0);
          }
        }
        return list;
      }
    }
  };

  function PhysicalObject_GetBestExtendedLine$1B (o) {
    return this.GetBestExtendedLine(
      o.get_row(), 
      o.get_col()
    );
  };

  function PhysicalObject_GetBestExtendedLine$1C (r, c) {
    var extendedBresenhamLine = this.GetExtendedBresenhamLine(r, c);
    var alternateExtendedBresenhamLine = this.GetAlternateExtendedBresenhamLine(r, c);

    for (var i = 0; i < extendedBresenhamLine.get_Count(); i = ((i + 1) | 0)) {
      if (alternateExtendedBresenhamLine.get_Item(i).get_opaque()) {
        return extendedBresenhamLine;
      }
      if (extendedBresenhamLine.get_Item(i).get_opaque()) {
        return alternateExtendedBresenhamLine;
      }
    }
    return extendedBresenhamLine;
  };

  function PhysicalObject_GetBestExtendedLineOfEffect$1D (o) {
    return this.GetBestExtendedLineOfEffect(
      o.get_row(), 
      o.get_col()
    );
  };

  function PhysicalObject_GetBestExtendedLineOfEffect$1E (r, c) {
    var extendedBresenhamLine = this.GetExtendedBresenhamLine(r, c);
    var alternateExtendedBresenhamLine = this.GetAlternateExtendedBresenhamLine(r, c);

    for (var i = 0; i < extendedBresenhamLine.get_Count(); i = ((i + 1) | 0)) {
      if (!alternateExtendedBresenhamLine.get_Item(i).Tile$passable$value) {
        return extendedBresenhamLine;
      }
      if (!extendedBresenhamLine.get_Item(i).Tile$passable$value) {
        return alternateExtendedBresenhamLine;
      }
    }
    return extendedBresenhamLine;
  };

  function PhysicalObject_GetBestLine$1F (o) {
    return this.GetBestLine(
      o.get_row(), 
      o.get_col()
    );
  };

  function PhysicalObject_GetBestLine$20 (r, c) {
    var bresenhamLine = this.GetBresenhamLine(r, c);
    var alternateBresenhamLine = this.GetAlternateBresenhamLine(r, c);

    for (var i = 0; i < bresenhamLine.get_Count(); i = ((i + 1) | 0)) {
      if (alternateBresenhamLine.get_Item(i).get_opaque()) {
        return bresenhamLine;
      }
      if (bresenhamLine.get_Item(i).get_opaque()) {
        return alternateBresenhamLine;
      }
    }
    return bresenhamLine;
  };

  function PhysicalObject_GetBestLineOfEffect$21 (o) {
    return this.GetBestLineOfEffect(
      o.get_row(), 
      o.get_col()
    );
  };

  function PhysicalObject_GetBestLineOfEffect$22 (r, c) {
    var bresenhamLine = this.GetBresenhamLine(r, c);
    var alternateBresenhamLine = this.GetAlternateBresenhamLine(r, c);

    for (var i = 0; i < bresenhamLine.get_Count(); i = ((i + 1) | 0)) {
      if (!alternateBresenhamLine.get_Item(i).Tile$passable$value) {
        return bresenhamLine;
      }
      if (!bresenhamLine.get_Item(i).Tile$passable$value) {
        return alternateBresenhamLine;
      }
    }
    return bresenhamLine;
  };

  function PhysicalObject_GetBresenhamLine$23 (o) {
    return this.GetBresenhamLine(
      o.get_row(), 
      o.get_col()
    );
  };

  function PhysicalObject_GetBresenhamLine$24 (r, c) {
    var i = this.get_row();
    var j = this.get_col();
    var num = (Math.abs(((c - j) | 0)));
    var num2 = (Math.abs(((r - i) | 0)));
    var num3 = 0;
    var list = $S05().Construct();
    if (num2 === 0) {
      if (num === 0) {
        list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, 
            this.get_row(), 
            this.get_col()
          ));
        return list;
      }

      for (; j < c; j = ((j + 1) | 0)) {
        list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
      }

      for (; j > c; j = ((j - 1) | 0)) {
        list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
      }
      list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, r, c));
      return list;
    } else {
      if (num === 0) {

        for (; i > r; i = ((i - 1) | 0)) {
          list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
        }

        for (; i < r; i = ((i + 1) | 0)) {
          list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
        }
        list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, r, c));
        return list;
      }
      if (((i + j) | 0) === ((r + c) | 0)) {

        for (; j < c; j = ((j + 1) | 0)) {
          list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
          i = ((i - 1) | 0);
        }

        for (; j > c; j = ((j - 1) | 0)) {
          list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
          i = ((i + 1) | 0);
        }
        list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, r, c));
        return list;
      }
      if (((i - j) | 0) === ((r - c) | 0)) {

        for (; j < c; j = ((j + 1) | 0)) {
          list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
          i = ((i + 1) | 0);
        }

        for (; j > c; j = ((j - 1) | 0)) {
          list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
          i = ((i - 1) | 0);
        }
        list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, r, c));
        return list;
      }
      if (i < r) {
        if (j < c) {
          if (num > num2) {

            for (; j < c; j = ((j + 1) | 0)) {
              list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
              num3 = ((num3 + num2) | 0);
              if ((num3 << 1) >= num) {
                i = ((i + 1) | 0);
                num3 = ((num3 - num) | 0);
              }
            }
            list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, r, c));
            return list;
          }

          for (; i < r; i = ((i + 1) | 0)) {
            list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
            num3 = ((num3 + num) | 0);
            if ((num3 << 1) >= num2) {
              j = ((j + 1) | 0);
              num3 = ((num3 - num2) | 0);
            }
          }
          list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, r, c));
          return list;
        } else {
          if (num > num2) {

            for (; j > c; j = ((j - 1) | 0)) {
              list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
              num3 = ((num3 + num2) | 0);
              if ((num3 << 1) >= num) {
                i = ((i + 1) | 0);
                num3 = ((num3 - num) | 0);
              }
            }
            list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, r, c));
            return list;
          }

          for (; i < r; i = ((i + 1) | 0)) {
            list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
            num3 = ((num3 + num) | 0);
            if ((num3 << 1) >= num2) {
              j = ((j - 1) | 0);
              num3 = ((num3 - num2) | 0);
            }
          }
          list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, r, c));
          return list;
        }
      } else if (j < c) {
        if (num > num2) {

          for (; j < c; j = ((j + 1) | 0)) {
            list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
            num3 = ((num3 + num2) | 0);
            if ((num3 << 1) >= num) {
              i = ((i - 1) | 0);
              num3 = ((num3 - num) | 0);
            }
          }
          list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, r, c));
          return list;
        }

        for (; i > r; i = ((i - 1) | 0)) {
          list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
          num3 = ((num3 + num) | 0);
          if ((num3 << 1) >= num2) {
            j = ((j + 1) | 0);
            num3 = ((num3 - num2) | 0);
          }
        }
        list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, r, c));
        return list;
      } else {
        if (num > num2) {

          for (; j > c; j = ((j - 1) | 0)) {
            list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
            num3 = ((num3 + num2) | 0);
            if ((num3 << 1) >= num) {
              i = ((i - 1) | 0);
              num3 = ((num3 - num) | 0);
            }
          }
          list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, r, c));
          return list;
        }

        for (; i > r; i = ((i - 1) | 0)) {
          list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
          num3 = ((num3 + num) | 0);
          if ((num3 << 1) >= num2) {
            j = ((j - 1) | 0);
            num3 = ((num3 - num2) | 0);
          }
        }
        list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, r, c));
        return list;
      }
    }
  };

  function PhysicalObject_GetExtendedBresenhamLine$25 (o) {
    return this.GetExtendedBresenhamLine(
      o.get_row(), 
      o.get_col()
    );
  };

  function PhysicalObject_GetExtendedBresenhamLine$26 (r, c) {
    var i = this.get_row();
    var j = this.get_col();
    var num = (Math.abs(((c - j) | 0)));
    var num2 = (Math.abs(((r - i) | 0)));
    var num3 = 0;
    var num4 = 66;
    var num5 = 22;
    var list = $S05().Construct();
    if (num2 === 0) {
      if (num === 0) {
        list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, 
            this.get_row(), 
            this.get_col()
          ));
        return list;
      }
      if (j < c) {

        for (; j <= ((num4 - 1) | 0); j = ((j + 1) | 0)) {
          list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
        }
      } else {

        for (; j >= 0; j = ((j - 1) | 0)) {
          list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
        }
      }
      return list;
    } else {
      if (num === 0) {
        if (i > r) {

          for (; i >= 0; i = ((i - 1) | 0)) {
            list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
          }
        } else {

          for (; i <= ((num5 - 1) | 0); i = ((i + 1) | 0)) {
            list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
          }
        }
        return list;
      }
      if (((i + j) | 0) === ((r + c) | 0)) {
        if (j < c) {

          for (; (j <= ((num4 - 1) | 0)) && (i >= 0); j = ((j + 1) | 0)) {
            list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
            i = ((i - 1) | 0);
          }
        } else {

          for (; (j >= 0) && (i <= ((num5 - 1) | 0)); j = ((j - 1) | 0)) {
            list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
            i = ((i + 1) | 0);
          }
        }
        return list;
      }
      if (((i - j) | 0) === ((r - c) | 0)) {
        if (j < c) {

          for (; (j <= ((num4 - 1) | 0)) && (i <= ((num5 - 1) | 0)); j = ((j + 1) | 0)) {
            list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
            i = ((i + 1) | 0);
          }
        } else {

          for (; (j >= 0) && (i >= 0); j = ((j - 1) | 0)) {
            list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
            i = ((i - 1) | 0);
          }
        }
        return list;
      }
      if (i < r) {
        if (j < c) {
          if (num > num2) {

            for (; (j <= ((num4 - 1) | 0)) && (i <= ((num5 - 1) | 0)); j = ((j + 1) | 0)) {
              list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
              num3 = ((num3 + num2) | 0);
              if ((num3 << 1) >= num) {
                i = ((i + 1) | 0);
                num3 = ((num3 - num) | 0);
              }
            }
            return list;
          }

          for (; (i <= ((num5 - 1) | 0)) && (j <= ((num4 - 1) | 0)); i = ((i + 1) | 0)) {
            list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
            num3 = ((num3 + num) | 0);
            if ((num3 << 1) >= num2) {
              j = ((j + 1) | 0);
              num3 = ((num3 - num2) | 0);
            }
          }
          return list;
        } else {
          if (num > num2) {

            for (; (j >= 0) && (i <= ((num5 - 1) | 0)); j = ((j - 1) | 0)) {
              list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
              num3 = ((num3 + num2) | 0);
              if ((num3 << 1) >= num) {
                i = ((i + 1) | 0);
                num3 = ((num3 - num) | 0);
              }
            }
            return list;
          }

          for (; (i <= ((num5 - 1) | 0)) && (j >= 0); i = ((i + 1) | 0)) {
            list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
            num3 = ((num3 + num) | 0);
            if ((num3 << 1) >= num2) {
              j = ((j - 1) | 0);
              num3 = ((num3 - num2) | 0);
            }
          }
          return list;
        }
      } else if (j < c) {
        if (num > num2) {

          for (; (j <= ((num4 - 1) | 0)) && (i >= 0); j = ((j + 1) | 0)) {
            list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
            num3 = ((num3 + num2) | 0);
            if ((num3 << 1) >= num) {
              i = ((i - 1) | 0);
              num3 = ((num3 - num) | 0);
            }
          }
          return list;
        }

        for (; (i >= 0) && (j <= ((num4 - 1) | 0)); i = ((i - 1) | 0)) {
          list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
          num3 = ((num3 + num) | 0);
          if ((num3 << 1) >= num2) {
            j = ((j + 1) | 0);
            num3 = ((num3 - num2) | 0);
          }
        }
        return list;
      } else {
        if (num > num2) {

          for (; (j >= 0) && (i >= 0); j = ((j - 1) | 0)) {
            list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
            num3 = ((num3 + num2) | 0);
            if ((num3 << 1) >= num) {
              i = ((i - 1) | 0);
              num3 = ((num3 - num) | 0);
            }
          }
          return list;
        }

        for (; (i >= 0) && (j >= 0); i = ((i - 1) | 0)) {
          list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
          num3 = ((num3 + num) | 0);
          if ((num3 << 1) >= num2) {
            j = ((j - 1) | 0);
            num3 = ((num3 - num2) | 0);
          }
        }
        return list;
      }
    }
  };

  function PhysicalObject_HasBresenhamLine (r, c) {
    var bestLine = this.GetBestLine(r, c);
    var count = bestLine.get_Count();
    if (count === 1) {
      return true;
    }

    for (var i = 1; i < ((count - 1) | 0); i = ((i + 1) | 0)) {
      if (bestLine.get_Item(i).get_opaque()) {
        return false;
      }
    }
    return true;
  };

  function PhysicalObject_HasBresenhamLineOfEffect (r, c) {
    var bestLineOfEffect = this.GetBestLineOfEffect(r, c);
    var count = bestLineOfEffect.get_Count();
    if (count === 1) {
      return true;
    }

    for (var i = 1; i < ((count - 1) | 0); i = ((i + 1) | 0)) {
      if (!bestLineOfEffect.get_Item(i).Tile$passable$value) {
        return false;
      }
    }
    return true;
  };

  function PhysicalObject_HasLOE$27 (o) {
    return this.HasLOE(
      o.get_row(), 
      o.get_col()
    );
  };

  function PhysicalObject_HasLOE$28 (r, c) {
    var $temp00;
    var row = this.get_row();
    var col = this.get_col();
    var num = (Math.abs(((c - col) | 0)));
    var num2 = (Math.abs(((r - row) | 0)));
    if (!((num > 1) || (num2 > 1))) {
      return true;
    }
    if (this.HasBresenhamLineOfEffect(r, c)) {
      return true;
    }
    if (!$T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, r, c).Tile$passable$value) {

      for (var a$0 = $T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, r, c).NeighborsBetween(
          this.get_row(), 
          this.get_col()
        )._items, i$0 = 0, l$0 = $T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, r, c).NeighborsBetween(
          this.get_row(), 
          this.get_col()
        )._size; i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current = a$0[i$0];
        if (this.HasBresenhamLineOfEffect(
            current.get_row(), 
            current.get_col()
          )) {
          return true;
        }
      }
      return false;
    }
    return false;
  };

  function PhysicalObject_HasLOS$29 (o) {
    return this.HasLOS(
      o.get_row(), 
      o.get_col()
    );
  };

  function PhysicalObject_HasLOS$2A (r, c) {
    var $temp00;
    var row = this.get_row();
    var col = this.get_col();
    var num = (Math.abs(((c - col) | 0)));
    var num2 = (Math.abs(((r - row) | 0)));
    if (!((num > 1) || (num2 > 1))) {
      return true;
    }
    if (this.HasBresenhamLine(r, c)) {
      return true;
    }
    if ($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, r, c).get_opaque()) {

      for (var a$0 = $T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, r, c).NeighborsBetween(
          this.get_row(), 
          this.get_col()
        )._items, i$0 = 0, l$0 = $T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, r, c).NeighborsBetween(
          this.get_row(), 
          this.get_col()
        )._size; i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current = a$0[i$0];
        if (this.HasBresenhamLine(
            current.get_row(), 
            current.get_col()
          )) {
          return true;
        }
      }
      return false;
    }
    return false;
  };

  function PhysicalObject_IsAdjacentTo$2B (type) {
    return $S06().CallVirtual("IsAdjacentTo", null, this, type, false);
  };

  function PhysicalObject_IsAdjacentTo$2C (type, consider_origin) {
    var $temp00;

    for (var a$0 = this.TilesWithinDistance(1, !consider_origin)._items, i$0 = 0, l$0 = this.TilesWithinDistance(1, !consider_origin)._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      if (current.Tile$type$value === type) {
        return true;
      }
    }
    return false;
  };

  function PhysicalObject_IsAdjacentTo$2D (type) {
    return $S07().CallVirtual("IsAdjacentTo", null, this, type, false);
  };

  function PhysicalObject_IsAdjacentTo$2E (type, consider_origin) {
    var $temp00;

    for (var a$0 = this.TilesWithinDistance(1, !consider_origin)._items, i$0 = 0, l$0 = this.TilesWithinDistance(1, !consider_origin)._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      if (current.features.Contains(type)) {
        return true;
      }
    }
    return false;
  };

  function PhysicalObject_PositionsAtDistance (dist) {
    var list = $S08().Construct();

    for (var i = ((this.get_row() - dist) | 0); i <= ((this.get_row() + dist) | 0); i = ((i + 1) | 0)) {

      for (var j = ((this.get_col() - dist) | 0); j <= ((this.get_col() + dist) | 0); j = ((j + 1) | 0)) {
        if (!((this.DistanceFrom(i, j) !== dist) || !$thisType.PhysicalObject$M$value.BoundsCheck(i, j))) {
          list.Add(new ($T0A())(i, j));
        }
      }
    }
    return list;
  };

  function PhysicalObject_RotateDirection$2F (dir, clockwise) {
    return this.RotateDirection(dir, clockwise, 1);
  };

  function PhysicalObject_RotateDirection$30 (dir, clockwise, num) {
    if (num < 0) {
      num = (-num | 0);
      clockwise = !clockwise;
    }

    for (var i = 0; i < num; i = ((i + 1) | 0)) {
      switch (dir) {
        case 1: 
          dir = (!clockwise ? 2 : 4);
          break;

        case 2: 
          dir = (!clockwise ? 3 : 1);
          break;

        case 3: 
          dir = (!clockwise ? 6 : 2);
          break;

        case 4: 
          dir = (!clockwise ? 1 : 7);
          break;

        case 5: 
          break;

        case 6: 
          dir = (!clockwise ? 9 : 3);
          break;

        case 7: 
          dir = (!clockwise ? 4 : 8);
          break;

        case 8: 
          dir = (!clockwise ? 7 : 9);
          break;

        case 9: 
          dir = (!clockwise ? 8 : 6);
          break;

        default: 
          dir = 0;
          break;

      }
    }
    return dir;
  };

  function PhysicalObject_set_a_name (value) {
    this.PhysicalObject$a_name$value = value;
  };

  function PhysicalObject_set_col (value) {
    this.p.col = value;
  };

  function PhysicalObject_set_color (value) {
    this.PhysicalObject$color$value = value;
  };

  function PhysicalObject_set_light_radius (value) {
    this.PhysicalObject$light_radius$value = value;
  };

  function PhysicalObject_set_M (value) {
    $thisType.PhysicalObject$M$value = value;
  };

  function PhysicalObject_set_$name (value) {
    this.PhysicalObject$name$value = value;
  };

  function PhysicalObject_set_row (value) {
    this.p.row = value;
  };

  function PhysicalObject_set_symbol (value) {
    this.PhysicalObject$symbol$value = value;
  };

  function PhysicalObject_set_the_name (value) {
    this.PhysicalObject$the_name$value = value;
  };

  function PhysicalObject_SetName (new_name) {
    this.PhysicalObject$$name$value = new_name;
    this.PhysicalObject$the_name$value = (JSIL.ConcatString("the ", this.PhysicalObject$$name$value));
    this.PhysicalObject$a_name$value = (JSIL.ConcatString("a ", this.PhysicalObject$$name$value));
    if (this.PhysicalObject$$name$value == "you") {
      this.PhysicalObject$the_name$value = "you";
      this.PhysicalObject$a_name$value = "you";
    }
    var c = (this.PhysicalObject$$name$value[0]);
    if ((c.charCodeAt(0) === "A".charCodeAt(0)) || 
      (c.charCodeAt(0) === "E".charCodeAt(0)) || 
      (c.charCodeAt(0) === "I".charCodeAt(0)) || 
      (c.charCodeAt(0) === "O".charCodeAt(0)) || 
      (c.charCodeAt(0) === "U".charCodeAt(0)) || 
      (c.charCodeAt(0) === "a".charCodeAt(0)) || 
      (c.charCodeAt(0) === "e".charCodeAt(0)) || 
      (c.charCodeAt(0) === "i".charCodeAt(0)) || 
      (c.charCodeAt(0) === "o".charCodeAt(0)) || (c.charCodeAt(0) === "u".charCodeAt(0))) {
      this.PhysicalObject$a_name$value = (JSIL.ConcatString("an ", this.PhysicalObject$$name$value));
    }
  };

  function PhysicalObject_TheVisible () {
    return this.PhysicalObject$the_name$value;
  };

  function PhysicalObject_tile () {
    return $T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, 
      this.get_row(), 
      this.get_col()
    );
  };

  function PhysicalObject_TileInDirection (dir) {
    switch (dir) {
      case 1: 
        if ($thisType.PhysicalObject$M$value.BoundsCheck(
            ((this.get_row() + 1) | 0), 
            ((this.get_col() - 1) | 0)
          )) {
          return $T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, 
            ((this.get_row() + 1) | 0), 
            ((this.get_col() - 1) | 0)
          );
        }
        break;

      case 2: 
        if ($thisType.PhysicalObject$M$value.BoundsCheck(
            ((this.get_row() + 1) | 0), 
            this.get_col()
          )) {
          return $T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, 
            ((this.get_row() + 1) | 0), 
            this.get_col()
          );
        }
        break;

      case 3: 
        if ($thisType.PhysicalObject$M$value.BoundsCheck(
            ((this.get_row() + 1) | 0), 
            ((this.get_col() + 1) | 0)
          )) {
          return $T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, 
            ((this.get_row() + 1) | 0), 
            ((this.get_col() + 1) | 0)
          );
        }
        break;

      case 4: 
        if ($thisType.PhysicalObject$M$value.BoundsCheck(
            this.get_row(), 
            ((this.get_col() - 1) | 0)
          )) {
          return $T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, 
            this.get_row(), 
            ((this.get_col() - 1) | 0)
          );
        }
        break;

      case 5: 
        if ($thisType.PhysicalObject$M$value.BoundsCheck(
            this.get_row(), 
            this.get_col()
          )) {
          return $T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, 
            this.get_row(), 
            this.get_col()
          );
        }
        break;

      case 6: 
        if ($thisType.PhysicalObject$M$value.BoundsCheck(
            this.get_row(), 
            ((this.get_col() + 1) | 0)
          )) {
          return $T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, 
            this.get_row(), 
            ((this.get_col() + 1) | 0)
          );
        }
        break;

      case 7: 
        if ($thisType.PhysicalObject$M$value.BoundsCheck(
            ((this.get_row() - 1) | 0), 
            ((this.get_col() - 1) | 0)
          )) {
          return $T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, 
            ((this.get_row() - 1) | 0), 
            ((this.get_col() - 1) | 0)
          );
        }
        break;

      case 8: 
        if ($thisType.PhysicalObject$M$value.BoundsCheck(
            ((this.get_row() - 1) | 0), 
            this.get_col()
          )) {
          return $T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, 
            ((this.get_row() - 1) | 0), 
            this.get_col()
          );
        }
        break;

      case 9: 
        if ($thisType.PhysicalObject$M$value.BoundsCheck(
            ((this.get_row() - 1) | 0), 
            ((this.get_col() + 1) | 0)
          )) {
          return $T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, 
            ((this.get_row() - 1) | 0), 
            ((this.get_col() + 1) | 0)
          );
        }
        break;

      default: 
        return null;

    }
    return null;
  };

  function PhysicalObject_TilesAtDistance (dist) {
    var list = $S05().Construct();

    for (var i = ((this.get_row() - dist) | 0); i <= ((this.get_row() + dist) | 0); i = ((i + 1) | 0)) {

      for (var j = ((this.get_col() - dist) | 0); j <= ((this.get_col() + dist) | 0); j = ((j + 1) | 0)) {
        if (!((this.DistanceFrom(i, j) !== dist) || !$thisType.PhysicalObject$M$value.BoundsCheck(i, j))) {
          list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
        }
      }
    }
    return list;
  };

  function PhysicalObject_TilesWithinDistance$31 (dist) {
    return this.TilesWithinDistance(dist, false);
  };

  function PhysicalObject_TilesWithinDistance$32 (dist, exclude_origin) {
    var list = $S05().Construct();

    for (var i = ((this.get_row() - dist) | 0); i <= ((this.get_row() + dist) | 0); i = ((i + 1) | 0)) {

      for (var j = ((this.get_col() - dist) | 0); j <= ((this.get_col() + dist) | 0); j = ((j + 1) | 0)) {
        if (!(((i === this.get_row()) && 
              (j === this.get_col()) && 
              exclude_origin) || !$thisType.PhysicalObject$M$value.BoundsCheck(i, j))) {
          list.Add($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j));
        }
      }
    }
    return list;
  };

  function PhysicalObject_UpdateRadius$33 (from, to) {
    this.UpdateRadius(from, to, false);
  };

  function PhysicalObject_UpdateRadius$34 (from, to, change) {
    var $temp00, $temp01;
    if (from > 0) {

      for (var i = ((this.get_row() - from) | 0); i <= ((this.get_row() + from) | 0); i = ((i + 1) | 0)) {

        for (var j = ((this.get_col() - from) | 0); j <= ((this.get_col() + from) | 0); j = ((j + 1) | 0)) {
          if (!((i <= 0) || 
              (i >= 21) || 
              (j <= 0) || 
              (j >= 65) || 
              $T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j).get_opaque() || !this.HasBresenhamLine(i, j))) {
            ($temp00 = (($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j).get_light_value() - 1) | 0), 
              $T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, i, j).set_light_value($temp00), 
              $temp00);
          }
        }
      }
    }
    if (to > 0) {

      for (var k = ((this.get_row() - to) | 0); k <= ((this.get_row() + to) | 0); k = ((k + 1) | 0)) {

        for (var l = ((this.get_col() - to) | 0); l <= ((this.get_col() + to) | 0); l = ((l + 1) | 0)) {
          if (!((k <= 0) || 
              (k >= 21) || 
              (l <= 0) || 
              (l >= 65) || 
              $T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, k, l).get_opaque() || !this.HasBresenhamLine(k, l))) {
            ($temp01 = (($T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, k, l).get_light_value() + 1) | 0), 
              $T12().prototype.get_Item.call($thisType.PhysicalObject$M$value.tile, k, l).set_light_value($temp01), 
              $temp01);
          }
        }
      }
    }
    if (change) {
      this.PhysicalObject$light_radius$value = to;
    }
  };

  function PhysicalObject_You$35 (s) {
    return this.You(s, false);
  };

  function PhysicalObject_You$36 (s, ends_in_es) {
    if (this.PhysicalObject$$name$value == "you") {
      return JSIL.ConcatString("you ", s);
    }
    if (ends_in_es) {
      return (this.PhysicalObject$the_name$value + " " + s + "es");
    }
    return (this.PhysicalObject$the_name$value + " " + s + "s");
  };

  function PhysicalObject_YouAre () {
    if (this.PhysicalObject$$name$value == "you") {
      return "you are";
    }
    return JSIL.ConcatString(this.PhysicalObject$the_name$value, " is");
  };

  function PhysicalObject_YouFeel () {
    if (this.PhysicalObject$$name$value == "you") {
      return "you feel";
    }
    return JSIL.ConcatString(this.PhysicalObject$the_name$value, " looks");
  };

  function PhysicalObject_Your () {
    if (this.PhysicalObject$$name$value == "you") {
      return "your";
    }
    return JSIL.ConcatString(this.PhysicalObject$the_name$value, "'s");
  };

  function PhysicalObject_YouVisible$37 (s) {
    return this.YouVisible(s, false);
  };

  function PhysicalObject_YouVisible$38 (s, ends_in_es) {
    if (this.PhysicalObject$$name$value == "you") {
      return JSIL.ConcatString("you ", s);
    }
    if (ends_in_es) {
      return (this.PhysicalObject$the_name$value + " " + s + "es");
    }
    return (this.PhysicalObject$the_name$value + " " + s + "s");
  };

  JSIL.MakeClass($asm01.TypeRef("System.Object"), "Forays.PhysicalObject", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], []), 
      PhysicalObject__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.Char, 
          $asm00.TypeRef("Forays.Color")
        ], []), 
      PhysicalObject__ctor$01
    );

    $.Method({Static:false, Public:true }, "actor", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Actor"), [], []), 
      PhysicalObject_actor
    );

    $.Method({Static:false, Public:true }, "ActorInDirection", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Actor"), [$.Int32], []), 
      PhysicalObject_ActorInDirection
    );

    $.Method({Static:false, Public:true }, "ActorsAtDistance", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Actor")]), [$.Int32], []), 
      PhysicalObject_ActorsAtDistance
    );

    $.Method({Static:false, Public:true }, "ActorsWithinDistance", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Actor")]), [$.Int32], []), 
      PhysicalObject_ActorsWithinDistance$02
    );

    $.Method({Static:false, Public:true }, "ActorsWithinDistance", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Actor")]), [$.Int32, $.Boolean], []), 
      PhysicalObject_ActorsWithinDistance$03
    );

    $.Method({Static:false, Public:true , Virtual:true }, "AVisible", 
      new JSIL.MethodSignature($.String, [], []), 
      PhysicalObject_AVisible
    );

    $.Method({Static:false, Public:true }, "Cursor", 
      new JSIL.MethodSignature(null, [], []), 
      PhysicalObject_Cursor
    );

    $.Method({Static:false, Public:true }, "DirectionOf", 
      new JSIL.MethodSignature($.Int32, [$.Type], []), 
      PhysicalObject_DirectionOf$04
    );

    $.Method({Static:false, Public:true }, "DirectionOf", 
      new JSIL.MethodSignature($.Int32, [$asm00.TypeRef("Forays.pos")], []), 
      PhysicalObject_DirectionOf$05
    );

    $.Method({Static:false, Public:true }, "DirectionOfOnlyUnblocked", 
      new JSIL.MethodSignature($.Int32, [$asm00.TypeRef("Forays.TileType")], []), 
      PhysicalObject_DirectionOfOnlyUnblocked$06
    );

    $.Method({Static:false, Public:true }, "DirectionOfOnlyUnblocked", 
      new JSIL.MethodSignature($.Int32, [$asm00.TypeRef("Forays.TileType"), $.Boolean], []), 
      PhysicalObject_DirectionOfOnlyUnblocked$07
    );

    $.Method({Static:false, Public:true }, "DistanceFrom", 
      new JSIL.MethodSignature($.Int32, [$.Type], []), 
      PhysicalObject_DistanceFrom$08
    );

    $.Method({Static:false, Public:true }, "DistanceFrom", 
      new JSIL.MethodSignature($.Int32, [$asm00.TypeRef("Forays.pos")], []), 
      PhysicalObject_DistanceFrom$09
    );

    $.Method({Static:false, Public:true }, "DistanceFrom", 
      new JSIL.MethodSignature($.Int32, [$.Int32, $.Int32], []), 
      PhysicalObject_DistanceFrom$0A
    );

    $.Method({Static:false, Public:true }, "EstimatedEuclideanDistanceFromX10", 
      new JSIL.MethodSignature($.Int32, [$.Type], []), 
      PhysicalObject_EstimatedEuclideanDistanceFromX10$0B
    );

    $.Method({Static:false, Public:true }, "EstimatedEuclideanDistanceFromX10", 
      new JSIL.MethodSignature($.Int32, [$asm00.TypeRef("Forays.pos")], []), 
      PhysicalObject_EstimatedEuclideanDistanceFromX10$0C
    );

    $.Method({Static:false, Public:true }, "EstimatedEuclideanDistanceFromX10", 
      new JSIL.MethodSignature($.Int32, [$.Int32, $.Int32], []), 
      PhysicalObject_EstimatedEuclideanDistanceFromX10$0D
    );

    $.Method({Static:false, Public:true }, "FirstActorInExtendedLine", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Actor"), [$.Type], []), 
      PhysicalObject_FirstActorInExtendedLine$0E
    );

    $.Method({Static:false, Public:true }, "FirstActorInExtendedLine", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Actor"), [$.Type, $.Int32], []), 
      PhysicalObject_FirstActorInExtendedLine$0F
    );

    $.Method({Static:false, Public:true }, "FirstActorInExtendedLine", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Actor"), [
          $.Type, $.Int32, 
          $.Int32
        ], []), 
      PhysicalObject_FirstActorInExtendedLine$10
    );

    $.Method({Static:false, Public:true }, "FirstActorInLine", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Actor"), [$.Type], []), 
      PhysicalObject_FirstActorInLine$11
    );

    $.Method({Static:false, Public:true }, "FirstActorInLine", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Actor"), [$.Type, $.Int32], []), 
      PhysicalObject_FirstActorInLine$12
    );

    $.Method({Static:false, Public:true }, "FirstActorInLine", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Actor"), [$asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")])], []), 
      PhysicalObject_FirstActorInLine$13
    );

    $.Method({Static:false, Public:true }, "FirstActorInLine", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Actor"), [$asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), $.Int32], []), 
      PhysicalObject_FirstActorInLine$14
    );

    $.Method({Static:false, Public:true }, "FirstSolidTileInLine", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Tile"), [$.Type], []), 
      PhysicalObject_FirstSolidTileInLine$15
    );

    $.Method({Static:false, Public:true }, "FirstSolidTileInLine", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Tile"), [$.Type, $.Int32], []), 
      PhysicalObject_FirstSolidTileInLine$16
    );

    $.Method({Static:false, Public:true }, "get_a_name", 
      new JSIL.MethodSignature($.String, [], []), 
      PhysicalObject_get_a_name
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_col", 
      new JSIL.MethodSignature($.Int32, [], []), 
      PhysicalObject_get_col
    );

    $.Method({Static:false, Public:true }, "get_color", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Color"), [], []), 
      PhysicalObject_get_color
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_light_radius", 
      new JSIL.MethodSignature($.Int32, [], []), 
      PhysicalObject_get_light_radius
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:true }, "get_M", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Map"), [], []), 
      PhysicalObject_get_M
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_$name", 
      new JSIL.MethodSignature($.String, [], []), 
      PhysicalObject_get_$name
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_row", 
      new JSIL.MethodSignature($.Int32, [], []), 
      PhysicalObject_get_row
    );

    $.Method({Static:false, Public:true }, "get_symbol", 
      new JSIL.MethodSignature($.Char, [], []), 
      PhysicalObject_get_symbol
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_the_name", 
      new JSIL.MethodSignature($.String, [], []), 
      PhysicalObject_get_the_name
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "GetAlternateBresenhamLine", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), [$.Type], []), 
      PhysicalObject_GetAlternateBresenhamLine$17
    );

    $.Method({Static:false, Public:true }, "GetAlternateBresenhamLine", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), [$.Int32, $.Int32], []), 
      PhysicalObject_GetAlternateBresenhamLine$18
    );

    $.Method({Static:false, Public:true }, "GetAlternateExtendedBresenhamLine", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), [$.Type], []), 
      PhysicalObject_GetAlternateExtendedBresenhamLine$19
    );

    $.Method({Static:false, Public:true }, "GetAlternateExtendedBresenhamLine", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), [$.Int32, $.Int32], []), 
      PhysicalObject_GetAlternateExtendedBresenhamLine$1A
    );

    $.Method({Static:false, Public:true }, "GetBestExtendedLine", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), [$.Type], []), 
      PhysicalObject_GetBestExtendedLine$1B
    );

    $.Method({Static:false, Public:true }, "GetBestExtendedLine", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), [$.Int32, $.Int32], []), 
      PhysicalObject_GetBestExtendedLine$1C
    );

    $.Method({Static:false, Public:true }, "GetBestExtendedLineOfEffect", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), [$.Type], []), 
      PhysicalObject_GetBestExtendedLineOfEffect$1D
    );

    $.Method({Static:false, Public:true }, "GetBestExtendedLineOfEffect", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), [$.Int32, $.Int32], []), 
      PhysicalObject_GetBestExtendedLineOfEffect$1E
    );

    $.Method({Static:false, Public:true }, "GetBestLine", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), [$.Type], []), 
      PhysicalObject_GetBestLine$1F
    );

    $.Method({Static:false, Public:true }, "GetBestLine", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), [$.Int32, $.Int32], []), 
      PhysicalObject_GetBestLine$20
    );

    $.Method({Static:false, Public:true }, "GetBestLineOfEffect", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), [$.Type], []), 
      PhysicalObject_GetBestLineOfEffect$21
    );

    $.Method({Static:false, Public:true }, "GetBestLineOfEffect", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), [$.Int32, $.Int32], []), 
      PhysicalObject_GetBestLineOfEffect$22
    );

    $.Method({Static:false, Public:true }, "GetBresenhamLine", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), [$.Type], []), 
      PhysicalObject_GetBresenhamLine$23
    );

    $.Method({Static:false, Public:true }, "GetBresenhamLine", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), [$.Int32, $.Int32], []), 
      PhysicalObject_GetBresenhamLine$24
    );

    $.Method({Static:false, Public:true }, "GetExtendedBresenhamLine", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), [$.Type], []), 
      PhysicalObject_GetExtendedBresenhamLine$25
    );

    $.Method({Static:false, Public:true }, "GetExtendedBresenhamLine", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), [$.Int32, $.Int32], []), 
      PhysicalObject_GetExtendedBresenhamLine$26
    );

    $.Method({Static:false, Public:true }, "HasBresenhamLine", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $.Int32], []), 
      PhysicalObject_HasBresenhamLine
    );

    $.Method({Static:false, Public:true }, "HasBresenhamLineOfEffect", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $.Int32], []), 
      PhysicalObject_HasBresenhamLineOfEffect
    );

    $.Method({Static:false, Public:true }, "HasLOE", 
      new JSIL.MethodSignature($.Boolean, [$.Type], []), 
      PhysicalObject_HasLOE$27
    );

    $.Method({Static:false, Public:true }, "HasLOE", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $.Int32], []), 
      PhysicalObject_HasLOE$28
    );

    $.Method({Static:false, Public:true }, "HasLOS", 
      new JSIL.MethodSignature($.Boolean, [$.Type], []), 
      PhysicalObject_HasLOS$29
    );

    $.Method({Static:false, Public:true }, "HasLOS", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $.Int32], []), 
      PhysicalObject_HasLOS$2A
    );

    $.Method({Static:false, Public:true }, "IsAdjacentTo", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.TileType")], []), 
      PhysicalObject_IsAdjacentTo$2B
    );

    $.Method({Static:false, Public:true }, "IsAdjacentTo", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.TileType"), $.Boolean], []), 
      PhysicalObject_IsAdjacentTo$2C
    );

    $.Method({Static:false, Public:true }, "IsAdjacentTo", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.FeatureType")], []), 
      PhysicalObject_IsAdjacentTo$2D
    );

    $.Method({Static:false, Public:true }, "IsAdjacentTo", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.FeatureType"), $.Boolean], []), 
      PhysicalObject_IsAdjacentTo$2E
    );

    $.Method({Static:false, Public:true }, "PositionsAtDistance", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.pos")]), [$.Int32], []), 
      PhysicalObject_PositionsAtDistance
    );

    $.Method({Static:false, Public:true }, "RotateDirection", 
      new JSIL.MethodSignature($.Int32, [$.Int32, $.Boolean], []), 
      PhysicalObject_RotateDirection$2F
    );

    $.Method({Static:false, Public:true }, "RotateDirection", 
      new JSIL.MethodSignature($.Int32, [
          $.Int32, $.Boolean, 
          $.Int32
        ], []), 
      PhysicalObject_RotateDirection$30
    );

    $.Method({Static:false, Public:true }, "set_a_name", 
      new JSIL.MethodSignature(null, [$.String], []), 
      PhysicalObject_set_a_name
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_col", 
      new JSIL.MethodSignature(null, [$.Int32], []), 
      PhysicalObject_set_col
    );

    $.Method({Static:false, Public:true }, "set_color", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.Color")], []), 
      PhysicalObject_set_color
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_light_radius", 
      new JSIL.MethodSignature(null, [$.Int32], []), 
      PhysicalObject_set_light_radius
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:true }, "set_M", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.Map")], []), 
      PhysicalObject_set_M
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_$name", 
      new JSIL.MethodSignature(null, [$.String], []), 
      PhysicalObject_set_$name
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_row", 
      new JSIL.MethodSignature(null, [$.Int32], []), 
      PhysicalObject_set_row
    );

    $.Method({Static:false, Public:true }, "set_symbol", 
      new JSIL.MethodSignature(null, [$.Char], []), 
      PhysicalObject_set_symbol
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_the_name", 
      new JSIL.MethodSignature(null, [$.String], []), 
      PhysicalObject_set_the_name
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "SetName", 
      new JSIL.MethodSignature(null, [$.String], []), 
      PhysicalObject_SetName
    );

    $.Method({Static:false, Public:true , Virtual:true }, "TheVisible", 
      new JSIL.MethodSignature($.String, [], []), 
      PhysicalObject_TheVisible
    );

    $.Method({Static:false, Public:true }, "tile", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Tile"), [], []), 
      PhysicalObject_tile
    );

    $.Method({Static:false, Public:true }, "TileInDirection", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Tile"), [$.Int32], []), 
      PhysicalObject_TileInDirection
    );

    $.Method({Static:false, Public:true }, "TilesAtDistance", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), [$.Int32], []), 
      PhysicalObject_TilesAtDistance
    );

    $.Method({Static:false, Public:true }, "TilesWithinDistance", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), [$.Int32], []), 
      PhysicalObject_TilesWithinDistance$31
    );

    $.Method({Static:false, Public:true }, "TilesWithinDistance", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), [$.Int32, $.Boolean], []), 
      PhysicalObject_TilesWithinDistance$32
    );

    $.Method({Static:false, Public:true }, "UpdateRadius", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32], []), 
      PhysicalObject_UpdateRadius$33
    );

    $.Method({Static:false, Public:true }, "UpdateRadius", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Boolean
        ], []), 
      PhysicalObject_UpdateRadius$34
    );

    $.Method({Static:false, Public:true }, "You", 
      new JSIL.MethodSignature($.String, [$.String], []), 
      PhysicalObject_You$35
    );

    $.Method({Static:false, Public:true }, "You", 
      new JSIL.MethodSignature($.String, [$.String, $.Boolean], []), 
      PhysicalObject_You$36
    );

    $.Method({Static:false, Public:true }, "YouAre", 
      new JSIL.MethodSignature($.String, [], []), 
      PhysicalObject_YouAre
    );

    $.Method({Static:false, Public:true }, "YouFeel", 
      new JSIL.MethodSignature($.String, [], []), 
      PhysicalObject_YouFeel
    );

    $.Method({Static:false, Public:true }, "Your", 
      new JSIL.MethodSignature($.String, [], []), 
      PhysicalObject_Your
    );

    $.Method({Static:false, Public:true , Virtual:true }, "YouVisible", 
      new JSIL.MethodSignature($.String, [$.String], []), 
      PhysicalObject_YouVisible$37
    );

    $.Method({Static:false, Public:true , Virtual:true }, "YouVisible", 
      new JSIL.MethodSignature($.String, [$.String, $.Boolean], []), 
      PhysicalObject_YouVisible$38
    );

    $.Field({Static:false, Public:true }, "p", $asm00.TypeRef("Forays.pos")); 
    $.Field({Static:false, Public:false}, "PhysicalObject$name$value", $.String)
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:false, Public:false}, "PhysicalObject$a_name$value", $.String)
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:false, Public:false}, "PhysicalObject$the_name$value", $.String)
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:false, Public:false}, "PhysicalObject$symbol$value", $.Char)
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:false, Public:false}, "PhysicalObject$color$value", $asm00.TypeRef("Forays.Color"))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:false, Public:false}, "PhysicalObject$light_radius$value", $.Int32)
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "PhysicalObject$M$value", $asm00.TypeRef("Forays.Map"))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Property({Static:false, Public:true }, "row", $.Int32);

    $.Property({Static:false, Public:true }, "col", $.Int32);

    $.Property({Static:false, Public:true }, "$name", $.String);

    $.Property({Static:false, Public:true }, "a_name", $.String);

    $.Property({Static:false, Public:true }, "the_name", $.String);

    $.Property({Static:false, Public:true }, "symbol", $.Char);

    $.Property({Static:false, Public:true }, "color", $asm00.TypeRef("Forays.Color"));

    $.Property({Static:false, Public:true }, "light_radius", $.Int32);

    $.Property({Static:true , Public:true }, "M", $asm00.TypeRef("Forays.Map"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function Item$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.System.Collections.Generic.Dictionary$b2.Of($asm00.Forays.ConsumableType, $asm00.Forays.Item))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Forays.ConsumableType)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Forays.Color)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Forays.PhysicalObject)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm01.System.String)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm01.System.Char)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm01.System.Void)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm01.System.Int32)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm01.System.Object)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize(System.Array.Of($asm01.System.Object))) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.Forays.Global)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.Forays.Tile)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.Forays.Map_PosArray$b1.Of($asm00.Forays.Tile))) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm00.Forays.Actor)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.Item))) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm01.System.IDisposable)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.ConsumableType))) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm01.System.Collections.IEnumerator)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm01.System.Enum)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm01.System.Array)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm00.Forays.Extensions)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm00.Forays.Buffer)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm01.System.Boolean)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm00.Forays.Queue)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.Tile))) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm00.Forays.Dict$b2.Of($asm00.Forays.AttrType, $asm01.System.Int32))) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm00.Forays.colorchar)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm00.Forays.DamageType)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm00.Forays.DamageClass)) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm00.Forays.AttrType)) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize($asm00.Forays.Event)) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm00.Forays.Map)) ();
  };
  var $T20 = function () {
    return ($T20 = JSIL.Memoize($asm00.Forays.Map_PosArray$b1.Of($asm00.Forays.Actor))) ();
  };
  var $T21 = function () {
    return ($T21 = JSIL.Memoize($asm00.Forays.TileType)) ();
  };
  var $T22 = function () {
    return ($T22 = JSIL.Memoize($asm01.System.Console)) ();
  };
  var $T23 = function () {
    return ($T23 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.colorchar))) ();
  };
  var $T24 = function () {
    return ($T24 = JSIL.Memoize($asm00.Forays.Screen)) ();
  };
  var $T25 = function () {
    return ($T25 = JSIL.Memoize($asm01.System.Threading.Thread)) ();
  };
  var $T26 = function () {
    return ($T26 = JSIL.Memoize($asm02.System.Collections.Generic.LinkedList$b1_Enumerator.Of($asm00.Forays.Event))) ();
  };
  var $T27 = function () {
    return ($T27 = JSIL.Memoize($asm02.System.Collections.Generic.LinkedList$b1.Of($asm00.Forays.Event))) ();
  };
  var $T28 = function () {
    return ($T28 = JSIL.Memoize($asm00.Forays.EventType)) ();
  };
  var $T29 = function () {
    return ($T29 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.DamageType))) ();
  };
  var $T2A = function () {
    return ($T2A = JSIL.Memoize($asm00.Forays.FeatureType)) ();
  };
  var $T2B = function () {
    return ($T2B = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.FeatureType))) ();
  };
  var $T2C = function () {
    return ($T2C = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.Actor))) ();
  };
  var $T2D = function () {
    return ($T2D = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.pos))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.Dictionary`2", [$asm00.TypeRef("Forays.ConsumableType"), $asm00.TypeRef("Forays.Item")]), []))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Item"), [
        $asm00.TypeRef("Forays.ConsumableType"), $asm01.TypeRef("System.String"), 
        $asm01.TypeRef("System.Char"), $asm00.TypeRef("Forays.Color")
      ]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Item"), [
        $asm00.TypeRef("Forays.Item"), $asm01.TypeRef("System.Int32"), 
        $asm01.TypeRef("System.Int32")
      ]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.ConsumableType")]), []))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Event"), [
        $asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.AttrType")
      ]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.Color"), $asm01.TypeRef("System.Char")], []))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Int32"), [$asm00.TypeRef("Forays.PhysicalObject")], []))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), []))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.colorchar")]), []))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.colorchar")
      ], []))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm01.TypeRef("System.Int32")], []))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.colorchar"), [$asm00.TypeRef("Forays.Color"), $asm01.TypeRef("System.Char")]))) ();
  };
  var $S0C = function () {
    return ($S0C = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Boolean"), [$asm00.TypeRef("Forays.TileType")], []))) ();
  };
  var $S0D = function () {
    return ($S0D = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), [$asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32")], []))) ();
  };
  var $S0E = function () {
    return ($S0E = JSIL.Memoize(new JSIL.MethodSignature($asm00.TypeRef("Forays.Actor"), [$asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")])], []))) ();
  };
  var $S0F = function () {
    return ($S0F = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), $asm01.TypeRef("System.Char"), 
        $asm00.TypeRef("Forays.Color")
      ], []))) ();
  };
  var $S10 = function () {
    return ($S10 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.DamageType")]), []))) ();
  };
  var $S11 = function () {
    return ($S11 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.colorchar"), $asm01.TypeRef("System.Int32")
      ], []))) ();
  };
  var $S12 = function () {
    return ($S12 = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Boolean"), [$asm00.TypeRef("Forays.FeatureType")], []))) ();
  };
  var $S13 = function () {
    return ($S13 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Int32"), 
        $asm01.TypeRef("System.Char"), $asm00.TypeRef("Forays.Color")
      ], []))) ();
  };
  var $S14 = function () {
    return ($S14 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Actor")]), []))) ();
  };
  var $S15 = function () {
    return ($S15 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Event"), [
        $asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), 
        $asm01.TypeRef("System.Int32"), $asm00.TypeRef("Forays.EventType"), 
        $asm00.TypeRef("Forays.AttrType"), $asm01.TypeRef("System.Int32"), 
        $asm01.TypeRef("System.String"), $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.PhysicalObject")])
      ]))) ();
  };
  var $S16 = function () {
    return ($S16 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.pos")]), []))) ();
  };
  var $S17 = function () {
    return ($S17 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.pos")]), $asm00.TypeRef("Forays.colorchar")], []))) ();
  };
  var $S18 = function () {
    return ($S18 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.colorchar"), [$asm01.TypeRef("System.Char"), $asm00.TypeRef("Forays.Color")]))) ();
  };
  var $S19 = function () {
    return ($S19 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Event"), [
        $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.EventType")
      ]))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm01.System.Collections.IEnumerator.MoveNext)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm01.System.Collections.IEnumerator.get_Current)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm01.System.IDisposable.Dispose)) ();
  };

  function Item__ctor$00 () {
    $T03().prototype._ctor.call(this);
  };

  function Item__ctor$01 (type_, name_, symbol_, color_) {
    $T03().prototype._ctor.call(this);
    this.Item$type$value = type_;
    this.Item$quantity$value = 1;
    this.Item$ignored$value = false;
    this.Item$do_not_stack$value = false;
    this.PhysicalObject$$name$value = name_;
    this.PhysicalObject$the_name$value = (JSIL.ConcatString("the ", this.PhysicalObject$$name$value));
    var c = (this.PhysicalObject$$name$value[0]);
    if (!((c.charCodeAt(0) === "A".charCodeAt(0)) || 
        (c.charCodeAt(0) === "E".charCodeAt(0)) || 
        (c.charCodeAt(0) === "I".charCodeAt(0)) || 
        (c.charCodeAt(0) === "O".charCodeAt(0)) || 
        (c.charCodeAt(0) === "U".charCodeAt(0)) || 
        (c.charCodeAt(0) === "a".charCodeAt(0)) || 
        (c.charCodeAt(0) === "e".charCodeAt(0)) || 
        (c.charCodeAt(0) === "i".charCodeAt(0)) || 
        (c.charCodeAt(0) === "o".charCodeAt(0)) || (c.charCodeAt(0) === "u".charCodeAt(0)))) {
      this.PhysicalObject$a_name$value = (JSIL.ConcatString("a ", this.PhysicalObject$$name$value));
    } else {
      this.PhysicalObject$a_name$value = (JSIL.ConcatString("an ", this.PhysicalObject$$name$value));
    }
    this.PhysicalObject$symbol$value = symbol_;
    this.PhysicalObject$color$value = color_;
    this.set_row(-1);
    this.set_col(-1);
    this.PhysicalObject$light_radius$value = 0;
  };

  function Item__ctor$02 (i, r, c) {
    $T03().prototype._ctor.call(this);
    this.Item$type$value = i.Item$type$value;
    this.Item$quantity$value = 1;
    this.Item$ignored$value = false;
    this.Item$do_not_stack$value = false;
    this.PhysicalObject$$name$value = i.PhysicalObject$$name$value;
    this.PhysicalObject$a_name$value = i.PhysicalObject$a_name$value;
    this.PhysicalObject$the_name$value = i.PhysicalObject$the_name$value;
    this.PhysicalObject$symbol$value = i.PhysicalObject$symbol$value;
    this.PhysicalObject$color$value = i.PhysicalObject$color$value;
    this.set_row(r);
    this.set_col(c);
    this.PhysicalObject$light_radius$value = i.PhysicalObject$light_radius$value;
  };

  function Item_AName () {
    var text = ((this.Item$quantity$value).toString());
    var quantity = this.Item$quantity$value;
    if (quantity === 0) {
      return "a buggy item";
    }
    if (quantity !== 1) {
      var text2 = this.PhysicalObject$$name$value;
      var num = (text2.indexOf("~"));
      if (num !== -1) {
        text2 = (JSIL.ConcatString.apply(null, JSIL.Array.New($T08(), [text, " ", text2.substr(0, num), "s", text2.substr(((num + 1) | 0))])));
      }
      return text2;
    }
    text2 = this.PhysicalObject$a_name$value;
    num = (text2.indexOf("~"));
    if (num !== -1) {
      text2 = (JSIL.ConcatString(text2.substr(0, num), text2.substr(((num + 1) | 0))));
    }
    return text2;
  };

  function Item_Create$03 (type, r, c) {
    var $temp00;
    var item = null;
    if ($T0A().BoundsCheck(r, c)) {
      if ($T0C().prototype.get_Item.call($T03().PhysicalObject$M$value.tile, r, c).Tile$inv$value === null) {
        item = $S02().Construct($thisType.proto.get_Item(type), r, c);
        if (item.PhysicalObject$light_radius$value > 0) {
          item.UpdateRadius(0, item.PhysicalObject$light_radius$value);
        }
        $T0C().prototype.get_Item.call($T03().PhysicalObject$M$value.tile, r, c).Tile$inv$value = item;
      } else if ($T0C().prototype.get_Item.call($T03().PhysicalObject$M$value.tile, r, c).Tile$inv$value.Item$type$value === type) {
        ($temp00 = (($T0C().prototype.get_Item.call($T03().PhysicalObject$M$value.tile, r, c).Tile$inv$value.Item$quantity$value + 1) | 0), 
          $T0C().prototype.get_Item.call($T03().PhysicalObject$M$value.tile, r, c).Tile$inv$value.Item$quantity$value = $temp00, 
          $temp00);
        return $T0C().prototype.get_Item.call($T03().PhysicalObject$M$value.tile, r, c).Tile$inv$value;
      }
    } else {
      item = $S02().Construct($thisType.proto.get_Item(type), r, c);
    }
    return item;
  };

  function Item_Create$04 (type, a) {
    var $temp00, $temp01;
    if (a.InventoryCount() < 20) {

      for (var a$0 = a.Actor$inv$value._items, i$0 = 0, l$0 = a.Actor$inv$value._size; i$0 < l$0; ($temp01 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp01)) {
        var current = a$0[i$0];
        if (current.Item$type$value === type) {
          ($temp00 = ((current.Item$quantity$value + 1) | 0), 
            current.Item$quantity$value = $temp00, 
            $temp00);
          return current;
        }
      }
      var item = $S02().Construct($thisType.proto.get_Item(type), -1, -1);
      a.Actor$inv$value.Add(item);
      return item;
    }
    item = $thisType.Create(
      type, 
      a.get_row(), 
      a.get_col()
    );
    return item;
  };

  function Item_Define (type_, name_, symbol_, color_) {
    $thisType.proto.set_Item(type_, $S01().Construct(type_, name_, symbol_, color_));
  };

  function Item_get_B () {
    return $thisType.Item$B$value;
  };

  function Item_get_do_not_stack () {
    return this.Item$do_not_stack$value;
  };

  function Item_get_ignored () {
    return this.Item$ignored$value;
  };

  function Item_get_player () {
    return $thisType.Item$player$value;
  };

  function Item_get_Q () {
    return $thisType.Item$Q$value;
  };

  function Item_get_quantity () {
    return this.Item$quantity$value;
  };

  function Item_get_type () {
    return this.Item$type$value;
  };

  function Item_Name () {
    var text = ((this.Item$quantity$value).toString());
    var quantity = this.Item$quantity$value;
    if (quantity === 0) {
      return "a buggy item";
    }
    if (quantity !== 1) {
      var text2 = this.PhysicalObject$$name$value;
      var num = (text2.indexOf("~"));
      if (num !== -1) {
        text2 = (JSIL.ConcatString.apply(null, JSIL.Array.New($T08(), [text, " ", text2.substr(0, num), "s", text2.substr(((num + 1) | 0))])));
      }
      return text2;
    }
    text2 = this.PhysicalObject$$name$value;
    num = (text2.indexOf("~"));
    if (num !== -1) {
      text2 = (JSIL.ConcatString(text2.substr(0, num), text2.substr(((num + 1) | 0))));
    }
    return text2;
  };

  function Item_Prototype (type) {
    return $thisType.proto.get_Item(type);
  };

  function Item_RandomItem () {
    var disposable = null;
    var list = $S03().Construct();
    var enumerator = (JSIL.GetEnumerator($T12().GetValues($T01().__Type__)));
    try {

      while ($IM00().Call(enumerator, null)) {
        var consumableType = $T01().$Cast($IM01().Call(enumerator, null));
        if ($thisType.Rarity(consumableType) === 1) {
          list.Add(consumableType);
        } else if ($T0A().Roll(1, $thisType.Rarity(consumableType)) === $thisType.Rarity(consumableType)) {
          list.Add(consumableType);
        }
      }
    } finally {
      if ((disposable = $T0F().$As(enumerator)) !== null) {
        $IM02().Call(disposable, null);
      }
    }
    return $T14().Random$b1($T01())(list);
  };

  function Item_Rarity (type) {
    switch (type.valueOf()) {
      case 0: 
      case 1: 
      case 2: 
      case 3: 
      case 4: 
      case 6: 
      case 11: 
      case 12: 
      case 13: 
      case 16: 
        return 2;

    }
    return 1;
  };

  function Item_set_B (value) {
    $thisType.Item$B$value = value;
  };

  function Item_set_do_not_stack (value) {
    this.Item$do_not_stack$value = value;
  };

  function Item_set_ignored (value) {
    this.Item$ignored$value = value;
  };

  function Item_set_player (value) {
    $thisType.Item$player$value = value;
  };

  function Item_set_Q (value) {
    $thisType.Item$Q$value = value;
  };

  function Item_set_quantity (value) {
    this.Item$quantity$value = value;
  };

  function Item_set_type (value) {
    this.Item$type$value = value;
  };

  function Item_TheName () {
    var text = ((this.Item$quantity$value).toString());
    var quantity = this.Item$quantity$value;
    if (quantity === 0) {
      return "the buggy item";
    }
    if (quantity !== 1) {
      var text2 = this.PhysicalObject$$name$value;
      var num = (text2.indexOf("~"));
      if (num !== -1) {
        text2 = (JSIL.ConcatString.apply(null, JSIL.Array.New($T08(), [text, " ", text2.substr(0, num), "s", text2.substr(((num + 1) | 0))])));
      }
      return text2;
    }
    text2 = this.PhysicalObject$the_name$value;
    num = (text2.indexOf("~"));
    if (num !== -1) {
      text2 = (JSIL.ConcatString(text2.substr(0, num), text2.substr(((num + 1) | 0))));
    }
    return text2;
  };

  function Item_Use$05 (user) {
    return this.Use(user, null);
  };

  function Item_Use$06 (user, line) {
    var $temp00, $temp01, $temp02, $temp03, $temp04, $temp05, $temp06, $temp07, $temp08, $temp09, $temp0A, $temp0B, $temp0C;
    var attrs = null, ch = new ($T1A())(), ch2 = new ($T1A())();
    var flag = true;
    switch (this.Item$type$value.valueOf()) {
      case 0: 
        user.TakeDamage($T1B().HEAL, $T1C().NO_TYPE, 50, null);
        $thisType.Item$B$value.Add(("A blue glow surrounds " + user.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T03(), [user]));
        break;

      case 1: 
        var expr_132 = (attrs = user.attrs);
        var num = $T19().prototype.get_Item.call(attrs, $T1D().REGENERATING);
        $T19().prototype.set_Item.call(expr_132, $T1D().REGENERATING, ((num + 1) | 0));
        if (user.PhysicalObject$$name$value == "you") {
          $thisType.Item$B$value.Add("Your blood tingles. ", JSIL.Array.New($T03(), [user]));
        } else {
          $thisType.Item$B$value.Add(JSIL.ConcatString(user.PhysicalObject$the_name$value, " looks energized. "), JSIL.Array.New($T03(), [user]));
        }
        $thisType.Item$Q$value.Add($S04().Construct(user, ((60 * 100) | 0), $T1D().REGENERATING));
        break;

      case 2: 
        if (!user.HasAttr($T1D().IMMUNE_TOXINS)) {
          if (user.HasAttr($T1D().POISONED)) {
            $T19().prototype.set_Item.call(user.attrs, $T1D().POISONED, 0);
            $thisType.Item$B$value.Add(JSIL.ConcatString(user.YouFeel(), " relieved. "), JSIL.Array.New($T03(), [user]));
          }
          user.GainAttr($T1D().IMMUNE_TOXINS, 5100, JSIL.ConcatString(user.YouAre(), " no longer immune to toxins. "), JSIL.Array.New($T03(), [user]));
        } else {
          $thisType.Item$B$value.Add("Nothing happens. ", JSIL.Array.New($T03(), [user]));
        }
        break;

      case 3: 
        user.ResetSpells();
        if (user.PhysicalObject$$name$value == "you") {
          $thisType.Item$B$value.Add("Your mind clears. ", JSIL.Array.New($T03(), 0));
        } else {
          $thisType.Item$B$value.Add(JSIL.ConcatString(user.PhysicalObject$the_name$value, " seems focused. "), JSIL.Array.New($T03(), [user]));
        }
        break;

      case 4: 
        if (user.tile().IsLit()) {
          $thisType.Item$B$value.Add("You would feel at home in the shadows. ", JSIL.Array.New($T03(), 0));
        } else {
          $thisType.Item$B$value.Add("You fade away in the darkness. ", JSIL.Array.New($T03(), 0));
        }
        user.GainAttrRefreshDuration($T1D().SHADOW_CLOAK, (((($T0A().Roll(41) + 29) | 0) * 100) | 0), "You are no longer cloaked. ", JSIL.Array.New($T03(), [user]));
        break;

      case 5: 

      $loop0: 
        for (var i = 0; i < 9999; i = ((i + 1) | 0)) {
          var num3 = (($T0A().Roll(1, 17) - 9) | 0);
          var num4 = (($T0A().Roll(1, 17) - 9) | 0);
          if ((((Math.abs(num3)) + (Math.abs(num4))) | 0) >= 6) {
            num3 = ((num3 + user.get_row()) | 0);
            num4 = ((num4 + user.get_col()) | 0);
            if (!(!$T03().PhysicalObject$M$value.BoundsCheck(num3, num4) || 
                !$T0C().prototype.get_Item.call($T03().PhysicalObject$M$value.tile, num3, num4).Tile$passable$value || ($T20().prototype.get_Item.call($T03().PhysicalObject$M$value.actor, num3, num4) !== null))) {
              $thisType.Item$B$value.Add(
                JSIL.ConcatString(user.You("step"), " through a rip in reality. "), 
                JSIL.Array.New($T03(), [$T0C().prototype.get_Item.call($T03().PhysicalObject$M$value.tile, 
                    user.get_row(), 
                    user.get_col()
                  ), $T0C().prototype.get_Item.call($T03().PhysicalObject$M$value.tile, num3, num4)])
              );
              user.AnimateStorm(
                2, 
                3, 
                4, 
                "*", 
                $T02().DarkMagenta
              );
              user.Move(num3, num4);
              $T03().PhysicalObject$M$value.Draw();
              user.AnimateStorm(
                2, 
                3, 
                4, 
                "*", 
                $T02().DarkMagenta
              );
              break $loop0;
            }
          }
        }
        break;

      case 6: 

      $loop1: 
        for (var j = 0; j < 9999; j = ((j + 1) | 0)) {
          var num5 = $T0A().Roll(1, 20);
          var num6 = $T0A().Roll(1, 64);
          if (!((((Math.abs(((num5 - user.get_row()) | 0))) < 10) && 
                ((Math.abs(((num6 - user.get_col()) | 0))) < 10) && 
                (((Math.abs(((num5 - user.get_row()) | 0))) < 7) || 
                  ((Math.abs(((num6 - user.get_col()) | 0))) < 7))) || 
              !$T03().PhysicalObject$M$value.BoundsCheck(num5, num6) || 
              !$T0C().prototype.get_Item.call($T03().PhysicalObject$M$value.tile, num5, num6).Tile$passable$value || ($T20().prototype.get_Item.call($T03().PhysicalObject$M$value.actor, num5, num6) !== null))) {
            $thisType.Item$B$value.Add(
              JSIL.ConcatString(user.You("jump"), " through a rift in reality. "), 
              JSIL.Array.New($T03(), [$T0C().prototype.get_Item.call($T03().PhysicalObject$M$value.tile, 
                  user.get_row(), 
                  user.get_col()
                ), $T0C().prototype.get_Item.call($T03().PhysicalObject$M$value.tile, num5, num6)])
            );
            user.AnimateStorm(
              3, 
              3, 
              10, 
              "*", 
              $T02().Green
            );
            user.Move(num5, num6);
            $T03().PhysicalObject$M$value.Draw();
            user.AnimateStorm(
              3, 
              3, 
              10, 
              "*", 
              $T02().Green
            );
            break $loop1;
          }
        }
        break;

      case 7: 
        if (user.DirectionOfOnlyUnblocked($T21().WALL, true) === 0) {
          $thisType.Item$B$value.Add("This item requires an adjacent wall. ", JSIL.Array.New($T03(), 0));
          flag = false;
        } else {
          var direction = user.GetDirection(true, false);
          var tile = user.TileInDirection(direction);
          if (tile !== null) {
            if (tile.Tile$type$value.valueOf() === 0) {
              $T22().set_CursorVisible(false);
              $S05().Call($T1A().prototype, "_ctor", null, ch, $T02().Cyan, "!");
              switch ($S06().CallVirtual("DirectionOf", null, user, tile)) {
                case 2: 
                case 8: 
                  ch.c = "|";
                  break;

                case 4: 
                case 6: 
                  ch.c = "-";
                  break;

              }
              var list = $S07().Construct();
              var list2 = $S08().Construct();

            $loop2: 
              while (!tile.Tile$passable$value) {
                if (!((tile.get_row() !== 0) && 
                    (tile.get_row() !== 21) && 
                    (tile.get_col() !== 0) && (tile.get_col() !== 65))) {
                  break $loop2;
                }
                list.Add(tile);
                list2.Add($T24().MapChar(
                    tile.get_row(), 
                    tile.get_col()
                  ).MemberwiseClone());
                $S09().CallStatic($T24(), "WriteMapChar", null, 
                  tile.get_row(), 
                  tile.get_col(), 
                  ch.MemberwiseClone()
                );
                $S0A().CallStatic($T25(), "Sleep", null, 35);
                tile = tile.TileInDirection(direction);
              }
              if (!(!tile.Tile$passable$value || ($T20().prototype.get_Item.call($T03().PhysicalObject$M$value.actor, 
                      tile.get_row(), 
                      tile.get_col()
                    ) !== null))) {
                if ($T0C().prototype.get_Item.call($T03().PhysicalObject$M$value.tile, 
                    user.get_row(), 
                    user.get_col()
                  ).Tile$inv$value !== null) {
                  $S09().CallStatic($T24(), "WriteMapChar", null, 
                    user.get_row(), 
                    user.get_col(), 
                    $S0B().Construct(user.tile().Tile$inv$value.PhysicalObject$color$value, user.tile().Tile$inv$value.PhysicalObject$symbol$value)
                  );
                } else {
                  $S09().CallStatic($T24(), "WriteMapChar", null, 
                    user.get_row(), 
                    user.get_col(), 
                    $S0B().Construct(user.tile().PhysicalObject$color$value, user.tile().PhysicalObject$symbol$value)
                  );
                }
                $S09().CallStatic($T24(), "WriteMapChar", null, 
                  tile.get_row(), 
                  tile.get_col(), 
                  $S0B().Construct(user.PhysicalObject$color$value, user.PhysicalObject$symbol$value)
                );
                var num7 = 0;

                for (var a$0 = list._items, i$0 = 0, l$0 = list._size; i$0 < l$0; ($temp01 = i$0, 
                    i$0 = ((i$0 + 1) | 0), 
                    $temp01)) {
                  var current = a$0[i$0];
                  $S09().CallStatic($T24(), "WriteMapChar", null, 
                    current.get_row(), 
                    current.get_col(), 
                    list2.get_Item(($temp02 = num7, 
                        num7 = ((num7 + 1) | 0), 
                        $temp02)).MemberwiseClone()
                  );
                  $S0A().CallStatic($T25(), "Sleep", null, 35);
                }
                $thisType.Item$B$value.Add(JSIL.ConcatString(user.You("travel"), " through the passage. "), JSIL.Array.New($T03(), [user, tile]));
                user.Move(
                  tile.get_row(), 
                  tile.get_col()
                );
              } else {
                var num8 = 0;

                for (var a$1 = list._items, i$1 = 0, l$1 = list._size; i$1 < l$1; ($temp03 = i$1, 
                    i$1 = ((i$1 + 1) | 0), 
                    $temp03)) {
                  var current2 = a$1[i$1];
                  $S09().CallStatic($T24(), "WriteMapChar", null, 
                    current2.get_row(), 
                    current2.get_col(), 
                    list2.get_Item(($temp04 = num8, 
                        num8 = ((num8 + 1) | 0), 
                        $temp04)).MemberwiseClone()
                  );
                  $S0A().CallStatic($T25(), "Sleep", null, 35);
                }
                $thisType.Item$B$value.Add("The passage is blocked. ", JSIL.Array.New($T03(), [user]));
              }
            } else {
              $thisType.Item$B$value.Add("This item requires an adjacent wall. ", JSIL.Array.New($T03(), 0));
              flag = false;
            }
          } else {
            flag = false;
          }
        }
        break;

      case 8: 
        $thisType.Item$B$value.Add("Time stops for a moment. ", JSIL.Array.New($T03(), 0));
        ($temp00 = (($thisType.Item$Q$value.Queue$turn$value - 200) | 0), 
          $thisType.Item$Q$value.Queue$turn$value = $temp00, 
          $temp00);
        break;

      case 9: 
        $thisType.Item$B$value.Add(("The scroll reveals " + user.Your() + " foes. "), JSIL.Array.New($T03(), [user]));
        var num9 = (($T0A().Roll(20) + 30) | 0);
        user.GainAttrRefreshDuration($T1D().DETECTING_MONSTERS, ((num9 * 100) | 0), JSIL.ConcatString(user.Your(), " foes are no longer revealed. "), JSIL.Array.New($T03(), [user]));
        break;

      case 10: 
        $thisType.Item$B$value.Add("The scroll reveals the layout of this level. ", JSIL.Array.New($T03(), 0));
        var event = null;
        var enumerator3 = $T27().prototype.GetEnumerator.call($thisType.Item$Q$value.list).MemberwiseClone();
        try {

        $loop5: 
          while (enumerator3.MoveNext()) {
            var current3 = enumerator3.get_Current();
            if (!(current3.Event$dead$value || (current3.Event$type$value !== $T28().CHECK_FOR_HIDDEN))) {
              event = current3;
              break $loop5;
            }
          }
        } finally {
          $IM02().Call(enumerator3, null);
        }

        for (var a$2 = $T03().PhysicalObject$M$value.AllTiles()._items, i$2 = 0, l$2 = $T03().PhysicalObject$M$value.AllTiles()._size; i$2 < l$2; ($temp05 = i$2, 
            i$2 = ((i$2 + 1) | 0), 
            $temp05)) {
          var current4 = a$2[i$2];
          if (current4.Tile$type$value !== $T21().FLOOR) {
            var flag2 = false;

            for (var a$3 = current4.TilesAtDistance(1)._items, i$3 = 0, l$3 = current4.TilesAtDistance(1)._size; i$3 < l$3; ($temp06 = i$3, 
                i$3 = ((i$3 + 1) | 0), 
                $temp06)) {
              var current5 = a$3[i$3];
              if (current5.Tile$type$value.valueOf() !== 0) {
                flag2 = true;
              }
            }
            if (flag2) {
              current4.Tile$seen$value = true;
              if (!((!current4.IsTrapOrVent() && 
                    !$S0C().CallVirtual("Is", null, current4, $T21().HIDDEN_DOOR)) || (event === null))) {
                event.area.Remove(current4);
              }
              if (current4.IsTrapOrVent()) {
                current4.PhysicalObject$$name$value = $T0B().Prototype(current4.Tile$type$value).PhysicalObject$$name$value;
                current4.PhysicalObject$a_name$value = $T0B().Prototype(current4.Tile$type$value).PhysicalObject$a_name$value;
                current4.PhysicalObject$the_name$value = $T0B().Prototype(current4.Tile$type$value).PhysicalObject$the_name$value;
                current4.PhysicalObject$symbol$value = $T0B().Prototype(current4.Tile$type$value).PhysicalObject$symbol$value;
                current4.PhysicalObject$color$value = $T0B().Prototype(current4.Tile$type$value).PhysicalObject$color$value;
              }
              if ($S0C().CallVirtual("Is", null, current4, $T21().HIDDEN_DOOR)) {
                current4.Toggle(null);
              }
            }
          }
        }
        break;

      case 11: 
        if (!$T03().PhysicalObject$M$value.get_wiz_lite()) {
          $T03().PhysicalObject$M$value.set_wiz_lite(true);
          $T03().PhysicalObject$M$value.Map$wiz_dark$value = false;
          $thisType.Item$B$value.Add("The air itself seems to shine. ", JSIL.Array.New($T03(), 0));
        } else {
          $thisType.Item$B$value.Add("Nothing happens. ", JSIL.Array.New($T03(), 0));
        }
        break;

      case 12: 
        if (!$T03().PhysicalObject$M$value.Map$wiz_dark$value) {
          $T03().PhysicalObject$M$value.Map$wiz_dark$value = true;
          $T03().PhysicalObject$M$value.set_wiz_lite(false);
          $thisType.Item$B$value.Add("The air itself grows dark. ", JSIL.Array.New($T03(), 0));
        } else {
          $thisType.Item$B$value.Add("Nothing happens. ", JSIL.Array.New($T03(), 0));
        }
        break;

      case 13: 
        if (line === null) {
          line = $S0D().CallVirtual("GetTarget", null, user, 12, 1);
        }
        if (line !== null) {
          var tile2 = $T14().Last$b1($T0B())(line);
          var tile3 = $T14().LastBeforeSolidTile(line);
          var actor = $S0E().CallVirtual("FirstActorInLine", null, user, line);
          $thisType.Item$B$value.Add(JSIL.ConcatString(user.You("throw"), " the prismatic orb. "), JSIL.Array.New($T03(), [user]));
          if (actor !== null) {
            tile2 = actor.tile();
            $thisType.Item$B$value.Add(("It shatters on " + actor.PhysicalObject$the_name$value + "! "), JSIL.Array.New($T03(), [actor]));
          } else {
            $thisType.Item$B$value.Add(("It shatters on " + tile2.PhysicalObject$the_name$value + "! "), JSIL.Array.New($T03(), [tile2]));
          }
          $S0F().CallVirtual("AnimateProjectile", null, user, $T14().ToFirstObstruction(line), "*", $T02().RandomPrismatic);
          var list3 = $S10().Construct();
          list3.Add($T1B().FIRE);
          list3.Add($T1B().COLD);
          list3.Add($T1B().ELECTRIC);

          while (list3.get_Count() > 0) {
            var damageType = $T14().Random$b1($T1B())(list3);
            $S05().Call($T1A().prototype, "_ctor", null, ch2, $T02().Black, "*");
            switch (damageType.valueOf()) {
              case 1: 
                ch2.color = $T02().RandomFire;
                break;

              case 2: 
                ch2.color = $T02().RandomIce;
                break;

              case 3: 
                ch2.color = $T02().RandomLightning;
                break;

            }
            $thisType.Item$B$value.DisplayNow();
            $S11().CallStatic($T24(), "AnimateExplosion", null, tile2, 1, ch2.MemberwiseClone(), 100);
            if (tile2.Tile$passable$value) {

              for (var a$4 = tile2.TilesWithinDistance(1)._items, i$4 = 0, l$4 = tile2.TilesWithinDistance(1)._size; i$4 < l$4; ($temp07 = i$4, 
                  i$4 = ((i$4 + 1) | 0), 
                  $temp07)) {
                var current6 = a$4[i$4];
                if (current6.actor() !== null) {
                  current6.actor().TakeDamage(
                    damageType, 
                    $T1C().MAGICAL, 
                    $T0A().Roll(2, 6), 
                    user, 
                    "a prismatic orb"
                  );
                }
                if (!((damageType !== $T1B().FIRE) || !$S12().CallVirtual("Is", null, current6, $T2A().TROLL_CORPSE))) {
                  current6.features.Remove($T2A().TROLL_CORPSE);
                  $thisType.Item$B$value.Add("The troll corpse burns to ashes! ", JSIL.Array.New($T03(), [current6]));
                }
                if (!((damageType !== $T1B().FIRE) || !$S12().CallVirtual("Is", null, current6, $T2A().TROLL_SEER_CORPSE))) {
                  current6.features.Remove($T2A().TROLL_SEER_CORPSE);
                  $thisType.Item$B$value.Add("The troll seer corpse burns to ashes! ", JSIL.Array.New($T03(), [current6]));
                }
              }
            } else {

              for (var a$5 = tile2.TilesWithinDistance(1)._items, i$5 = 0, l$5 = tile2.TilesWithinDistance(1)._size; i$5 < l$5; ($temp08 = i$5, 
                  i$5 = ((i$5 + 1) | 0), 
                  $temp08)) {
                var current7 = a$5[i$5];
                if (!((tile3 === null) || !tile3.HasBresenhamLine(
                      current7.get_row(), 
                      current7.get_col()
                    ))) {
                  if (current7.actor() !== null) {
                    current7.actor().TakeDamage(
                      damageType, 
                      $T1C().MAGICAL, 
                      $T0A().Roll(2, 6), 
                      user, 
                      "a prismatic orb"
                    );
                  }
                  if (!((damageType !== $T1B().FIRE) || !$S12().CallVirtual("Is", null, current7, $T2A().TROLL_CORPSE))) {
                    current7.features.Remove($T2A().TROLL_CORPSE);
                    $thisType.Item$B$value.Add("The troll corpse burns to ashes! ", JSIL.Array.New($T03(), [current7]));
                  }
                  if (!((damageType !== $T1B().FIRE) || !$S12().CallVirtual("Is", null, current7, $T2A().TROLL_SEER_CORPSE))) {
                    current7.features.Remove($T2A().TROLL_SEER_CORPSE);
                    $thisType.Item$B$value.Add("The troll seer corpse burns to ashes! ", JSIL.Array.New($T03(), [current7]));
                  }
                }
              }
            }
            list3.Remove(damageType);
          }
        } else {
          flag = false;
        }
        break;

      case 14: 
        if (line === null) {
          line = $S0D().CallVirtual("GetTarget", null, user, 12, 3);
        }
        if (line !== null) {
          var tile4 = $T14().Last$b1($T0B())(line);
          var tile5 = $T14().LastBeforeSolidTile(line);
          var actor2 = $S0E().CallVirtual("FirstActorInLine", null, user, line);
          $thisType.Item$B$value.Add(JSIL.ConcatString(user.You("throw"), " the freezing orb. "), JSIL.Array.New($T03(), [user]));
          if (actor2 !== null) {
            tile4 = actor2.tile();
            $thisType.Item$B$value.Add(("It shatters on " + actor2.PhysicalObject$the_name$value + "! "), JSIL.Array.New($T03(), [actor2]));
          } else {
            $thisType.Item$B$value.Add(("It shatters on " + tile4.PhysicalObject$the_name$value + "! "), JSIL.Array.New($T03(), [tile4]));
          }
          $S0F().CallVirtual("AnimateProjectile", null, user, $T14().ToFirstObstruction(line), "*", $T02().RandomIce);
          $S13().CallVirtual("AnimateExplosion", null, user, tile4, 3, "*", $T02().Cyan);
          var list4 = $S14().Construct();
          if (tile4.Tile$passable$value) {

            for (var a$6 = tile4.ActorsWithinDistance(3)._items, i$6 = 0, l$6 = tile4.ActorsWithinDistance(3)._size; i$6 < l$6; ($temp09 = i$6, 
                i$6 = ((i$6 + 1) | 0), 
                $temp09)) {
              var current8 = a$6[i$6];
              if (tile4.HasLOE(current8)) {
                list4.Add(current8);
              }
            }
          } else {

            for (var a$7 = tile4.ActorsWithinDistance(3)._items, i$7 = 0, l$7 = tile4.ActorsWithinDistance(3)._size; i$7 < l$7; ($temp0A = i$7, 
                i$7 = ((i$7 + 1) | 0), 
                $temp0A)) {
              var current9 = a$7[i$7];
              if (!((tile5 === null) || !tile5.HasLOE(current9))) {
                list4.Add(current9);
              }
            }
          }

          while (list4.get_Count() > 0) {
            var actor3 = $T14().RemoveRandom$b1($T0D())(list4);
            $thisType.Item$B$value.Add(JSIL.ConcatString(actor3.YouAre(), " encased in ice. "), JSIL.Array.New($T03(), [actor3]));
            $T19().prototype.set_Item.call(actor3.attrs, $T1D().FROZEN, 25);
          }
        } else {
          flag = false;
        }
        break;

      case 15: 
        if (line === null) {
          line = $S0D().CallVirtual("GetTarget", null, user, 12, -1);
        }
        if (line !== null) {
          var tile6 = $T14().Last$b1($T0B())(line);
          var tile7 = $T14().LastBeforeSolidTile(line);
          var actor4 = $S0E().CallVirtual("FirstActorInLine", null, user, line);
          $thisType.Item$B$value.Add(JSIL.ConcatString(user.You("throw"), " the orb of quickfire. "), JSIL.Array.New($T03(), [user]));
          if (actor4 !== null) {
            tile6 = actor4.tile();
            $thisType.Item$B$value.Add(("It shatters on " + actor4.PhysicalObject$the_name$value + "! "), JSIL.Array.New($T03(), [actor4]));
          } else {
            $thisType.Item$B$value.Add(("It shatters on " + tile6.PhysicalObject$the_name$value + "! "), JSIL.Array.New($T03(), [tile6]));
          }
          $S0F().CallVirtual("AnimateProjectile", null, user, $T14().ToFirstObstruction(line), "*", $T02().RandomFire);
          if (tile6.Tile$passable$value) {
            tile6.features.Add($T2A().QUICKFIRE);
            $thisType.Item$Q$value.Add($S15().Construct(tile6, ($S07().Construct()).__Initialize__([[tile6]]), 100, $T28().QUICKFIRE, $T1D().NO_ATTR, 3, "", JSIL.Array.New($T03(), 0)));
          } else {
            tile7.features.Add($T2A().QUICKFIRE);
            $thisType.Item$Q$value.Add($S15().Construct(tile7, ($S07().Construct()).__Initialize__([[tile7]]), 100, $T28().QUICKFIRE, $T1D().NO_ATTR, 3, "", JSIL.Array.New($T03(), 0)));
          }
        } else {
          flag = false;
        }
        break;

      case 16: 
        if (line === null) {
          line = $S0D().CallVirtual("GetTarget", null, user, 12, -3);
        }
        if (line !== null) {
          var tile8 = $T14().Last$b1($T0B())(line);
          var tile9 = $T14().LastBeforeSolidTile(line);
          var actor5 = $S0E().CallVirtual("FirstActorInLine", null, user, line);
          $thisType.Item$B$value.Add(JSIL.ConcatString(user.You("throw"), " the orb of fog. "), JSIL.Array.New($T03(), [user]));
          if (actor5 !== null) {
            tile8 = actor5.tile();
            $thisType.Item$B$value.Add(("It shatters on " + actor5.PhysicalObject$the_name$value + "! "), JSIL.Array.New($T03(), [actor5]));
          } else {
            $thisType.Item$B$value.Add(("It shatters on " + tile8.PhysicalObject$the_name$value + "! "), JSIL.Array.New($T03(), [tile8]));
          }
          $S0F().CallVirtual("AnimateProjectile", null, user, $T14().ToFirstObstruction(line), "*", $T02().Gray);
          var list5 = $S07().Construct();
          var list6 = $S16().Construct();
          if (tile8.Tile$passable$value) {

            for (var a$8 = tile8.TilesWithinDistance(3)._items, i$8 = 0, l$8 = tile8.TilesWithinDistance(3)._size; i$8 < l$8; ($temp0B = i$8, 
                i$8 = ((i$8 + 1) | 0), 
                $temp0B)) {
              var current10 = a$8[i$8];
              if (!(!current10.Tile$passable$value || !tile8.HasLOE(current10))) {
                current10.AddOpaqueFeature($T2A().FOG);
                list5.Add(current10);
                list6.Add(current10.p.MemberwiseClone());
              }
            }
          } else {

            for (var a$9 = tile8.TilesWithinDistance(3)._items, i$9 = 0, l$9 = tile8.TilesWithinDistance(3)._size; i$9 < l$9; ($temp0C = i$9, 
                i$9 = ((i$9 + 1) | 0), 
                $temp0C)) {
              var current11 = a$9[i$9];
              if (!((tile9 === null) || 
                  !current11.Tile$passable$value || !tile9.HasLOE(current11))) {
                current11.AddOpaqueFeature($T2A().FOG);
                list5.Add(current11);
                list6.Add(current11.p.MemberwiseClone());
              }
            }
          }
          $S17().CallStatic($T24(), "AnimateMapCells", null, list6, $S18().Construct("*", $T02().Gray));
          $thisType.Item$Q$value.Add($S19().Construct(list5, 400, $T28().FOG));
        } else {
          flag = false;
        }
        break;

      case 17: 
        user.TakeDamage($T1B().HEAL, $T1C().NO_TYPE, 1, null);
        if (user.HasAttr($T1D().MAGICAL_BLOOD)) {
          user.recover_time = (($thisType.Item$Q$value.Queue$turn$value + 200) | 0);
        } else {
          user.recover_time = (($thisType.Item$Q$value.Queue$turn$value + 500) | 0);
        }
        if (user.PhysicalObject$$name$value == "you") {
          $thisType.Item$B$value.Add("You apply a bandage. ", JSIL.Array.New($T03(), 0));
        } else {
          $thisType.Item$B$value.Add(JSIL.ConcatString(user.PhysicalObject$the_name$value, " applies a bandage. "), JSIL.Array.New($T03(), [user]));
        }
        break;

      default: 
        flag = false;
        break;

    }
    if (flag) {
      if (this.Item$quantity$value > 1) {
        this.Item$quantity$value = ((this.Item$quantity$value - 1) | 0);
      } else if (user !== null) {
        user.Actor$inv$value.Remove(this);
      }
    }
    return flag;
  };

  JSIL.MakeClass($asm00.TypeRef("Forays.PhysicalObject"), "Forays.Item", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], []), 
      Item__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.ConsumableType"), $.String, 
          $.Char, $asm00.TypeRef("Forays.Color")
        ], []), 
      Item__ctor$01
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Type, $.Int32, 
          $.Int32
        ], []), 
      Item__ctor$02
    );

    $.Method({Static:false, Public:true }, "AName", 
      new JSIL.MethodSignature($.String, [], []), 
      Item_AName
    );

    $.Method({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [
          $asm00.TypeRef("Forays.ConsumableType"), $.Int32, 
          $.Int32
        ], []), 
      Item_Create$03
    );

    $.Method({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [$asm00.TypeRef("Forays.ConsumableType"), $asm00.TypeRef("Forays.Actor")], []), 
      Item_Create$04
    );

    $.Method({Static:true , Public:false}, "Define", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.ConsumableType"), $.String, 
          $.Char, $asm00.TypeRef("Forays.Color")
        ], []), 
      Item_Define
    );

    $.Method({Static:true , Public:true }, "get_B", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Buffer"), [], []), 
      Item_get_B
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_do_not_stack", 
      new JSIL.MethodSignature($.Boolean, [], []), 
      Item_get_do_not_stack
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_ignored", 
      new JSIL.MethodSignature($.Boolean, [], []), 
      Item_get_ignored
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:true }, "get_player", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Actor"), [], []), 
      Item_get_player
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:true }, "get_Q", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Queue"), [], []), 
      Item_get_Q
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_quantity", 
      new JSIL.MethodSignature($.Int32, [], []), 
      Item_get_quantity
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_type", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.ConsumableType"), [], []), 
      Item_get_type
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "Name", 
      new JSIL.MethodSignature($.String, [], []), 
      Item_Name
    );

    $.Method({Static:true , Public:true }, "Prototype", 
      new JSIL.MethodSignature($.Type, [$asm00.TypeRef("Forays.ConsumableType")], []), 
      Item_Prototype
    );

    $.Method({Static:true , Public:true }, "RandomItem", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.ConsumableType"), [], []), 
      Item_RandomItem
    );

    $.Method({Static:true , Public:true }, "Rarity", 
      new JSIL.MethodSignature($.Int32, [$asm00.TypeRef("Forays.ConsumableType")], []), 
      Item_Rarity
    );

    $.Method({Static:true , Public:true }, "set_B", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.Buffer")], []), 
      Item_set_B
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_do_not_stack", 
      new JSIL.MethodSignature(null, [$.Boolean], []), 
      Item_set_do_not_stack
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ignored", 
      new JSIL.MethodSignature(null, [$.Boolean], []), 
      Item_set_ignored
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:true }, "set_player", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.Actor")], []), 
      Item_set_player
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:true }, "set_Q", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.Queue")], []), 
      Item_set_Q
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_quantity", 
      new JSIL.MethodSignature(null, [$.Int32], []), 
      Item_set_quantity
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_type", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.ConsumableType")], []), 
      Item_set_type
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "TheName", 
      new JSIL.MethodSignature($.String, [], []), 
      Item_TheName
    );

    $.Method({Static:false, Public:true }, "Use", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Actor")], []), 
      Item_Use$05
    );

    $.Method({Static:false, Public:true }, "Use", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Actor"), $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")])], []), 
      Item_Use$06
    );

    $.Field({Static:true , Public:false}, "proto", $asm01.TypeRef("System.Collections.Generic.Dictionary`2", [$asm00.TypeRef("Forays.ConsumableType"), $.Type])); 
    $.Field({Static:false, Public:false}, "Item$type$value", $asm00.TypeRef("Forays.ConsumableType"))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:false, Public:false}, "Item$quantity$value", $.Int32)
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:false, Public:false}, "Item$ignored$value", $.Boolean)
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:false, Public:false}, "Item$do_not_stack$value", $.Boolean)
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "Item$Q$value", $asm00.TypeRef("Forays.Queue"))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "Item$B$value", $asm00.TypeRef("Forays.Buffer"))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "Item$player$value", $asm00.TypeRef("Forays.Actor"))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    function Item__cctor () {
      $thisType.proto = $S00().Construct();
      $thisType.proto.set_Item($T01().HEALING, $S01().Construct($T01().HEALING, "potion~ of healing", "!", $T02().DarkMagenta));
      $thisType.proto.set_Item($T01().REGENERATION, $S01().Construct($T01().REGENERATION, "potion~ of regeneration", "!", $T02().Green));
      $thisType.proto.set_Item($T01().TOXIN_IMMUNITY, $S01().Construct($T01().TOXIN_IMMUNITY, "potion~ of toxin immunity", "!", $T02().Red));
      $thisType.proto.set_Item($T01().CLARITY, $S01().Construct($T01().CLARITY, "potion~ of clarity", "!", $T02().Gray));
      $thisType.proto.set_Item($T01().BLINKING, $S01().Construct($T01().BLINKING, "rune~ of blinking", "&", $T02().Cyan));
      $thisType.proto.set_Item($T01().TELEPORTATION, $S01().Construct($T01().TELEPORTATION, "rune~ of teleportation", "&", $T02().DarkRed));
      $thisType.proto.set_Item($T01().PASSAGE, $S01().Construct($T01().PASSAGE, "rune~ of passage", "&", $T02().Blue));
      $thisType.proto.set_Item($T01().DETECT_MONSTERS, $S01().Construct($T01().DETECT_MONSTERS, "scroll~ of detect monsters", "?", $T02().White));
      $thisType.proto.set_Item($T01().MAGIC_MAP, $S01().Construct($T01().MAGIC_MAP, "scroll~ of magic map", "?", $T02().Gray));
      $thisType.proto.set_Item($T01().SUNLIGHT, $S01().Construct($T01().SUNLIGHT, "orb~ of sunlight", "*", $T02().White));
      $thisType.proto.set_Item($T01().DARKNESS, $S01().Construct($T01().DARKNESS, "orb~ of darkness", "*", $T02().DarkGray));
      $thisType.proto.set_Item($T01().PRISMATIC, $S01().Construct($T01().PRISMATIC, "prismatic orb~", "*", $T02().RandomPrismatic));
      $thisType.proto.set_Item($T01().FREEZING, $S01().Construct($T01().FREEZING, "orb~ of freezing", "*", $T02().RandomIce));
      $thisType.proto.set_Item($T01().BANDAGE, $S01().Construct($T01().BANDAGE, "bandage~", "{", $T02().White));
      $thisType.Define($T01().QUICKFIRE, "orb~ of quickfire", "*", $T02().RandomFire);
      $thisType.Define($T01().CLOAKING, "potion~ of cloaking", "!", $T02().DarkBlue);
      $thisType.Define($T01().FOG, "orb~ of fog", "*", $T02().Gray);
      $thisType.Define($T01().TIME, "rune~ of time", "&", $T02().Green);
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      new JSIL.MethodSignature(null, [], []), 
      Item__cctor
    );

    $.Property({Static:false, Public:true }, "type", $asm00.TypeRef("Forays.ConsumableType"));

    $.Property({Static:false, Public:true }, "quantity", $.Int32);

    $.Property({Static:false, Public:true }, "ignored", $.Boolean);

    $.Property({Static:false, Public:true }, "do_not_stack", $.Boolean);

    $.Property({Static:true , Public:true }, "Q", $asm00.TypeRef("Forays.Queue"));

    $.Property({Static:true , Public:true }, "B", $asm00.TypeRef("Forays.Buffer"));

    $.Property({Static:true , Public:true }, "player", $asm00.TypeRef("Forays.Actor"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function Weapon$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Forays.WeaponType)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Forays.Damage)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Forays.DamageType)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Forays.DamageClass)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Forays.cstr)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Forays.Color)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Damage"), [
        $asm01.TypeRef("System.Int32"), $asm00.TypeRef("Forays.DamageType"), 
        $asm00.TypeRef("Forays.DamageClass"), $asm00.TypeRef("Forays.Actor")
      ]))) ();
  };

  function Weapon_BaseWeapon (type) {
    switch (type.valueOf()) {
      case 0: 
      case 5: 
        return $T00().SWORD;

      case 1: 
      case 6: 
        return $T00().MACE;

      case 2: 
      case 7: 
        return $T00().DAGGER;

      case 3: 
      case 8: 
        return $T00().STAFF;

      case 4: 
      case 9: 
        return $T00().BOW;

      default: 
        return $T00().NO_WEAPON;

    }
  };

  function Weapon_Damage (type) {
    switch (type.valueOf()) {
      case 0: 
      case 5: 
        return $S00().Construct(3, $T02().SLASHING, $T03().PHYSICAL, null);

      case 1: 
      case 6: 
        return $S00().Construct(3, $T02().BASHING, $T03().PHYSICAL, null);

      case 2: 
      case 7: 
        return $S00().Construct(2, $T02().PIERCING, $T03().PHYSICAL, null);

      case 3: 
      case 4: 
      case 8: 
      case 9: 
        return $S00().Construct(1, $T02().BASHING, $T03().PHYSICAL, null);

      default: 
        return $S00().Construct(0, $T02().NONE, $T03().NO_TYPE, null);

    }
  };

  function Weapon_Description (type) {
    switch (type.valueOf()) {
      case 0: 
        return "Sword -- A powerful 3d6 damage slashing weapon.";

      case 1: 
        return "Mace -- A powerful 3d6 damage bashing weapon.";

      case 2: 
        return "Dagger -- 2d6 damage. Extra chance for critical hits.";

      case 3: 
        return "Staff -- 1d6 damage. Grants a small bonus to defense.";

      case 4: 
        return "Bow -- 3d6 damage at range. Less accurate than melee.";

      case 5: 
        return "Flamebrand -- Deals extra fire damage.";

      case 6: 
        return "Mace of force -- Chance to knock back or stun.";

      case 7: 
        return "Venomous dagger -- Chance to poison any foe it hits.";

      case 8: 
        return "Staff of magic -- Grants a bonus to magic skill.";

      case 9: 
        return "Holy longbow - Deals extra damage to undead and demons.";

      default: 
        return "no weapon";

    }
  };

  function Weapon_EquipmentScreenName (type) {
    var result = new ($T04())();
    result.bgcolor = $T05().Black;
    result.color = $T05().Gray;
    switch (type.valueOf()) {
      case 0: 
        result.s = "Sword";
        break;

      case 1: 
        result.s = "Mace";
        break;

      case 2: 
        result.s = "Dagger";
        break;

      case 3: 
        result.s = "Staff";
        break;

      case 4: 
        result.s = "Bow";
        break;

      case 5: 
        result.s = "Flamebrand";
        result.color = $T05().Red;
        break;

      case 6: 
        result.s = "Mace of force";
        result.color = $T05().Cyan;
        break;

      case 7: 
        result.s = "Venomous dagger";
        result.color = $T05().Green;
        break;

      case 8: 
        result.s = "Staff of magic";
        result.color = $T05().Magenta;
        break;

      case 9: 
        result.s = "Holy longbow";
        result.color = $T05().Yellow;
        break;

      default: 
        result.s = "no weapon";
        break;

    }
    return result;
  };

  function Weapon_Name (type) {
    switch (type.valueOf()) {
      case 0: 
        return "sword";

      case 1: 
        return "mace";

      case 2: 
        return "dagger";

      case 3: 
        return "staff";

      case 4: 
        return "bow";

      case 5: 
        return "flamebrand";

      case 6: 
        return "mace of force";

      case 7: 
        return "venomous dagger";

      case 8: 
        return "staff of magic";

      case 9: 
        return "holy longbow";

      default: 
        return "no weapon";

    }
  };

  function Weapon_StatsName (type) {
    var result = new ($T04())();
    result.bgcolor = $T05().Black;
    result.color = $T05().Gray;
    switch (type.valueOf()) {
      case 0: 
        result.s = "Sword";
        break;

      case 1: 
        result.s = "Mace";
        break;

      case 2: 
        result.s = "Dagger";
        break;

      case 3: 
        result.s = "Staff";
        break;

      case 4: 
        result.s = "Bow";
        break;

      case 5: 
        result.s = "+Sword+";
        result.color = $T05().Red;
        break;

      case 6: 
        result.s = "+Mace+";
        result.color = $T05().Cyan;
        break;

      case 7: 
        result.s = "+Dagger+";
        result.color = $T05().Green;
        break;

      case 8: 
        result.s = "+Staff+";
        result.color = $T05().Magenta;
        break;

      case 9: 
        result.s = "+Bow+";
        result.color = $T05().Yellow;
        break;

      default: 
        result.s = "no weapon";
        break;

    }
    return result;
  };

  JSIL.MakeStaticClass("Forays.Weapon", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:true }, "BaseWeapon", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.WeaponType"), [$asm00.TypeRef("Forays.WeaponType")], []), 
      Weapon_BaseWeapon
    );

    $.Method({Static:true , Public:true }, "Damage", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Damage"), [$asm00.TypeRef("Forays.WeaponType")], []), 
      Weapon_Damage
    );

    $.Method({Static:true , Public:true }, "Description", 
      new JSIL.MethodSignature($.String, [$asm00.TypeRef("Forays.WeaponType")], []), 
      Weapon_Description
    );

    $.Method({Static:true , Public:true }, "EquipmentScreenName", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.cstr"), [$asm00.TypeRef("Forays.WeaponType")], []), 
      Weapon_EquipmentScreenName
    );

    $.Method({Static:true , Public:true }, "Name", 
      new JSIL.MethodSignature($.String, [$asm00.TypeRef("Forays.WeaponType")], []), 
      Weapon_Name
    );

    $.Method({Static:true , Public:true }, "StatsName", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.cstr"), [$asm00.TypeRef("Forays.WeaponType")], []), 
      Weapon_StatsName
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function Armor$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Forays.ArmorType)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Forays.cstr)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Forays.Color)) ();
  };

  function Armor_AddedFailRate (type) {
    switch (type.valueOf()) {
      case 1: 
        return 5;

      case 2: 
      case 5: 
        return 15;

    }
    return 0;
  };

  function Armor_BaseArmor (type) {
    switch (type.valueOf()) {
      case 0: 
      case 3: 
        return $T00().LEATHER;

      case 1: 
      case 4: 
        return $T00().CHAINMAIL;

      case 2: 
      case 5: 
        return $T00().FULL_PLATE;

      default: 
        return $T00().NO_ARMOR;

    }
  };

  function Armor_Description (type) {
    switch (type.valueOf()) {
      case 0: 
        return "Leather -- Light armor. Provides some basic protection.";

      case 1: 
        return "Chainmail -- Good protection. Noisy and hard to cast in.";

      case 2: 
        return "Full plate -- The thickest, noisiest, and bulkiest armor.";

      case 3: 
        return "Elven leather -- Grants a bonus to stealth skill.";

      case 4: 
        return "Chainmail of arcana -- Bonus to magic. No cast penalty.";

      case 5: 
        return "Full plate of resistance -- Grants resistance to elements.";

      default: 
        return "no armor";

    }
  };

  function Armor_EquipmentScreenName (type) {
    var result = new ($T01())();
    result.bgcolor = $T02().Black;
    result.color = $T02().Gray;
    switch (type.valueOf()) {
      case 0: 
        result.s = "Leather";
        break;

      case 1: 
        result.s = "Chainmail";
        break;

      case 2: 
        result.s = "Full plate";
        break;

      case 3: 
        result.s = "Elven leather";
        result.color = $T02().DarkCyan;
        break;

      case 4: 
        result.s = "Chainmail of arcana";
        result.color = $T02().Magenta;
        break;

      case 5: 
        result.s = "Full plate of resistance";
        result.color = $T02().Blue;
        break;

      default: 
        result.s = "no armor";
        break;

    }
    return result;
  };

  function Armor_Name (type) {
    switch (type.valueOf()) {
      case 0: 
        return "leather";

      case 1: 
        return "chainmail";

      case 2: 
        return "full plate";

      case 3: 
        return "elven leather";

      case 4: 
        return "chainmail of arcana";

      case 5: 
        return "full plate of resistance";

      default: 
        return "no armor";

    }
  };

  function Armor_Protection (type) {
    switch (type.valueOf()) {
      case 0: 
      case 3: 
        return 2;

      case 1: 
      case 4: 
        return 4;

      case 2: 
      case 5: 
        return 6;

      default: 
        return 0;

    }
  };

  function Armor_StatsName (type) {
    var result = new ($T01())();
    result.bgcolor = $T02().Black;
    result.color = $T02().Gray;
    switch (type.valueOf()) {
      case 0: 
        result.s = "Leather";
        break;

      case 1: 
        result.s = "Chainmail";
        break;

      case 2: 
        result.s = "Full plate";
        break;

      case 3: 
        result.s = "+Leather+";
        result.color = $T02().DarkCyan;
        break;

      case 4: 
        result.s = "+Chainmail+";
        result.color = $T02().Magenta;
        break;

      case 5: 
        result.s = "+Full plate+";
        result.color = $T02().Blue;
        break;

      default: 
        result.s = "no armor";
        break;

    }
    return result;
  };

  function Armor_StealthPenalty (type) {
    switch (type.valueOf()) {
      case 1: 
      case 4: 
        return 1;

      case 2: 
      case 5: 
        return 3;

    }
    return 0;
  };

  JSIL.MakeStaticClass("Forays.Armor", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:true }, "AddedFailRate", 
      new JSIL.MethodSignature($.Int32, [$asm00.TypeRef("Forays.ArmorType")], []), 
      Armor_AddedFailRate
    );

    $.Method({Static:true , Public:true }, "BaseArmor", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.ArmorType"), [$asm00.TypeRef("Forays.ArmorType")], []), 
      Armor_BaseArmor
    );

    $.Method({Static:true , Public:true }, "Description", 
      new JSIL.MethodSignature($.String, [$asm00.TypeRef("Forays.ArmorType")], []), 
      Armor_Description
    );

    $.Method({Static:true , Public:true }, "EquipmentScreenName", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.cstr"), [$asm00.TypeRef("Forays.ArmorType")], []), 
      Armor_EquipmentScreenName
    );

    $.Method({Static:true , Public:true }, "Name", 
      new JSIL.MethodSignature($.String, [$asm00.TypeRef("Forays.ArmorType")], []), 
      Armor_Name
    );

    $.Method({Static:true , Public:true }, "Protection", 
      new JSIL.MethodSignature($.Int32, [$asm00.TypeRef("Forays.ArmorType")], []), 
      Armor_Protection
    );

    $.Method({Static:true , Public:true }, "StatsName", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.cstr"), [$asm00.TypeRef("Forays.ArmorType")], []), 
      Armor_StatsName
    );

    $.Method({Static:true , Public:true }, "StealthPenalty", 
      new JSIL.MethodSignature($.Int32, [$asm00.TypeRef("Forays.ArmorType")], []), 
      Armor_StealthPenalty
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function MagicItem$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Forays.MagicItemType)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm01.System.String)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Forays.cstr)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Forays.Color)) ();
  };

  function MagicItem_Description (type) {
    switch (type.valueOf()) {
      case 0: 
        return JSIL.Array.New($T01(), ["Pendant of life -- Prevents a lethal attack from", "finishing you, but only works once."]);

      case 1: 
        return JSIL.Array.New($T01(), ["Ring of resistance -- Grants resistance to cold,", "fire, and electricity."]);

      case 2: 
        return JSIL.Array.New($T01(), ["Ring of protection -- Grants a small bonus to", "defense."]);

      case 3: 
        return JSIL.Array.New($T01(), ["Cloak of disappearance -- When your health falls,", "gives you a chance to escape to safety."]);

      default: 
        return JSIL.Array.New($T01(), ["no", "item"]);

    }
  };

  function MagicItem_Name (type) {
    switch (type.valueOf()) {
      case 0: 
        return "pendant of life";

      case 1: 
        return "ring of resistance";

      case 2: 
        return "ring of protection";

      case 3: 
        return "cloak of disappearance";

      default: 
        return "no item";

    }
  };

  function MagicItem_StatsName (type) {
    var result = new ($T02())();
    result.bgcolor = $T03().Black;
    result.color = $T03().DarkGreen;
    switch (type.valueOf()) {
      case 0: 
        result.s = "Pendant";
        break;

      case 1: 
        result.s = "Ring (res)";
        break;

      case 2: 
        result.s = "Ring (prot)";
        break;

      case 3: 
        result.s = "Cloak";
        break;

      default: 
        result.s = "No item";
        break;

    }
    return result;
  };

  JSIL.MakeStaticClass("Forays.MagicItem", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:true }, "Description", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.String]), [$asm00.TypeRef("Forays.MagicItemType")], []), 
      MagicItem_Description
    );

    $.Method({Static:true , Public:true }, "Name", 
      new JSIL.MethodSignature($.String, [$asm00.TypeRef("Forays.MagicItemType")], []), 
      MagicItem_Name
    );

    $.Method({Static:true , Public:true }, "StatsName", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.cstr"), [$asm00.TypeRef("Forays.MagicItemType")], []), 
      MagicItem_StatsName
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.MakeEnum(
  "Forays.LevelType", true, {
    Standard: 0, 
    Cave: 1, 
    Ruined: 2, 
    Hive: 3, 
    Mine: 4, 
    Fortress: 5, 
    Extravagant: 6
  }, false
);

(function Map$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.pos))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm01.System.Int32)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Forays.pos)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Forays.Game)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Forays.Map_PosArray$b1.Of($asm00.Forays.Tile))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Forays.Map_PosArray$b1.Of($asm00.Forays.Actor))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Forays.Tile)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Forays.TileType)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.Forays.PhysicalObject)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.Actor))) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.Forays.Actor)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.Tile))) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.Forays.LevelType)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm01.System.IDisposable)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.LevelType))) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm01.System.Collections.IEnumerator)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm01.System.Enum)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm01.System.Array)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm00.Forays.Extensions)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm00.Forays.Screen)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm01.System.Console)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm00.Forays.AttrType)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm00.Forays.colorchar)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm00.Forays.Color)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm01.System.Boolean)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm02.System.Collections.Generic.LinkedList$b1_Enumerator.Of($asm00.Forays.Event))) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm02.System.Collections.Generic.LinkedList$b1.Of($asm00.Forays.Event))) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm00.Forays.Event)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm00.Forays.EventType)) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm00.Forays.ActorType)) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.Item))) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm02.System.Collections.Generic.LinkedListNode$b1.Of($asm00.Forays.Event))) ();
  };
  var $T20 = function () {
    return ($T20 = JSIL.Memoize($asm00.DungeonGen.StandardDungeon)) ();
  };
  var $T21 = function () {
    return ($T21 = JSIL.Memoize(System.Array.Of($asm01.System.Char))) ();
  };
  var $T22 = function () {
    return ($T22 = JSIL.Memoize($asm00.Forays.Global)) ();
  };
  var $T23 = function () {
    return ($T23 = JSIL.Memoize($asm01.System.Char)) ();
  };
  var $T24 = function () {
    return ($T24 = JSIL.Memoize($asm00.Forays.Queue)) ();
  };
  var $T25 = function () {
    return ($T25 = JSIL.Memoize($asm00.Forays.Dict$b2.Of($asm00.Forays.AttrType, $asm01.System.Int32))) ();
  };
  var $T26 = function () {
    return ($T26 = JSIL.Memoize($asm01.System.Math)) ();
  };
  var $T27 = function () {
    return ($T27 = JSIL.Memoize($asm00.Forays.Dict$b2.Of($asm00.Forays.ActorType, $asm01.System.Int32))) ();
  };
  var $T28 = function () {
    return ($T28 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm01.System.Int32))) ();
  };
  var $T29 = function () {
    return ($T29 = JSIL.Memoize($asm01.System.UInt16)) ();
  };
  var $T2A = function () {
    return ($T2A = JSIL.Memoize(System.Array.Of($asm01.System.Char))) ();
  };
  var $T2B = function () {
    return ($T2B = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.FeatureType))) ();
  };
  var $T2C = function () {
    return ($T2C = JSIL.Memoize($asm00.Forays.FeatureType)) ();
  };
  var $T2D = function () {
    return ($T2D = JSIL.Memoize(System.Array.Of($asm01.System.Boolean))) ();
  };
  var $T2E = function () {
    return ($T2E = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.TileType))) ();
  };
  var $T2F = function () {
    return ($T2F = JSIL.Memoize($asm00.Forays.Buffer)) ();
  };
  var $T30 = function () {
    return ($T30 = JSIL.Memoize($asm01.System.Void)) ();
  };
  var $T31 = function () {
    return ($T31 = JSIL.Memoize($asm01.System.String)) ();
  };
  var $T32 = function () {
    return ($T32 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm01.System.String))) ();
  };
  var $T33 = function () {
    return ($T33 = JSIL.Memoize($asm01.System.IO.TextReader)) ();
  };
  var $T34 = function () {
    return ($T34 = JSIL.Memoize($asm01.System.IO.StreamReader)) ();
  };
  var $T35 = function () {
    return ($T35 = JSIL.Memoize($asm00.Forays.cstr)) ();
  };
  var $T36 = function () {
    return ($T36 = JSIL.Memoize($asm00.Forays.ConsumableType)) ();
  };
  var $T37 = function () {
    return ($T37 = JSIL.Memoize($asm00.Forays.Item)) ();
  };
  var $T38 = function () {
    return ($T38 = JSIL.Memoize($asm00.Forays.FeatType)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.pos")]), []))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Boolean"), [$asm00.TypeRef("Forays.TileType")], []))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Boolean"), [$asm00.TypeRef("Forays.TileType")], []))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Actor")]), []))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), []))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.LevelType")]), []))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.colorchar"), [$asm00.TypeRef("Forays.Color"), $asm01.TypeRef("System.Char")]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.colorchar")
      ], []))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.ConstructorSignature($asm02.TypeRef("System.Collections.Generic.LinkedList`1", [$asm00.TypeRef("Forays.Event")]), []))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Event"), [
        $asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.EventType"), $asm01.TypeRef("System.Int32")
      ]))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Event"), [
        $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.EventType")
      ]))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Event"), [
        $asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), 
        $asm01.TypeRef("System.Int32"), $asm00.TypeRef("Forays.EventType"), 
        $asm00.TypeRef("Forays.AttrType"), $asm01.TypeRef("System.Int32"), 
        $asm01.TypeRef("System.String"), $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.PhysicalObject")])
      ]))) ();
  };
  var $S0C = function () {
    return ($S0C = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Dict`2", [$asm00.TypeRef("Forays.ActorType"), $asm01.TypeRef("System.Int32")]), []))) ();
  };
  var $S0D = function () {
    return ($S0D = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm01.TypeRef("System.Int32")]), []))) ();
  };
  var $S0E = function () {
    return ($S0E = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Event"), [
        $asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.EventType")
      ]))) ();
  };
  var $S0F = function () {
    return ($S0F = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.TileType")]), []))) ();
  };
  var $S10 = function () {
    return ($S10 = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Int32"), [$asm00.TypeRef("Forays.PhysicalObject")], []))) ();
  };
  var $S11 = function () {
    return ($S11 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Event"), [
        $asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), 
        $asm01.TypeRef("System.Int32"), $asm00.TypeRef("Forays.EventType")
      ]))) ();
  };
  var $S12 = function () {
    return ($S12 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Event"), [$asm01.TypeRef("System.Int32"), $asm00.TypeRef("Forays.EventType")]))) ();
  };
  var $S13 = function () {
    return ($S13 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm01.TypeRef("System.String")]), []))) ();
  };
  var $S14 = function () {
    return ($S14 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.IO.StreamReader"), [$asm01.TypeRef("System.String")]))) ();
  };
  var $S15 = function () {
    return ($S15 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.cstr")
      ], []))) ();
  };
  var $S16 = function () {
    return ($S16 = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Boolean"), [$asm00.TypeRef("Forays.FeatureType")], []))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm01.System.Collections.IEnumerator.MoveNext)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm01.System.Collections.IEnumerator.get_Current)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm01.System.IDisposable.Dispose)) ();
  };

  function Map__ctor (g) {
    this.tile = new ($T04())(22, 66);
    this.actor = new ($T05())(22, 66);
    this.generated_this_level = null;
    this.Map$current_level$value = 0;
    $thisType.Map$player$value = g.player;
    $thisType.Map$Q$value = g.Q;
    $thisType.Map$B$value = g.B;
  };

  function Map_$lGenerateBossLevel$gm__3 (t) {
    return ((t.Tile$type$value === $T07().FLOOR) && !$S01().CallVirtual("IsAdjacentTo", null, t, $T07().FIRE_GEYSER));
  };

  function Map_$lGenerateBossLevel$gm__4 (t) {
    return (!(!t.Tile$passable$value || 
        $S02().CallVirtual("Is", null, t, $T07().CHASM)) && (t.actor() === null));
  };

  function Map_$lGenerateLevel$gm__2 (t) {
    return (t.Tile$type$value === $T07().STATUE);
  };

  function Map_$lSpawnMob$gm__1 (t) {
    return (t.Tile$type$value === $T07().STATUE);
  };

  function Map_AllActors () {
    var list = $S03().Construct();

    for (var i = 0; i < 22; i = ((i + 1) | 0)) {

      for (var j = 0; j < 66; j = ((j + 1) | 0)) {
        if ($T05().prototype.get_Item.call(this.actor, i, j) !== null) {
          list.Add($T05().prototype.get_Item.call(this.actor, i, j));
        }
      }
    }
    return list;
  };

  function Map_AllPositions () {
    return $thisType.allpositions;
  };

  function Map_AllTiles () {
    var list = $S04().Construct();

    for (var i = 0; i < 22; i = ((i + 1) | 0)) {

      for (var j = 0; j < 66; j = ((j + 1) | 0)) {
        list.Add($T04().prototype.get_Item.call(this.tile, i, j));
      }
    }
    return list;
  };

  function Map_BoundsCheck (r, c) {
    return !((r < 0) || 
      (r >= 22) || 
      (c < 0) || (c >= 66));
  };

  function Map_ChooseNextLevelType (current) {
    var disposable = null;
    var list = $S05().Construct();
    var enumerator = (JSIL.GetEnumerator($T10().GetValues($T0C().__Type__)));
    try {

      while ($IM00().Call(enumerator, null)) {
        var levelType = $T0C().$Cast($IM01().Call(enumerator, null));
        if (levelType !== current) {
          list.Add(levelType);
        }
      }
    } finally {
      if ((disposable = $T0D().$As(enumerator)) !== null) {
        $IM02().Call(disposable, null);
      }
    }
    return $T12().Random$b1($T0C())(list);
  };

  function Map_Draw () {
    if (($T13().MapChar(0, 0).c).charCodeAt(0) === "-".charCodeAt(0)) {
      this.RedrawWithStrings();
    } else {
      $T14().set_CursorVisible(false);
      if (!(!$thisType.Map$player$value.HasAttr($T15().ON_FIRE) && !$thisType.Map$player$value.HasAttr($T15().CATCHING_FIRE))) {
        $T13().DrawMapBorder($S06().Construct($T17().RandomFire, "&"));

        for (var i = 1; i < 21; i = ((i + 1) | 0)) {

          for (var j = 1; j < 65; j = ((j + 1) | 0)) {
            $S07().CallStatic($T13(), "WriteMapChar", null, i, j, this.VisibleColorChar(i, j).MemberwiseClone());
          }
        }
      } else {

        for (var k = 0; k < 22; k = ((k + 1) | 0)) {

          for (var l = 0; l < 66; l = ((l + 1) | 0)) {
            $S07().CallStatic($T13(), "WriteMapChar", null, k, l, this.VisibleColorChar(k, l).MemberwiseClone());
          }
        }
      }
      $T13().ResetColors();
    }
  };

  function Map_GenerateBossLevel (boss_already_on_level) {
    var $temp00, $temp01, $temp02, $temp03, $temp04;
    var $s00 = new JSIL.MethodSignature($asm02.TypeRef("System.Collections.Generic.LinkedListNode`1", [$asm00.TypeRef("Forays.Event")]), [$asm00.TypeRef("Forays.Event")], []);
    this.Map$current_level$value = 21;
    var num = -1;
    var enumerator = $T1A().prototype.GetEnumerator.call($thisType.Map$Q$value.list).MemberwiseClone();
    try {

    $loop0: 
      while (enumerator.MoveNext()) {
        var current = enumerator.get_Current();
        if (current.Event$type$value === $T1C().BOSS_ARRIVE) {
          num = current.Event$value$value;
          break $loop0;
        }
      }
    } finally {
      $IM02().Call(enumerator, null);
    }

  $loop1: 
    for (var a$0 = this.AllActors()._items, i$0 = 0, l$0 = this.AllActors()._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current2 = a$0[i$0];
      if (current2.Actor$type$value === $T1D().FIRE_DRAKE) {
        num = current2.Actor$curhp$value;
        break $loop1;
      }
    }

    for (var i = 0; i < 22; i = ((i + 1) | 0)) {

      for (var j = 0; j < 66; j = ((j + 1) | 0)) {
        if ($T05().prototype.get_Item.call(this.actor, i, j) !== null) {
          if ($T05().prototype.get_Item.call(this.actor, i, j) !== $thisType.Map$player$value) {
            $T05().prototype.get_Item.call(this.actor, i, j).Actor$inv$value.Clear();
            $T05().prototype.get_Item.call(this.actor, i, j).Actor$target$value = null;
            if ($T05().prototype.get_Item.call(this.actor, i, j).group !== null) {
              $T05().prototype.get_Item.call(this.actor, i, j).group.Clear();
              $T05().prototype.get_Item.call(this.actor, i, j).group = null;
            }
          }
          $T05().prototype.set_Item.call(this.actor, i, j, null);
        }
        if ($T04().prototype.get_Item.call(this.tile, i, j) !== null) {
          $T04().prototype.get_Item.call(this.tile, i, j).Tile$inv$value = null;
        }
        $T04().prototype.set_Item.call(this.tile, i, j, null);
      }
    }
    this.set_wiz_lite(false);
    this.Map$wiz_dark$value = false;
    var linkedList = $S08().Construct();

    for (var linkedListNode = $thisType.Map$Q$value.list.get_First(); linkedListNode !== null; linkedListNode = linkedListNode.get_Next()) {
      if (!((linkedListNode.get_Value().Event$target$value !== $T1B().Event$player$value) && 
          (linkedListNode.get_Value().Event$type$value !== $T1C().CEILING_COLLAPSE) && (linkedListNode.get_Value().Event$type$value !== $T1C().FLOOR_COLLAPSE))) {
        if (linkedListNode.get_Value().Event$type$value === $T1C().FLOOR_COLLAPSE) {
          linkedListNode.Value.Event$target$value = null;
        }
        $s00.Call($T1A().prototype, "AddLast", null, linkedList, linkedListNode.get_Value());
      }
    }
    $thisType.Map$Q$value.list = linkedList;
    $T0A().tiebreakers = ($S03().Construct()).__Initialize__([[$thisType.Map$player$value]]);
    var standardDungeon = new ($T20())();
    var array = standardDungeon.GenerateCave();
    var num2 = $T22().Roll(1, 3);

    for (var k = 0; k < num2; k = ((k + 1) | 0)) {
      var num3 = 0;
      var flag = false;

      while (!flag && (num3 < 100)) {
        var num4 = $T22().Roll(20);
        var num5 = $T22().Roll(64);
        if (array.Get(num4, num5).charCodeAt(0) === ".".charCodeAt(0)) {
          array.Set(num4, num5, "^");
          flag = true;
        }
        num3 = ((num3 + 1) | 0);
      }
    }
    var list = $S04().Construct();

    for (var l = 0; l < 22; l = ((l + 1) | 0)) {

      for (var m = 0; m < 66; m = ((m + 1) | 0)) {
        var c = array.Get(l, m);
        if (c.charCodeAt(0) !== "#".charCodeAt(0)) {
          if (!((c.charCodeAt(0) === "$".charCodeAt(0)) || (c.charCodeAt(0) === ".".charCodeAt(0)))) {
            if (c.charCodeAt(0) !== ":".charCodeAt(0)) {
              if (c.charCodeAt(0) !== "P".charCodeAt(0)) {
                if (c.charCodeAt(0) !== "^".charCodeAt(0)) {
                  if (c.charCodeAt(0) !== "~".charCodeAt(0)) {
                    $T06().Create($T07().FLOOR, l, m);
                  } else {
                    $T06().Create($T07().FIRE_GEYSER, l, m);
                  }
                } else {
                  $T06().Create($T07().FIRE_GEYSER, l, m);
                  $T04().prototype.get_Item.call(this.tile, l, m).PhysicalObject$$name$value = "floor";
                  $T04().prototype.get_Item.call(this.tile, l, m).PhysicalObject$the_name$value = "the floor";
                  $T04().prototype.get_Item.call(this.tile, l, m).PhysicalObject$a_name$value = "a floor";
                  $T04().prototype.get_Item.call(this.tile, l, m).PhysicalObject$symbol$value = ".";
                  $T04().prototype.get_Item.call(this.tile, l, m).PhysicalObject$color$value = $T17().White;
                  list.Add($T04().prototype.get_Item.call(this.tile, l, m));
                  var num6 = (($T22().Roll(21) + 4) | 0);
                  var num7 = (($T22().Roll(10) - 1) | 0);
                  var num9 = ((((((((num6 * num7) | 0) / 10) | 0) * 2) | 0) + 1) | 0);
                  var num10 = ((num6 - ((((num6 * num7) | 0) / 10) | 0)) | 0);
                  if (num10 < 5) {
                    var num11 = ((5 - num10) | 0);
                    num9 = ((num9 - num11) | 0);
                    num10 = 5;
                  }
                  var num12 = ((((((num10 - 1) | 0) + $T22().Roll(num9)) | 0) * 100) | 0);
                  $thisType.Map$Q$value.Add($S09().Construct($T04().prototype.get_Item.call(this.tile, l, m), ((num12 + 200) | 0), $T1C().FIRE_GEYSER, ((((num6 * 10) | 0) + num7) | 0)));
                  $thisType.Map$Q$value.Add($S09().Construct($T04().prototype.get_Item.call(this.tile, l, m), num12, $T1C().FIRE_GEYSER_ERUPTION, 2));
                }
              } else {
                $T06().Create($T07().HEALING_POOL, l, m);
              }
            } else {
              $T06().Create($T07().RUBBLE, l, m);
            }
          } else {
            $T06().Create($T07().FLOOR, l, m);
          }
        } else {
          $T06().Create($T07().WALL, l, m);
        }
        $T04().prototype.get_Item.call(this.tile, l, m).Tile$solid_rock$value = true;
      }
    }
    $thisType.Map$player$value.ResetForNewLevel();

    for (var a$1 = this.AllTiles()._items, i$1 = 0, l$1 = this.AllTiles()._size; i$1 < l$1; ($temp01 = i$1, 
        i$1 = ((i$1 + 1) | 0), 
        $temp01)) {
      var current3 = a$1[i$1];
      if (current3.PhysicalObject$light_radius$value > 0) {
        current3.UpdateRadius(0, current3.PhysicalObject$light_radius$value);
      }
    }
    var list2 = $T12().Where$b1($T06())(
      this.AllTiles(), 
      function Map_$lGenerateBossLevel$gm__3 (t) {
        return ((t.Tile$type$value === $T07().FLOOR) && 
          !$S01().CallVirtual("IsAdjacentTo", null, t, $T07().FIRE_GEYSER));
      }
    );
    if (list2.get_Count() > 0) {
      var tile = $T12().Random$b1($T06())(list2);
      var light_radius = $thisType.Map$player$value.PhysicalObject$light_radius$value;
      var num13 = $T25().prototype.get_Item.call($thisType.Map$player$value.attrs, $T15().ON_FIRE);
      $thisType.Map$player$value.PhysicalObject$light_radius$value = 0;
      $T25().prototype.set_Item.call($thisType.Map$player$value.attrs, $T15().ON_FIRE, 0);
      $thisType.Map$player$value.Move(
        tile.get_row(), 
        tile.get_col()
      );
      $thisType.Map$player$value.UpdateRadius(0, $T26().Max(light_radius, num13), true);
      $thisType.Map$player$value.PhysicalObject$light_radius$value = light_radius;
      $T25().prototype.set_Item.call($thisType.Map$player$value.attrs, $T15().ON_FIRE, num13);
    } else {

      for (var flag2 = false; !flag2; ) {
        var num14 = $T22().Roll(20);
        var num15 = $T22().Roll(64);
        var flag3 = true;

        for (var a$2 = $T04().prototype.get_Item.call(this.tile, num14, num15).TilesWithinDistance(1)._items, i$2 = 0, l$2 = $T04().prototype.get_Item.call(this.tile, num14, num15).TilesWithinDistance(1)._size; i$2 < l$2; ($temp02 = i$2, 
            i$2 = ((i$2 + 1) | 0), 
            $temp02)) {
          var current4 = a$2[i$2];
          if (current4.IsTrap()) {
            flag3 = false;
          }
        }
        if (!(!flag3 || 
            !$T04().prototype.get_Item.call(this.tile, num14, num15).Tile$passable$value || ($T05().prototype.get_Item.call(this.actor, num14, num15) !== null))) {
          var light_radius2 = $thisType.Map$player$value.PhysicalObject$light_radius$value;
          $thisType.Map$player$value.PhysicalObject$light_radius$value = 0;
          $thisType.Map$player$value.Move(num14, num15);
          $thisType.Map$player$value.UpdateRadius(0, light_radius2, true);
          flag2 = true;
        }
      }
    }

    for (var a$3 = this.AllTiles()._items, i$3 = 0, l$3 = this.AllTiles()._size; i$3 < l$3; ($temp03 = i$3, 
        i$3 = ((i$3 + 1) | 0), 
        $temp03)) {
      var current5 = a$3[i$3];
      if (current5.Tile$type$value.valueOf() !== 0) {

        for (var a$4 = current5.TilesAtDistance(1)._items, i$4 = 0, l$4 = current5.TilesAtDistance(1)._size; i$4 < l$4; ($temp04 = i$4, 
            i$4 = ((i$4 + 1) | 0), 
            $temp04)) {
          var current6 = a$4[i$4];
          current6.Tile$solid_rock$value = false;
        }
      }
    }
    if (list.get_Count() > 0) {
      var event = $S0A().Construct(list, 100, $T1C().CHECK_FOR_HIDDEN);
      event.Event$tiebreaker$value = 0;
      $thisType.Map$Q$value.Add(event);
    }
    if (boss_already_on_level) {
      var tile2 = $T12().Random$b1($T06())($T12().Where$b1($T06())(
          this.AllTiles(), 
          function Map_$lGenerateBossLevel$gm__4 (t) {
            return (!(!t.Tile$passable$value || 
                $S02().CallVirtual("Is", null, t, $T07().CHASM)) && 
              (t.actor() === null));
          }
        ));
      var actor = $T0A().Create(
        $T1D().FIRE_DRAKE, 
        tile2.get_row(), 
        tile2.get_col(), 
        true, 
        false
      );
      if (num > 0) {
        actor.Actor$curhp$value = num;
      }
    } else {
      var event2 = $S0B().Construct(null, null, (((($T22().Roll(20) + 50) | 0) * 100) | 0), $T1C().BOSS_ARRIVE, $T15().COOLDOWN_1, num, "", JSIL.Array.New($T08(), 0));
      event2.Event$tiebreaker$value = 0;
      $thisType.Map$Q$value.Add(event2);
    }
  };

  function Map_GenerateLevel () {
    var $temp00, $temp01, $temp02, $temp03, $temp04, $temp05, $temp06, $temp07, $temp08, $temp09, $temp0A, $temp0B, $temp0C, $temp0D, $temp0E, $temp0F, $temp10, $temp11, $temp12, $temp13, $temp14, $temp15, $temp16;
    var item = new ($T02())(), pos5 = new ($T02())(), pos7 = new ($T02())(), pos9 = new ($T02())(), pos10 = new ($T02())(), attrs = null, attrs2 = null;
    if (this.Map$current_level$value < 20) {
      this.Map$current_level$value = ((this.Map$current_level$value + 1) | 0);
    }

    for (var i = 0; i < 22; i = ((i + 1) | 0)) {

      for (var j = 0; j < 66; j = ((j + 1) | 0)) {
        if ($T05().prototype.get_Item.call(this.actor, i, j) !== null) {
          if ($T05().prototype.get_Item.call(this.actor, i, j) !== $thisType.Map$player$value) {
            $T05().prototype.get_Item.call(this.actor, i, j).Actor$inv$value.Clear();
            $T05().prototype.get_Item.call(this.actor, i, j).Actor$target$value = null;
            if ($T05().prototype.get_Item.call(this.actor, i, j).group !== null) {
              $T05().prototype.get_Item.call(this.actor, i, j).group.Clear();
              $T05().prototype.get_Item.call(this.actor, i, j).group = null;
            }
          }
          $T05().prototype.set_Item.call(this.actor, i, j, null);
        }
        if ($T04().prototype.get_Item.call(this.tile, i, j) !== null) {
          $T04().prototype.get_Item.call(this.tile, i, j).Tile$inv$value = null;
        }
        $T04().prototype.set_Item.call(this.tile, i, j, null);
      }
    }
    this.set_wiz_lite(false);
    this.Map$wiz_dark$value = false;
    this.generated_this_level = $S0C().Construct();
    $thisType.Map$Q$value.ResetForNewLevel();
    $T0A().tiebreakers = ($S03().Construct()).__Initialize__([[$thisType.Map$player$value]]);
    var standardDungeon = new ($T20())();
    var array = null;
    switch ((this.level_types.get_Item(((this.Map$current_level$value - 1) | 0))).valueOf()) {
      case 0: 
        array = standardDungeon.GenerateStandard();
        break;

      case 1: 
        array = standardDungeon.GenerateCave();
        break;

      case 2: 
        array = standardDungeon.GenerateRuined();
        break;

      case 3: 
        array = standardDungeon.GenerateHive();
        break;

      case 4: 
        array = standardDungeon.GenerateMine();
        break;

      case 5: 
        array = standardDungeon.GenerateFortress();
        break;

      case 6: 
        array = standardDungeon.GenerateExtravagant();
        break;

    }
    var list = $S00().Construct();

    for (var k = 0; k < 22; k = ((k + 1) | 0)) {

      for (var l = 0; l < 66; l = ((l + 1) | 0)) {
        if (array.Get(k, l).charCodeAt(0) === "$".charCodeAt(0)) {
          list.Add(new ($T02())(k, l));
        }
      }
    }
    var m = 0;
    if (((this.Map$current_level$value % 2) | 0) === 1) {

      for (var list2 = ($S0D().Construct()).__Initialize__([[0], [1], [2], [3], [4]]); list2.get_Count() > 0; ) {
        m = 0;
        var flag = false;

      $loop5: 
        while (!flag) {
          var num = (($T22().Roll(18) + 1) | 0);
          var num2 = (($T22().Roll(62) + 1) | 0);
          if (!((list.get_Count() <= 0) || ((list2.get_Count() <= 1) && 
                (m <= 1000)))) {
            var pos = $T12().Random$b1($T02())(list).MemberwiseClone();
            num = pos.row;
            num2 = pos.col;
            array.Set(num, num2, ".");
          }
          $T02().prototype._ctor.call(item, num, num2);
          if (list2.get_Count() > 1) {
            if (array.Get(num, num2).charCodeAt(0) === ".".charCodeAt(0)) {
              if (m > 1000) {
                var flag2 = true;

                for (var a$0 = item.PositionsWithinDistance(4)._items, i$0 = 0, l$0 = item.PositionsWithinDistance(4)._size; i$0 < l$0; ($temp00 = i$0, 
                    i$0 = ((i$0 + 1) | 0), 
                    $temp00)) {
                  var current = a$0[i$0].MemberwiseClone();
                  var c = array.Get(current.row, current.col);
                  if (!((c.charCodeAt(0) !== "a".charCodeAt(0)) && 
                      (c.charCodeAt(0) !== "b".charCodeAt(0)) && 
                      (c.charCodeAt(0) !== "c".charCodeAt(0)) && 
                      (c.charCodeAt(0) !== "d".charCodeAt(0)) && (c.charCodeAt(0) !== "e".charCodeAt(0)))) {
                    flag2 = false;
                  }
                }
                if (flag2) {
                  var list3 = $S00().Construct();

                  for (var a$1 = item.PositionsAtDistance(2)._items, i$1 = 0, l$1 = item.PositionsAtDistance(2)._size; i$1 < l$1; ($temp01 = i$1, 
                      i$1 = ((i$1 + 1) | 0), 
                      $temp01)) {
                    var current2 = a$1[i$1].MemberwiseClone();
                    if (array.Get(current2.row, current2.col).charCodeAt(0) === ".".charCodeAt(0)) {
                      list3.Add(current2.MemberwiseClone());
                    }
                  }
                  if (list3.get_Count() > 0) {
                    array.Set(num, num2, String.fromCharCode((($T29().$Cast($T12().RemoveRandom$b1($T01())(list2)) + 97) | 0)));
                    var pos2 = $T12().Random$b1($T02())(list3).MemberwiseClone();
                    array.Set(pos2.row, pos2.col, String.fromCharCode((($T29().$Cast($T12().RemoveRandom$b1($T01())(list2)) + 97) | 0)));
                    flag = true;
                    break $loop5;
                  }
                } else {
                  list.Remove(item.MemberwiseClone());
                }
              }
              var flag3 = true;

              for (var a$2 = item.PositionsAtDistance(1)._items, i$2 = 0, l$2 = item.PositionsAtDistance(1)._size; i$2 < l$2; ($temp02 = i$2, 
                  i$2 = ((i$2 + 1) | 0), 
                  $temp02)) {
                var current3 = a$2[i$2].MemberwiseClone();
                if (array.Get(current3.row, current3.col).charCodeAt(0) !== ".".charCodeAt(0)) {
                  flag3 = false;
                }
              }

              for (var a$3 = item.PositionsWithinDistance(3)._items, i$3 = 0, l$3 = item.PositionsWithinDistance(3)._size; i$3 < l$3; ($temp03 = i$3, 
                  i$3 = ((i$3 + 1) | 0), 
                  $temp03)) {
                var current4 = a$3[i$3].MemberwiseClone();
                var c2 = array.Get(current4.row, current4.col);
                if (!((c2.charCodeAt(0) !== "a".charCodeAt(0)) && 
                    (c2.charCodeAt(0) !== "b".charCodeAt(0)) && 
                    (c2.charCodeAt(0) !== "c".charCodeAt(0)) && 
                    (c2.charCodeAt(0) !== "d".charCodeAt(0)) && (c2.charCodeAt(0) !== "e".charCodeAt(0)))) {
                  flag3 = false;
                }
              }
              if (flag3) {
                if ($T22().CoinFlip()) {
                  array.Set(((num - 1) | 0), num2, String.fromCharCode((($T29().$Cast($T12().RemoveRandom$b1($T01())(list2)) + 97) | 0)));
                  array.Set(((num + 1) | 0), num2, String.fromCharCode((($T29().$Cast($T12().RemoveRandom$b1($T01())(list2)) + 97) | 0)));
                } else {
                  array.Set(num, ((num2 - 1) | 0), String.fromCharCode((($T29().$Cast($T12().RemoveRandom$b1($T01())(list2)) + 97) | 0)));
                  array.Set(num, ((num2 + 1) | 0), String.fromCharCode((($T29().$Cast($T12().RemoveRandom$b1($T01())(list2)) + 97) | 0)));
                }
                var c3 = " ";
                switch ($T22().Roll(3)) {
                  case 1: 
                    c3 = "#";
                    break;

                  case 2: 
                    c3 = "&";
                    break;

                  case 3: 
                    c3 = "0";
                    break;

                }
                array.Set(num, num2, c3);
                list.Remove(item.MemberwiseClone());
                flag = true;
                break $loop5;
              }
            }
          } else {
            if (array.Get(num, num2).charCodeAt(0) === ".".charCodeAt(0)) {
              var flag4 = true;

              for (var a$4 = item.PositionsWithinDistance(2)._items, i$4 = 0, l$4 = item.PositionsWithinDistance(2)._size; i$4 < l$4; ($temp04 = i$4, 
                  i$4 = ((i$4 + 1) | 0), 
                  $temp04)) {
                var current5 = a$4[i$4].MemberwiseClone();
                var c4 = array.Get(current5.row, current5.col);
                if (!((c4.charCodeAt(0) !== "a".charCodeAt(0)) && 
                    (c4.charCodeAt(0) !== "b".charCodeAt(0)) && 
                    (c4.charCodeAt(0) !== "c".charCodeAt(0)) && 
                    (c4.charCodeAt(0) !== "d".charCodeAt(0)) && (c4.charCodeAt(0) !== "e".charCodeAt(0)))) {
                  flag4 = false;
                }
              }
              if (flag4) {
                if (m > 1000) {
                  array.Set(num, num2, String.fromCharCode((($T29().$Cast($T12().RemoveRandom$b1($T01())(list2)) + 97) | 0)));
                  list.Remove(item.MemberwiseClone());
                  flag = true;
                  break $loop5;
                }
                var flag5 = true;

                for (var a$5 = item.PositionsAtDistance(1)._items, i$5 = 0, l$5 = item.PositionsAtDistance(1)._size; i$5 < l$5; ($temp05 = i$5, 
                    i$5 = ((i$5 + 1) | 0), 
                    $temp05)) {
                  var current6 = a$5[i$5].MemberwiseClone();
                  if (array.Get(current6.row, current6.col).charCodeAt(0) !== ".".charCodeAt(0)) {
                    flag5 = false;
                  }
                }
                if (flag5) {
                  array.Set(num, num2, String.fromCharCode((($T29().$Cast($T12().RemoveRandom$b1($T01())(list2)) + 97) | 0)));
                  list.Remove(item.MemberwiseClone());
                  flag = true;
                  break $loop5;
                }
              }
            }
            if (array.Get(num, num2).charCodeAt(0) === "#".charCodeAt(0)) {
              if (((array.Get(((num + 1) | 0), num2)).charCodeAt(0) === ".".charCodeAt(0)) || 
                ((array.Get(((num - 1) | 0), num2)).charCodeAt(0) === ".".charCodeAt(0)) || 
                ((array.Get(num, ((num2 - 1) | 0))).charCodeAt(0) === ".".charCodeAt(0)) || ((array.Get(num, ((num2 + 1) | 0))).charCodeAt(0) === ".".charCodeAt(0))) {
                var flag6 = false;

                for (var a$6 = item.PositionsAtDistance(2)._items, i$6 = 0, l$6 = item.PositionsAtDistance(2)._size; i$6 < l$6; ($temp06 = i$6, 
                    i$6 = ((i$6 + 1) | 0), 
                    $temp06)) {
                  var current7 = a$6[i$6].MemberwiseClone();
                  var c5 = array.Get(current7.row, current7.col);
                  if (!((c5.charCodeAt(0) !== "a".charCodeAt(0)) && 
                      (c5.charCodeAt(0) !== "b".charCodeAt(0)) && 
                      (c5.charCodeAt(0) !== "c".charCodeAt(0)) && 
                      (c5.charCodeAt(0) !== "d".charCodeAt(0)) && (c5.charCodeAt(0) !== "e".charCodeAt(0)))) {
                    flag6 = true;
                  }
                }
                if (!flag6) {
                  var num3 = 0;

                  for (var a$7 = item.PositionsAtDistance(1)._items, i$7 = 0, l$7 = item.PositionsAtDistance(1)._size; i$7 < l$7; ($temp07 = i$7, 
                      i$7 = ((i$7 + 1) | 0), 
                      $temp07)) {
                    var current8 = a$7[i$7].MemberwiseClone();
                    if (array.Get(current8.row, current8.col).charCodeAt(0) === "#".charCodeAt(0)) {
                      num3 = ((num3 + 1) | 0);
                    }
                  }
                  if (num3 >= 5) {
                    var num4 = 0;
                    var array2 = JSIL.Array.New($T23(), 8);

                    for (var n = 0; n < 8; n = ((n + 1) | 0)) {
                      var pos3 = item.PositionInDirection($T22().RotateDirection(8, true, n));
                      array2[n] = array.Get(pos3.row, pos3.col);
                    }

                  $loop11: 
                    for (var num5 = 0; num5 < 15; num5 = ((num5 + 1) | 0)) {
                      if ((array2[((num5 % 8) | 0)]).charCodeAt(0) === "#".charCodeAt(0)) {
                        num4 = ((num4 + 1) | 0);
                      } else {
                        num4 = 0;
                      }
                      if (num4 === 5) {
                        flag = true;
                        array.Set(num, num2, String.fromCharCode((($T29().$Cast($T12().RemoveRandom$b1($T01())(list2)) + 97) | 0)));
                        list.Remove(item.MemberwiseClone());
                        break $loop11;
                      }
                    }
                  }
                }
              }
            }
          }
          m = ((m + 1) | 0);
        }
      }
    }
    var num6 = $T22().Roll(2);
    if ($T22().OneIn(50)) {
      num6 = 3;
    }

    for (var num7 = 0; num7 < num6; num7 = ((num7 + 1) | 0)) {
      var num8 = 0;
      var flag7 = false;

      while (!flag7) {
        var num9 = (($T22().Roll(18) + 1) | 0);
        var num10 = (($T22().Roll(62) + 1) | 0);
        if (list.get_Count() > 0) {
          var pos4 = $T12().RemoveRandom$b1($T02())(list).MemberwiseClone();
          num9 = pos4.row;
          num10 = pos4.col;
          array.Set(num9, num10, ".");
        }
        if (array.Get(num9, num10).charCodeAt(0) === ".".charCodeAt(0)) {
          var flag8 = true;
          $T02().prototype._ctor.call(pos5, num9, num10);

          for (var a$8 = pos5.PositionsAtDistance(1)._items, i$8 = 0, l$8 = pos5.PositionsAtDistance(1)._size; i$8 < l$8; ($temp08 = i$8, 
              i$8 = ((i$8 + 1) | 0), 
              $temp08)) {
            var current9 = a$8[i$8].MemberwiseClone();
            if (array.Get(current9.row, current9.col).charCodeAt(0) !== ".".charCodeAt(0)) {
              flag8 = false;
            }
          }
          if (!(!flag8 && (num8 <= 1000))) {
            array.Set(num9, num10, "=");
            flag7 = true;
          }
        }
        num8 = ((num8 + 1) | 0);
      }
    }
    m = 0;
    var flag9 = false;

    while (!flag9) {
      var num11 = (($T22().Roll(18) + 1) | 0);
      var num12 = (($T22().Roll(62) + 1) | 0);
      if (list.get_Count() > 0) {
        var pos6 = $T12().RemoveRandom$b1($T02())(list).MemberwiseClone();
        num11 = pos6.row;
        num12 = pos6.col;
        array.Set(num11, num12, ".");
      }
      if (array.Get(num11, num12).charCodeAt(0) === ".".charCodeAt(0)) {
        var flag10 = true;
        $T02().prototype._ctor.call(pos7, num11, num12);

        for (var a$9 = pos7.PositionsAtDistance(1)._items, i$9 = 0, l$9 = pos7.PositionsAtDistance(1)._size; i$9 < l$9; ($temp09 = i$9, 
            i$9 = ((i$9 + 1) | 0), 
            $temp09)) {
          var current10 = a$9[i$9].MemberwiseClone();
          if (array.Get(current10.row, current10.col).charCodeAt(0) !== ".".charCodeAt(0)) {
            flag10 = false;
          }
        }
        if (!(!flag10 && (m <= 1000))) {
          array.Set(num11, num12, ">");
          flag9 = true;
        }
      }
      m = ((m + 1) | 0);
    }
    if ($T22().OneIn(30)) {
      m = 0;
      var flag11 = false;

      while (!flag11) {
        var num13 = (($T22().Roll(18) + 1) | 0);
        var num14 = (($T22().Roll(62) + 1) | 0);
        if (list.get_Count() > 0) {
          var pos8 = $T12().RemoveRandom$b1($T02())(list).MemberwiseClone();
          num13 = pos8.row;
          num14 = pos8.col;
          array.Set(num13, num14, ".");
        }
        if (array.Get(num13, num14).charCodeAt(0) === ".".charCodeAt(0)) {
          var flag12 = true;
          $T02().prototype._ctor.call(pos9, num13, num14);

          for (var a$a = pos9.PositionsAtDistance(1)._items, i$a = 0, l$a = pos9.PositionsAtDistance(1)._size; i$a < l$a; ($temp0A = i$a, 
              i$a = ((i$a + 1) | 0), 
              $temp0A)) {
            var current11 = a$a[i$a].MemberwiseClone();
            if (array.Get(current11.row, current11.col).charCodeAt(0) !== ".".charCodeAt(0)) {
              flag12 = false;
            }
          }
          if (!(!flag12 && (m <= 1000))) {
            array.Set(num13, num14, "P");
            flag11 = true;
          }
        }
        m = ((m + 1) | 0);
      }
    }
    if (!(!$T22().OneIn(20) || (this.Map$current_level$value <= 2))) {
      var levelType = this.level_types.get_Item(((this.Map$current_level$value - 1) | 0));
      if (!((levelType.valueOf() !== 0) && 
          (levelType !== $T0C().Cave) && 
          (levelType !== $T0C().Ruined) && (levelType !== $T0C().Mine))) {
        switch ($T22().Roll(4)) {
          case 1: 
          case 2: 

          $loop23: 
            for (m = 0; m < 100; m = ((m + 1) | 0)) {
              var num15 = (($T22().Roll(18) + 1) | 0);
              var num16 = (($T22().Roll(62) + 1) | 0);
              if (array.Get(num15, num16).charCodeAt(0) === ".".charCodeAt(0)) {
                array.Set(num15, num16, "F");
                break $loop23;
              }
            }
            break;

          case 3: 

          $loop24: 
            for (m = 0; m < 100; m = ((m + 1) | 0)) {
              var num17 = (($T22().Roll(18) + 1) | 0);
              var num18 = (($T22().Roll(62) + 1) | 0);
              $T02().prototype._ctor.call(pos10, num17, num18);
              if (array.Get(num17, num18).charCodeAt(0) === ".".charCodeAt(0)) {
                var list4 = $S00().Construct();

                for (var a$b = pos10.PositionsWithinDistance(5, true)._items, i$b = 0, l$b = pos10.PositionsWithinDistance(5, true)._size; i$b < l$b; ($temp0B = i$b, 
                    i$b = ((i$b + 1) | 0), 
                    $temp0B)) {
                  var current12 = a$b[i$b].MemberwiseClone();
                  if (array.Get(current12.row, current12.col).charCodeAt(0) === ".".charCodeAt(0)) {
                    list4.Add(current12.MemberwiseClone());
                  }
                }
                if (list4.get_Count() > 0) {
                  array.Set(num17, num18, "F");
                  var pos11 = $T12().Random$b1($T02())(list4).MemberwiseClone();
                  array.Set(pos11.row, pos11.col, "F");
                  break $loop24;
                }
              }
            }
            break;

          case 4: 
            var num19 = (($T22().Roll(5) + 2) | 0);

            for (var num20 = 0; num20 < num19; num20 = ((num20 + 1) | 0)) {

            $loop27: 
              for (m = 0; m < 100; m = ((m + 1) | 0)) {
                var num21 = (($T22().Roll(18) + 1) | 0);
                var num22 = (($T22().Roll(62) + 1) | 0);
                if (array.Get(num21, num22).charCodeAt(0) === ".".charCodeAt(0)) {
                  array.Set(num21, num22, "F");
                  break $loop27;
                }
              }
            }
            break;

        }
      }
    }
    var num23 = $T22().Roll(2, 3);

    for (var num24 = 0; num24 < num23; num24 = ((num24 + 1) | 0)) {
      var num25 = 0;
      var flag13 = false;

      while (!flag13 && (num25 < 100)) {
        var num26 = $T22().Roll(20);
        var num27 = $T22().Roll(64);
        if (array.Get(num26, num27).charCodeAt(0) === ".".charCodeAt(0)) {
          array.Set(num26, num27, "^");
          flag13 = true;
        }
        num25 = ((num25 + 1) | 0);
      }
    }
    var num28 = 1;
    if (!((this.level_types.get_Item(((this.Map$current_level$value - 1) | 0)) !== $T0C().Cave) && (this.level_types.get_Item(((this.Map$current_level$value - 1) | 0)) !== $T0C().Hive))) {
      num28 = 20;
    }
    if (this.level_types.get_Item(((this.Map$current_level$value - 1) | 0)) === $T0C().Mine) {
      num28 = 5;
    }
    if (!((this.level_types.get_Item(((this.Map$current_level$value - 1) | 0)) !== $T0C().Extravagant) && (this.level_types.get_Item(((this.Map$current_level$value - 1) | 0)) !== $T0C().Fortress))) {
      num28 = 0;
    }
    var list5 = $S04().Construct();

    for (var num29 = 0; num29 < 22; num29 = ((num29 + 1) | 0)) {

      for (var num30 = 0; num30 < 66; num30 = ((num30 + 1) | 0)) {
        var c6 = array.Get(num29, num30);
        switch (c6) {
          case "#": 
            $T06().Create($T07().WALL, num29, num30);
            break;

          case "$": 
          case ".": 
            $T06().Create($T07().FLOOR, num29, num30);
            break;

          default: 
          case "%": 
          case "'": 
          case "(": 
          case ")": 
          case "*": 
          case ",": 
          case "/": 
            switch (c6) {
              case "^": 
                var tileType = $T06().RandomTrap();
                if ($T22().Roll(100) <= num28) {
                  tileType = $T06().RandomVent();
                }
                $T06().Create(tileType, num29, num30);
                $T04().prototype.get_Item.call(this.tile, num29, num30).PhysicalObject$$name$value = "floor";
                $T04().prototype.get_Item.call(this.tile, num29, num30).PhysicalObject$the_name$value = "the floor";
                $T04().prototype.get_Item.call(this.tile, num29, num30).PhysicalObject$a_name$value = "a floor";
                $T04().prototype.get_Item.call(this.tile, num29, num30).PhysicalObject$symbol$value = ".";
                $T04().prototype.get_Item.call(this.tile, num29, num30).PhysicalObject$color$value = $T17().White;
                list5.Add($T04().prototype.get_Item.call(this.tile, num29, num30));
                if (tileType === $T07().FIRE_GEYSER) {
                  var num31 = (($T22().Roll(21) + 4) | 0);
                  var num32 = (($T22().Roll(10) - 1) | 0);
                  var num34 = ((((((((num31 * num32) | 0) / 10) | 0) * 2) | 0) + 1) | 0);
                  var num35 = ((num31 - ((((num31 * num32) | 0) / 10) | 0)) | 0);
                  if (num35 < 5) {
                    var num36 = ((5 - num35) | 0);
                    num34 = ((num34 - num36) | 0);
                    num35 = 5;
                  }
                  var num37 = ((((((num35 - 1) | 0) + $T22().Roll(num34)) | 0) * 100) | 0);
                  $thisType.Map$Q$value.Add($S09().Construct($T04().prototype.get_Item.call(this.tile, num29, num30), ((num37 + 200) | 0), $T1C().FIRE_GEYSER, ((((num31 * 10) | 0) + num32) | 0)));
                  $thisType.Map$Q$value.Add($S09().Construct($T04().prototype.get_Item.call(this.tile, num29, num30), num37, $T1C().FIRE_GEYSER_ERUPTION, 2));
                }
                if (tileType === $T07().FOG_VENT) {
                  $thisType.Map$Q$value.Add($S0E().Construct($T04().prototype.get_Item.call(this.tile, num29, num30), 100, $T1C().FOG_VENT));
                }
                if (tileType === $T07().POISON_GAS_VENT) {
                  $thisType.Map$Q$value.Add($S0E().Construct($T04().prototype.get_Item.call(this.tile, num29, num30), 100, $T1C().POISON_GAS_VENT));
                }
                break;

              default: 
              case "_": 
              case "`": 
                switch (c6) {
                  case ":": 
                    $T06().Create($T07().RUBBLE, num29, num30);
                    break;

                  default: 
                  case ";": 
                  case "<": 
                    switch (c6) {
                      case "F": 
                        $T06().Create($T07().FLOOR, num29, num30);
                        $T04().prototype.get_Item.call(this.tile, num29, num30).features.Add($T2C().FUNGUS);
                        break;

                      default: 
                      case "G": 
                        if (c6.charCodeAt(0) !== "P".charCodeAt(0)) {
                          if (c6.charCodeAt(0) !== "~".charCodeAt(0)) {
                            $T06().Create($T07().FLOOR, num29, num30);
                          } else {
                            $T06().Create($T07().FIRE_GEYSER, num29, num30);
                          }
                        } else {
                          $T06().Create($T07().HEALING_POOL, num29, num30);
                        }
                        break;

                      case "H": 
                        $T06().Create($T07().HIDDEN_DOOR, num29, num30);
                        list5.Add($T04().prototype.get_Item.call(this.tile, num29, num30));
                        break;

                    }
                    break;

                  case "=": 
                    $T06().Create($T07().CHEST, num29, num30);
                    break;

                  case ">": 
                    if (this.Map$current_level$value < 20) {
                      $T06().Create($T07().STAIRS, num29, num30);
                    } else if (this.Map$current_level$value === 20) {
                      $T06().Create($T07().STAIRS, num29, num30);
                      $T04().prototype.get_Item.call(this.tile, num29, num30).PhysicalObject$color$value = $T17().Red;
                      $T04().prototype.get_Item.call(this.tile, num29, num30).SetName("scorched stairway");
                    } else {
                      $T06().Create($T07().FLOOR, num29, num30);
                    }
                    break;

                }
                break;

              case "a": 
                $T06().Create($T07().COMBAT_SHRINE, num29, num30);
                break;

              case "b": 
                $T06().Create($T07().DEFENSE_SHRINE, num29, num30);
                break;

              case "c": 
                $T06().Create($T07().MAGIC_SHRINE, num29, num30);
                break;

              case "d": 
                $T06().Create($T07().SPIRIT_SHRINE, num29, num30);
                break;

              case "e": 
                $T06().Create($T07().STEALTH_SHRINE, num29, num30);
                break;

            }
            break;

          case "&": 
            $T06().Create($T07().STATUE, num29, num30);
            break;

          case "+": 
            $T06().Create($T07().DOOR_C, num29, num30);
            break;

          case "-": 
            $T06().Create($T07().DOOR_O, num29, num30);
            break;

          case "0": 
            $T06().Create($T07().FIREPIT, num29, num30);
            break;

        }
        $T04().prototype.get_Item.call(this.tile, num29, num30).Tile$solid_rock$value = true;
      }
    }
    $thisType.Map$player$value.ResetForNewLevel();

    for (var a$c = this.AllTiles()._items, i$c = 0, l$c = this.AllTiles()._size; i$c < l$c; ($temp0C = i$c, 
        i$c = ((i$c + 1) | 0), 
        $temp0C)) {
      var current13 = a$c[i$c];
      if (current13.PhysicalObject$light_radius$value > 0) {
        current13.UpdateRadius(0, current13.PhysicalObject$light_radius$value);
      }
    }
    var num38 = 1;
    var num39 = $T22().Roll(5);
    if (num39 !== 1) {
      if (num39 === 5) {
        num38 = 2;
      }
    } else {
      num38 = 0;
    }

    for (var num40 = num38; num40 > 0; num40 = ((num40 - 1) | 0)) {
      this.SpawnItem();
    }
    var flag14 = false;
    var flag15 = false;
    var flag16 = false;

    for (var num41 = (($T22().Roll(2, 2) + 3) | 0); num41 > 0; num41 = ((num41 - 1) | 0)) {
      var actorType = this.MobType();
      if (actorType === $T1D().POLTERGEIST) {
        if (!flag14) {
          this.SpawnMob(actorType);
          flag14 = true;
        } else {
          num41 = ((num41 + 1) | 0);
        }
      } else if (actorType === $T1D().MIMIC) {
        if (!flag15) {
          this.SpawnMob(actorType);
          flag15 = true;
        } else {
          num41 = ((num41 + 1) | 0);
        }
      } else if (actorType === $T1D().MARBLE_HORROR) {
        var tile = $T12().Random$b1($T06())($T12().Where$b1($T06())(this.AllTiles(), function Map_$lGenerateLevel$gm__2 (t) {
              return (t.Tile$type$value === $T07().STATUE);
            }));
        if (!(flag16 || (tile === null))) {
          this.SpawnMob(actorType);
          flag16 = true;
        } else {
          num41 = ((num41 + 1) | 0);
        }
      } else if (actorType === $T1D().ENTRANCER) {
        if (num41 >= 2) {
          var actor = this.SpawnMob(actorType);
          num39 = $T25().prototype.get_Item.call(attrs, $T15().WANDERING);
          $T25().prototype.set_Item.call((attrs = actor.attrs), $T15().WANDERING, ((num39 + 1) | 0));
          var list6 = $S04().Construct();

          for (var num42 = 1; (list6.get_Count() === 0) && (num42 < 100); num42 = ((num42 + 1) | 0)) {

            for (var a$d = actor.TilesAtDistance(num42)._items, i$d = 0, l$d = actor.TilesAtDistance(num42)._size; i$d < l$d; ($temp0D = i$d, 
                i$d = ((i$d + 1) | 0), 
                $temp0D)) {
              var current14 = a$d[i$d];
              if (!(!current14.Tile$passable$value || 
                  current14.IsTrap() || (current14.actor() !== null))) {
                list6.Add(current14);
              }
            }
          }
          if (list6.get_Count() > 0) {
            var actorType2 = $T1D().RAT;

            for (var flag17 = false; !flag17; ) {
              actorType2 = this.MobType();
              var actorType3 = actorType2;
              switch (actorType3.valueOf()) {
                default: 
                case 19: 
                case 21: 
                case 24: 
                case 26: 
                case 27: 
                case 28: 
                case 35: 
                case 36: 
                case 37: 
                case 39: 
                case 41: 
                case 42: 
                  if (!((actorType3 === $T1D().LUMINOUS_AVENGER) || (actorType3 === $T1D().CORPSETOWER_BEHEMOTH))) {
                    continue;
                  }
                  break;

              }
              flag17 = true;
            }
            var tile2 = $T12().Random$b1($T06())(list6);
            var actor2 = $T0A().Create(
              actorType2, 
              tile2.get_row(), 
              tile2.get_col(), 
              true, 
              true
            );
            if (actor.group === null) {
              actor.group = ($S03().Construct()).__Initialize__([[actor]]);
            }
            actor.group.Add(actor2);
            actor2.group = actor.group;
            num41 = ((num41 - 1) | 0);
          }
        } else {
          num41 = ((num41 + 1) | 0);
        }
      } else {
        var actor3 = this.SpawnMob(actorType);
        if (!(!actor3.AlwaysWanders() && (!$T22().CoinFlip() || 
              !actor3.CanWander()))) {
          var expr_18B1 = (attrs2 = actor3.attrs);
          num39 = $T25().prototype.get_Item.call(attrs2, $T15().WANDERING);
          $T25().prototype.set_Item.call(expr_18B1, $T15().WANDERING, ((num39 + 1) | 0));
        }
      }
    }
    var array3 = JSIL.MultidimensionalArray.New($T18(), 22, 66);

    for (var num43 = 0; num43 < 22; num43 = ((num43 + 1) | 0)) {

      for (var num44 = 0; num44 < 66; num44 = ((num44 + 1) | 0)) {
        if ($T04().prototype.get_Item.call(this.tile, num43, num44).Tile$type$value === $T07().FLOOR) {
          array3.Set(num43, num44, true);
        } else {
          array3.Set(num43, num44, false);
        }
      }
    }

    for (var a$e = this.AllActors()._items, i$e = 0, l$e = this.AllActors()._size; i$e < l$e; ($temp0E = i$e, 
        i$e = ((i$e + 1) | 0), 
        $temp0E)) {
      var current15 = a$e[i$e];
      if (current15 !== $thisType.Map$player$value) {
        array3.Set(
          current15.get_row(), 
          current15.get_col(), 
          false
        );

        for (var num45 = 0; num45 < 22; num45 = ((num45 + 1) | 0)) {

          for (var num46 = 0; num46 < 66; num46 = ((num46 + 1) | 0)) {
            if (!(!array3.Get(num45, num46) || !current15.HasLOS(num45, num46))) {
              array3.Set(num45, num46, false);
            }
          }
        }
      }
    }
    var flag18 = false;

    for (var num47 = 0; (num47 < 22) && !flag18; num47 = ((num47 + 1) | 0)) {

      for (var num48 = 0; (num48 < 66) && !flag18; num48 = ((num48 + 1) | 0)) {
        if (array3.Get(num47, num48)) {
          flag18 = true;
        }
      }
    }
    if (!flag18) {

      for (var a$f = this.AllActors()._items, i$f = 0, l$f = this.AllActors()._size; i$f < l$f; ($temp0F = i$f, 
          i$f = ((i$f + 1) | 0), 
          $temp0F)) {
        var current16 = a$f[i$f];
        if (current16 !== $thisType.Map$player$value) {
          array3.Set(
            current16.get_row(), 
            current16.get_col(), 
            false
          );

          for (var num49 = 0; num49 < 22; num49 = ((num49 + 1) | 0)) {

            for (var num50 = 0; num50 < 66; num50 = ((num50 + 1) | 0)) {
              if (!(!array3.Get(num49, num50) || !current16.CanSee(num49, num50))) {
                array3.Set(num49, num50, false);
              }
            }
          }
        }
      }
    }
    var list7 = $S04().Construct();

    for (var num51 = 0; num51 < 22; num51 = ((num51 + 1) | 0)) {

      for (var num52 = 0; num52 < 66; num52 = ((num52 + 1) | 0)) {
        if (array3.Get(num51, num52)) {
          list7.Add($T04().prototype.get_Item.call(this.tile, num51, num52));
        }
      }
    }
    if (list7.get_Count() > 0) {
      var tile3 = $T12().Random$b1($T06())(list7);
      var light_radius = $thisType.Map$player$value.PhysicalObject$light_radius$value;
      $thisType.Map$player$value.PhysicalObject$light_radius$value = 0;
      $thisType.Map$player$value.Move(
        tile3.get_row(), 
        tile3.get_col()
      );
      $thisType.Map$player$value.UpdateRadius(0, light_radius, true);
    } else {

      for (var flag19 = false; !flag19; ) {
        var num53 = $T22().Roll(20);
        var num54 = $T22().Roll(64);
        var flag20 = true;

        for (var a$10 = $T04().prototype.get_Item.call(this.tile, num53, num54).TilesWithinDistance(1)._items, i$10 = 0, l$10 = $T04().prototype.get_Item.call(this.tile, num53, num54).TilesWithinDistance(1)._size; i$10 < l$10; ($temp10 = i$10, 
            i$10 = ((i$10 + 1) | 0), 
            $temp10)) {
          var current17 = a$10[i$10];
          if (current17.IsTrap()) {
            flag20 = false;
          }
        }
        if (!(!flag20 || 
            !$T04().prototype.get_Item.call(this.tile, num53, num54).Tile$passable$value || ($T05().prototype.get_Item.call(this.actor, num53, num54) !== null))) {
          var light_radius2 = $thisType.Map$player$value.PhysicalObject$light_radius$value;
          var num55 = $T25().prototype.get_Item.call($thisType.Map$player$value.attrs, $T15().ON_FIRE);
          $thisType.Map$player$value.PhysicalObject$light_radius$value = 0;
          $T25().prototype.set_Item.call($thisType.Map$player$value.attrs, $T15().ON_FIRE, 0);
          $thisType.Map$player$value.Move(num53, num54);
          $thisType.Map$player$value.UpdateRadius(0, $T26().Max(light_radius2, num55), true);
          $thisType.Map$player$value.PhysicalObject$light_radius$value = light_radius2;
          $T25().prototype.set_Item.call($thisType.Map$player$value.attrs, $T15().ON_FIRE, num55);
          flag19 = true;
        }
      }
    }
    if ($T22().CoinFlip()) {
      var flag21 = false;

      for (var num56 = 0; !flag21 && (num56 < 500); num56 = ((num56 + 1) | 0)) {
        var row = (($T22().Roll(18) + 1) | 0);
        var col = (($T22().Roll(62) + 1) | 0);
        var flag22 = true;

      $loop53: 
        for (var a$11 = $T04().prototype.get_Item.call(this.tile, row, col).TilesWithinDistance(2)._items, i$11 = 0, l$11 = $T04().prototype.get_Item.call(this.tile, row, col).TilesWithinDistance(2)._size; i$11 < l$11; ($temp11 = i$11, 
            i$11 = ((i$11 + 1) | 0), 
            $temp11)) {
          var current18 = a$11[i$11];
          if (current18.Tile$type$value.valueOf() !== 0) {
            flag22 = false;
            break $loop53;
          }
        }
        if (flag22) {
          var list8 = $S0D().Construct();
          var flag23 = false;
          var num57 = 0;

          for (var num58 = 2; num58 <= 8; num58 = ((num58 + 2) | 0)) {
            var tile4 = $T04().prototype.get_Item.call(this.tile, row, col).TileInDirection(num58).TileInDirection(num58);
            var flag24 = true;
            var num59 = -1;

            while (flag24 && 
              (tile4 !== null) && (tile4.Tile$type$value.valueOf() === 0)) {
              if ((tile4.TileInDirection(tile4.RotateDirection(num58, false, 2)).Tile$type$value).valueOf() !== 0) {
                flag24 = false;
              }
              if ((tile4.TileInDirection(tile4.RotateDirection(num58, true, 2)).Tile$type$value).valueOf() !== 0) {
                flag24 = false;
              }
              tile4 = tile4.TileInDirection(num58);
              if (!((tile4 === null) || (tile4.Tile$type$value !== $T07().STATUE))) {
                flag24 = false;
              }
              num59 = ((num59 + 1) | 0);
            }
            if (!(!flag24 || (tile4 === null))) {
              list8.Add(num58);
              num57 = ((num57 + 1) | 0);
              if (num59 >= 4) {
                flag23 = true;
              }
            }
          }
          if (list8.get_Count() > 0) {
            var list9 = $S0F().Construct();
            var num60 = $T22().Roll(7);
            if (!((num60 !== 1) && 
                (num60 !== 4) && 
                (num60 !== 5) && (num60 !== 7))) {
              list9.Add($T07().GRENADE_TRAP);
            }
            if (!((num60 !== 2) && 
                (num60 !== 4) && 
                (num60 !== 6) && (num60 !== 7))) {
              list9.Add($T07().POISON_GAS_TRAP);
            }
            if (!((num60 !== 3) && 
                (num60 !== 5) && 
                (num60 !== 6) && (num60 !== 7))) {
              list9.Add($T07().PHANTOM_TRAP);
            }
            var flag25 = false;
            if ($T22().OneIn(4)) {
              flag25 = true;
            }

            for (var a$12 = list8._items, i$12 = 0, l$12 = list8._size; i$12 < l$12; ($temp12 = i$12, 
                i$12 = ((i$12 + 1) | 0), 
                $temp12)) {
              var current19 = a$12[i$12];
              var tile5 = $T04().prototype.get_Item.call(this.tile, row, col).TileInDirection(current19);
              var num61 = -2;

              while (tile5.Tile$type$value.valueOf() === 0) {
                num61 = ((num61 + 1) | 0);
                tile5 = tile5.TileInDirection(current19);
              }
              if (!flag23 || (num61 >= 4)) {

                for (tile5 = $T04().prototype.get_Item.call(this.tile, row, col).TileInDirection(current19); tile5.Tile$type$value.valueOf() === 0; tile5 = tile5.TileInDirection(current19)) {
                  if (num61 >= 4) {
                    var tileType2 = $T07().FLOOR;
                    if ($T22().Roll(3) >= 2) {
                      tileType2 = $T12().Random$b1($T07())(list9);
                      list5.Add(tile5);
                    }
                    tile5.TransformTo(tileType2);
                    tile5.PhysicalObject$$name$value = "floor";
                    tile5.PhysicalObject$the_name$value = "the floor";
                    tile5.PhysicalObject$a_name$value = "a floor";
                    tile5.PhysicalObject$symbol$value = ".";
                    tile5.PhysicalObject$color$value = $T17().White;
                    if ($S10().CallVirtual("DistanceFrom", null, tile5, $T04().prototype.get_Item.call(this.tile, row, col)) < ((num61 + 2) | 0)) {
                      var tile6 = tile5.TileInDirection(tile5.RotateDirection(current19, false, 2));
                      if (!(((tile6.TileInDirection(tile5.RotateDirection(current19, false, 1)).Tile$type$value).valueOf() !== 0) || 
                          ((tile6.TileInDirection(tile5.RotateDirection(current19, false, 2)).Tile$type$value).valueOf() !== 0) || ((tile6.TileInDirection(tile5.RotateDirection(current19, false, 3)).Tile$type$value).valueOf() !== 0))) {
                        tileType2 = $T07().FLOOR;
                        if ($T22().Roll(3) >= 2) {
                          tileType2 = $T12().Random$b1($T07())(list9);
                        }
                        tile6.TransformTo(tileType2);
                        if (list9.Contains(tileType2)) {
                          tile6.PhysicalObject$$name$value = "floor";
                          tile6.PhysicalObject$the_name$value = "the floor";
                          tile6.PhysicalObject$a_name$value = "a floor";
                          tile6.PhysicalObject$symbol$value = ".";
                          tile6.PhysicalObject$color$value = $T17().White;
                          list5.Add(tile6);
                        }
                      }
                      tile6 = tile5.TileInDirection(tile5.RotateDirection(current19, true, 2));
                      if (!(((tile6.TileInDirection(tile5.RotateDirection(current19, true, 1)).Tile$type$value).valueOf() !== 0) || 
                          ((tile6.TileInDirection(tile5.RotateDirection(current19, true, 2)).Tile$type$value).valueOf() !== 0) || ((tile6.TileInDirection(tile5.RotateDirection(current19, true, 3)).Tile$type$value).valueOf() !== 0))) {
                        tileType2 = $T07().FLOOR;
                        if ($T22().Roll(3) >= 2) {
                          tileType2 = $T12().Random$b1($T07())(list9);
                        }
                        tile6.TransformTo(tileType2);
                        if (list9.Contains(tileType2)) {
                          tile6.PhysicalObject$$name$value = "floor";
                          tile6.PhysicalObject$the_name$value = "the floor";
                          tile6.PhysicalObject$a_name$value = "a floor";
                          tile6.PhysicalObject$symbol$value = ".";
                          tile6.PhysicalObject$color$value = $T17().White;
                          list5.Add(tile6);
                        }
                      }
                    }
                  } else {
                    var tileType3 = $T07().FLOOR;
                    if ($T22().CoinFlip()) {
                      tileType3 = $T06().RandomTrap();
                      list5.Add(tile5);
                    }
                    tile5.TransformTo(tileType3);
                    if (tileType3 !== $T07().FLOOR) {
                      tile5.PhysicalObject$$name$value = "floor";
                      tile5.PhysicalObject$the_name$value = "the floor";
                      tile5.PhysicalObject$a_name$value = "a floor";
                      tile5.PhysicalObject$symbol$value = ".";
                      tile5.PhysicalObject$color$value = $T17().White;
                    }
                  }
                }
                tile5 = tile5.TileInDirection(tile5.RotateDirection(current19, true, 4));
                if (flag25) {
                  tile5.TransformTo($T07().STONE_SLAB);
                  $thisType.Map$Q$value.Add($S11().Construct(tile5, ($S04().Construct()).__Initialize__([[tile5.TileInDirection($T12().RotateDirection(current19, true, 4))]]), 100, $T1C().STONE_SLAB));
                } else {
                  tile5.TransformTo($T07().HIDDEN_DOOR);
                  $T12().AddUnique$b1($T06())(list5, tile5);
                }
                tile5 = tile5.TileInDirection(tile5.RotateDirection(current19, true, 4));
                if ($T22().CoinFlip()) {
                  if (tile5.IsTrap()) {
                    tile5.Tile$type$value = $T07().ALARM_TRAP;
                  } else {
                    tile5.TransformTo($T07().ALARM_TRAP);
                    tile5.PhysicalObject$$name$value = "floor";
                    tile5.PhysicalObject$the_name$value = "the floor";
                    tile5.PhysicalObject$a_name$value = "a floor";
                    tile5.PhysicalObject$symbol$value = ".";
                    tile5.PhysicalObject$color$value = $T17().White;
                    $T12().AddUnique$b1($T06())(list5, tile5);
                  }
                }
              }
            }
            if (!(!flag23 || (num57 !== 1))) {

              for (var a$13 = $T04().prototype.get_Item.call(this.tile, row, col).TilesWithinDistance(1)._items, i$13 = 0, l$13 = $T04().prototype.get_Item.call(this.tile, row, col).TilesWithinDistance(1)._size; i$13 < l$13; ($temp13 = i$13, 
                  i$13 = ((i$13 + 1) | 0), 
                  $temp13)) {
                var current20 = a$13[i$13];
                current20.TransformTo($T12().Random$b1($T07())(list9));
                current20.PhysicalObject$$name$value = "floor";
                current20.PhysicalObject$the_name$value = "the floor";
                current20.PhysicalObject$a_name$value = "a floor";
                current20.PhysicalObject$symbol$value = ".";
                current20.PhysicalObject$color$value = $T17().White;
                list5.Add(current20);
              }
              ($T04().prototype.get_Item.call(this.tile, row, col).TileInDirection($T04().prototype.get_Item.call(this.tile, row, col).RotateDirection(list8.get_Item(0), true, 4))).TransformTo($T07().CHEST);
            } else {

              for (var a$14 = $T04().prototype.get_Item.call(this.tile, row, col).TilesAtDistance(1)._items, i$14 = 0, l$14 = $T04().prototype.get_Item.call(this.tile, row, col).TilesAtDistance(1)._size; i$14 < l$14; ($temp14 = i$14, 
                  i$14 = ((i$14 + 1) | 0), 
                  $temp14)) {
                var current21 = a$14[i$14];
                current21.TransformTo($T06().RandomTrap());
                current21.PhysicalObject$$name$value = "floor";
                current21.PhysicalObject$the_name$value = "the floor";
                current21.PhysicalObject$a_name$value = "a floor";
                current21.PhysicalObject$symbol$value = ".";
                current21.PhysicalObject$color$value = $T17().White;
                list5.Add(current21);
              }
              $T04().prototype.get_Item.call(this.tile, row, col).TransformTo($T07().CHEST);
            }
            flag21 = true;
          }
        }
      }
    }

    for (var a$15 = this.AllTiles()._items, i$15 = 0, l$15 = this.AllTiles()._size; i$15 < l$15; ($temp15 = i$15, 
        i$15 = ((i$15 + 1) | 0), 
        $temp15)) {
      var current22 = a$15[i$15];
      if (current22.Tile$type$value.valueOf() !== 0) {

        for (var a$16 = current22.TilesAtDistance(1)._items, i$16 = 0, l$16 = current22.TilesAtDistance(1)._size; i$16 < l$16; ($temp16 = i$16, 
            i$16 = ((i$16 + 1) | 0), 
            $temp16)) {
          var current23 = a$16[i$16];
          current23.Tile$solid_rock$value = false;
        }
      }
    }
    if (list5.get_Count() > 0) {
      var event = $S0A().Construct(list5, 100, $T1C().CHECK_FOR_HIDDEN);
      event.Event$tiebreaker$value = 0;
      $thisType.Map$Q$value.Add(event);
    }
    if (this.Map$current_level$value === 20) {
      var event2 = $S12().Construct(1066, $T1C().BOSS_SIGN);
      event2.Event$tiebreaker$value = 0;
      $thisType.Map$Q$value.Add(event2);
    }
    var event3 = $S12().Construct(10000, $T1C().RELATIVELY_SAFE);
    event3.Event$tiebreaker$value = 0;
    $thisType.Map$Q$value.Add(event3);
    if (this.Map$current_level$value === 1) {
      $thisType.Map$B$value.Add(("Welcome, " + $T0A().player_name + "! "), JSIL.Array.New($T08(), 0));
    } else {
      $thisType.Map$B$value.Add(this.LevelMessage(), JSIL.Array.New($T08(), 0));
    }
  };

  function Map_GenerateLevelTypes () {
    this.level_types = ($S05().Construct()).__Initialize__([[$T0C().Standard], [$T0C().Standard]]);
    var levelType = $T0C().Standard;

    while (this.level_types.get_Count() < 20) {
      var num = (($T22().Roll(2, 2) - 1) | 0);
      levelType = this.ChooseNextLevelType(levelType);

      for (var i = 0; i < num; i = ((i + 1) | 0)) {
        if (this.level_types.get_Count() < 20) {
          this.level_types.Add(levelType);
        }
      }
    }
  };

  function Map_get_B () {
    return $thisType.Map$B$value;
  };

  function Map_get_current_level () {
    return this.Map$current_level$value;
  };

  function Map_get_danger_sensed () {
    return this.Map$danger_sensed$value;
  };

  function Map_get_player () {
    return $thisType.Map$player$value;
  };

  function Map_get_Q () {
    return $thisType.Map$Q$value;
  };

  function Map_get_wiz_dark () {
    return this.Map$wiz_dark$value;
  };

  function Map_get_wiz_lite () {
    return this.internal_wiz_lite;
  };

  function Map_InitLevel () {

    for (var i = 0; i < 22; i = ((i + 1) | 0)) {

      for (var j = 0; j < 66; j = ((j + 1) | 0)) {
        if (!((i !== 0) && 
            (j !== 0) && 
            (i !== 21) && (j !== 65))) {
          $T04().prototype.set_Item.call(this.tile, i, j, $T06().Create($T07().WALL, i, j));
        } else {
          $T04().prototype.set_Item.call(this.tile, i, j, $T06().Create($T07().FLOOR, i, j));
        }
      }
    }
  };

  function Map_LevelMessage () {
    if (!((this.Map$current_level$value !== 1) && (this.level_types.get_Item(((this.Map$current_level$value - 2) | 0)) !== this.level_types.get_Item(((this.Map$current_level$value - 1) | 0))))) {
      return "";
    }
    var list = $S13().Construct();
    switch ((this.level_types.get_Item(((this.Map$current_level$value - 1) | 0))).valueOf()) {
      case 0: 
        list.Add("You enter a complex of ancient rooms and hallways. ");
        list.Add("Well-worn corridors suggest that these rooms are frequently used. ");
        break;

      case 1: 
        list.Add("You enter a large natural cave. ");
        list.Add("This cavern's rough walls shine with moisture. ");
        list.Add("A cave opens up before you. A dry, dusty scent lingers in the ancient tunnels. ");
        break;

      case 2: 
        list.Add("You enter a badly damaged rubble-strewn area of the dungeon. ");
        list.Add("Broken walls and piles of rubble cover parts of the floor here. ");
        list.Add("This section of the dungeon has partially collapsed. ");
        break;

      case 3: 
        list.Add("You enter an area made up of small chambers. Some of the walls are covered in a waxy substance. ");
        list.Add("As you enter the small chambers here, you hear a faint buzzing. It sounds like insects. ");
        break;

      case 4: 
        list.Add("You enter a system of mining tunnels. ");
        list.Add("Mining tools are scattered on the ground of this level. ");
        list.Add("You notice half-finished tunnels and mining equipment here. ");
        break;

      case 5: 
        list.Add("You pass through a broken gate and enter the remnants of a fortress. ");
        list.Add("This level looks like it was intended to be a stronghold. ");
        break;

      case 6: 
        list.Add("This area is decorated with fine tapestries, marble statues, and other luxuries. ");
        list.Add("Patterned decorative tiles, fine rugs, and beautifully worked stone greet you upon entering this level. ");
        break;

    }
    if (this.Map$current_level$value > 1) {
      var text = this.TransitionMessage(
        this.level_types.get_Item(((this.Map$current_level$value - 2) | 0)), 
        this.level_types.get_Item(((this.Map$current_level$value - 1) | 0))
      );
      if (text != "") {
        list.Add(text);
      }
    }
    return $T12().Random$b1($T31())(list);
  };

  function Map_LoadLevel (filename) {
    var textReader = $S14().Construct(filename);
    var list = $S04().Construct();

    for (var i = 0; i < 22; i = ((i + 1) | 0)) {

      for (var j = 0; j < 66; j = ((j + 1) | 0)) {
        var c = String.fromCharCode(textReader.Read());
        var c2 = c;
        switch (c2) {
          case "+": 
            $T06().Create($T07().DOOR_C, i, j);
            break;

          default: 
          case ",": 
            if (c2.charCodeAt(0) !== "#".charCodeAt(0)) {
              if (c2.charCodeAt(0) !== ">".charCodeAt(0)) {
                if (c2.charCodeAt(0) !== "H".charCodeAt(0)) {
                  $T06().Create($T07().FLOOR, i, j);
                } else {
                  $T06().Create($T07().HIDDEN_DOOR, i, j);
                  list.Add($T04().prototype.get_Item.call(this.tile, i, j));
                }
              } else {
                $T06().Create($T07().STAIRS, i, j);
              }
            } else {
              $T06().Create($T07().WALL, i, j);
            }
            break;

          case "-": 
            $T06().Create($T07().DOOR_O, i, j);
            break;

          case ".": 
            $T06().Create($T07().FLOOR, i, j);
            break;

        }
      }
      textReader.ReadLine();
    }
    textReader.Close();
    if (list.get_Count() > 0) {
      var event = $S0A().Construct(list, 100, $T1C().CHECK_FOR_HIDDEN);
      event.Event$tiebreaker$value = 0;
      $thisType.Map$Q$value.Add(event);
    }
  };

  function Map_MobType () {
    var dict = null, key = $asm00.Forays.ActorType.PLAYER;
    var actorType = $T1D().RAT;

    for (var flag = false; !flag; ) {
      var num = 1;
      var num2 = ((((this.Map$current_level$value + 1) | 0) / 2) | 0);
      if (this.Map$current_level$value !== 1) {
        var list = $S0D().Construct();

        for (var i = -2; i <= 2; i = ((i + 1) | 0)) {
          if (!((((num2 + i) | 0) < 1) || (((num2 + i) | 0) > 10))) {
            var num3 = ((1 + (Math.abs(i))) | 0);
            if ($T22().OneIn(num3)) {
              list.Add(((num2 + i) | 0));
            }
          }
        }
        num = $T12().Random$b1($T01())(list);
      }
      if (num2 === 1) {
        actorType = $T1D().$Cast(((((((num * 5) | 0) + $T22().Roll(5)) | 0) - 3) | 0));
      } else if ($T22().OneIn(5)) {
        if ($T22().CoinFlip()) {
          actorType = $asm00.Forays.ActorType.$Cast(((num * 5) | 0) + $T1D().RAT);
        } else {
          actorType = $asm00.Forays.ActorType.$Cast(((num * 5) | 0) + $T1D().FIRE_DRAKE);
        }
      } else {
        var num4 = $T22().Roll(3);
        if (num4 === 1) {
          actorType = $T1D().$Cast(((((num * 5) | 0) - 2) | 0));
        } else if (num4 === 2) {
          actorType = $T1D().$Cast(((((num * 5) | 0) - 1) | 0));
        } else {
          actorType = $T1D().$Cast(((num * 5) | 0));
        }
      }
      if (this.Map$current_level$value <= 2) {
        if ($T27().prototype.get_Item.call(this.generated_this_level, actorType) === 0) {
          flag = true;
        } else if ($T22().OneIn((($T27().prototype.get_Item.call(this.generated_this_level, actorType) + 1) | 0))) {
          flag = true;
        }
      } else if ($T27().prototype.get_Item.call(this.generated_this_level, actorType) < 2) {
        flag = true;
      } else if ($T22().OneIn($T27().prototype.get_Item.call(this.generated_this_level, actorType))) {
        flag = true;
      }
    }
    var expr_175 = (dict = this.generated_this_level);
    var expr_179 = (key = actorType);
    var num5 = $T27().prototype.get_Item.call(dict, key);
    $T27().prototype.set_Item.call(expr_175, expr_179, ((num5 + 1) | 0));
    return actorType;
  };

  function Map_RedrawWithStrings () {
    var s = new ($T35())();
    $T14().set_CursorVisible(false);
    s.s = "";
    s.bgcolor = $T17().Black;
    s.color = $T17().Black;
    if (!(!$thisType.Map$player$value.HasAttr($T15().ON_FIRE) && !$thisType.Map$player$value.HasAttr($T15().CATCHING_FIRE))) {
      $T13().DrawMapBorder($S06().Construct($T17().RandomFire, "&"));

      for (var i = 1; i < 21; i = ((i + 1) | 0)) {
        s.s = "";
        var r = i;
        var c = 1;

        for (var j = 1; j < 65; j = ((j + 1) | 0)) {
          var colorchar = this.VisibleColorChar(i, j).MemberwiseClone();
          if ($T13().ResolveColor(colorchar.color) !== s.color) {
            if (s.s.length > 0) {
              $S15().CallStatic($T13(), "WriteMapString", null, r, c, s.MemberwiseClone());
              s.s = "";
              s.s = (JSIL.ConcatString(s.s, colorchar.c));
              s.color = colorchar.color;
              r = i;
              c = j;
            } else {
              s.s = (JSIL.ConcatString(s.s, colorchar.c));
              s.color = colorchar.color;
            }
          } else {
            s.s = (JSIL.ConcatString(s.s, colorchar.c));
          }
        }
        $S15().CallStatic($T13(), "WriteMapString", null, r, c, s.MemberwiseClone());
      }
    } else {

      for (var k = 0; k < 22; k = ((k + 1) | 0)) {
        s.s = "";
        r = k;
        c = 0;

        for (var l = 0; l < 66; l = ((l + 1) | 0)) {
          var colorchar2 = this.VisibleColorChar(k, l).MemberwiseClone();
          if ($T13().ResolveColor(colorchar2.color) !== s.color) {
            if (s.s.length > 0) {
              $S15().CallStatic($T13(), "WriteMapString", null, r, c, s.MemberwiseClone());
              s.s = "";
              s.s = (JSIL.ConcatString(s.s, colorchar2.c));
              s.color = colorchar2.color;
              r = k;
              c = l;
            } else {
              s.s = (JSIL.ConcatString(s.s, colorchar2.c));
              s.color = colorchar2.color;
            }
          } else {
            s.s = (JSIL.ConcatString(s.s, colorchar2.c));
          }
        }
        $S15().CallStatic($T13(), "WriteMapString", null, r, c, s.MemberwiseClone());
      }
    }
    $T13().ResetColors();
  };

  function Map_RemoveTargets (a) {

    for (var i = 0; i < 22; i = ((i + 1) | 0)) {

      for (var j = 0; j < 66; j = ((j + 1) | 0)) {
        if ($T05().prototype.get_Item.call(this.actor, i, j) !== null) {
          $T05().prototype.get_Item.call(this.actor, i, j).RemoveTarget(a);
        }
      }
    }
  };

  function Map_set_B (value) {
    $thisType.Map$B$value = value;
  };

  function Map_set_current_level (value) {
    this.Map$current_level$value = value;
  };

  function Map_set_danger_sensed (value) {
    this.Map$danger_sensed$value = value;
  };

  function Map_set_player (value) {
    $thisType.Map$player$value = value;
  };

  function Map_set_Q (value) {
    $thisType.Map$Q$value = value;
  };

  function Map_set_wiz_dark (value) {
    this.Map$wiz_dark$value = value;
  };

  function Map_set_wiz_lite (value) {
    var $temp00;
    this.internal_wiz_lite = value;
    if (value) {

      for (var a$0 = this.AllTiles()._items, i$0 = 0, l$0 = this.AllTiles()._size; i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current = a$0[i$0];
        if ($S16().CallVirtual("Is", null, current, $T2C().FUNGUS)) {
          $thisType.Map$Q$value.Add($S0E().Construct(current, 200, $T1C().BLAST_FUNGUS));
          $thisType.Map$B$value.Add("The blast fungus starts to smolder in the light. ", JSIL.Array.New($T08(), [current]));
          current.features.Remove($T2C().FUNGUS);
          current.features.Add($T2C().FUNGUS_ACTIVE);
        }
      }
    }
  };

  function Map_SpawnItem () {
    var type = $T37().RandomItem();

    for (var flag = false; !flag; ) {
      var num = $T22().Roll(20);
      var num2 = $T22().Roll(64);
      var tile = $T04().prototype.get_Item.call(this.tile, num, num2);
      if (!(!tile.Tile$passable$value || 
          (tile.Tile$inv$value !== null) || 
          (tile.Tile$type$value === $T07().CHEST) || 
          (tile.Tile$type$value === $T07().FIREPIT) || 
          (tile.Tile$type$value === $T07().STAIRS) || tile.IsShrine())) {
        return $T37().Create(type, num, num2);
      }
    }
    return null;
  };

  function Map_SpawnMob$00 () {
    return this.SpawnMob(this.MobType());
  };

  function Map_SpawnMob$01 (type) {
    var $temp00, $temp01, $temp02;
    var actor = null;
    if (type === $T1D().POLTERGEIST) {

      for (var i = 0; i < 1000; i = ((i + 1) | 0)) {
        var row = (($T22().Roll(18) + 1) | 0);
        var col = (($T22().Roll(62) + 1) | 0);
        var list = $S04().Construct();

        for (var a$0 = $T04().prototype.get_Item.call(this.tile, row, col).TilesWithinDistance(3)._items, i$0 = 0, l$0 = $T04().prototype.get_Item.call(this.tile, row, col).TilesWithinDistance(3)._size; i$0 < l$0; ($temp00 = i$0, 
            i$0 = ((i$0 + 1) | 0), 
            $temp00)) {
          var current = a$0[i$0];
          if (!(!current.Tile$passable$value && (current.Tile$type$value !== $T07().DOOR_C))) {
            list.Add(current);
          }
        }
        if (list.get_Count() >= 15) {
          $T0A().tiebreakers.Add(null);
          var event = $S11().Construct(null, list, (((($T22().Roll(8) + 6) | 0) * 100) | 0), $T1C().POLTERGEIST);
          event.Event$tiebreaker$value = (($T0A().tiebreakers.get_Count() - 1) | 0);
          $thisType.Map$Q$value.Add(event);
          return null;
        }
      }
      return null;
    }
    if (type === $T1D().MIMIC) {

      do {
        var num = $T22().Roll(20);
        var num2 = $T22().Roll(64);
        var tile = $T04().prototype.get_Item.call(this.tile, num, num2);
      } while (!tile.Tile$passable$value || 
        (tile.Tile$inv$value !== null) || 
        (tile.Tile$type$value === $T07().CHEST) || 
        (tile.Tile$type$value === $T07().FIREPIT) || 
        (tile.Tile$type$value === $T07().STAIRS) || tile.IsShrine());
      var target_ = $T37().Create($T37().RandomItem(), num, num2);
      $T0A().tiebreakers.Add(null);
      var event2 = $S0B().Construct(target_, ($S04().Construct()).__Initialize__([[tile]]), 100, $T1C().MIMIC, $T15().NO_ATTR, 0, "", JSIL.Array.New($T08(), 0));
      event2.Event$tiebreaker$value = (($T0A().tiebreakers.get_Count() - 1) | 0);
      $thisType.Map$Q$value.Add(event2);
      return null;
    }
    if (type === $T1D().MARBLE_HORROR) {
      var tile2 = $T12().Random$b1($T06())($T12().Where$b1($T06())(this.AllTiles(), function Map_$lSpawnMob$gm__1 (t) {
            return (t.Tile$type$value === $T07().STATUE);
          }));
      if (tile2 !== null) {
        $thisType.Map$Q$value.Add($S0E().Construct(tile2, 100, $T1C().MARBLE_HORROR));
      }
      return null;
    }
    var num3 = 1;
    if ($T0A().Prototype(type).HasAttr($T15().SMALL_GROUP)) {
      num3 = (($T22().Roll(2) + 1) | 0);
    }
    if ($T0A().Prototype(type).HasAttr($T15().MEDIUM_GROUP)) {
      num3 = (($T22().Roll(2) + 2) | 0);
    }
    if ($T0A().Prototype(type).HasAttr($T15().LARGE_GROUP)) {
      num3 = (($T22().Roll(3) + 4) | 0);
    }
    var list2 = $S04().Construct();
    var list3 = null;
    if (num3 > 1) {
      list3 = $S03().Construct();
    }

    for (var j = 0; j < num3; j = ((j + 1) | 0)) {
      if (j === 0) {

      $loop6: 
        for (var k = 0; k < 9999; k = ((k + 1) | 0)) {
          var num4 = $T22().Roll(20);
          var num5 = $T22().Roll(64);
          var flag = true;

          for (var a$1 = $T04().prototype.get_Item.call(this.tile, num4, num5).TilesWithinDistance(1)._items, i$1 = 0, l$1 = $T04().prototype.get_Item.call(this.tile, num4, num5).TilesWithinDistance(1)._size; i$1 < l$1; ($temp01 = i$1, 
              i$1 = ((i$1 + 1) | 0), 
              $temp01)) {
            var current2 = a$1[i$1];
            if (current2.IsTrap()) {
              flag = false;
            }
          }
          if (!(!flag || 
              !$T04().prototype.get_Item.call(this.tile, num4, num5).Tile$passable$value || ($T05().prototype.get_Item.call(this.actor, num4, num5) !== null))) {
            actor = $T0A().Create(
              type, 
              num4, 
              num5, 
              true, 
              false
            );
            if (num3 > 1) {
              list2.Add($T04().prototype.get_Item.call(this.tile, num4, num5));
              list3.Add(actor);
              actor.group = list3;
            }
            break $loop6;
          }
        }
      } else {

      $loop4: 
        for (var l = 0; l < 9999; ) {
          if (list2.get_Count() === 0) {
            if (list3.get_Count() > 0) {
              return list3.get_Item(0);
            }
            return actor;
          } else {
            var tile3 = $T12().Random$b1($T06())(list2);
            var list4 = $S04().Construct();

            for (var a$2 = tile3.TilesAtDistance(1)._items, i$2 = 0, l$2 = tile3.TilesAtDistance(1)._size; i$2 < l$2; ($temp02 = i$2, 
                i$2 = ((i$2 + 1) | 0), 
                $temp02)) {
              var current3 = a$2[i$2];
              if (!(!current3.Tile$passable$value || 
                  current3.IsTrap() || (current3.actor() !== null))) {
                list4.Add(current3);
              }
            }
            if (list4.get_Count() > 0) {
              tile3 = $T12().Random$b1($T06())(list4);
              actor = $T0A().Create(
                type, 
                tile3.get_row(), 
                tile3.get_col(), 
                true, 
                false
              );
              list2.Add(tile3);
              list3.Add(actor);
              actor.group = list3;
              break $loop4;
            }
            list2.Remove(tile3);
            l = ((l + 1) | 0);
          }
        }
      }
    }
    if (num3 > 1) {
      return list3.get_Item(0);
    }
    return actor;
  };

  function Map_TransitionMessage (from, to) {
    switch (from.valueOf()) {
      case 0: 
        switch (to.valueOf()) {
          case 1: 
            return "Rooms and corridors disappear from your surroundings as you reach a large natural cavern. ";

          case 2: 
            return "More corridors and rooms appear before you, but many of the walls here are shattered and broken. Rubble covers the floor. ";

          case 3: 
            return "The rooms get smaller as you continue. A waxy substance appears on some of the walls. ";

          case 4: 
            return "As you continue, you notice that the rooms and corridors here seem only partly finished. ";

          case 5: 
            return "You pass through an undefended gate. This area was obviously intended to be secure against intruders. ";

          case 6: 
            return "As you continue, you notice that every corridor is extravagantly decorated and every room is magnificently furnished. ";

        }
        break;

      case 1: 
        switch (to.valueOf()) {
          case 0: 
            return "Leaving the cave behind, you again encounter signs of humanoid habitation. ";

          case 2: 
            return "The cave leads you to ruined corridors long abandoned by their creators. ";

          case 3: 
            return "The wide-open spaces of the cave disappear, replaced by small chambers that remind you of an insect hive. ";

          case 4: 
            return "As you continue, the rough natural edges of the cave are broken up by artificial tunnels. You notice mining tools on the ground. ";

          case 5: 
            return "A smashed set of double doors leads you out of the cave. This area seems to have been well-defended, once. ";

          case 6: 
            return "You encounter a beautifully crafted door in the cave wall. It leads to corridors richly decorated with tiles and tapestries. ";

        }
        break;

      case 2: 
        switch (to.valueOf()) {
          case 0: 
            return "This part of the dungeon is in much better condition. Rubble no longer covers the floor. ";

          case 1: 
            return "You leave ruined rooms behind and enter natural cave tunnels, never touched by picks. ";

          case 3: 
            return "It looks like this section was taken over by insects. The rubble has been cleared and used to build small chambers. ";

          case 4: 
            return "Rubble still covers the floor here. However, this area isn't ruined - it's still being mined. ";

          case 5: 
            return "You no longer see crumbling walls in this section, but this fortress has clearly fallen into disuse. ";

          case 6: 
            return "The rubble disappears, replaced by extravagant decorations. Whatever ruined that part of the dungeon didn't affect this area. ";

        }
        break;

      case 3: 
        switch (to.valueOf()) {
          case 0: 
            return "The rooms around you begin to look more typical, created by picks instead of by thousands of insects. ";

          case 1: 
            return "You leave the cramped chambers behind and enter a wider cave. ";

          case 2: 
            return "This area was clearly built by intelligent life, but nature seems to be reclaiming the ruined tunnels. ";

          case 4: 
            return "Tools on the ground reveal that the rooms here are being made by humanoids rather than insects. ";

          case 5: 
            return "A wide hole in the wall leads to a fortress, abandoned by its creators. ";

          case 6: 
            return "Your skin stops crawling as you leave the hives behind and enter a beautifully furnished area. ";

        }
        break;

      case 4: 
        switch (to.valueOf()) {
          case 0: 
            return "You leave the mines behind and return to finished corridors and rooms. ";

          case 1: 
            return "The half-finished tunnels disappear as natural cave walls surround you. ";

          case 2: 
            return "This area is collapsing and ruined. It looks much older than the mines you just left. ";

          case 3: 
            return "As you continue, signs of humanoid construction vanish and hive walls appear. ";

          case 5: 
            return "You reach a section that is not only complete, but easily defensible. ";

          case 6: 
            return "As you walk, incomplete tunnels turn into luxurious carpeted hallways. ";

        }
        break;

      case 5: 
        switch (to.valueOf()) {
          case 0: 
            return "You enter a section outside the main area of the fortress. ";

          case 1: 
            return "You leave the fortress behind. The corridors open up into natural caves. ";

          case 2: 
            return "Unlike the fortress, this area has deteriorated immensely. ";

          case 3: 
            return "A wide hole in the wall leads to an area filled with small chambers. You are reminded of an insect hive. ";

          case 4: 
            return "This section might have been part of the fortress, but pickaxes are still scattered in the unfinished rooms. ";

          case 6: 
            return "As you continue, the military focus of your surroundings is replaced by rich luxury. ";

        }
        break;

      case 6: 
        switch (to.valueOf()) {
          case 0: 
            return "The marvelous luxury vanishes. These rooms look unexciting in comparison. ";

          case 1: 
            return "Extravagance is replaced by nature as you enter a large cavern. ";

          case 2: 
            return "The opulence of your surroundings vanishes, replaced by ruined walls and scattered rubble. ";

          case 3: 
            return "As you continue, the lavish decorations give way to the waxy walls of an insect hive. ";

          case 4: 
            return "You find no comfortable excess of luxury here, just the tools of workers. ";

          case 5: 
            return "You enter what was once a fortress. Your new surroundings trade ornate comfort for spartan efficiency. ";

        }
        break;

    }
    return "";
  };

  function Map_UpdateDangerValues () {
    var $temp00, $temp01;
    this.Map$danger_sensed$value = JSIL.MultidimensionalArray.New($T18(), 22, 66);

    for (var a$0 = this.AllActors()._items, i$0 = 0, l$0 = this.AllActors()._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      if (current !== $thisType.Map$player$value) {

        for (var a$1 = this.AllTiles()._items, i$1 = 0, l$1 = this.AllTiles()._size; i$1 < l$1; ($temp01 = i$1, 
            i$1 = ((i$1 + 1) | 0), 
            $temp01)) {
          var current2 = a$1[i$1];
          if (!(this.Map$danger_sensed$value.Get(
                current2.get_row(), 
                current2.get_col()
              ) || 
              !current2.Tile$passable$value || 
              current2.get_opaque() || !current.CanSee(current2))) {
            var num = (!current.HasAttr($T15().KEEN_SENSES) ? 10 : 5);
            var num2 = (((((($thisType.Map$player$value.Stealth(
                          current2.get_row(), 
                          current2.get_col()
                        ) * $S10().CallVirtual("DistanceFrom", null, current, current2)) | 0) * num) | 0) - ((5 * current.player_visibility_duration) | 0)) | 0);
            if (!((num2 >= 100) && (current.player_visibility_duration >= 0))) {
              this.Map$danger_sensed$value.Set(
                current2.get_row(), 
                current2.get_col(), 
                true
              );
            }
          }
        }
      }
    }
  };

  function Map_VisibleColorChar (r, c) {
    var result = new ($T16())();
    result.bgcolor = $T17().Black;
    if ($thisType.Map$player$value.CanSee(r, c)) {
      $T04().prototype.get_Item.call(this.tile, r, c).Tile$seen$value = true;
      if (!(($T05().prototype.get_Item.call(this.actor, r, c) === null) || !$thisType.Map$player$value.CanSee($T05().prototype.get_Item.call(this.actor, r, c)))) {
        result.c = $T05().prototype.get_Item.call(this.actor, r, c).PhysicalObject$symbol$value;
        result.color = $T05().prototype.get_Item.call(this.actor, r, c).PhysicalObject$color$value;
        if (!(($T05().prototype.get_Item.call(this.actor, r, c) !== $thisType.Map$player$value) || 
            !$thisType.Map$player$value.HasAttr($T15().SHADOW_CLOAK) || $thisType.Map$player$value.tile().IsLit())) {
          result.color = $T17().DarkBlue;
        }
        if (!(($T05().prototype.get_Item.call(this.actor, r, c) !== $thisType.Map$player$value) || 
            !$thisType.Map$player$value.HasFeat($T38().DANGER_SENSE) || 
            (this.Map$danger_sensed$value === null) || 
            !this.Map$danger_sensed$value.Get(r, c) || 
            ($thisType.Map$player$value.LightRadius() !== 0) || this.get_wiz_lite())) {
          result.color = $T17().Red;
        }
      } else if ($T04().prototype.get_Item.call(this.tile, r, c).Tile$inv$value !== null) {
        result.c = $T04().prototype.get_Item.call(this.tile, r, c).Tile$inv$value.PhysicalObject$symbol$value;
        result.color = $T04().prototype.get_Item.call(this.tile, r, c).Tile$inv$value.PhysicalObject$color$value;
      } else if ($T04().prototype.get_Item.call(this.tile, r, c).features.get_Count() > 0) {
        result.c = $T04().prototype.get_Item.call(this.tile, r, c).FeatureSymbol();
        result.color = $T04().prototype.get_Item.call(this.tile, r, c).FeatureColor();
      } else {
        result.c = $T04().prototype.get_Item.call(this.tile, r, c).PhysicalObject$symbol$value;
        result.color = $T04().prototype.get_Item.call(this.tile, r, c).PhysicalObject$color$value;
        if (!(!((result.c.charCodeAt(0) === ".".charCodeAt(0)) && 
              (result.color === $T17().White)) && ((result.c.charCodeAt(0) !== "#".charCodeAt(0)) || 
              (result.color !== $T17().Gray)))) {
          if ($T04().prototype.get_Item.call(this.tile, r, c).IsLit()) {
            result.color = $T17().Yellow;
          } else {
            result.color = $T17().DarkCyan;
          }
        }
        if (!(!$thisType.Map$player$value.HasFeat($T38().DANGER_SENSE) || 
            (this.Map$danger_sensed$value === null) || 
            !this.Map$danger_sensed$value.Get(r, c) || 
            ($thisType.Map$player$value.LightRadius() !== 0) || 
            this.get_wiz_lite() || 
            $T04().prototype.get_Item.call(this.tile, r, c).IsKnownTrap() || $T04().prototype.get_Item.call(this.tile, r, c).IsShrine())) {
          result.color = $T17().Red;
        }
      }
    } else if (!(($T05().prototype.get_Item.call(this.actor, r, c) === null) || !$thisType.Map$player$value.CanSee($T05().prototype.get_Item.call(this.actor, r, c)))) {
      result.c = $T05().prototype.get_Item.call(this.actor, r, c).PhysicalObject$symbol$value;
      result.color = $T05().prototype.get_Item.call(this.actor, r, c).PhysicalObject$color$value;
    } else if ($T04().prototype.get_Item.call(this.tile, r, c).Tile$seen$value) {
      if ($T04().prototype.get_Item.call(this.tile, r, c).Tile$inv$value !== null) {
        result.c = $T04().prototype.get_Item.call(this.tile, r, c).Tile$inv$value.PhysicalObject$symbol$value;
        result.color = $T04().prototype.get_Item.call(this.tile, r, c).Tile$inv$value.PhysicalObject$color$value;
      } else if ($S16().CallVirtual("Is", null, $T04().prototype.get_Item.call(this.tile, r, c), $T2C().RUNE_OF_RETREAT)) {
        result.c = $T06().Feature($T2C().RUNE_OF_RETREAT).PhysicalObject$symbol$value;
        result.color = $T06().Feature($T2C().RUNE_OF_RETREAT).PhysicalObject$color$value;
      } else if ($S16().CallVirtual("Is", null, $T04().prototype.get_Item.call(this.tile, r, c), $T2C().FUNGUS)) {
        result.c = $T06().Feature($T2C().FUNGUS).PhysicalObject$symbol$value;
        result.color = $T06().Feature($T2C().FUNGUS).PhysicalObject$color$value;
      } else if ($S16().CallVirtual("Is", null, $T04().prototype.get_Item.call(this.tile, r, c), $T2C().FUNGUS_ACTIVE)) {
        result.c = $T06().Feature($T2C().FUNGUS_ACTIVE).PhysicalObject$symbol$value;
        result.color = $T06().Feature($T2C().FUNGUS_ACTIVE).PhysicalObject$color$value;
      } else if ($S16().CallVirtual("Is", null, $T04().prototype.get_Item.call(this.tile, r, c), $T2C().FUNGUS_PRIMED)) {
        result.c = $T06().Feature($T2C().FUNGUS_PRIMED).PhysicalObject$symbol$value;
        result.color = $T06().Feature($T2C().FUNGUS_PRIMED).PhysicalObject$color$value;
      } else {
        result.c = $T04().prototype.get_Item.call(this.tile, r, c).PhysicalObject$symbol$value;
        result.color = $T04().prototype.get_Item.call(this.tile, r, c).PhysicalObject$color$value;
        if (!(!((result.c.charCodeAt(0) === ".".charCodeAt(0)) && 
              (result.color === $T17().White)) && ((result.c.charCodeAt(0) !== "#".charCodeAt(0)) || 
              (result.color !== $T17().Gray)))) {
          result.color = $T17().DarkGray;
        }
      }
    } else {
      result.c = " ";
      result.color = $T17().Black;
    }
    return result;
  };

  JSIL.MakeClass($asm01.TypeRef("System.Object"), "Forays.Map", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.Game")], []), 
      Map__ctor
    );

    $.Method({Static:true , Public:false}, "$lGenerateBossLevel$gm__3", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Tile")], []), 
      Map_$lGenerateBossLevel$gm__3
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "$lGenerateBossLevel$gm__4", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Tile")], []), 
      Map_$lGenerateBossLevel$gm__4
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "$lGenerateLevel$gm__2", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Tile")], []), 
      Map_$lGenerateLevel$gm__2
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "$lSpawnMob$gm__1", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Tile")], []), 
      Map_$lSpawnMob$gm__1
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "AllActors", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Actor")]), [], []), 
      Map_AllActors
    );

    $.Method({Static:false, Public:true }, "AllPositions", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.pos")]), [], []), 
      Map_AllPositions
    );

    $.Method({Static:false, Public:true }, "AllTiles", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), [], []), 
      Map_AllTiles
    );

    $.Method({Static:false, Public:true }, "BoundsCheck", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $.Int32], []), 
      Map_BoundsCheck
    );

    $.Method({Static:false, Public:true }, "ChooseNextLevelType", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.LevelType"), [$asm00.TypeRef("Forays.LevelType")], []), 
      Map_ChooseNextLevelType
    );

    $.Method({Static:false, Public:true }, "Draw", 
      new JSIL.MethodSignature(null, [], []), 
      Map_Draw
    );

    $.Method({Static:false, Public:true }, "GenerateBossLevel", 
      new JSIL.MethodSignature(null, [$.Boolean], []), 
      Map_GenerateBossLevel
    );

    $.Method({Static:false, Public:true }, "GenerateLevel", 
      new JSIL.MethodSignature(null, [], []), 
      Map_GenerateLevel
    );

    $.Method({Static:false, Public:true }, "GenerateLevelTypes", 
      new JSIL.MethodSignature(null, [], []), 
      Map_GenerateLevelTypes
    );

    $.Method({Static:true , Public:true }, "get_B", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Buffer"), [], []), 
      Map_get_B
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_current_level", 
      new JSIL.MethodSignature($.Int32, [], []), 
      Map_get_current_level
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_danger_sensed", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Boolean]), [], []), 
      Map_get_danger_sensed
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:true }, "get_player", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Actor"), [], []), 
      Map_get_player
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:true }, "get_Q", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Queue"), [], []), 
      Map_get_Q
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_wiz_dark", 
      new JSIL.MethodSignature($.Boolean, [], []), 
      Map_get_wiz_dark
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_wiz_lite", 
      new JSIL.MethodSignature($.Boolean, [], []), 
      Map_get_wiz_lite
    );

    $.Method({Static:false, Public:true }, "InitLevel", 
      new JSIL.MethodSignature(null, [], []), 
      Map_InitLevel
    );

    $.Method({Static:false, Public:true }, "LevelMessage", 
      new JSIL.MethodSignature($.String, [], []), 
      Map_LevelMessage
    );

    $.Method({Static:false, Public:true }, "LoadLevel", 
      new JSIL.MethodSignature(null, [$.String], []), 
      Map_LoadLevel
    );

    $.Method({Static:false, Public:true }, "MobType", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.ActorType"), [], []), 
      Map_MobType
    );

    $.Method({Static:false, Public:true }, "RedrawWithStrings", 
      new JSIL.MethodSignature(null, [], []), 
      Map_RedrawWithStrings
    );

    $.Method({Static:false, Public:true }, "RemoveTargets", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.Actor")], []), 
      Map_RemoveTargets
    );

    $.Method({Static:true , Public:true }, "set_B", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.Buffer")], []), 
      Map_set_B
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_current_level", 
      new JSIL.MethodSignature(null, [$.Int32], []), 
      Map_set_current_level
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_danger_sensed", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$.Boolean])], []), 
      Map_set_danger_sensed
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:true }, "set_player", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.Actor")], []), 
      Map_set_player
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:true }, "set_Q", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.Queue")], []), 
      Map_set_Q
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_wiz_dark", 
      new JSIL.MethodSignature(null, [$.Boolean], []), 
      Map_set_wiz_dark
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_wiz_lite", 
      new JSIL.MethodSignature(null, [$.Boolean], []), 
      Map_set_wiz_lite
    );

    $.Method({Static:false, Public:true }, "SpawnItem", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Item"), [], []), 
      Map_SpawnItem
    );

    $.Method({Static:false, Public:true }, "SpawnMob", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Actor"), [], []), 
      Map_SpawnMob$00
    );

    $.Method({Static:false, Public:true }, "SpawnMob", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Actor"), [$asm00.TypeRef("Forays.ActorType")], []), 
      Map_SpawnMob$01
    );

    $.Method({Static:false, Public:true }, "TransitionMessage", 
      new JSIL.MethodSignature($.String, [$asm00.TypeRef("Forays.LevelType"), $asm00.TypeRef("Forays.LevelType")], []), 
      Map_TransitionMessage
    );

    $.Method({Static:false, Public:true }, "UpdateDangerValues", 
      new JSIL.MethodSignature(null, [], []), 
      Map_UpdateDangerValues
    );

    $.Method({Static:false, Public:true }, "VisibleColorChar", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.colorchar"), [$.Int32, $.Int32], []), 
      Map_VisibleColorChar
    );

    $.Constant({Static:true , Public:false}, "ROWS", 22); 
    $.Constant({Static:true , Public:false}, "COLS", 66); 
    $.Field({Static:false, Public:true }, "tile", $asm00.TypeRef("Forays.Map/PosArray`1", [$asm00.TypeRef("Forays.Tile")])); 
    $.Field({Static:false, Public:true }, "actor", $asm00.TypeRef("Forays.Map/PosArray`1", [$asm00.TypeRef("Forays.Actor")])); 
    $.Field({Static:false, Public:true }, "level_types", $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.LevelType")])); 
    $.Field({Static:false, Public:false}, "internal_wiz_lite", $.Boolean); 
    $.Field({Static:false, Public:false}, "generated_this_level", $asm00.TypeRef("Forays.Dict`2", [$asm00.TypeRef("Forays.ActorType"), $.Int32])); 
    $.Field({Static:true , Public:false}, "allpositions", $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.pos")])); 
    $.Field({Static:false, Public:false}, "Map$current_level$value", $.Int32)
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:false, Public:false}, "Map$wiz_dark$value", $.Boolean)
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:false, Public:false}, "Map$danger_sensed$value", $jsilcore.TypeRef("System.Array", [$.Boolean]))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "Map$player$value", $asm00.TypeRef("Forays.Actor"))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "Map$Q$value", $asm00.TypeRef("Forays.Queue"))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "Map$B$value", $asm00.TypeRef("Forays.Buffer"))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "$am", $asm00.TypeRef("Forays.Extensions/BooleanDelegate`1", [$asm00.TypeRef("Forays.Tile")]))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "$am", $asm00.TypeRef("Forays.Extensions/BooleanDelegate`1", [$asm00.TypeRef("Forays.Tile")]))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "$am", $asm00.TypeRef("Forays.Extensions/BooleanDelegate`1", [$asm00.TypeRef("Forays.Tile")]))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "$am", $asm00.TypeRef("Forays.Extensions/BooleanDelegate`1", [$asm00.TypeRef("Forays.Tile")]))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    function Map__cctor () {
      $thisType.allpositions = $S00().Construct();

      for (var i = 0; i < 22; i = ((i + 1) | 0)) {

        for (var j = 0; j < 66; j = ((j + 1) | 0)) {
          $thisType.allpositions.Add(new ($T02())(i, j));
        }
      }
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      new JSIL.MethodSignature(null, [], []), 
      Map__cctor
    );

    $.Property({Static:false, Public:true }, "current_level", $.Int32);

    $.Property({Static:false, Public:true }, "wiz_lite", $.Boolean);

    $.Property({Static:false, Public:true }, "wiz_dark", $.Boolean);

    $.Property({Static:false, Public:false}, "danger_sensed", $jsilcore.TypeRef("System.Array", [$.Boolean]));

    $.Property({Static:true , Public:true }, "player", $asm00.TypeRef("Forays.Actor"));

    $.Property({Static:true , Public:true }, "Q", $asm00.TypeRef("Forays.Queue"));

    $.Property({Static:true , Public:true }, "B", $asm00.TypeRef("Forays.Buffer"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function PosArray$b1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Forays.pos)) ();
  };

  function PosArray$b1__ctor (rows, cols) {
    this.objs = JSIL.MultidimensionalArray.New($thisType.T.get(this), rows, cols);
  };

  function PosArray$b1_get_Item$00 (row, col) {
    return this.objs.Get(row, col);
  };

  function PosArray$b1_get_Item$01 (p) {
    return this.objs.Get(p.row, p.col);
  };

  function PosArray$b1_set_Item$02 (row, col, value) {
    this.objs.Set(row, col, value);
  };

  function PosArray$b1_set_Item$03 (p, value) {
    this.objs.Set(p.row, p.col, value);
  };

  JSIL.MakeClass($asm01.TypeRef("System.Object"), "Forays.Map/PosArray`1", false, ["T"], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32], []), 
      PosArray$b1__ctor
    );

    $.Method({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature(new JSIL.GenericParameter("T", "Forays.Map/PosArray`1"), [$.Int32, $.Int32], []), 
      PosArray$b1_get_Item$00
    );

    $.Method({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature(new JSIL.GenericParameter("T", "Forays.Map/PosArray`1"), [$asm00.TypeRef("Forays.pos")], []), 
      PosArray$b1_get_Item$01
    );

    $.Method({Static:false, Public:true }, "set_Item", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          new JSIL.GenericParameter("T", "Forays.Map/PosArray`1")
        ], []), 
      PosArray$b1_set_Item$02
    );

    $.Method({Static:false, Public:true }, "set_Item", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.pos"), new JSIL.GenericParameter("T", "Forays.Map/PosArray`1")], []), 
      PosArray$b1_set_Item$03
    );

    $.Field({Static:false, Public:false}, "objs", $jsilcore.TypeRef("System.Array", [$.GenericParameter("T")])); 
    $.Property({Static:false, Public:true }, "Item", new JSIL.GenericParameter("T", "Forays.Map/PosArray`1"));

    $.Property({Static:false, Public:true }, "Item", new JSIL.GenericParameter("T", "Forays.Map/PosArray`1"));

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm01.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

(function Queue$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Forays.Game)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm02.System.Collections.Generic.LinkedList$b1.Of($asm00.Forays.Event))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Forays.Event)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm02.System.Collections.Generic.LinkedListNode$b1.Of($asm00.Forays.Event))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Forays.EventType)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Forays.PhysicalObject)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Forays.AttrType)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Forays.Buffer)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm01.System.Int32)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm02.TypeRef("System.Collections.Generic.LinkedList`1", [$asm00.TypeRef("Forays.Event")]), []))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.PhysicalObject"), $asm00.TypeRef("Forays.EventType")], []))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.PhysicalObject"), $asm00.TypeRef("Forays.AttrType")], []))) ();
  };

  function Queue__ctor (g) {
    this.list = $S00().Construct();
    this.Queue$turn$value = 0;
    $thisType.Queue$B$value = g.B;
  };

  function Queue_Add (e) {
    var $s00 = new JSIL.MethodSignature($asm02.TypeRef("System.Collections.Generic.LinkedListNode`1", [$asm00.TypeRef("Forays.Event")]), [$asm00.TypeRef("Forays.Event")], []);
    var $s01 = new JSIL.MethodSignature($asm02.TypeRef("System.Collections.Generic.LinkedListNode`1", [$asm00.TypeRef("Forays.Event")]), [$asm00.TypeRef("Forays.Event")], []);
    var $s02 = new JSIL.MethodSignature($asm02.TypeRef("System.Collections.Generic.LinkedListNode`1", [$asm00.TypeRef("Forays.Event")]), [$asm02.TypeRef("System.Collections.Generic.LinkedListNode`1", [$asm00.TypeRef("Forays.Event")]), $asm00.TypeRef("Forays.Event")], []);
    if (e.TimeToExecute() === this.Queue$turn$value) {
      $s00.Call($T01().prototype, "AddFirst", null, this.list, e);
    } else if (this.list.get_First() === null) {
      $s00.Call($T01().prototype, "AddFirst", null, this.list, e);
    } else if ($T02().op_GreaterThanOrEqual(e, this.list.get_Last().get_Value())) {
      $s01.Call($T01().prototype, "AddLast", null, this.list, e);
    } else {
      if (!$T02().op_LessThan(e, this.list.get_First().get_Value())) {

        for (var linkedListNode = this.list.get_Last(); !$T02().op_GreaterThanOrEqual(e, linkedListNode.get_Previous().get_Value()); linkedListNode = linkedListNode.get_Previous()) {
        }
        $s02.Call($T01().prototype, "AddAfter", null, this.list, linkedListNode.get_Previous(), e);
        return;
      }
      $s00.Call($T01().prototype, "AddFirst", null, this.list, e);
    }
  };

  function Queue_Contains (type) {

    for (var linkedListNode = this.list.get_First(); linkedListNode !== null; linkedListNode = linkedListNode.get_Next()) {
      if (linkedListNode.get_Value().Event$type$value === type) {
        return true;
      }
    }
    return false;
  };

  function Queue_Count () {
    return this.list.get_Count();
  };

  function Queue_get_B () {
    return $thisType.Queue$B$value;
  };

  function Queue_get_Tiebreaker () {
    if (this.list.get_Count() > 0) {
      return this.list.get_First().get_Value().Event$tiebreaker$value;
    }
    return -1;
  };

  function Queue_get_turn () {
    return this.Queue$turn$value;
  };

  function Queue_KillEvents$00 (target, type) {

    for (var linkedListNode = this.list.get_First(); linkedListNode !== null; linkedListNode = linkedListNode.get_Next()) {
      $S01().CallVirtual("Kill", null, linkedListNode.get_Value(), target, type);
    }
  };

  function Queue_KillEvents$01 (target, attr) {

    for (var linkedListNode = this.list.get_First(); linkedListNode !== null; linkedListNode = linkedListNode.get_Next()) {
      $S02().CallVirtual("Kill", null, linkedListNode.get_Value(), target, attr);
    }
  };

  function Queue_Pop () {
    var $s00 = new JSIL.MethodSignature($asm01.System.Boolean, [$asm00.TypeRef("Forays.Event")], []);
    this.Queue$turn$value = this.list.get_First().get_Value().TimeToExecute();
    var value = this.list.get_First().get_Value();
    value.Execute();
    $s00.CallVirtual("Remove", null, this.list, value);
  };

  function Queue_ResetForNewLevel () {
    var $s00 = new JSIL.MethodSignature($asm02.TypeRef("System.Collections.Generic.LinkedListNode`1", [$asm00.TypeRef("Forays.Event")]), [$asm00.TypeRef("Forays.Event")], []);
    var linkedList = $S00().Construct();

    for (var linkedListNode = this.list.get_First(); linkedListNode !== null; linkedListNode = linkedListNode.get_Next()) {
      if (linkedListNode.get_Value().Event$target$value === $T02().Event$player$value) {
        $s00.Call($T01().prototype, "AddLast", null, linkedList, linkedListNode.get_Value());
      }
    }
    this.list = linkedList;
  };

  function Queue_set_B (value) {
    $thisType.Queue$B$value = value;
  };

  function Queue_set_turn (value) {
    this.Queue$turn$value = value;
  };

  function Queue_UpdateTiebreaker (new_tiebreaker) {
    var $temp00;

    for (var linkedListNode = this.list.get_First(); linkedListNode !== null; linkedListNode = linkedListNode.get_Next()) {
      if (linkedListNode.get_Value().Event$tiebreaker$value >= new_tiebreaker) {
        ($temp00 = ((linkedListNode.get_Value().Event$tiebreaker$value + 1) | 0), 
          linkedListNode.Value.Event$tiebreaker$value = $temp00, 
          $temp00);
      }
    }
  };

  JSIL.MakeClass($asm01.TypeRef("System.Object"), "Forays.Queue", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.Game")], []), 
      Queue__ctor
    );

    $.Method({Static:false, Public:true }, "Add", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.Event")], []), 
      Queue_Add
    );

    $.Method({Static:false, Public:true }, "Contains", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.EventType")], []), 
      Queue_Contains
    );

    $.Method({Static:false, Public:true }, "Count", 
      new JSIL.MethodSignature($.Int32, [], []), 
      Queue_Count
    );

    $.Method({Static:true , Public:true }, "get_B", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Buffer"), [], []), 
      Queue_get_B
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Tiebreaker", 
      new JSIL.MethodSignature($.Int32, [], []), 
      Queue_get_Tiebreaker
    );

    $.Method({Static:false, Public:true }, "get_turn", 
      new JSIL.MethodSignature($.Int32, [], []), 
      Queue_get_turn
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "KillEvents", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.PhysicalObject"), $asm00.TypeRef("Forays.EventType")], []), 
      Queue_KillEvents$00
    );

    $.Method({Static:false, Public:true }, "KillEvents", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.PhysicalObject"), $asm00.TypeRef("Forays.AttrType")], []), 
      Queue_KillEvents$01
    );

    $.Method({Static:false, Public:true }, "Pop", 
      new JSIL.MethodSignature(null, [], []), 
      Queue_Pop
    );

    $.Method({Static:false, Public:true }, "ResetForNewLevel", 
      new JSIL.MethodSignature(null, [], []), 
      Queue_ResetForNewLevel
    );

    $.Method({Static:true , Public:true }, "set_B", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.Buffer")], []), 
      Queue_set_B
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_turn", 
      new JSIL.MethodSignature(null, [$.Int32], []), 
      Queue_set_turn
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "UpdateTiebreaker", 
      new JSIL.MethodSignature(null, [$.Int32], []), 
      Queue_UpdateTiebreaker
    );

    $.Field({Static:false, Public:true }, "list", $asm02.TypeRef("System.Collections.Generic.LinkedList`1", [$asm00.TypeRef("Forays.Event")])); 
    $.Field({Static:false, Public:false}, "Queue$turn$value", $.Int32)
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "Queue$B$value", $asm00.TypeRef("Forays.Buffer"))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Property({Static:false, Public:true }, "turn", $.Int32);

    $.Property({Static:false, Public:true }, "Tiebreaker", $.Int32);

    $.Property({Static:true , Public:true }, "B", $asm00.TypeRef("Forays.Buffer"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function Event$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Forays.PhysicalObject)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm01.System.Int32)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Forays.EventType)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Forays.Queue)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Forays.AttrType)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm01.System.String)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize(System.Array.Of($asm00.Forays.PhysicalObject))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.PhysicalObject))) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.Tile))) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.Forays.Tile)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.Forays.TileType)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.Forays.Actor)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.Forays.Item)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm00.Forays.Dict$b2.Of($asm00.Forays.AttrType, $asm01.System.Int32))) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm00.Forays.ActorType)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm00.Forays.Global)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm00.Forays.Buffer)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm01.System.Void)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm00.Forays.DamageType)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm00.Forays.DamageClass)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.Actor))) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm00.Forays.Map)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm00.Forays.Extensions)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm01.System.Boolean)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm00.Forays.Color)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.Item))) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm00.Forays.ConsumableType)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm00.Forays.Screen)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm00.Forays.colorchar)) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm02.System.Collections.Generic.LinkedList$b1_Enumerator.Of($asm00.Forays.Event))) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize($asm02.System.Collections.Generic.LinkedList$b1.Of($asm00.Forays.Event))) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm01.System.IDisposable)) ();
  };
  var $T20 = function () {
    return ($T20 = JSIL.Memoize($asm00.Forays.FeatureType)) ();
  };
  var $T21 = function () {
    return ($T21 = JSIL.Memoize($asm00.Forays.Map_PosArray$b1.Of($asm00.Forays.Actor))) ();
  };
  var $T22 = function () {
    return ($T22 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.FeatureType))) ();
  };
  var $T23 = function () {
    return ($T23 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.pos))) ();
  };
  var $T24 = function () {
    return ($T24 = JSIL.Memoize($asm02.System.Collections.Generic.LinkedListNode$b1.Of($asm00.Forays.Event))) ();
  };
  var $T25 = function () {
    return ($T25 = JSIL.Memoize($asm00.Forays.Map_PosArray$b1.Of($asm00.Forays.Tile))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.PhysicalObject")]), []))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), []))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Boolean"), [$asm00.TypeRef("Forays.TileType")], []))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Int32"), [$asm00.TypeRef("Forays.PhysicalObject")], []))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.MethodSignature($asm00.TypeRef("Forays.Actor"), [$asm00.TypeRef("Forays.PhysicalObject")], []))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Event"), [
        $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.EventType")
      ]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Event"), [$asm01.TypeRef("System.Int32"), $asm00.TypeRef("Forays.EventType")]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Event"), [
        $asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), 
        $asm01.TypeRef("System.Int32"), $asm00.TypeRef("Forays.EventType"), 
        $asm00.TypeRef("Forays.AttrType"), $asm01.TypeRef("System.Int32"), 
        $asm01.TypeRef("System.String"), $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.PhysicalObject")])
      ]))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Actor"), [
        $asm00.TypeRef("Forays.ActorType"), $asm01.TypeRef("System.String"), 
        $asm01.TypeRef("System.Char"), $asm00.TypeRef("Forays.Color"), 
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.AttrType")])
      ]))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Item")]), []))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.colorchar"), [$asm00.TypeRef("Forays.Color"), $asm01.TypeRef("System.Char")]))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.PhysicalObject"), $asm00.TypeRef("Forays.EventType")], []))) ();
  };
  var $S0C = function () {
    return ($S0C = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Item"), [
        $asm00.TypeRef("Forays.Item"), $asm01.TypeRef("System.Int32"), 
        $asm01.TypeRef("System.Int32")
      ]))) ();
  };
  var $S0D = function () {
    return ($S0D = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Boolean"), [$asm00.TypeRef("Forays.FeatureType")], []))) ();
  };
  var $S0E = function () {
    return ($S0E = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.colorchar")
      ], []))) ();
  };
  var $S0F = function () {
    return ($S0F = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.pos")]), []))) ();
  };
  var $S10 = function () {
    return ($S10 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.pos")]), $asm00.TypeRef("Forays.colorchar")], []))) ();
  };
  var $S11 = function () {
    return ($S11 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.colorchar"), [$asm01.TypeRef("System.Char"), $asm00.TypeRef("Forays.Color")]))) ();
  };
  var $S12 = function () {
    return ($S12 = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Boolean"), [$asm00.TypeRef("Forays.PhysicalObject")], []))) ();
  };
  var $S13 = function () {
    return ($S13 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Event"), [
        $asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.EventType")
      ]))) ();
  };
  var $S14 = function () {
    return ($S14 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Event"), [
        $asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.EventType"), $asm01.TypeRef("System.Int32")
      ]))) ();
  };
  var $S15 = function () {
    return ($S15 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.pos")]), $asm00.TypeRef("Forays.colorchar"), 
        $asm01.TypeRef("System.Int32")
      ], []))) ();
  };
  var $S16 = function () {
    return ($S16 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Event"), [
        $asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), 
        $asm01.TypeRef("System.Int32"), $asm00.TypeRef("Forays.EventType")
      ]))) ();
  };
  var $S17 = function () {
    return ($S17 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Actor")]), []))) ();
  };
  var $S18 = function () {
    return ($S18 = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Boolean"), [$asm00.TypeRef("Forays.FeatureType")], []))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm01.System.IDisposable.Dispose)) ();
  };

  function Event__ctor$00 () {
    this.area = null;
  };

  function Event__ctor$01 (target_, delay_) {
    this.area = null;
    this.Event$target$value = target_;
    this.Event$delay$value = delay_;
    this.Event$type$value = $T02().MOVE;
    this.Event$value$value = 0;
    this.Event$msg$value = "";
    this.msg_objs = null;
    this.Event$time_created$value = $thisType.Event$Q$value.Queue$turn$value;
    this.Event$dead$value = false;
    this.Event$tiebreaker$value = $thisType.Event$Q$value.get_Tiebreaker();
  };

  function Event__ctor$02 (target_, delay_, attr_) {
    this.area = null;
    this.Event$target$value = target_;
    this.Event$delay$value = delay_;
    this.Event$type$value = $T02().REMOVE_ATTR;
    this.Event$attr$value = attr_;
    this.Event$value$value = 1;
    this.Event$msg$value = "";
    this.msg_objs = null;
    this.Event$time_created$value = $thisType.Event$Q$value.Queue$turn$value;
    this.Event$dead$value = false;
    this.Event$tiebreaker$value = $thisType.Event$Q$value.get_Tiebreaker();
  };

  function Event__ctor$03 (target_, delay_, attr_, value_) {
    this.area = null;
    this.Event$target$value = target_;
    this.Event$delay$value = delay_;
    this.Event$type$value = $T02().REMOVE_ATTR;
    this.Event$attr$value = attr_;
    this.Event$value$value = value_;
    this.Event$msg$value = "";
    this.msg_objs = null;
    this.Event$time_created$value = $thisType.Event$Q$value.Queue$turn$value;
    this.Event$dead$value = false;
    this.Event$tiebreaker$value = $thisType.Event$Q$value.get_Tiebreaker();
  };

  function Event__ctor$04 (target_, delay_, attr_, msg_) {
    this.area = null;
    this.Event$target$value = target_;
    this.Event$delay$value = delay_;
    this.Event$type$value = $T02().REMOVE_ATTR;
    this.Event$attr$value = attr_;
    this.Event$value$value = 1;
    this.Event$msg$value = msg_;
    this.msg_objs = null;
    this.Event$time_created$value = $thisType.Event$Q$value.Queue$turn$value;
    this.Event$dead$value = false;
    this.Event$tiebreaker$value = $thisType.Event$Q$value.get_Tiebreaker();
  };

  function Event__ctor$05 (target_, delay_, attr_, value_, msg_) {
    this.area = null;
    this.Event$target$value = target_;
    this.Event$delay$value = delay_;
    this.Event$type$value = $T02().REMOVE_ATTR;
    this.Event$attr$value = attr_;
    this.Event$value$value = value_;
    this.Event$msg$value = msg_;
    this.msg_objs = null;
    this.Event$time_created$value = $thisType.Event$Q$value.Queue$turn$value;
    this.Event$dead$value = false;
    this.Event$tiebreaker$value = $thisType.Event$Q$value.get_Tiebreaker();
  };

  function Event__ctor$06 (target_, delay_, attr_, msg_, objs) {
    this.area = null;
    this.Event$target$value = target_;
    this.Event$delay$value = delay_;
    this.Event$type$value = $T02().REMOVE_ATTR;
    this.Event$attr$value = attr_;
    this.Event$value$value = 1;
    this.Event$msg$value = msg_;
    this.msg_objs = $S00().Construct();

    for (var i = 0; i < objs.length; i = ((i + 1) | 0)) {
      var item = objs[i];
      this.msg_objs.Add(item);
    }
    this.Event$time_created$value = $thisType.Event$Q$value.Queue$turn$value;
    this.Event$dead$value = false;
    this.Event$tiebreaker$value = $thisType.Event$Q$value.get_Tiebreaker();
  };

  function Event__ctor$07 (target_, delay_, attr_, value_, msg_, objs) {
    this.area = null;
    this.Event$target$value = target_;
    this.Event$delay$value = delay_;
    this.Event$type$value = $T02().REMOVE_ATTR;
    this.Event$attr$value = attr_;
    this.Event$value$value = value_;
    this.Event$msg$value = msg_;
    this.msg_objs = $S00().Construct();

    for (var i = 0; i < objs.length; i = ((i + 1) | 0)) {
      var item = objs[i];
      this.msg_objs.Add(item);
    }
    this.Event$time_created$value = $thisType.Event$Q$value.Queue$turn$value;
    this.Event$dead$value = false;
    this.Event$tiebreaker$value = $thisType.Event$Q$value.get_Tiebreaker();
  };

  function Event__ctor$08 (delay_, type_) {
    this.area = null;
    this.Event$target$value = null;
    this.Event$delay$value = delay_;
    this.Event$type$value = type_;
    this.Event$attr$value = $T04().NO_ATTR;
    this.Event$value$value = 0;
    this.Event$msg$value = "";
    this.msg_objs = null;
    this.Event$time_created$value = $thisType.Event$Q$value.Queue$turn$value;
    this.Event$dead$value = false;
    this.Event$tiebreaker$value = $thisType.Event$Q$value.get_Tiebreaker();
  };

  function Event__ctor$09 (target_, delay_, type_) {
    this.area = null;
    this.Event$target$value = target_;
    this.Event$delay$value = delay_;
    this.Event$type$value = type_;
    this.Event$attr$value = $T04().NO_ATTR;
    this.Event$value$value = 0;
    this.Event$msg$value = "";
    this.msg_objs = null;
    this.Event$time_created$value = $thisType.Event$Q$value.Queue$turn$value;
    this.Event$dead$value = false;
    this.Event$tiebreaker$value = $thisType.Event$Q$value.get_Tiebreaker();
  };

  function Event__ctor$0A (target_, delay_, type_, value_) {
    this.area = null;
    this.Event$target$value = target_;
    this.Event$delay$value = delay_;
    this.Event$type$value = type_;
    this.Event$attr$value = $T04().NO_ATTR;
    this.Event$value$value = value_;
    this.Event$msg$value = "";
    this.msg_objs = null;
    this.Event$time_created$value = $thisType.Event$Q$value.Queue$turn$value;
    this.Event$dead$value = false;
    this.Event$tiebreaker$value = $thisType.Event$Q$value.get_Tiebreaker();
  };

  function Event__ctor$0B (delay_, msg_) {
    this.area = null;
    this.Event$target$value = null;
    this.Event$delay$value = delay_;
    this.Event$type$value = $T02().ANY_EVENT;
    this.Event$attr$value = $T04().NO_ATTR;
    this.Event$value$value = 0;
    this.Event$msg$value = msg_;
    this.msg_objs = null;
    this.Event$time_created$value = $thisType.Event$Q$value.Queue$turn$value;
    this.Event$dead$value = false;
    this.Event$tiebreaker$value = $thisType.Event$Q$value.get_Tiebreaker();
  };

  function Event__ctor$0C (area_, delay_, type_) {
    var $temp00;
    this.area = null;
    this.Event$target$value = null;
    this.area = $S01().Construct();

    for (var a$0 = area_._items, i$0 = 0, l$0 = area_._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      this.area.Add(current);
    }
    this.Event$delay$value = delay_;
    this.Event$type$value = type_;
    this.Event$attr$value = $T04().NO_ATTR;
    this.Event$value$value = 0;
    this.Event$msg$value = "";
    this.msg_objs = null;
    this.Event$time_created$value = $thisType.Event$Q$value.Queue$turn$value;
    this.Event$dead$value = false;
    this.Event$tiebreaker$value = $thisType.Event$Q$value.get_Tiebreaker();
  };

  function Event__ctor$0D (area_, delay_, type_, msg_, objs) {
    this.area = null;
    this.Event$target$value = null;
    this.area = area_;
    this.Event$delay$value = delay_;
    this.Event$type$value = type_;
    this.Event$attr$value = $T04().NO_ATTR;
    this.Event$value$value = 0;
    this.Event$msg$value = msg_;
    this.msg_objs = $S00().Construct();

    for (var i = 0; i < objs.length; i = ((i + 1) | 0)) {
      var item = objs[i];
      this.msg_objs.Add(item);
    }
    this.Event$time_created$value = $thisType.Event$Q$value.Queue$turn$value;
    this.Event$dead$value = false;
    this.Event$tiebreaker$value = $thisType.Event$Q$value.get_Tiebreaker();
  };

  function Event__ctor$0E (target_, area_, delay_, type_) {
    this.area = null;
    this.Event$target$value = target_;
    this.area = area_;
    this.Event$delay$value = delay_;
    this.Event$type$value = type_;
    this.Event$attr$value = $T04().NO_ATTR;
    this.Event$value$value = 0;
    this.Event$msg$value = "";
    this.msg_objs = null;
    this.Event$time_created$value = $thisType.Event$Q$value.Queue$turn$value;
    this.Event$dead$value = false;
    this.Event$tiebreaker$value = $thisType.Event$Q$value.get_Tiebreaker();
  };

  function Event__ctor$0F (target_, area_, delay_, type_, attr_, value_, msg_, objs) {
    this.area = null;
    this.Event$target$value = target_;
    this.area = area_;
    this.Event$delay$value = delay_;
    this.Event$type$value = type_;
    this.Event$attr$value = attr_;
    this.Event$value$value = value_;
    this.Event$msg$value = msg_;
    this.msg_objs = $S00().Construct();

    for (var i = 0; i < objs.length; i = ((i + 1) | 0)) {
      var item = objs[i];
      this.msg_objs.Add(item);
    }
    this.Event$time_created$value = $thisType.Event$Q$value.Queue$turn$value;
    this.Event$dead$value = false;
    this.Event$tiebreaker$value = $thisType.Event$Q$value.get_Tiebreaker();
  };

  function Event_$lExecute$gm__10 (t) {
    return (!(!t.Tile$passable$value || 
        (t.Tile$type$value === $T0A().CHASM)) && ($thisType.Event$player$value.tile() !== t));
  };

  function Event_$lExecute$gm__11 (t) {
    return (t.Tile$passable$value && (t.Tile$type$value !== $T0A().CHASM));
  };

  function Event_$lExecute$gm__12 (t) {
    return (!(!t.Tile$passable$value || 
        (t.Tile$type$value === $T0A().CHASM)) && ($thisType.Event$player$value.tile() !== t));
  };

  function Event_$lExecute$gm__13 (x) {
    return $S02().CallVirtual("Is", null, x, $T0A().WALL);
  };

  function Event_$lExecute$gm__14 (x) {
    return $S02().CallVirtual("Is", null, x, $T0A().WALL);
  };

  function Event_$lExecute$gm__5 (t) {
    return (t.actor() === $thisType.Event$player$value);
  };

  function Event_$lExecute$gm__6 (t) {
    return (!((t.actor() !== null) || 
        ($S03().CallVirtual("DistanceFrom", null, t, $thisType.Event$player$value) < 2) || 
        !t.HasLOE($thisType.Event$player$value)) && ($S04().CallVirtual("FirstActorInLine", null, t, $thisType.Event$player$value) === $thisType.Event$player$value));
  };

  function Event_$lExecute$gm__7 (t) {
    return (!(($S03().CallVirtual("DistanceFrom", null, t, $thisType.Event$player$value) !== 1) || 
        !t.Tile$passable$value) && (t.actor() === null));
  };

  function Event_$lExecute$gm__8 (t) {
    return (!(($S03().CallVirtual("DistanceFrom", null, t, $thisType.Event$player$value) !== 1) || 
        !t.Tile$passable$value) && (t.actor() === null));
  };

  function Event_$lExecute$gm__9 (t) {
    return (!((t.Tile$inv$value === null) || 
        (t.actor() !== null) || 
        ($S03().CallVirtual("DistanceFrom", null, t, $thisType.Event$player$value) < 2) || 
        !t.HasLOE($thisType.Event$player$value)) && ($S04().CallVirtual("FirstActorInLine", null, t, $thisType.Event$player$value) === $thisType.Event$player$value));
  };

  function Event_$lExecute$gm__A (t) {
    return ((t.Tile$type$value === $T0A().DOOR_O) || (t.Tile$type$value === $T0A().DOOR_C));
  };

  function Event_$lExecute$gm__B (t) {
    return ((t.Tile$type$value === $T0A().DOOR_O) || (t.Tile$type$value === $T0A().DOOR_C));
  };

  function Event_$lExecute$gm__C (x) {
    return (x.actor() !== null);
  };

  function Event_$lExecute$gm__D (x) {
    return (x.actor() !== null);
  };

  function Event_$lExecute$gm__E (t) {
    return (!(!t.Tile$passable$value || 
        $S02().CallVirtual("Is", null, t, $T0A().CHASM)) && (t.actor() === null));
  };

  function Event_$lExecute$gm__F (t) {
    return (!(!t.Tile$passable$value || 
        $S02().CallVirtual("Is", null, t, $T0A().CHASM)) && (t.actor() === null));
  };

  function Event_Execute () {
    var $temp00, $temp01, $temp02, $temp03, $temp04, $temp05, $temp06, $temp07, $temp08, $temp09, $temp0A, $temp0B, $temp0C, $temp0D, $temp0E, $temp0F, $temp10, $temp11, $temp12, $temp13, $temp14, $temp15, $temp16, $temp17, $temp18, $temp19, $temp1A, $temp1B, $temp1C, $temp1D, $temp1E, $temp1F;
    var attrs = null, attr = $asm00.Forays.AttrType.STEALTHY, attrs2 = null, attrs3 = null, attrs4 = null, attrs5 = null, attrs6 = null, attrs7 = null, attrs8 = null, attrs9 = null;
    if (!this.Event$dead$value) {
      switch (this.Event$type$value.valueOf()) {
        case 1: 
          var actor = $T0B().$As(this.Event$target$value);
          actor.Input();
          break;

        case 2: 
          var actor2 = $T0B().$As(this.Event$target$value);
          if (!((actor2.Actor$type$value !== $T0E().BERSERKER) || (this.Event$attr$value !== $T04().COOLDOWN_2))) {
            $T0D().prototype.set_Item.call(actor2.attrs, this.Event$attr$value, 0);
          } else {
            var expr_D5 = (attrs = actor2.attrs);
            var expr_DD = (attr = this.Event$attr$value);
            var num = $T0D().prototype.get_Item.call(attrs, attr);
            $T0D().prototype.set_Item.call(expr_D5, expr_DD, ((num - this.Event$value$value) | 0));
          }
          if (!((this.Event$attr$value !== $T04().TELEPORTING) && (this.Event$attr$value !== $T04().ARCANE_SHIELDED))) {
            $T0D().prototype.set_Item.call(actor2.attrs, this.Event$attr$value, 0);
          }
          if (!((this.Event$attr$value !== $T04().ENHANCED_TORCH) || (actor2.PhysicalObject$light_radius$value <= 0))) {
            actor2.UpdateRadius(
              actor2.LightRadius(), 
              ((6 - $T0D().prototype.get_Item.call(actor2.attrs, $T04().DIM_LIGHT)) | 0), 
              true
            );
            if ($T0D().prototype.get_Item.call(actor2.attrs, $T04().ON_FIRE) > actor2.PhysicalObject$light_radius$value) {
              actor2.UpdateRadius(actor2.PhysicalObject$light_radius$value, $T0D().prototype.get_Item.call(actor2.attrs, $T04().ON_FIRE));
            }
          }
          if (this.Event$attr$value === $T04().SLOWED) {
            if (actor2.Actor$type$value.valueOf() !== 0) {
              actor2.Actor$speed$value = $T0B().Prototype(actor2.Actor$type$value).Actor$speed$value;
            } else if (actor2.HasAttr($T04().LONG_STRIDE)) {
              actor2.Actor$speed$value = 80;
            } else {
              actor2.Actor$speed$value = 100;
            }
          }
          if (!((this.Event$attr$value !== $T04().AFRAID) || (this.Event$target$value !== $thisType.Event$player$value))) {
            $T0F().FlushInput();
          }
          if (this.Event$attr$value === $T04().BLOOD_BOILED) {
            ($temp00 = ((actor2.Actor$speed$value + ((10 * this.Event$value$value) | 0)) | 0), 
              actor2.Actor$speed$value = $temp00, 
              $temp00);
          }
          if (this.Event$attr$value === $T04().CONVICTION) {
            if (actor2.HasAttr($T04().IN_COMBAT)) {
              var expr_244 = (attrs2 = actor2.attrs);
              num = $T0D().prototype.get_Item.call(attrs2, $T04().CONVICTION);
              $T0D().prototype.set_Item.call(expr_244, $T04().CONVICTION, ((num + this.Event$value$value) | 0));
            } else {
              var expr_26D = (attrs3 = actor2.attrs);
              num = $T0D().prototype.get_Item.call(attrs3, $T04().BONUS_SPIRIT);
              $T0D().prototype.set_Item.call(expr_26D, $T04().BONUS_SPIRIT, ((num - this.Event$value$value) | 0));
              var expr_291 = (attrs4 = actor2.attrs);
              num = $T0D().prototype.get_Item.call(attrs4, $T04().BONUS_COMBAT);
              $T0D().prototype.set_Item.call(expr_291, $T04().BONUS_COMBAT, ((num - ((this.Event$value$value / 2) | 0)) | 0));
              if ($T0D().prototype.get_Item.call(actor2.attrs, $T04().KILLSTREAK) >= 2) {
                $thisType.Event$B$value.Add("You wipe off your weapon. ", JSIL.Array.New($T00(), 0));
              }
              $T0D().prototype.set_Item.call(actor2.attrs, $T04().KILLSTREAK, 0);
            }
          }
          if (!((this.Event$attr$value !== $T04().STUNNED) || 
              !((this.Event$msg$value.indexOf("disoriented") != -1)) || $thisType.Event$player$value.CanSee(this.Event$target$value))) {
            this.Event$msg$value = "";
          }
          if (!((this.Event$attr$value !== $T04().POISONED) || (actor2 !== $thisType.Event$player$value))) {
            if (actor2.HasAttr($T04().POISONED)) {
              $thisType.Event$B$value.Add("The poison begins to subside. ", JSIL.Array.New($T00(), 0));
            } else {
              $thisType.Event$B$value.Add("You are no longer poisoned. ", JSIL.Array.New($T00(), 0));
            }
          }
          if (!((this.Event$attr$value !== $T04().COOLDOWN_1) || (actor2.Actor$type$value !== $T0E().BERSERKER))) {
            $thisType.Event$B$value.Add(JSIL.ConcatString(actor2.Your(), " rage diminishes. "), JSIL.Array.New($T00(), [actor2]));
            $thisType.Event$B$value.Add(JSIL.ConcatString(actor2.PhysicalObject$the_name$value, " dies. "), JSIL.Array.New($T00(), [actor2]));
            actor2.TakeDamage($T12().NORMAL, $T13().NO_TYPE, 8888, null);
          }
          break;

        case 3: 
          var list = $S01().Construct();

          for (var a$0 = this.area._items, i$0 = 0, l$0 = this.area._size; i$0 < l$0; ($temp02 = i$0, 
              i$0 = ((i$0 + 1) | 0), 
              $temp02)) {
            var current = a$0[i$0];
            if ($thisType.Event$player$value.CanSee(current)) {
              var num2 = (($S03().CallVirtual("DistanceFrom", null, $thisType.Event$player$value, current) + 1) | 0);
              if ($thisType.Event$player$value.HasAttr($T04().KEEN_EYES)) {
                num2 = ((num2 - 1) | 0);
              }
              if (!(current.IsLit() || $thisType.Event$player$value.HasAttr($T04().SHADOWSIGHT))) {
                num2 = ((num2 + 1) | 0);
              }
              if (num2 > 8) {
                num2 = 8;
              }
              var num3 = 1;

              for (var i = num2; i > 0; i = ((i - 1) | 0)) {
                num3 = ((num3 * 2) | 0);
              }
              if ($T0F().Roll(num3) === num3) {
                if (!(!current.IsTrap() && 
                    !$S02().CallVirtual("Is", null, current, $T0A().FIRE_GEYSER) && 
                    !$S02().CallVirtual("Is", null, current, $T0A().FOG_VENT) && !$S02().CallVirtual("Is", null, current, $T0A().POISON_GAS_VENT))) {
                  current.PhysicalObject$$name$value = $T09().Prototype(current.Tile$type$value).PhysicalObject$$name$value;
                  current.PhysicalObject$a_name$value = $T09().Prototype(current.Tile$type$value).PhysicalObject$a_name$value;
                  current.PhysicalObject$the_name$value = $T09().Prototype(current.Tile$type$value).PhysicalObject$the_name$value;
                  current.PhysicalObject$symbol$value = $T09().Prototype(current.Tile$type$value).PhysicalObject$symbol$value;
                  current.PhysicalObject$color$value = $T09().Prototype(current.Tile$type$value).PhysicalObject$color$value;
                  $thisType.Event$B$value.Add(("You notice " + current.PhysicalObject$a_name$value + ". "), JSIL.Array.New($T00(), 0));
                } else if (current.Tile$type$value === $T0A().HIDDEN_DOOR) {
                  current.Toggle(null);
                  $thisType.Event$B$value.Add("You notice a hidden door. ", JSIL.Array.New($T00(), 0));
                }
                list.Add(current);
              }
            }
          }

          for (var a$1 = list._items, i$1 = 0, l$1 = list._size; i$1 < l$1; ($temp03 = i$1, 
              i$1 = ((i$1 + 1) | 0), 
              $temp03)) {
            var current2 = a$1[i$1];
            this.area.Remove(current2);
          }
          if (this.area.get_Count() > 0) {
            $thisType.Event$Q$value.Add($S05().Construct(this.area, 100, $T02().CHECK_FOR_HIDDEN));
          }
          break;

        case 4: 
          if (!(($thisType.Event$M$value.AllActors().get_Count() !== 1) || 
              $thisType.Event$Q$value.Contains($T02().POLTERGEIST) || 
              $thisType.Event$Q$value.Contains($T02().BOSS_ARRIVE) || 
              $thisType.Event$Q$value.Contains($T02().REGENERATING_FROM_DEATH) || 
              $thisType.Event$Q$value.Contains($T02().MIMIC) || $thisType.Event$Q$value.Contains($T02().MARBLE_HORROR))) {
            $thisType.Event$B$value.Add("The dungeon is still and silent. ", JSIL.Array.New($T00(), 0));
            $thisType.Event$B$value.PrintAll();
          } else {
            $thisType.Event$Q$value.Add($S06().Construct((((($T0F().Roll(20) + 40) | 0) * 100) | 0), $T02().RELATIVELY_SAFE));
          }
          break;

        case 5: 
          if (!((this.Event$target$value === null) || ($T0B().$As(this.Event$target$value) === null))) {
            $thisType.Event$Q$value.Add($S07().Construct(this.Event$target$value, this.area, (((($T0F().Roll(8) + 6) | 0) * 100) | 0), $T02().POLTERGEIST, $T04().NO_ATTR, 0, "", JSIL.Array.New($T00(), 0)));
          } else if ($T16().Any$b1($T09())(this.area, function Event_$lExecute$gm__5 (t) {
                return (t.actor() === $thisType.Event$player$value);
              })) {

            var $label0 = 0;
          $labelgroup0: 
            while (true) {
              switch ($label0) {
                case 0: /* $entry0 */ 
                  var flag = false;
                  if (this.Event$value$value === 0) {
                    $thisType.Event$B$value.Add("You feel like you're being watched. ", JSIL.Array.New($T00(), 0));
                  } else if (this.Event$target$value !== null) {
                    var tile = $T16().Random$b1($T09())($T16().Where$b1($T09())(this.area, function Event_$lExecute$gm__6 (t) {
                          return (!((t.actor() !== null) || 
                              ($S03().CallVirtual("DistanceFrom", null, t, $thisType.Event$player$value) < 2) || 
                              !t.HasLOE($thisType.Event$player$value)) && 
                            ($S04().CallVirtual("FirstActorInLine", null, t, $thisType.Event$player$value) === $thisType.Event$player$value));
                        }));
                    if (tile === null) {
                      $thisType.Event$Q$value.Add($S07().Construct(this.Event$target$value, this.area, 100, $T02().POLTERGEIST, $T04().NO_ATTR, this.Event$value$value, "", JSIL.Array.New($T00(), 0)));
                      return;
                    }
                    var actor3 = $S08().Construct($T0E().POLTERGEIST, "something", "G", $T18().DarkGreen, 1, 1, 0, 0, JSIL.Array.New($T04(), 0));
                    actor3.PhysicalObject$a_name$value = "something";
                    actor3.PhysicalObject$the_name$value = "something";
                    actor3.p = tile.p.MemberwiseClone();
                    actor3.Actor$inv$value = $S09().Construct();
                    actor3.Actor$inv$value.Add($T0C().$As(this.Event$target$value));
                    var item = actor3.Actor$inv$value.get_Item(0);
                    if (item.PhysicalObject$symbol$value.charCodeAt(0) === "*".charCodeAt(0)) {
                      if (!((item.Item$type$value !== $T1A().SUNLIGHT) && (item.Item$type$value !== $T1A().DARKNESS))) {
                        $thisType.Event$B$value.Add((actor3.You("throw") + " " + item.AName() + ". "), JSIL.Array.New($T00(), [actor3]));
                        $thisType.Event$B$value.DisplayNow();
                        $T1B().AnimateProjectile($T16().ToFirstObstruction(tile.GetBestExtendedLineOfEffect($thisType.Event$player$value)), $S0A().Construct(item.PhysicalObject$color$value, item.PhysicalObject$symbol$value));
                        $thisType.Event$B$value.Add(JSIL.ConcatString(item.TheName(), " shatters on you! "), JSIL.Array.New($T00(), 0));
                      }
                      (actor3.Actor$inv$value.get_Item(0)).Use(actor3, actor3.GetBestExtendedLineOfEffect($thisType.Event$player$value));
                    } else {
                      $thisType.Event$B$value.Add((actor3.You("throw") + " " + item.AName() + ". "), JSIL.Array.New($T00(), [actor3]));
                      $thisType.Event$B$value.DisplayNow();
                      $T1B().AnimateProjectile($T16().ToFirstObstruction(tile.GetBestExtendedLineOfEffect($thisType.Event$player$value)), $S0A().Construct(item.PhysicalObject$color$value, item.PhysicalObject$symbol$value));
                      $thisType.Event$player$value.tile().GetItem(item);
                      $thisType.Event$B$value.Add(JSIL.ConcatString(item.TheName(), " hits you. "), JSIL.Array.New($T00(), 0));
                      $thisType.Event$player$value.TakeDamage(
                        $T12().NORMAL, 
                        $T13().PHYSICAL, 
                        $T0F().Roll(6), 
                        actor3, 
                        JSIL.ConcatString("a flying ", item.Name())
                      );
                    }
                    this.Event$target$value = null;
                  } else {
                    if (this.Event$value$value >= 3) {
                      if ($T16().Any$b1($T09())(this.area, function Event_$lExecute$gm__7 (t) {
                            return (!(($S03().CallVirtual("DistanceFrom", null, t, $thisType.Event$player$value) !== 1) || 
                                !t.Tile$passable$value) && (t.actor() === null));
                          })) {
                        var tile2 = $T16().Random$b1($T09())($T16().Where$b1($T09())(this.area, function Event_$lExecute$gm__8 (t) {
                              return (!(($S03().CallVirtual("DistanceFrom", null, t, $thisType.Event$player$value) !== 1) || 
                                  !t.Tile$passable$value) && 
                                (t.actor() === null));
                            }));
                        $thisType.Event$B$value.DisplayNow();

                        for (var j = 4; j > 0; j = ((j - 1) | 0)) {
                          $T1B().AnimateStorm(
                            tile2.p, 
                            j, 
                            2, 
                            1, 
                            "G", 
                            $T18().DarkGreen
                          );
                        }
                        var actor4 = $T0B().Create(
                          $T0E().POLTERGEIST, 
                          tile2.get_row(), 
                          tile2.get_col()
                        );
                        $S0B().CallVirtual("KillEvents", null, $thisType.Event$Q$value, actor4, $T02().MOVE);
                        actor4.Q0();
                        actor4.player_visibility_duration = -1;
                        var enumerator3 = $T1E().prototype.GetEnumerator.call($thisType.Event$Q$value.list).MemberwiseClone();
                        try {

                        $loop4: 
                          while (enumerator3.MoveNext()) {
                            var current3 = enumerator3.get_Current();
                            if (!((current3.Event$target$value !== actor4) || (current3.Event$type$value !== $T02().MOVE))) {
                              current3.Event$tiebreaker$value = this.Event$tiebreaker$value;
                              break $loop4;
                            }
                          }
                        } finally {
                          $IM00().Call(enumerator3, null);
                        }
                        $T0B().tiebreakers.set_Item(this.Event$tiebreaker$value, actor4);
                        $thisType.Event$B$value.Add("A poltergeist manifests in front of you! ", JSIL.Array.New($T00(), 0));
                        $thisType.Event$Q$value.Add($S07().Construct(actor4, this.area, (((($T0F().Roll(8) + 6) | 0) * 100) | 0), $T02().POLTERGEIST, $T04().NO_ATTR, 0, "", JSIL.Array.New($T00(), 0)));
                        flag = true;
                        $label0 = 1 /* goto IL_10B6 */ ;
                        continue $labelgroup0;
                      }
                    }
                    if ($thisType.Event$player$value.tile().Tile$type$value === $T0A().DOOR_O) {
                      $thisType.Event$B$value.Add("The door slams closed on you! ", JSIL.Array.New($T00(), 0));
                      $thisType.Event$player$value.TakeDamage(
                        $T12().NORMAL, 
                        $T13().PHYSICAL, 
                        $T0F().Roll(6), 
                        null, 
                        "a slamming door"
                      );
                    } else {
                      var tile3 = $T16().Random$b1($T09())($T16().Where$b1($T09())(this.area, function Event_$lExecute$gm__9 (t) {
                            return (!((t.Tile$inv$value === null) || 
                                (t.actor() !== null) || 
                                ($S03().CallVirtual("DistanceFrom", null, t, $thisType.Event$player$value) < 2) || 
                                !t.HasLOE($thisType.Event$player$value)) && 
                              ($S04().CallVirtual("FirstActorInLine", null, t, $thisType.Event$player$value) === $thisType.Event$player$value));
                          }));
                      if (tile3 !== null) {
                        var actor5 = $S08().Construct($T0E().POLTERGEIST, "something", "G", $T18().DarkGreen, 1, 1, 0, 0, JSIL.Array.New($T04(), 0));
                        actor5.PhysicalObject$a_name$value = "something";
                        actor5.PhysicalObject$the_name$value = "something";
                        actor5.p = tile3.p.MemberwiseClone();
                        actor5.Actor$inv$value = $S09().Construct();
                        if (tile3.Tile$inv$value.Item$quantity$value <= 1) {
                          actor5.Actor$inv$value.Add(tile3.Tile$inv$value);
                          tile3.Tile$inv$value = null;
                        } else {
                          actor5.Actor$inv$value.Add($S0C().Construct(tile3.Tile$inv$value, -1, -1));
                          ($temp01 = ((tile3.Tile$inv$value.Item$quantity$value - 1) | 0), 
                            tile3.Tile$inv$value.Item$quantity$value = $temp01, 
                            $temp01);
                        }
                        $thisType.Event$M$value.Draw();
                        var item2 = actor5.Actor$inv$value.get_Item(0);
                        if (item2.PhysicalObject$symbol$value.charCodeAt(0) === "*".charCodeAt(0)) {
                          if (!((item2.Item$type$value !== $T1A().SUNLIGHT) && (item2.Item$type$value !== $T1A().DARKNESS))) {
                            $thisType.Event$B$value.Add((actor5.You("throw") + " " + item2.TheName() + ". "), JSIL.Array.New($T00(), [actor5]));
                            $thisType.Event$B$value.DisplayNow();
                            $T1B().AnimateProjectile($T16().ToFirstObstruction(tile3.GetBestExtendedLineOfEffect($thisType.Event$player$value)), $S0A().Construct(item2.PhysicalObject$color$value, item2.PhysicalObject$symbol$value));
                            $thisType.Event$B$value.Add(JSIL.ConcatString(item2.TheName(), " shatters on you! "), JSIL.Array.New($T00(), 0));
                          }
                          (actor5.Actor$inv$value.get_Item(0)).Use(actor5, actor5.GetBestExtendedLineOfEffect($thisType.Event$player$value));
                        } else {
                          $thisType.Event$B$value.Add((actor5.You("throw") + " " + item2.TheName() + ". "), JSIL.Array.New($T00(), [actor5]));
                          $thisType.Event$B$value.DisplayNow();
                          $T1B().AnimateProjectile($T16().ToFirstObstruction(tile3.GetBestExtendedLineOfEffect($thisType.Event$player$value)), $S0A().Construct(item2.PhysicalObject$color$value, item2.PhysicalObject$symbol$value));
                          $thisType.Event$player$value.tile().GetItem(item2);
                          $thisType.Event$B$value.Add(JSIL.ConcatString(item2.TheName(), " hits you. "), JSIL.Array.New($T00(), 0));
                          $thisType.Event$player$value.TakeDamage(
                            $T12().NORMAL, 
                            $T13().PHYSICAL, 
                            $T0F().Roll(6), 
                            actor5, 
                            JSIL.ConcatString("a flying ", item2.Name())
                          );
                        }
                      } else if ($T16().Any$b1($T09())(this.area, function Event_$lExecute$gm__A (t) {
                            return ((t.Tile$type$value === $T0A().DOOR_O) || (t.Tile$type$value === $T0A().DOOR_C));
                          })) {
                        var tile4 = $T16().Random$b1($T09())($T16().Where$b1($T09())(this.area, function Event_$lExecute$gm__B (t) {
                              return ((t.Tile$type$value === $T0A().DOOR_O) || 
                                (t.Tile$type$value === $T0A().DOOR_C));
                            }));
                        if (tile4.Tile$type$value === $T0A().DOOR_C) {
                          if ($thisType.Event$player$value.CanSee(tile4)) {
                            $thisType.Event$B$value.Add("The door flies open! ", JSIL.Array.New($T00(), [tile4]));
                          } else if (!(!tile4.Tile$seen$value && ($S03().CallVirtual("DistanceFrom", null, $thisType.Event$player$value, tile4) > 12))) {
                            $thisType.Event$B$value.Add("You hear a door slamming. ", JSIL.Array.New($T00(), 0));
                          }
                          tile4.Toggle(null);
                        } else if (tile4.actor() === null) {
                          if ($thisType.Event$player$value.CanSee(tile4)) {
                            $thisType.Event$B$value.Add("The door slams closed! ", JSIL.Array.New($T00(), [tile4]));
                          } else if (!(!tile4.Tile$seen$value && ($S03().CallVirtual("DistanceFrom", null, $thisType.Event$player$value, tile4) > 12))) {
                            $thisType.Event$B$value.Add("You hear a door slamming. ", JSIL.Array.New($T00(), 0));
                          }
                          tile4.Toggle(null);
                        } else {
                          if ($thisType.Event$player$value.CanSee(tile4)) {
                            $thisType.Event$B$value.Add(("The door slams closed on " + tile4.actor().TheVisible() + "! "), JSIL.Array.New($T00(), [tile4]));
                          } else if ($S03().CallVirtual("DistanceFrom", null, $thisType.Event$player$value, tile4) <= 12) {
                            $thisType.Event$B$value.Add("You hear a door slamming and a grunt of pain. ", JSIL.Array.New($T00(), 0));
                          }
                          tile4.actor().TakeDamage(
                            $T12().NORMAL, 
                            $T13().PHYSICAL, 
                            $T0F().Roll(6), 
                            null, 
                            "a slamming door"
                          );
                        }
                      } else {
                        $thisType.Event$B$value.Add("You hear mocking laughter from nearby. ", JSIL.Array.New($T00(), 0));
                      }
                    }
                  }

                  $label0 = 1 /* goto IL_10B6 */ ;
                  continue $labelgroup0;
                case 1: /* IL_10B6 */ 
                  if (!flag) {
                    $thisType.Event$Q$value.Add($S07().Construct(this.Event$target$value, this.area, (((($T0F().Roll(8) + 6) | 0) * 100) | 0), $T02().POLTERGEIST, $T04().NO_ATTR, ((this.Event$value$value + 1) | 0), "", JSIL.Array.New($T00(), 0)));
                  }

                  break $labelgroup0;
              }
            }
          } else {
            $thisType.Event$Q$value.Add($S07().Construct(this.Event$target$value, this.area, (((($T0F().Roll(8) + 6) | 0) * 100) | 0), $T02().POLTERGEIST, $T04().NO_ATTR, 0, "", JSIL.Array.New($T00(), 0)));
          }
          break;

        case 6: 
          var item3 = $T0C().$As(this.Event$target$value);
          if (this.area.get_Item(0).Tile$inv$value !== item3) {

          $loop5: 
            for (var a$2 = $thisType.Event$M$value.AllTiles()._items, i$2 = 0, l$2 = $thisType.Event$M$value.AllTiles()._size; i$2 < l$2; ($temp04 = i$2, 
                i$2 = ((i$2 + 1) | 0), 
                $temp04)) {
              var current4 = a$2[i$2];
              if (current4.Tile$inv$value === item3) {
                this.area = ($S01().Construct()).__Initialize__([[current4]]);
                break $loop5;
              }
            }
          }
          if (this.area.get_Item(0).Tile$inv$value === item3) {
            var flag2 = false;
            if (!(($S03().CallVirtual("DistanceFrom", null, $thisType.Event$player$value, this.area.get_Item(0)) !== 1) || 
                ((this.area.get_Item(0)).actor() !== null) || ((($thisType.Event$player$value.Stealth() * 5) | 0) >= $T0F().Roll(1, 100)))) {
              $thisType.Event$B$value.Add(JSIL.ConcatString(item3.TheName(), " suddenly grows tentacles! "), JSIL.Array.New($T00(), 0));
              flag2 = true;
              this.area.get_Item(0).Tile$inv$value = null;
              var actor6 = $T0B().Create(
                $T0E().MIMIC, 
                (this.area.get_Item(0)).get_row(), 
                (this.area.get_Item(0)).get_col()
              );
              $S0B().CallVirtual("KillEvents", null, $thisType.Event$Q$value, actor6, $T02().MOVE);
              actor6.Q0();
              actor6.player_visibility_duration = -1;
              actor6.PhysicalObject$symbol$value = item3.PhysicalObject$symbol$value;
              actor6.PhysicalObject$color$value = item3.PhysicalObject$color$value;
              var enumerator5 = $T1E().prototype.GetEnumerator.call($thisType.Event$Q$value.list).MemberwiseClone();
              try {

              $loop8: 
                while (enumerator5.MoveNext()) {
                  var current5 = enumerator5.get_Current();
                  if (!((current5.Event$target$value !== actor6) || (current5.Event$type$value !== $T02().MOVE))) {
                    current5.Event$tiebreaker$value = this.Event$tiebreaker$value;
                    break $loop8;
                  }
                }
              } finally {
                $IM00().Call(enumerator5, null);
              }
              $T0B().tiebreakers.set_Item(this.Event$tiebreaker$value, actor6);
            }
            if (!flag2) {
              $thisType.Event$Q$value.Add($S07().Construct(this.Event$target$value, this.area, 100, $T02().MIMIC, $T04().NO_ATTR, 0, "", JSIL.Array.New($T00(), 0)));
            }
          } else {
            var list2 = $S01().Construct();

            for (var a$3 = $thisType.Event$player$value.TilesAtDistance(1)._items, i$3 = 0, l$3 = $thisType.Event$player$value.TilesAtDistance(1)._size; i$3 < l$3; ($temp05 = i$3, 
                i$3 = ((i$3 + 1) | 0), 
                $temp05)) {
              var current6 = a$3[i$3];
              if (!(!current6.Tile$passable$value || (current6.actor() !== null))) {
                list2.Add(current6);
              }
            }
            if (list2.get_Count() > 0) {
              var tile5 = $T16().Random$b1($T09())(list2);
              $thisType.Event$B$value.Add(JSIL.ConcatString(item3.TheName(), " suddenly grows tentacles! "), JSIL.Array.New($T00(), 0));
              var actor7 = $T0B().Create(
                $T0E().MIMIC, 
                tile5.get_row(), 
                tile5.get_col()
              );
              $S0B().CallVirtual("KillEvents", null, $thisType.Event$Q$value, actor7, $T02().MOVE);
              actor7.Q0();
              actor7.player_visibility_duration = -1;
              actor7.PhysicalObject$symbol$value = item3.PhysicalObject$symbol$value;
              actor7.PhysicalObject$color$value = item3.PhysicalObject$color$value;
              var enumerator7 = $T1E().prototype.GetEnumerator.call($thisType.Event$Q$value.list).MemberwiseClone();
              try {

              $loop7: 
                while (enumerator7.MoveNext()) {
                  var current7 = enumerator7.get_Current();
                  if (!((current7.Event$target$value !== actor7) || (current7.Event$type$value !== $T02().MOVE))) {
                    current7.Event$tiebreaker$value = this.Event$tiebreaker$value;
                    break $loop7;
                  }
                }
              } finally {
                $IM00().Call(enumerator7, null);
              }
              $T0B().tiebreakers.set_Item(this.Event$tiebreaker$value, actor7);
              $thisType.Event$player$value.Actor$inv$value.Remove(item3);
            } else {
              $thisType.Event$B$value.Add("Your pack feels lighter. ", JSIL.Array.New($T00(), 0));
              $thisType.Event$player$value.Actor$inv$value.Remove(item3);
            }
          }
          break;

        case 7: 
          if ($S0D().CallVirtual("Is", null, this.Event$target$value.tile(), $T20().TROLL_CORPSE)) {
            this.Event$value$value = ((this.Event$value$value + 1) | 0);
            if (!((this.Event$value$value <= 0) || (this.Event$target$value.actor() !== null))) {
              var value = $T0B().Create(
                $T0E().TROLL, 
                this.Event$target$value.get_row(), 
                this.Event$target$value.get_col()
              );
              var enumerator8 = $T1E().prototype.GetEnumerator.call($thisType.Event$Q$value.list).MemberwiseClone();
              try {

              $loop9: 
                while (enumerator8.MoveNext()) {
                  var current8 = enumerator8.get_Current();
                  if (!((current8.Event$target$value !== $T21().prototype.get_Item.call($thisType.Event$M$value.actor, 
                          this.Event$target$value.get_row(), 
                          this.Event$target$value.get_col()
                        )) || (current8.Event$type$value !== $T02().MOVE))) {
                    current8.Event$tiebreaker$value = this.Event$tiebreaker$value;
                    break $loop9;
                  }
                }
              } finally {
                $IM00().Call(enumerator8, null);
              }
              $T0B().tiebreakers.set_Item(this.Event$tiebreaker$value, value);
              this.Event$target$value.actor().Actor$curhp$value = this.Event$value$value;
              this.Event$target$value.actor().Actor$level$value = 0;
              var expr_29A4 = (attrs5 = this.Event$target$value.actor().attrs);
              num = $T0D().prototype.get_Item.call(attrs5, $T04().NO_ITEM);
              $T0D().prototype.set_Item.call(expr_29A4, $T04().NO_ITEM, ((num + 1) | 0));
              $thisType.Event$B$value.Add("The troll stands up! ", JSIL.Array.New($T00(), [this.Event$target$value]));
              this.Event$target$value.actor().player_visibility_duration = -1;
              if (this.Event$target$value.tile().Tile$type$value === $T0A().DOOR_C) {
                this.Event$target$value.tile().Toggle(this.Event$target$value.actor());
              }
              this.Event$target$value.tile().features.Remove($T20().TROLL_CORPSE);
              if ($T0F().OneIn(3)) {
                var expr_2A4F = (attrs6 = this.Event$target$value.actor().attrs);
                num = $T0D().prototype.get_Item.call(attrs6, $T04().WANDERING);
                $T0D().prototype.set_Item.call(expr_2A4F, $T04().WANDERING, ((num + 1) | 0));
              }
            } else {
              var num4 = $T0F().Roll(20);
              if (this.Event$value$value === -1) {
                num4 = 1;
              }
              if (this.Event$value$value === 0) {
                num4 = 3;
              }
              switch (num4) {
                case 1: 
                case 2: 
                  $thisType.Event$B$value.Add("The troll's corpse twitches. ", JSIL.Array.New($T00(), [this.Event$target$value]));
                  break;

                case 3: 
                case 4: 
                  $thisType.Event$B$value.Add("You hear sounds coming from the troll's corpse. ", JSIL.Array.New($T00(), [this.Event$target$value]));
                  break;

                case 5: 
                  $thisType.Event$B$value.Add("The troll on the floor regenerates. ", JSIL.Array.New($T00(), [this.Event$target$value]));
                  break;

              }
              $thisType.Event$Q$value.Add($S07().Construct(this.Event$target$value, null, 100, $T02().REGENERATING_FROM_DEATH, this.Event$attr$value, this.Event$value$value, "", JSIL.Array.New($T00(), 0)));
            }
          }
          if ($S0D().CallVirtual("Is", null, this.Event$target$value.tile(), $T20().TROLL_SEER_CORPSE)) {
            this.Event$value$value = ((this.Event$value$value + 1) | 0);
            if (!((this.Event$value$value <= 0) || (this.Event$target$value.actor() !== null))) {
              var value2 = $T0B().Create(
                $T0E().TROLL_SEER, 
                this.Event$target$value.get_row(), 
                this.Event$target$value.get_col()
              );
              var enumerator9 = $T1E().prototype.GetEnumerator.call($thisType.Event$Q$value.list).MemberwiseClone();
              try {

              $loop10: 
                while (enumerator9.MoveNext()) {
                  var current9 = enumerator9.get_Current();
                  if (!((current9.Event$target$value !== $T21().prototype.get_Item.call($thisType.Event$M$value.actor, 
                          this.Event$target$value.get_row(), 
                          this.Event$target$value.get_col()
                        )) || (current9.Event$type$value !== $T02().MOVE))) {
                    current9.Event$tiebreaker$value = this.Event$tiebreaker$value;
                    break $loop10;
                  }
                }
              } finally {
                $IM00().Call(enumerator9, null);
              }
              $T0B().tiebreakers.set_Item(this.Event$tiebreaker$value, value2);
              this.Event$target$value.actor().Actor$curhp$value = this.Event$value$value;
              this.Event$target$value.actor().Actor$level$value = 0;
              var expr_2C8D = (attrs7 = this.Event$target$value.actor().attrs);
              num = $T0D().prototype.get_Item.call(attrs7, $T04().NO_ITEM);
              $T0D().prototype.set_Item.call(expr_2C8D, $T04().NO_ITEM, ((num + 1) | 0));
              $thisType.Event$B$value.Add("The troll seer stands up! ", JSIL.Array.New($T00(), [this.Event$target$value]));
              this.Event$target$value.actor().player_visibility_duration = -1;
              if (this.Event$attr$value === $T04().COOLDOWN_1) {
                var expr_2CF2 = (attrs8 = this.Event$target$value.actor().attrs);
                num = $T0D().prototype.get_Item.call(attrs8, $T04().COOLDOWN_1);
                $T0D().prototype.set_Item.call(expr_2CF2, $T04().COOLDOWN_1, ((num + 1) | 0));
              }
              if (this.Event$target$value.tile().Tile$type$value === $T0A().DOOR_C) {
                this.Event$target$value.tile().Toggle(this.Event$target$value.actor());
              }
              this.Event$target$value.tile().features.Remove($T20().TROLL_SEER_CORPSE);
              if ($T0F().OneIn(3)) {
                var expr_2D6E = (attrs9 = this.Event$target$value.actor().attrs);
                num = $T0D().prototype.get_Item.call(attrs9, $T04().WANDERING);
                $T0D().prototype.set_Item.call(expr_2D6E, $T04().WANDERING, ((num + 1) | 0));
              }
            } else {
              var num5 = $T0F().Roll(20);
              if (this.Event$value$value === -1) {
                num5 = 1;
              }
              if (this.Event$value$value === 0) {
                num5 = 3;
              }
              switch (num5) {
                case 1: 
                case 2: 
                  $thisType.Event$B$value.Add("The troll seer's corpse twitches. ", JSIL.Array.New($T00(), [this.Event$target$value]));
                  break;

                case 3: 
                case 4: 
                  $thisType.Event$B$value.Add("You hear sounds coming from the troll seer's corpse. ", JSIL.Array.New($T00(), [this.Event$target$value]));
                  break;

                case 5: 
                  $thisType.Event$B$value.Add("The troll seer on the floor regenerates. ", JSIL.Array.New($T00(), [this.Event$target$value]));
                  break;

              }
              $thisType.Event$Q$value.Add($S07().Construct(this.Event$target$value, null, 100, $T02().REGENERATING_FROM_DEATH, this.Event$attr$value, this.Event$value$value, "", JSIL.Array.New($T00(), 0)));
            }
          }
          break;

        case 8: 
          var tile6 = $T09().$As(this.Event$target$value);
          if ($S0D().CallVirtual("Is", null, tile6, $T20().GRENADE)) {
            tile6.features.Remove($T20().GRENADE);
            $thisType.Event$B$value.Add("The grenade explodes! ", JSIL.Array.New($T00(), [tile6]));
            if (tile6.Tile$seen$value) {
              $S0E().CallStatic($T1B(), "WriteMapChar", null, 
                tile6.get_row(), 
                tile6.get_col(), 
                $thisType.Event$M$value.VisibleColorChar(
                  tile6.get_row(), 
                  tile6.get_col()
                ).MemberwiseClone()
              );
            }
            $thisType.Event$B$value.DisplayNow();
            var list3 = $S0F().Construct();

            for (var a$4 = tile6.TilesWithinDistance(1)._items, i$4 = 0, l$4 = tile6.TilesWithinDistance(1)._size; i$4 < l$4; ($temp06 = i$4, 
                i$4 = ((i$4 + 1) | 0), 
                $temp06)) {
              var current10 = a$4[i$4];
              if (!(!current10.Tile$passable$value || !current10.Tile$seen$value)) {
                list3.Add(current10.p.MemberwiseClone());
              }
            }
            $S10().CallStatic($T1B(), "AnimateMapCells", null, list3, $S11().Construct("*", $T18().DarkRed));

            for (var a$5 = tile6.ActorsWithinDistance(1)._items, i$5 = 0, l$5 = tile6.ActorsWithinDistance(1)._size; i$5 < l$5; ($temp07 = i$5, 
                i$5 = ((i$5 + 1) | 0), 
                $temp07)) {
              var current11 = a$5[i$5];
              current11.TakeDamage(
                $T12().NORMAL, 
                $T13().PHYSICAL, 
                $T0F().Roll(3, 6), 
                null, 
                "an exploding grenade"
              );
            }
            if (tile6.actor() !== null) {
              var dir = $T0F().RandomDirection();
              $S12().CallVirtual("GetKnockedBack", null, tile6.actor(), tile6.TileInDirection(tile6.actor().RotateDirection(dir, true, 4)));
            }
            if ($S03().CallVirtual("DistanceFrom", null, $thisType.Event$player$value, tile6) <= 3) {
              $thisType.Event$player$value.MakeNoise();
            }
          }
          break;

        case 9: 
          var tile7 = $T09().$As(this.Event$target$value);
          if ($S0D().CallVirtual("Is", null, tile7, $T20().FUNGUS_PRIMED)) {
            tile7.features.Remove($T20().FUNGUS_PRIMED);
            $thisType.Event$B$value.Add("The blast fungus explodes! ", JSIL.Array.New($T00(), [tile7]));
            if (tile7.Tile$seen$value) {
              $S0E().CallStatic($T1B(), "WriteMapChar", null, 
                tile7.get_row(), 
                tile7.get_col(), 
                $thisType.Event$M$value.VisibleColorChar(
                  tile7.get_row(), 
                  tile7.get_col()
                ).MemberwiseClone()
              );
            }
            $thisType.Event$B$value.DisplayNow();

            for (var k = 1; k <= 3; k = ((k + 1) | 0)) {
              var list4 = $S0F().Construct();

              for (var a$6 = tile7.TilesWithinDistance(k)._items, i$6 = 0, l$6 = tile7.TilesWithinDistance(k)._size; i$6 < l$6; ($temp08 = i$6, 
                  i$6 = ((i$6 + 1) | 0), 
                  $temp08)) {
                var current12 = a$6[i$6];
                if (!(!tile7.HasLOE(current12) || 
                    !current12.Tile$passable$value || !current12.Tile$seen$value)) {
                  list4.Add(current12.p.MemberwiseClone());
                }
              }
              $S10().CallStatic($T1B(), "AnimateMapCells", null, list4, $S11().Construct("*", $T18().DarkRed));
            }

            for (var a$7 = tile7.ActorsWithinDistance(3)._items, i$7 = 0, l$7 = tile7.ActorsWithinDistance(3)._size; i$7 < l$7; ($temp09 = i$7, 
                i$7 = ((i$7 + 1) | 0), 
                $temp09)) {
              var current13 = a$7[i$7];
              if (tile7.HasLOE(current13)) {
                current13.TakeDamage(
                  $T12().NORMAL, 
                  $T13().PHYSICAL, 
                  $T0F().Roll(5, 6), 
                  null, 
                  "an exploding blast fungus"
                );
              }
            }
            if (tile7.actor() !== null) {
              var dir2 = $T0F().RandomDirection();
              $S12().CallVirtual("GetKnockedBack", null, tile7.actor(), tile7.TileInDirection(tile7.actor().RotateDirection(dir2, true, 4)));
            }
            if ($S03().CallVirtual("DistanceFrom", null, $thisType.Event$player$value, tile7) <= 3) {
              $thisType.Event$player$value.MakeNoise();
            }
          }
          if ($S0D().CallVirtual("Is", null, tile7, $T20().FUNGUS_ACTIVE)) {
            tile7.features.Remove($T20().FUNGUS_ACTIVE);
            tile7.features.Add($T20().FUNGUS_PRIMED);
            $thisType.Event$Q$value.Add($S13().Construct(tile7, 100, $T02().BLAST_FUNGUS));
          }
          break;

        case 10: 
          var num6 = 0;

          for (var a$8 = this.area._items, i$8 = 0, l$8 = this.area._size; i$8 < l$8; ($temp0A = i$8, 
              i$8 = ((i$8 + 1) | 0), 
              $temp0A)) {
            var current14 = a$8[i$8];
            if (current14.Tile$type$value === $T0A().STALAGMITE) {
              num6 = ((num6 + 1) | 0);
            }
          }
          if (num6 > 0) {
            if (num6 > 1) {
              $thisType.Event$B$value.Add("The stalagmites crumble. ", $T06().$Cast($T08().prototype.ToArray.call(this.area)));
            } else {
              $thisType.Event$B$value.Add("The stalagmite crumbles. ", $T06().$Cast($T08().prototype.ToArray.call(this.area)));
            }

            for (var a$9 = this.area._items, i$9 = 0, l$9 = this.area._size; i$9 < l$9; ($temp0B = i$9, 
                i$9 = ((i$9 + 1) | 0), 
                $temp0B)) {
              var current15 = a$9[i$9];
              if (current15.Tile$type$value === $T0A().STALAGMITE) {
                current15.Toggle(null);
              }
            }
          }
          break;

        case 11: 
          var num7 = ((this.Event$value$value / 10) | 0);
          var num8 = ((this.Event$value$value % 10) | 0);
          var num9 = ((((num7 * num8) | 0) / 10) | 0);
          var num10 = ((((num9 * 2) | 0) + 1) | 0);
          var num11 = ((num7 - num9) | 0);
          if (num11 < 5) {
            var num12 = ((5 - num11) | 0);
            num10 = ((num10 - num12) | 0);
            num11 = 5;
          }
          var num13 = ((((((num11 - 1) | 0) + $T0F().Roll(num10)) | 0) * 100) | 0);
          $thisType.Event$Q$value.Add($S14().Construct(this.Event$target$value, ((num13 + 200) | 0), $T02().FIRE_GEYSER, this.Event$value$value));
          $thisType.Event$Q$value.Add($S14().Construct(this.Event$target$value, num13, $T02().FIRE_GEYSER_ERUPTION, 2));
          break;

        case 12: 
          if (this.Event$target$value.PhysicalObject$$name$value == "floor") {
            var event = null;
            var tile8 = $T09().$As(this.Event$target$value);
            var enumerator16 = $T1E().prototype.GetEnumerator.call($thisType.Event$Q$value.list).MemberwiseClone();
            try {

            $loop18: 
              while (enumerator16.MoveNext()) {
                var current16 = enumerator16.get_Current();
                if (!(current16.Event$dead$value || (current16.Event$type$value !== $T02().CHECK_FOR_HIDDEN))) {
                  event = current16;
                  break $loop18;
                }
              }
            } finally {
              $IM00().Call(enumerator16, null);
            }
            if ($thisType.Event$player$value.HasLOS(tile8)) {
              if (event !== null) {
                event.area.Remove(tile8);
              }
              tile8.PhysicalObject$$name$value = $T09().Prototype(tile8.Tile$type$value).PhysicalObject$$name$value;
              tile8.PhysicalObject$a_name$value = $T09().Prototype(tile8.Tile$type$value).PhysicalObject$a_name$value;
              tile8.PhysicalObject$the_name$value = $T09().Prototype(tile8.Tile$type$value).PhysicalObject$the_name$value;
              tile8.PhysicalObject$symbol$value = $T09().Prototype(tile8.Tile$type$value).PhysicalObject$symbol$value;
              tile8.PhysicalObject$color$value = $T09().Prototype(tile8.Tile$type$value).PhysicalObject$color$value;
            }
          }
          if (this.Event$value$value >= 0) {
            if (this.Event$target$value.PhysicalObject$light_radius$value === 0) {
              this.Event$target$value.UpdateRadius(0, 8, true);
            }
            $thisType.Event$B$value.Add(JSIL.ConcatString(this.Event$target$value.PhysicalObject$the_name$value, " spouts flames! "), JSIL.Array.New($T00(), [this.Event$target$value]));
            $thisType.Event$M$value.Draw();

            for (var l = 0; l < 3; l = ((l + 1) | 0)) {
              var list5 = $S0F().Construct();
              var l2 = this.Event$target$value.TilesWithinDistance(1);

              for (var m = 0; m < 5; m = ((m + 1) | 0)) {
                var tile9 = $T16().RemoveRandom$b1($T09())(l2);
                if ($thisType.Event$player$value.CanSee(tile9)) {
                  list5.Add(tile9.p.MemberwiseClone());
                }
              }
              if (list5.get_Count() > 0) {
                $S15().CallStatic($T1B(), "AnimateMapCells", null, list5, $S11().Construct("*", $T18().Red), 35);
              }
            }

            for (var a$a = this.Event$target$value.TilesWithinDistance(1)._items, i$a = 0, l$a = this.Event$target$value.TilesWithinDistance(1)._size; i$a < l$a; ($temp0C = i$a, 
                i$a = ((i$a + 1) | 0), 
                $temp0C)) {
              var current17 = a$a[i$a];
              var actor8 = current17.actor();
              if (!((actor8 === null) || 
                  !actor8.TakeDamage(
                    $T12().FIRE, 
                    $T13().PHYSICAL, 
                    $T0F().Roll(2, 6), 
                    null, 
                    "a fiery eruption"
                  ) || 
                  actor8.HasAttr($T04().RESIST_FIRE) || 
                  actor8.HasAttr($T04().IMMUNE_FIRE) || 
                  actor8.HasAttr($T04().ON_FIRE) || 
                  actor8.HasAttr($T04().CATCHING_FIRE) || actor8.HasAttr($T04().STARTED_CATCHING_FIRE_THIS_TURN))) {
                if (actor8.PhysicalObject$$name$value == "you") {
                  $thisType.Event$B$value.Add("You start to catch fire! ", JSIL.Array.New($T00(), 0));
                } else {
                  $thisType.Event$B$value.Add(JSIL.ConcatString(actor8.PhysicalObject$the_name$value, " starts to catch fire. "), JSIL.Array.New($T00(), [actor8]));
                }
                $T0D().prototype.set_Item.call(actor8.attrs, $T04().CATCHING_FIRE, 1);
              }
              if ($S0D().CallVirtual("Is", null, current17, $T20().TROLL_CORPSE)) {
                current17.features.Remove($T20().TROLL_CORPSE);
                $thisType.Event$B$value.Add("The troll corpse burns to ashes! ", JSIL.Array.New($T00(), [current17]));
              }
              if ($S0D().CallVirtual("Is", null, current17, $T20().TROLL_SEER_CORPSE)) {
                current17.features.Remove($T20().TROLL_SEER_CORPSE);
                $thisType.Event$B$value.Add("The troll seer corpse burns to ashes! ", JSIL.Array.New($T00(), [current17]));
              }
            }
            $thisType.Event$Q$value.Add($S14().Construct(this.Event$target$value, 100, $T02().FIRE_GEYSER_ERUPTION, ((this.Event$value$value - 1) | 0)));
          } else {
            this.Event$target$value.UpdateRadius(8, 0, true);
          }
          break;

        case 13: 
          if (this.Event$target$value.PhysicalObject$$name$value == "floor") {
            var event2 = null;
            var tile10 = $T09().$As(this.Event$target$value);
            var enumerator18 = $T1E().prototype.GetEnumerator.call($thisType.Event$Q$value.list).MemberwiseClone();
            try {

            $loop22: 
              while (enumerator18.MoveNext()) {
                var current18 = enumerator18.get_Current();
                if (!(current18.Event$dead$value || (current18.Event$type$value !== $T02().CHECK_FOR_HIDDEN))) {
                  event2 = current18;
                  break $loop22;
                }
              }
            } finally {
              $IM00().Call(enumerator18, null);
            }
            if ($thisType.Event$player$value.CanSee(tile10)) {
              if (event2 !== null) {
                event2.area.Remove(tile10);
              }
              tile10.PhysicalObject$$name$value = $T09().Prototype(tile10.Tile$type$value).PhysicalObject$$name$value;
              tile10.PhysicalObject$a_name$value = $T09().Prototype(tile10.Tile$type$value).PhysicalObject$a_name$value;
              tile10.PhysicalObject$the_name$value = $T09().Prototype(tile10.Tile$type$value).PhysicalObject$the_name$value;
              tile10.PhysicalObject$symbol$value = $T09().Prototype(tile10.Tile$type$value).PhysicalObject$symbol$value;
              tile10.PhysicalObject$color$value = $T09().Prototype(tile10.Tile$type$value).PhysicalObject$color$value;
            }
          }
          var tile11 = $T09().$As(this.Event$target$value);
          if (!$S0D().CallVirtual("Is", null, tile11, $T20().FOG)) {
            tile11.AddOpaqueFeature($T20().FOG);
            $thisType.Event$Q$value.Add($S05().Construct(($S01().Construct()).__Initialize__([[tile11]]), 400, $T02().FOG));
          } else {

          $loop23: 
            for (var n = 0; n < 50; n = ((n + 1) | 0)) {
              var list6 = $S01().Construct();

              for (var a$b = tile11.TilesAtDistance(1)._items, i$b = 0, l$b = tile11.TilesAtDistance(1)._size; i$b < l$b; ($temp0D = i$b, 
                  i$b = ((i$b + 1) | 0), 
                  $temp0D)) {
                var current19 = a$b[i$b];
                if (current19.Tile$passable$value) {
                  list6.Add(current19);
                }
              }
              if (list6.get_Count() <= 0) {
                break $loop23;
              }
              var tile12 = $T16().Random$b1($T09())(list6);
              if (!$S0D().CallVirtual("Is", null, tile12, $T20().FOG)) {
                tile12.AddOpaqueFeature($T20().FOG);
                $thisType.Event$Q$value.Add($S05().Construct(($S01().Construct()).__Initialize__([[tile12]]), 400, $T02().FOG));
                break $loop23;
              }
              tile11 = tile12;
            }
          }
          $thisType.Event$Q$value.Add($S13().Construct(this.Event$target$value, 100, $T02().FOG_VENT));
          break;

        case 14: 
          var list7 = $S01().Construct();

          for (var a$c = this.area._items, i$c = 0, l$c = this.area._size; i$c < l$c; ($temp0E = i$c, 
              i$c = ((i$c + 1) | 0), 
              $temp0E)) {
            var current20 = a$c[i$c];
            if (!(!$S0D().CallVirtual("Is", null, current20, $T20().FOG) || !$T0F().OneIn(4))) {
              current20.RemoveOpaqueFeature($T20().FOG);
              list7.Add(current20);
            }
          }

          for (var a$d = list7._items, i$d = 0, l$d = list7._size; i$d < l$d; ($temp0F = i$d, 
              i$d = ((i$d + 1) | 0), 
              $temp0F)) {
            var current21 = a$d[i$d];
            this.area.Remove(current21);
          }
          if (this.area.get_Count() > 0) {
            $thisType.Event$Q$value.Add($S05().Construct(this.area, 100, $T02().FOG));
          }
          break;

        case 15: 
          if (this.Event$target$value.PhysicalObject$$name$value == "floor") {
            var event3 = null;
            var tile13 = $T09().$As(this.Event$target$value);
            var enumerator22 = $T1E().prototype.GetEnumerator.call($thisType.Event$Q$value.list).MemberwiseClone();
            try {

            $loop27: 
              while (enumerator22.MoveNext()) {
                var current22 = enumerator22.get_Current();
                if (!(current22.Event$dead$value || (current22.Event$type$value !== $T02().CHECK_FOR_HIDDEN))) {
                  event3 = current22;
                  break $loop27;
                }
              }
            } finally {
              $IM00().Call(enumerator22, null);
            }
            if ($thisType.Event$player$value.CanSee(tile13)) {
              if (event3 !== null) {
                event3.area.Remove(tile13);
              }
              tile13.PhysicalObject$$name$value = $T09().Prototype(tile13.Tile$type$value).PhysicalObject$$name$value;
              tile13.PhysicalObject$a_name$value = $T09().Prototype(tile13.Tile$type$value).PhysicalObject$a_name$value;
              tile13.PhysicalObject$the_name$value = $T09().Prototype(tile13.Tile$type$value).PhysicalObject$the_name$value;
              tile13.PhysicalObject$symbol$value = $T09().Prototype(tile13.Tile$type$value).PhysicalObject$symbol$value;
              tile13.PhysicalObject$color$value = $T09().Prototype(tile13.Tile$type$value).PhysicalObject$color$value;
            }
          }
          var tile14 = $T09().$As(this.Event$target$value);
          if ($T0F().OneIn(7)) {
            var num14 = (($T0F().Roll(5) + 2) | 0);
            var list8 = $S01().Construct();

            for (var num15 = 0; num15 < num14; num15 = ((num15 + 1) | 0)) {
              if (!$S0D().CallVirtual("Is", null, tile14, $T20().POISON_GAS)) {
                tile14.features.Add($T20().POISON_GAS);
                list8.Add(tile14);
              } else {

              $loop29: 
                for (var num16 = 0; num16 < 50; num16 = ((num16 + 1) | 0)) {
                  var list9 = $S01().Construct();

                  for (var a$e = tile14.TilesAtDistance(1)._items, i$e = 0, l$e = tile14.TilesAtDistance(1)._size; i$e < l$e; ($temp10 = i$e, 
                      i$e = ((i$e + 1) | 0), 
                      $temp10)) {
                    var current23 = a$e[i$e];
                    if (current23.Tile$passable$value) {
                      list9.Add(current23);
                    }
                  }
                  if (list9.get_Count() <= 0) {
                    break $loop29;
                  }
                  var tile15 = $T16().Random$b1($T09())(list9);
                  if (!$S0D().CallVirtual("Is", null, tile15, $T20().POISON_GAS)) {
                    tile15.features.Add($T20().POISON_GAS);
                    list8.Add(tile15);
                    break $loop29;
                  }
                  tile14 = tile15;
                }
              }
            }
            if (list8.get_Count() > 0) {
              $thisType.Event$B$value.Add(("Toxic vapors pour from " + this.Event$target$value.PhysicalObject$the_name$value + "! "), JSIL.Array.New($T00(), [this.Event$target$value]));
              $thisType.Event$Q$value.Add($S05().Construct(list8, 200, $T02().POISON_GAS));
            }
          }
          $thisType.Event$Q$value.Add($S13().Construct(this.Event$target$value, 100, $T02().POISON_GAS_VENT));
          break;

        case 16: 
          var list10 = $S01().Construct();

          for (var a$f = this.area._items, i$f = 0, l$f = this.area._size; i$f < l$f; ($temp11 = i$f, 
              i$f = ((i$f + 1) | 0), 
              $temp11)) {
            var current24 = a$f[i$f];
            if (!(!$S0D().CallVirtual("Is", null, current24, $T20().POISON_GAS) || !$T0F().OneIn(6))) {
              current24.RemoveOpaqueFeature($T20().POISON_GAS);
              list10.Add(current24);
            }
          }

          for (var a$10 = list10._items, i$10 = 0, l$10 = list10._size; i$10 < l$10; ($temp12 = i$10, 
              i$10 = ((i$10 + 1) | 0), 
              $temp12)) {
            var current25 = a$10[i$10];
            this.area.Remove(current25);
          }
          if (this.area.get_Count() > 0) {
            $thisType.Event$Q$value.Add($S05().Construct(this.area, 100, $T02().POISON_GAS));
          }
          break;

        case 17: 

          var $label1 = 0;
        $labelgroup1: 
          while (true) {
            switch ($label1) {
              case 0: /* $entry1 */ 
                var tile16 = $T09().$As(this.Event$target$value);
                if (tile16.Tile$type$value === $T0A().STONE_SLAB) {
                  if (!tile16.IsLitFromAnywhere(true)) {
                    if (!$T16().Any$b1($T09())(this.area, function Event_$lExecute$gm__C (x) {
                          return (x.actor() !== null);
                        })) {
                      $label1 = 1 /* goto IL_25F9 */ ;
                      continue $labelgroup1;
                    }
                  }
                  var flag3 = $thisType.Event$player$value.CanSee(tile16);
                  tile16.Toggle(null, $T0A().FLOOR);
                  if (!(flag3 || !$thisType.Event$player$value.CanSee(tile16))) {
                    flag3 = true;
                  }
                  if (flag3) {
                    $thisType.Event$B$value.Add("The stone slab rises with a grinding sound. ", JSIL.Array.New($T00(), 0));
                  } else if ($S03().CallVirtual("DistanceFrom", null, $thisType.Event$player$value, tile16) <= 6) {
                    $thisType.Event$B$value.Add("You hear a grinding sound. ", JSIL.Array.New($T00(), 0));
                  }
                  break $labelgroup1;
                }

                $label1 = 1 /* goto IL_25F9 */ ;
                continue $labelgroup1;
              case 1: /* IL_25F9 */ 
                if (!((tile16.Tile$type$value !== $T0A().FLOOR) || 
                    tile16.IsLitFromAnywhere(true) || (tile16.actor() !== null))) {
                  if (!$T16().Any$b1($T09())(this.area, function Event_$lExecute$gm__D (x) {
                        return (x.actor() !== null);
                      })) {
                    var flag4 = $thisType.Event$player$value.CanSee(tile16);
                    tile16.Toggle(null, $T0A().STONE_SLAB);
                    if (!(flag4 || !$thisType.Event$player$value.CanSee(tile16))) {
                      flag4 = true;
                    }
                    if (flag4) {
                      $thisType.Event$B$value.Add("The stone slab descends with a grinding sound. ", JSIL.Array.New($T00(), 0));
                    } else if ($S03().CallVirtual("DistanceFrom", null, $thisType.Event$player$value, tile16) <= 6) {
                      $thisType.Event$B$value.Add("You hear a grinding sound. ", JSIL.Array.New($T00(), 0));
                    }
                  }
                }
                break $labelgroup1;

            }
          }
          /* Original label IL_26C7 */ 
          $thisType.Event$Q$value.Add($S16().Construct(this.Event$target$value, this.area, 100, $T02().STONE_SLAB));
          break;

        case 18: 
          var tile17 = $T09().$As(this.Event$target$value);
          if (tile17.Tile$type$value === $T0A().STATUE) {
            if (!((this.Event$value$value !== 1) || 
                !$thisType.Event$player$value.CanSee(tile17) || 
                tile17.IsLit() || (tile17.actor() !== null))) {
              tile17.TransformTo($T0A().FLOOR);
              var actor9 = $T0B().Create(
                $T0E().MARBLE_HORROR, 
                tile17.get_row(), 
                tile17.get_col(), 
                true, 
                true
              );
              var enumerator26 = $T1E().prototype.GetEnumerator.call($thisType.Event$Q$value.list).MemberwiseClone();
              try {

              $loop33: 
                while (enumerator26.MoveNext()) {
                  var current26 = enumerator26.get_Current();
                  if (!((current26.Event$target$value !== actor9) || (current26.Event$type$value !== $T02().MOVE))) {
                    current26.Event$dead$value = true;
                    break $loop33;
                  }
                }
              } finally {
                $IM00().Call(enumerator26, null);
              }
              actor9.Q0();
              num = $T0F().Roll(2);
              if (num !== 1) {
                if (num === 2) {
                  $thisType.Event$B$value.Add("The statue turns its head to face you. ", JSIL.Array.New($T00(), 0));
                }
              } else {
                $thisType.Event$B$value.Add("You think that statue might have just moved... ", JSIL.Array.New($T00(), 0));
              }
            } else if ($thisType.Event$player$value.CanSee(tile17)) {
              $thisType.Event$Q$value.Add($S14().Construct(this.Event$target$value, 100, $T02().MARBLE_HORROR, 1));
            } else {
              $thisType.Event$Q$value.Add($S14().Construct(this.Event$target$value, 100, $T02().MARBLE_HORROR, 0));
            }
          }
          break;

        case 19: 
          var list11 = $S17().Construct();
          if (this.Event$value$value >= 0) {

            for (var a$11 = this.area._items, i$11 = 0, l$11 = this.area._size; i$11 < l$11; ($temp13 = i$11, 
                i$11 = ((i$11 + 1) | 0), 
                $temp13)) {
              var current27 = a$11[i$11];
              if (current27.actor() !== null) {
                list11.Add(current27.actor());
              }
              if ($S0D().CallVirtual("Is", null, current27, $T20().TROLL_CORPSE)) {
                current27.features.Remove($T20().TROLL_CORPSE);
                $thisType.Event$B$value.Add("The troll corpse burns to ashes! ", JSIL.Array.New($T00(), [current27]));
              }
              if ($S0D().CallVirtual("Is", null, current27, $T20().TROLL_SEER_CORPSE)) {
                current27.features.Remove($T20().TROLL_SEER_CORPSE);
                $thisType.Event$B$value.Add("The troll seer corpse burns to ashes! ", JSIL.Array.New($T00(), [current27]));
              }
              if ($S0D().CallVirtual("Is", null, current27, $T20().FUNGUS)) {
                $thisType.Event$Q$value.Add($S13().Construct(current27, 200, $T02().BLAST_FUNGUS));
                $T0B().Actor$B$value.Add("The blast fungus starts to smolder in the light. ", JSIL.Array.New($T00(), [current27]));
                current27.features.Remove($T20().FUNGUS);
                current27.features.Add($T20().FUNGUS_ACTIVE);
              }
            }
          }
          if (this.Event$value$value > 0) {
            var dist = ((4 - this.Event$value$value) | 0);
            var list12 = $S01().Construct();

            for (var a$12 = this.Event$target$value.TilesWithinDistance(dist)._items, i$12 = 0, l$12 = this.Event$target$value.TilesWithinDistance(dist)._size; i$12 < l$12; ($temp14 = i$12, 
                i$12 = ((i$12 + 1) | 0), 
                $temp14)) {
              var current28 = a$12[i$12];
              if (!(!current28.Tile$passable$value || 
                  $S0D().CallVirtual("Is", null, current28, $T20().QUICKFIRE) || 
                  !$S18().CallVirtual("IsAdjacentTo", null, current28, $T20().QUICKFIRE) || this.area.Contains(current28))) {
                list12.Add(current28);
              }
            }

            for (var a$13 = list12._items, i$13 = 0, l$13 = list12._size; i$13 < l$13; ($temp15 = i$13, 
                i$13 = ((i$13 + 1) | 0), 
                $temp15)) {
              var current29 = a$13[i$13];
              this.area.Add(current29);
              current29.features.Add($T20().QUICKFIRE);
            }
          }
          if (this.Event$value$value < 0) {
            var num17 = ((4 + this.Event$value$value) | 0);
            var list13 = $S01().Construct();

            for (var a$14 = this.area._items, i$14 = 0, l$14 = this.area._size; i$14 < l$14; ($temp16 = i$14, 
                i$14 = ((i$14 + 1) | 0), 
                $temp16)) {
              var current30 = a$14[i$14];
              if ($S03().CallVirtual("DistanceFrom", null, current30, this.Event$target$value) === num17) {
                list13.Add(current30);
              } else {
                if (current30.actor() !== null) {
                  list11.Add(current30.actor());
                }
                if ($S0D().CallVirtual("Is", null, current30, $T20().TROLL_CORPSE)) {
                  current30.features.Remove($T20().TROLL_CORPSE);
                  $thisType.Event$B$value.Add("The troll corpse burns to ashes! ", JSIL.Array.New($T00(), [current30]));
                }
                if ($S0D().CallVirtual("Is", null, current30, $T20().TROLL_SEER_CORPSE)) {
                  current30.features.Remove($T20().TROLL_SEER_CORPSE);
                  $thisType.Event$B$value.Add("The troll seer corpse burns to ashes! ", JSIL.Array.New($T00(), [current30]));
                }
                if ($S0D().CallVirtual("Is", null, current30, $T20().FUNGUS)) {
                  $thisType.Event$Q$value.Add($S13().Construct(current30, 200, $T02().BLAST_FUNGUS));
                  $T0B().Actor$B$value.Add("The blast fungus starts to smolder in the light. ", JSIL.Array.New($T00(), [current30]));
                  current30.features.Remove($T20().FUNGUS);
                  current30.features.Add($T20().FUNGUS_ACTIVE);
                }
              }
            }

            for (var a$15 = list13._items, i$15 = 0, l$15 = list13._size; i$15 < l$15; ($temp17 = i$15, 
                i$15 = ((i$15 + 1) | 0), 
                $temp17)) {
              var current31 = a$15[i$15];
              this.area.Remove(current31);
              current31.features.Remove($T20().QUICKFIRE);
            }
          }

          for (var a$16 = list11._items, i$16 = 0, l$16 = list11._size; i$16 < l$16; ($temp18 = i$16, 
              i$16 = ((i$16 + 1) | 0), 
              $temp18)) {
            var current32 = a$16[i$16];
            if (!(current32.HasAttr($T04().IMMUNE_FIRE) || current32.HasAttr($T04().INVULNERABLE))) {
              if ($thisType.Event$player$value.CanSee(current32.tile())) {
                $thisType.Event$B$value.Add(("The quickfire burns " + current32.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T00(), [current32]));
              }
              current32.TakeDamage(
                $T12().FIRE, 
                $T13().PHYSICAL, 
                $T0F().Roll(6), 
                null, 
                "quickfire"
              );
            }
          }
          this.Event$value$value = ((this.Event$value$value - 1) | 0);
          if (this.Event$value$value > -5) {
            $thisType.Event$Q$value.Add($S07().Construct(this.Event$target$value, this.area, 100, $T02().QUICKFIRE, $T04().NO_ATTR, this.Event$value$value, "", JSIL.Array.New($T00(), 0)));
          }
          break;

        case 20: 
          switch ($T0F().Roll(8)) {
            case 1: 
              var s = "You see scratch marks on the walls and floor. ";
              break;

            case 2: 
              s = "There are deep gouges in the floor here. ";
              break;

            case 3: 
              s = "The floor here is scorched and blackened. ";
              break;

            case 4: 
              s = "You notice bones of an unknown sort on the floor. ";
              break;

            case 5: 
              s = "You hear a distant roar. ";
              break;

            case 6: 
              s = "You smell smoke. ";
              break;

            case 7: 
              s = "You spot a large reddish scale on the floor. ";
              break;

            case 8: 
              s = "A small tremor shakes the area. ";
              break;

            default: 
              s = "Debug message. ";
              break;

          }
          if (!$thisType.Event$player$value.HasAttr($T04().RESTING)) {
            $thisType.Event$B$value.AddIfEmpty(s);
          }
          $thisType.Event$Q$value.Add($S06().Construct((((($T0F().Roll(20) + 35) | 0) * 100) | 0), $T02().BOSS_SIGN));
          break;

        case 21: 
          var flag5 = false;
          var actor10 = null;
          if (!(($thisType.Event$M$value.AllActors().get_Count() !== 1) || $thisType.Event$Q$value.Contains($T02().POLTERGEIST))) {
            var list14 = $S01().Construct();

            for (var linkedListNode = $thisType.Event$Q$value.list.get_First(); linkedListNode !== null; linkedListNode = linkedListNode.get_Next()) {
              if (linkedListNode.get_Value().Event$type$value === $T02().REGENERATING_FROM_DEATH) {
                list14.Add($T09().$As(linkedListNode.get_Value().Event$target$value));
              }
            }

            for (var a$17 = list14._items, i$17 = 0, l$17 = list14._size; i$17 < l$17; ($temp19 = i$17, 
                i$17 = ((i$17 + 1) | 0), 
                $temp19)) {
              var current33 = a$17[i$17];
              if ($S0D().CallVirtual("Is", null, current33, $T20().TROLL_CORPSE)) {
                $thisType.Event$B$value.Add("The troll corpse burns to ashes! ", JSIL.Array.New($T00(), [current33]));
                current33.features.Remove($T20().TROLL_CORPSE);
              } else if ($S0D().CallVirtual("Is", null, current33, $T20().TROLL_SEER_CORPSE)) {
                $thisType.Event$B$value.Add("The troll seer corpse burns to ashes! ", JSIL.Array.New($T00(), [current33]));
                current33.features.Remove($T20().TROLL_SEER_CORPSE);
              }
            }
            $S0B().CallVirtual("KillEvents", null, $thisType.Event$Q$value, null, $T02().REGENERATING_FROM_DEATH);
            var list15 = $thisType.Event$M$value.AllTiles();
            var list16 = $S01().Construct();

            for (var a$18 = list15._items, i$18 = 0, l$18 = list15._size; i$18 < l$18; ($temp1A = i$18, 
                i$18 = ((i$18 + 1) | 0), 
                $temp1A)) {
              var current34 = a$18[i$18];
              if (!(current34.Tile$passable$value && 
                  !$S02().CallVirtual("Is", null, current34, $T0A().CHASM) && !$thisType.Event$player$value.CanSee(current34))) {
                list16.Add(current34);
              }
            }

            for (var a$19 = list16._items, i$19 = 0, l$19 = list16._size; i$19 < l$19; ($temp1B = i$19, 
                i$19 = ((i$19 + 1) | 0), 
                $temp1B)) {
              var current35 = a$19[i$19];
              list15.Remove(current35);
            }
            if (list15.get_Count() > 0) {
              $thisType.Event$B$value.Add("You hear a loud crash and a nearby roar! ", JSIL.Array.New($T00(), 0));
              var tile18 = list15.get_Item((($T0F().Roll(list15.get_Count()) - 1) | 0));
              actor10 = $T0B().Create(
                $T0E().FIRE_DRAKE, 
                tile18.get_row(), 
                tile18.get_col(), 
                true, 
                false
              );
              flag5 = true;
            } else if ($T16().Any$b1($T09())(
                $thisType.Event$M$value.AllTiles(), 
                function Event_$lExecute$gm__E (t) {
                  return (!(!t.Tile$passable$value || 
                      $S02().CallVirtual("Is", null, t, $T0A().CHASM)) && (t.actor() === null));
                }
              )) {
              $thisType.Event$B$value.Add("You hear a loud crash and a nearby roar! ", JSIL.Array.New($T00(), 0));
              var tile19 = $T16().Random$b1($T09())($T16().Where$b1($T09())(
                  $thisType.Event$M$value.AllTiles(), 
                  function Event_$lExecute$gm__F (t) {
                    return (!(!t.Tile$passable$value || 
                        $S02().CallVirtual("Is", null, t, $T0A().CHASM)) && 
                      (t.actor() === null));
                  }
                ));
              actor10 = $T0B().Create(
                $T0E().FIRE_DRAKE, 
                tile19.get_row(), 
                tile19.get_col(), 
                true, 
                false
              );
              flag5 = true;
            }
          }
          if (!flag5) {
            $thisType.Event$Q$value.Add($S07().Construct(null, null, (((($T0F().Roll(20) + 10) | 0) * 100) | 0), $T02().BOSS_ARRIVE, this.Event$attr$value, this.Event$value$value, "", JSIL.Array.New($T00(), 0)));
          } else if (this.Event$value$value > 0) {
            actor10.Actor$curhp$value = this.Event$value$value;
          } else {
            $thisType.Event$B$value.Add("The ground shakes as dust and rocks fall from the cavern ceiling. ", JSIL.Array.New($T00(), 0));
            $thisType.Event$B$value.Add("This place is falling apart! ", JSIL.Array.New($T00(), 0));
            var list17 = $T16().Where$b1($T09())(
              $thisType.Event$M$value.AllTiles(), 
              function Event_$lExecute$gm__10 (t) {
                return (!(!t.Tile$passable$value || 
                    (t.Tile$type$value === $T0A().CHASM)) && 
                  ($thisType.Event$player$value.tile() !== t));
              }
            );
            var tile20 = null;
            if (list17.get_Count() > 0) {
              tile20 = $T16().Random$b1($T09())(list17);
              tile20.Toggle(null, $T0A().CHASM);
            }
            $thisType.Event$Q$value.Add($S13().Construct(tile20, 100, $T02().FLOOR_COLLAPSE));
            $thisType.Event$Q$value.Add($S06().Construct((((($T0F().Roll(20) + 20) | 0) * 100) | 0), $T02().CEILING_COLLAPSE));
          }
          break;

        case 22: 
          var tile21 = $T09().$As(this.Event$target$value);
          var num18 = 0;
          if (tile21 !== null) {

          $loop44: 
            for (num18 = 0; num18 < 50; num18 = ((num18 + 1) | 0)) {
              var list18 = $S01().Construct();

              for (var a$1a = tile21.TilesAtDistance(1)._items, i$1a = 0, l$1a = tile21.TilesAtDistance(1)._size; i$1a < l$1a; ($temp1C = i$1a, 
                  i$1a = ((i$1a + 1) | 0), 
                  $temp1C)) {
                var current36 = a$1a[i$1a];
                if (!(!current36.Tile$passable$value && !$S02().CallVirtual("Is", null, current36, $T0A().RUBBLE))) {
                  list18.Add(current36);
                }
              }
              if (list18.get_Count() <= 0) {
                break $loop44;
              }
              var tile22 = $T16().Random$b1($T09())(list18);
              if (!$S02().CallVirtual("Is", null, tile22, $T0A().CHASM)) {
                tile22.Toggle(null, $T0A().CHASM);
                var list19 = $T16().Where$b1($T09())(tile22.TilesAtDistance(1), function Event_$lExecute$gm__11 (t) {
                    return (t.Tile$passable$value && 
                      (t.Tile$type$value !== $T0A().CHASM));
                  });

                for (var count = list19.get_Count(); list19.get_Count() > ((count / 2) | 0); ) {
                  var tile23 = $T16().RemoveRandom$b1($T09())(list19);
                  tile23.Toggle(null, $T0A().CHASM);
                }
                break $loop44;
              }
              tile21 = tile22;
            }
          }
          if (!((num18 !== 50) && (tile21 !== null))) {
            var list20 = $T16().Where$b1($T09())(
              $thisType.Event$M$value.AllTiles(), 
              function Event_$lExecute$gm__12 (t) {
                return (!(!t.Tile$passable$value || 
                    (t.Tile$type$value === $T0A().CHASM)) && 
                  ($thisType.Event$player$value.tile() !== t));
              }
            );
            if (list20.get_Count() > 0) {
              this.Event$target$value = $T16().Random$b1($T09())(list20);
              $T09().$As(this.Event$target$value).Toggle(null, $T0A().CHASM);
            }
          }
          $thisType.Event$Q$value.Add($S13().Construct(this.Event$target$value, 100, $T02().FLOOR_COLLAPSE));
          break;

        case 23: 
          $thisType.Event$B$value.Add("The ground shakes and debris falls from the ceiling! ", JSIL.Array.New($T00(), 0));

          for (var num19 = 1; num19 < 21; num19 = ((num19 + 1) | 0)) {

            for (var num20 = 1; num20 < 65; num20 = ((num20 + 1) | 0)) {
              var tile24 = $T25().prototype.get_Item.call($thisType.Event$M$value.tile, num19, num20);
              if ($S02().CallVirtual("Is", null, tile24, $T0A().WALL)) {
                var count2 = ($T16().Where$b1($T09())(
                    tile24.TilesAtDistance(1), 
                    function Event_$lExecute$gm__13 (x) {
                      return $S02().CallVirtual("Is", null, x, $T0A().WALL);
                    }
                  )).get_Count();
                if (!((count2 >= 8) || !$T0F().OneIn(20))) {
                  if ($T0F().CoinFlip()) {
                    tile24.Toggle(null, $T0A().FLOOR);

                    for (var a$1b = tile24.TilesAtDistance(1)._items, i$1b = 0, l$1b = tile24.TilesAtDistance(1)._size; i$1b < l$1b; ($temp1D = i$1b, 
                        i$1b = ((i$1b + 1) | 0), 
                        $temp1D)) {
                      var current37 = a$1b[i$1b];
                      current37.Tile$solid_rock$value = false;
                    }
                  } else {
                    tile24.Toggle(null, $T0A().RUBBLE);

                    for (var a$1c = tile24.TilesAtDistance(1)._items, i$1c = 0, l$1c = tile24.TilesAtDistance(1)._size; i$1c < l$1c; ($temp1E = i$1c, 
                        i$1c = ((i$1c + 1) | 0), 
                        $temp1E)) {
                      var current38 = a$1c[i$1c];
                      current38.Tile$solid_rock$value = false;
                      if (!((current38.Tile$type$value !== $T0A().FLOOR) || !$T0F().OneIn(10))) {
                        current38.Toggle(null, $T0A().RUBBLE);
                      }
                    }
                  }
                }
              } else if (!((($T16().Where$b1($T09())(
                        tile24.TilesAtDistance(1), 
                        function Event_$lExecute$gm__14 (x) {
                          return $S02().CallVirtual("Is", null, x, $T0A().WALL);
                        }
                      )).get_Count() !== 0) || !$T0F().OneIn(100))) {
                if ($T0F().OneIn(6)) {
                  tile24.Toggle(null, $T0A().RUBBLE);
                }

                for (var a$1d = tile24.TilesAtDistance(1)._items, i$1d = 0, l$1d = tile24.TilesAtDistance(1)._size; i$1d < l$1d; ($temp1F = i$1d, 
                    i$1d = ((i$1d + 1) | 0), 
                    $temp1F)) {
                  var current39 = a$1d[i$1d];
                  if (!((current39.Tile$type$value !== $T0A().FLOOR) || !$T0F().OneIn(6))) {
                    current39.Toggle(null, $T0A().RUBBLE);
                  }
                }
              }
            }
          }
          $thisType.Event$Q$value.Add($S06().Construct((((($T0F().Roll(20) + 20) | 0) * 100) | 0), $T02().CEILING_COLLAPSE));
          break;

      }
      if (this.Event$msg$value != "") {
        if (this.msg_objs === null) {
          $thisType.Event$B$value.Add(this.Event$msg$value, JSIL.Array.New($T00(), 0));
        } else {
          $thisType.Event$B$value.Add(this.Event$msg$value, $T07().prototype.ToArray.call(this.msg_objs));
        }
      }
    }
  };

  function Event_get_attr () {
    return this.Event$attr$value;
  };

  function Event_get_B () {
    return $thisType.Event$B$value;
  };

  function Event_get_dead () {
    return this.Event$dead$value;
  };

  function Event_get_delay () {
    return this.Event$delay$value;
  };

  function Event_get_M () {
    return $thisType.Event$M$value;
  };

  function Event_get_msg () {
    return this.Event$msg$value;
  };

  function Event_get_player () {
    return $thisType.Event$player$value;
  };

  function Event_get_Q () {
    return $thisType.Event$Q$value;
  };

  function Event_get_target () {
    return this.Event$target$value;
  };

  function Event_get_tiebreaker () {
    return this.Event$tiebreaker$value;
  };

  function Event_get_time_created () {
    return this.Event$time_created$value;
  };

  function Event_get_type () {
    return this.Event$type$value;
  };

  function Event_get_value () {
    return this.Event$value$value;
  };

  function Event_Kill$10 (target_, type_) {
    if (!((this.msg_objs === null) || 
        ((this.Event$type$value !== type_) && 
          (type_.valueOf() !== 0)) || !this.msg_objs.Contains(this.Event$target$value))) {
      this.msg_objs.Remove(this.Event$target$value);
    }
    var tile = $T09().$As(target_);
    if (!((tile === null) || 
        (this.area === null) || !this.area.Contains(tile))) {
      this.area.Remove(tile);
    }
    if (!((this.Event$target$value !== target_) || ((this.Event$type$value !== type_) && 
          (type_.valueOf() !== 0)))) {
      this.Event$target$value = null;
      if (this.msg_objs !== null) {
        this.msg_objs.Clear();
        this.msg_objs = null;
      }
      if (this.area !== null) {
        this.area.Clear();
        this.area = null;
      }
      this.Event$dead$value = true;
    }
    if (!((type_ !== $T02().CHECK_FOR_HIDDEN) || (this.Event$type$value !== $T02().CHECK_FOR_HIDDEN))) {
      this.Event$dead$value = true;
    }
    if (!((target_ !== null) || 
        (type_ !== $T02().REGENERATING_FROM_DEATH) || (this.Event$type$value !== $T02().REGENERATING_FROM_DEATH))) {
      this.Event$dead$value = true;
    }
    if (!((target_ !== null) || 
        (type_ !== $T02().POLTERGEIST) || (this.Event$type$value !== $T02().POLTERGEIST))) {
      this.Event$dead$value = true;
    }
    if (!((target_ !== null) || 
        (type_ !== $T02().RELATIVELY_SAFE) || (this.Event$type$value !== $T02().RELATIVELY_SAFE))) {
      this.Event$dead$value = true;
    }
    if (!((target_ !== null) || 
        (type_ !== $T02().BLAST_FUNGUS) || (this.Event$type$value !== $T02().BLAST_FUNGUS))) {
      this.Event$dead$value = true;
    }
  };

  function Event_Kill$11 (target_, attr_) {
    if (!((this.Event$target$value !== target_) || 
        (this.Event$type$value !== $T02().REMOVE_ATTR) || (this.Event$attr$value !== attr_))) {
      this.Event$target$value = null;
      if (this.msg_objs !== null) {
        this.msg_objs.Clear();
        this.msg_objs = null;
      }
      if (this.area !== null) {
        this.area.Clear();
        this.area = null;
      }
      this.Event$dead$value = true;
    }
  };

  function Event_op_GreaterThan (one, two) {
    return ((one.TimeToExecute() > two.TimeToExecute()) || ((one.TimeToExecute() >= two.TimeToExecute()) && 
        ((one.Event$tiebreaker$value > two.Event$tiebreaker$value) || 
          ((one.Event$tiebreaker$value >= two.Event$tiebreaker$value) && 
            !((one.Event$type$value === $T02().MOVE) || 
              (two.Event$type$value !== $T02().MOVE))))));
  };

  function Event_op_GreaterThanOrEqual (one, two) {
    return ((one.TimeToExecute() > two.TimeToExecute()) || ((one.TimeToExecute() >= two.TimeToExecute()) && 
        ((one.Event$tiebreaker$value > two.Event$tiebreaker$value) || 
          ((one.Event$tiebreaker$value >= two.Event$tiebreaker$value) && 
            ((one.Event$type$value !== $T02().MOVE) || 
              !((one.Event$type$value !== $T02().MOVE) || 
                (two.Event$type$value !== $T02().MOVE)))))));
  };

  function Event_op_LessThan (one, two) {
    return ((one.TimeToExecute() < two.TimeToExecute()) || ((one.TimeToExecute() <= two.TimeToExecute()) && 
        ((one.Event$tiebreaker$value < two.Event$tiebreaker$value) || 
          ((one.Event$tiebreaker$value <= two.Event$tiebreaker$value) && 
            !((one.Event$type$value !== $T02().MOVE) || 
              (two.Event$type$value === $T02().MOVE))))));
  };

  function Event_op_LessThanOrEqual (one, two) {
    return ((one.TimeToExecute() < two.TimeToExecute()) || ((one.TimeToExecute() <= two.TimeToExecute()) && 
        ((one.Event$tiebreaker$value < two.Event$tiebreaker$value) || 
          ((one.Event$tiebreaker$value <= two.Event$tiebreaker$value) && 
            ((one.Event$type$value === $T02().MOVE) || 
              !((one.Event$type$value === $T02().MOVE) || 
                (two.Event$type$value === $T02().MOVE)))))));
  };

  function Event_set_attr (value) {
    this.Event$attr$value = value;
  };

  function Event_set_B (value) {
    $thisType.Event$B$value = value;
  };

  function Event_set_dead (value) {
    this.Event$dead$value = value;
  };

  function Event_set_delay (value) {
    this.Event$delay$value = value;
  };

  function Event_set_M (value) {
    $thisType.Event$M$value = value;
  };

  function Event_set_msg (value) {
    this.Event$msg$value = value;
  };

  function Event_set_player (value) {
    $thisType.Event$player$value = value;
  };

  function Event_set_Q (value) {
    $thisType.Event$Q$value = value;
  };

  function Event_set_target (value) {
    this.Event$target$value = value;
  };

  function Event_set_tiebreaker (value) {
    this.Event$tiebreaker$value = value;
  };

  function Event_set_time_created (value) {
    this.Event$time_created$value = value;
  };

  function Event_set_type (value) {
    this.Event$type$value = value;
  };

  function Event_set_value (value) {
    this.Event$value$value = value;
  };

  function Event_TimeToExecute () {
    return ((this.Event$delay$value + this.Event$time_created$value) | 0);
  };

  JSIL.MakeClass($asm01.TypeRef("System.Object"), "Forays.Event", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], []), 
      Event__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.PhysicalObject"), $.Int32], []), 
      Event__ctor$01
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.PhysicalObject"), $.Int32, 
          $asm00.TypeRef("Forays.AttrType")
        ], []), 
      Event__ctor$02
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.PhysicalObject"), $.Int32, 
          $asm00.TypeRef("Forays.AttrType"), $.Int32
        ], []), 
      Event__ctor$03
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.PhysicalObject"), $.Int32, 
          $asm00.TypeRef("Forays.AttrType"), $.String
        ], []), 
      Event__ctor$04
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.PhysicalObject"), $.Int32, 
          $asm00.TypeRef("Forays.AttrType"), $.Int32, 
          $.String
        ], []), 
      Event__ctor$05
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.PhysicalObject"), $.Int32, 
          $asm00.TypeRef("Forays.AttrType"), $.String, 
          $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.PhysicalObject")])
        ], []), 
      Event__ctor$06
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.PhysicalObject"), $.Int32, 
          $asm00.TypeRef("Forays.AttrType"), $.Int32, 
          $.String, $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.PhysicalObject")])
        ], []), 
      Event__ctor$07
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32, $asm00.TypeRef("Forays.EventType")], []), 
      Event__ctor$08
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.PhysicalObject"), $.Int32, 
          $asm00.TypeRef("Forays.EventType")
        ], []), 
      Event__ctor$09
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.PhysicalObject"), $.Int32, 
          $asm00.TypeRef("Forays.EventType"), $.Int32
        ], []), 
      Event__ctor$0A
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32, $.String], []), 
      Event__ctor$0B
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), $.Int32, 
          $asm00.TypeRef("Forays.EventType")
        ], []), 
      Event__ctor$0C
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), $.Int32, 
          $asm00.TypeRef("Forays.EventType"), $.String, 
          $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.PhysicalObject")])
        ], []), 
      Event__ctor$0D
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), 
          $.Int32, $asm00.TypeRef("Forays.EventType")
        ], []), 
      Event__ctor$0E
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), 
          $.Int32, $asm00.TypeRef("Forays.EventType"), 
          $asm00.TypeRef("Forays.AttrType"), $.Int32, 
          $.String, $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.PhysicalObject")])
        ], []), 
      Event__ctor$0F
    );

    $.Method({Static:true , Public:false}, "$lExecute$gm__10", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Tile")], []), 
      Event_$lExecute$gm__10
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "$lExecute$gm__11", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Tile")], []), 
      Event_$lExecute$gm__11
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "$lExecute$gm__12", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Tile")], []), 
      Event_$lExecute$gm__12
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "$lExecute$gm__13", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Tile")], []), 
      Event_$lExecute$gm__13
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "$lExecute$gm__14", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Tile")], []), 
      Event_$lExecute$gm__14
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "$lExecute$gm__5", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Tile")], []), 
      Event_$lExecute$gm__5
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "$lExecute$gm__6", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Tile")], []), 
      Event_$lExecute$gm__6
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "$lExecute$gm__7", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Tile")], []), 
      Event_$lExecute$gm__7
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "$lExecute$gm__8", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Tile")], []), 
      Event_$lExecute$gm__8
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "$lExecute$gm__9", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Tile")], []), 
      Event_$lExecute$gm__9
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "$lExecute$gm__A", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Tile")], []), 
      Event_$lExecute$gm__A
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "$lExecute$gm__B", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Tile")], []), 
      Event_$lExecute$gm__B
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "$lExecute$gm__C", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Tile")], []), 
      Event_$lExecute$gm__C
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "$lExecute$gm__D", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Tile")], []), 
      Event_$lExecute$gm__D
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "$lExecute$gm__E", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Tile")], []), 
      Event_$lExecute$gm__E
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "$lExecute$gm__F", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Tile")], []), 
      Event_$lExecute$gm__F
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "Execute", 
      new JSIL.MethodSignature(null, [], []), 
      Event_Execute
    );

    $.Method({Static:false, Public:true }, "get_attr", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.AttrType"), [], []), 
      Event_get_attr
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:true }, "get_B", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Buffer"), [], []), 
      Event_get_B
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_dead", 
      new JSIL.MethodSignature($.Boolean, [], []), 
      Event_get_dead
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_delay", 
      new JSIL.MethodSignature($.Int32, [], []), 
      Event_get_delay
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:true }, "get_M", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Map"), [], []), 
      Event_get_M
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_msg", 
      new JSIL.MethodSignature($.String, [], []), 
      Event_get_msg
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:true }, "get_player", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Actor"), [], []), 
      Event_get_player
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:true }, "get_Q", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Queue"), [], []), 
      Event_get_Q
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_target", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.PhysicalObject"), [], []), 
      Event_get_target
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_tiebreaker", 
      new JSIL.MethodSignature($.Int32, [], []), 
      Event_get_tiebreaker
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_time_created", 
      new JSIL.MethodSignature($.Int32, [], []), 
      Event_get_time_created
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_type", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.EventType"), [], []), 
      Event_get_type
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_value", 
      new JSIL.MethodSignature($.Int32, [], []), 
      Event_get_value
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "Kill", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.PhysicalObject"), $asm00.TypeRef("Forays.EventType")], []), 
      Event_Kill$10
    );

    $.Method({Static:false, Public:true }, "Kill", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.PhysicalObject"), $asm00.TypeRef("Forays.AttrType")], []), 
      Event_Kill$11
    );

    $.Method({Static:true , Public:true }, "op_GreaterThan", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type], []), 
      Event_op_GreaterThan
    );

    $.Method({Static:true , Public:true }, "op_GreaterThanOrEqual", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type], []), 
      Event_op_GreaterThanOrEqual
    );

    $.Method({Static:true , Public:true }, "op_LessThan", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type], []), 
      Event_op_LessThan
    );

    $.Method({Static:true , Public:true }, "op_LessThanOrEqual", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type], []), 
      Event_op_LessThanOrEqual
    );

    $.Method({Static:false, Public:true }, "set_attr", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.AttrType")], []), 
      Event_set_attr
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:true }, "set_B", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.Buffer")], []), 
      Event_set_B
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_dead", 
      new JSIL.MethodSignature(null, [$.Boolean], []), 
      Event_set_dead
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_delay", 
      new JSIL.MethodSignature(null, [$.Int32], []), 
      Event_set_delay
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:true }, "set_M", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.Map")], []), 
      Event_set_M
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_msg", 
      new JSIL.MethodSignature(null, [$.String], []), 
      Event_set_msg
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:true }, "set_player", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.Actor")], []), 
      Event_set_player
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:true }, "set_Q", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.Queue")], []), 
      Event_set_Q
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_target", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.PhysicalObject")], []), 
      Event_set_target
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_tiebreaker", 
      new JSIL.MethodSignature(null, [$.Int32], []), 
      Event_set_tiebreaker
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_time_created", 
      new JSIL.MethodSignature(null, [$.Int32], []), 
      Event_set_time_created
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_type", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.EventType")], []), 
      Event_set_type
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_value", 
      new JSIL.MethodSignature(null, [$.Int32], []), 
      Event_set_value
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "TimeToExecute", 
      new JSIL.MethodSignature($.Int32, [], []), 
      Event_TimeToExecute
    );

    $.Field({Static:false, Public:true }, "area", $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")])); 
    $.Field({Static:false, Public:true }, "msg_objs", $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.PhysicalObject")])); 
    $.Field({Static:false, Public:false}, "Event$target$value", $asm00.TypeRef("Forays.PhysicalObject"))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:false, Public:false}, "Event$delay$value", $.Int32)
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:false, Public:false}, "Event$type$value", $asm00.TypeRef("Forays.EventType"))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:false, Public:false}, "Event$attr$value", $asm00.TypeRef("Forays.AttrType"))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:false, Public:false}, "Event$value$value", $.Int32)
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:false, Public:false}, "Event$msg$value", $.String)
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:false, Public:false}, "Event$time_created$value", $.Int32)
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:false, Public:false}, "Event$dead$value", $.Boolean)
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:false, Public:false}, "Event$tiebreaker$value", $.Int32)
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "Event$Q$value", $asm00.TypeRef("Forays.Queue"))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "Event$B$value", $asm00.TypeRef("Forays.Buffer"))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "Event$M$value", $asm00.TypeRef("Forays.Map"))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "Event$player$value", $asm00.TypeRef("Forays.Actor"))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "$am", $asm00.TypeRef("Forays.Extensions/BooleanDelegate`1", [$asm00.TypeRef("Forays.Tile")]))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "$am", $asm00.TypeRef("Forays.Extensions/BooleanDelegate`1", [$asm00.TypeRef("Forays.Tile")]))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "$am", $asm00.TypeRef("Forays.Extensions/BooleanDelegate`1", [$asm00.TypeRef("Forays.Tile")]))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "$am", $asm00.TypeRef("Forays.Extensions/BooleanDelegate`1", [$asm00.TypeRef("Forays.Tile")]))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "$am", $asm00.TypeRef("Forays.Extensions/BooleanDelegate`1", [$asm00.TypeRef("Forays.Tile")]))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "$am", $asm00.TypeRef("Forays.Extensions/BooleanDelegate`1", [$asm00.TypeRef("Forays.Tile")]))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "$am", $asm00.TypeRef("Forays.Extensions/BooleanDelegate`1", [$asm00.TypeRef("Forays.Tile")]))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "$am", $asm00.TypeRef("Forays.Extensions/BooleanDelegate`1", [$asm00.TypeRef("Forays.Tile")]))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "$am", $asm00.TypeRef("Forays.Extensions/BooleanDelegate`1", [$asm00.TypeRef("Forays.Tile")]))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "$am", $asm00.TypeRef("Forays.Extensions/BooleanDelegate`1", [$asm00.TypeRef("Forays.Tile")]))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "$am", $asm00.TypeRef("Forays.Extensions/BooleanDelegate`1", [$asm00.TypeRef("Forays.Tile")]))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "$am", $asm00.TypeRef("Forays.Extensions/BooleanDelegate`1", [$asm00.TypeRef("Forays.Tile")]))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "$am", $asm00.TypeRef("Forays.Extensions/BooleanDelegate`1", [$asm00.TypeRef("Forays.Tile")]))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "$am", $asm00.TypeRef("Forays.Extensions/BooleanDelegate`1", [$asm00.TypeRef("Forays.Tile")]))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "$am", $asm00.TypeRef("Forays.Extensions/BooleanDelegate`1", [$asm00.TypeRef("Forays.Tile")]))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "$am", $asm00.TypeRef("Forays.Extensions/BooleanDelegate`1", [$asm00.TypeRef("Forays.Tile")]))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Property({Static:false, Public:true }, "target", $asm00.TypeRef("Forays.PhysicalObject"));

    $.Property({Static:false, Public:true }, "delay", $.Int32);

    $.Property({Static:false, Public:true }, "type", $asm00.TypeRef("Forays.EventType"));

    $.Property({Static:false, Public:true }, "attr", $asm00.TypeRef("Forays.AttrType"));

    $.Property({Static:false, Public:true }, "value", $.Int32);

    $.Property({Static:false, Public:true }, "msg", $.String);

    $.Property({Static:false, Public:true }, "time_created", $.Int32);

    $.Property({Static:false, Public:true }, "dead", $.Boolean);

    $.Property({Static:false, Public:true }, "tiebreaker", $.Int32);

    $.Property({Static:true , Public:true }, "Q", $asm00.TypeRef("Forays.Queue"));

    $.Property({Static:true , Public:true }, "B", $asm00.TypeRef("Forays.Buffer"));

    $.Property({Static:true , Public:true }, "M", $asm00.TypeRef("Forays.Map"));

    $.Property({Static:true , Public:true }, "player", $asm00.TypeRef("Forays.Actor"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function Tile$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.System.Collections.Generic.Dictionary$b2.Of($asm00.Forays.TileType, $asm00.Forays.Tile))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm01.System.Collections.Generic.Dictionary$b2.Of($asm00.Forays.FeatureType, $asm00.Forays.PhysicalObject))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Forays.TileType)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Forays.Color)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Forays.PhysicalObject)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Forays.FeatureType)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.FeatureType))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm01.System.Int32)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm01.System.String)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm01.System.Char)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm01.System.Boolean)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm01.System.Void)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.Forays.Actor)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.PhysicalObject))) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm00.Forays.Map_PosArray$b1.Of($asm00.Forays.Tile))) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm00.Forays.Map_PosArray$b1.Of($asm00.Forays.Actor))) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm00.Forays.Item)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.Tile))) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm00.Forays.Extensions)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm00.Forays.Map)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm00.Forays.Tile_del)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm00.Forays.Global)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm01.System.Int32))) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm02.System.Collections.Generic.LinkedList$b1.Of($asm00.Forays.WeaponType))) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm00.Forays.WeaponType)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm02.System.Collections.Generic.LinkedList$b1.Of($asm00.Forays.ArmorType))) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm00.Forays.ArmorType)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm02.System.Collections.Generic.LinkedList$b1.Of($asm00.Forays.MagicItemType))) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm00.Forays.MagicItemType)) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm02.System.Collections.Generic.LinkedListNode$b1.Of($asm00.Forays.WeaponType))) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize($asm00.Forays.Weapon)) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm02.System.Collections.Generic.LinkedListNode$b1.Of($asm00.Forays.ArmorType))) ();
  };
  var $T20 = function () {
    return ($T20 = JSIL.Memoize($asm00.Forays.Armor)) ();
  };
  var $T21 = function () {
    return ($T21 = JSIL.Memoize($asm00.Forays.Buffer)) ();
  };
  var $T22 = function () {
    return ($T22 = JSIL.Memoize($asm00.Forays.MagicItem)) ();
  };
  var $T23 = function () {
    return ($T23 = JSIL.Memoize($asm00.Forays.Queue)) ();
  };
  var $T24 = function () {
    return ($T24 = JSIL.Memoize($asm00.Forays.Event)) ();
  };
  var $T25 = function () {
    return ($T25 = JSIL.Memoize($asm00.Forays.EventType)) ();
  };
  var $T26 = function () {
    return ($T26 = JSIL.Memoize($asm00.Forays.Dict$b2.Of($asm00.Forays.AttrType, $asm01.System.Int32))) ();
  };
  var $T27 = function () {
    return ($T27 = JSIL.Memoize($asm00.Forays.ActorType)) ();
  };
  var $T28 = function () {
    return ($T28 = JSIL.Memoize($asm00.Forays.AttrType)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.Dictionary`2", [$asm00.TypeRef("Forays.TileType"), $asm00.TypeRef("Forays.Tile")]), []))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.Dictionary`2", [$asm00.TypeRef("Forays.FeatureType"), $asm00.TypeRef("Forays.PhysicalObject")]), []))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Tile"), [
        $asm00.TypeRef("Forays.TileType"), $asm01.TypeRef("System.String"), 
        $asm01.TypeRef("System.Char"), $asm00.TypeRef("Forays.Color"), 
        $asm01.TypeRef("System.Boolean"), $asm01.TypeRef("System.Boolean"), 
        $asm01.TypeRef("System.Nullable`1", [$asm00.TypeRef("Forays.TileType")])
      ]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.PhysicalObject"), [
        $asm01.TypeRef("System.String"), $asm01.TypeRef("System.Char"), 
        $asm00.TypeRef("Forays.Color")
      ]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.FeatureType")]), []))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.PhysicalObject")]), []))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Tile"), [
        $asm00.TypeRef("Forays.Tile"), $asm01.TypeRef("System.Int32"), 
        $asm01.TypeRef("System.Int32")
      ]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Boolean"), [$asm00.TypeRef("Forays.FeatureType")], []))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Int32"), [$asm00.TypeRef("Forays.PhysicalObject")], []))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), []))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm01.TypeRef("System.Int32")]), []))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.WeaponType"), $asm00.TypeRef("Forays.WeaponType")], []))) ();
  };
  var $S0C = function () {
    return ($S0C = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.ArmorType"), $asm00.TypeRef("Forays.ArmorType")], []))) ();
  };
  var $S0D = function () {
    return ($S0D = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Event"), [
        $asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.EventType")
      ]))) ();
  };
  var $S0E = function () {
    return ($S0E = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Event"), [
        $asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), 
        $asm01.TypeRef("System.Int32"), $asm00.TypeRef("Forays.EventType"), 
        $asm00.TypeRef("Forays.AttrType"), $asm01.TypeRef("System.Int32"), 
        $asm01.TypeRef("System.String"), $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.PhysicalObject")])
      ]))) ();
  };
  var $S0F = function () {
    return ($S0F = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.PhysicalObject"), $asm00.TypeRef("Forays.AttrType")], []))) ();
  };
  var $S10 = function () {
    return ($S10 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Event"), [
        $asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.AttrType"), $asm01.TypeRef("System.String"), 
        $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.PhysicalObject")])
      ]))) ();
  };
  var $S11 = function () {
    return ($S11 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Event"), [
        $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.EventType")
      ]))) ();
  };

  function Tile__ctor$00 () {
    this.features = $S04().Construct();
    $T04().prototype._ctor.call(this);
  };

  function Tile__ctor$01 (t, r, c) {
    this.features = $S04().Construct();
    $T04().prototype._ctor.call(this);
    this.Tile$type$value = t.Tile$type$value;
    this.PhysicalObject$$name$value = t.PhysicalObject$$name$value;
    this.PhysicalObject$a_name$value = t.PhysicalObject$a_name$value;
    this.PhysicalObject$the_name$value = t.PhysicalObject$the_name$value;
    this.PhysicalObject$symbol$value = t.PhysicalObject$symbol$value;
    this.PhysicalObject$color$value = t.PhysicalObject$color$value;
    this.Tile$passable$value = t.Tile$passable$value;
    this.set_opaque(t.get_opaque());
    this.Tile$seen$value = false;
    this.Tile$solid_rock$value = false;
    this.set_light_value(0);
    this.toggles_into = t.toggles_into;
    this.Tile$inv$value = null;
    this.set_row(r);
    this.set_col(c);
    this.PhysicalObject$light_radius$value = t.PhysicalObject$light_radius$value;
  };

  function Tile__ctor$02 (type_, name_, symbol_, color_, passable_, opaque_, toggles_into_) {
    this.features = $S04().Construct();
    $T04().prototype._ctor.call(this);
    this.Tile$type$value = type_;
    this.PhysicalObject$$name$value = name_;
    this.PhysicalObject$the_name$value = (JSIL.ConcatString("the ", this.PhysicalObject$$name$value));
    var c = (this.PhysicalObject$$name$value[0]);
    if (!((c.charCodeAt(0) === "A".charCodeAt(0)) || 
        (c.charCodeAt(0) === "E".charCodeAt(0)) || 
        (c.charCodeAt(0) === "I".charCodeAt(0)) || 
        (c.charCodeAt(0) === "O".charCodeAt(0)) || 
        (c.charCodeAt(0) === "U".charCodeAt(0)) || 
        (c.charCodeAt(0) === "a".charCodeAt(0)) || 
        (c.charCodeAt(0) === "e".charCodeAt(0)) || 
        (c.charCodeAt(0) === "i".charCodeAt(0)) || 
        (c.charCodeAt(0) === "o".charCodeAt(0)) || (c.charCodeAt(0) === "u".charCodeAt(0)))) {
      this.PhysicalObject$a_name$value = (JSIL.ConcatString("a ", this.PhysicalObject$$name$value));
    } else {
      this.PhysicalObject$a_name$value = (JSIL.ConcatString("an ", this.PhysicalObject$$name$value));
    }
    this.PhysicalObject$symbol$value = symbol_;
    this.PhysicalObject$color$value = color_;
    this.Tile$passable$value = passable_;
    this.set_opaque(opaque_);
    this.Tile$seen$value = false;
    this.Tile$solid_rock$value = false;
    this.set_light_value(0);
    this.toggles_into = toggles_into_;
    this.Tile$inv$value = null;
    this.PhysicalObject$light_radius$value = 0;
  };

  function Tile_$lNeighborsBetween$gm__16 (x) {
    return ((x >= -1) ? ((x <= 1) ? x : 1) : -1);
  };

  function Tile_$lTriggerTrap$gm__15 (t) {
    return (!(!t.Tile$passable$value || 
        (t.actor() !== null)) && t.HasLOE(this));
  };

  function Tile_AddOpaqueFeature (f) {
    var $temp00;
    if (!this.features.Contains(f)) {
      var flag = false;
      var list = $S05().Construct();

      for (var i = ((this.get_row() - 1) | 0); i <= ((this.get_row() + 1) | 0); i = ((i + 1) | 0)) {

        for (var j = ((this.get_col() - 1) | 0); j <= ((this.get_col() + 1) | 0); j = ((j + 1) | 0)) {
          if ($T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, i, j).IsLit()) {
            flag = true;
          }
        }
      }
      if (flag) {

        for (var k = ((this.get_row() - 12) | 0); k <= ((this.get_row() + 12) | 0); k = ((k + 1) | 0)) {

          for (var l = ((this.get_col() - 12) | 0); l <= ((this.get_col() + 12) | 0); l = ((l + 1) | 0)) {
            if (!((k <= 0) || 
                (k >= (($thisType.ROWS - 1) | 0)) || 
                (l <= 0) || (l >= (($thisType.COLS - 1) | 0)))) {
              if (!(($T0F().prototype.get_Item.call($T04().PhysicalObject$M$value.actor, k, l) === null) || ($T0F().prototype.get_Item.call($T04().PhysicalObject$M$value.actor, k, l).LightRadius() <= 0))) {
                list.Add($T0F().prototype.get_Item.call($T04().PhysicalObject$M$value.actor, k, l));
                $T0F().prototype.get_Item.call($T04().PhysicalObject$M$value.actor, k, l).UpdateRadius($T0F().prototype.get_Item.call($T04().PhysicalObject$M$value.actor, k, l).LightRadius(), 0);
              }
              if (!(($T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, k, l).Tile$inv$value === null) || ($T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, k, l).Tile$inv$value.PhysicalObject$light_radius$value <= 0))) {
                list.Add($T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, k, l).Tile$inv$value);
                $T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, k, l).Tile$inv$value.UpdateRadius($T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, k, l).Tile$inv$value.PhysicalObject$light_radius$value, 0);
              }
              if ($T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, k, l).PhysicalObject$light_radius$value > 0) {
                list.Add($T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, k, l));
                $T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, k, l).UpdateRadius($T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, k, l).PhysicalObject$light_radius$value, 0);
              }
            }
          }
        }
      }
      this.features.Add(f);
      if (flag) {

        for (var a$0 = list._items, i$0 = 0, l$0 = list._size; i$0 < l$0; ($temp00 = i$0, 
            i$0 = ((i$0 + 1) | 0), 
            $temp00)) {
          var current = a$0[i$0];
          if ($T0C().$As(current) !== null) {
            var actor = $T0C().$As(current);
            actor.UpdateRadius(0, actor.LightRadius());
          } else {
            current.UpdateRadius(0, current.PhysicalObject$light_radius$value);
          }
        }
      }
    }
  };

  function Tile_ConductsElectricity () {
    return !(!this.IsShrine() && 
      (this.Tile$type$value !== $T02().CHEST) && (this.Tile$type$value !== $T02().RUINED_SHRINE));
  };

  function Tile_Create (type, r, c) {
    var tile = null;
    if ($T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, r, c) === null) {
      tile = $S06().Construct($thisType.proto.get_Item(type), r, c);
      $T0E().prototype.set_Item.call($T04().PhysicalObject$M$value.tile, r, c, tile);
    }
    return tile;
  };

  function Tile_Define (type_, name_, symbol_, color_, passable_, opaque_, toggles_into_) {
    $thisType.proto.set_Item(type_, $S02().Construct(type_, name_, symbol_, color_, passable_, opaque_, toggles_into_));
  };

  function Tile_Feature (type) {
    return $thisType.proto_feature.get_Item(type);
  };

  function Tile_FeatureColor () {
    if ($S07().CallVirtual("Is", null, this, $T05().FUNGUS_PRIMED)) {
      return $thisType.Feature($T05().FUNGUS_PRIMED).PhysicalObject$color$value;
    }
    if ($S07().CallVirtual("Is", null, this, $T05().GRENADE)) {
      return $thisType.Feature($T05().GRENADE).PhysicalObject$color$value;
    }
    if ($S07().CallVirtual("Is", null, this, $T05().QUICKFIRE)) {
      return $thisType.Feature($T05().QUICKFIRE).PhysicalObject$color$value;
    }
    if ($S07().CallVirtual("Is", null, this, $T05().POISON_GAS)) {
      return $thisType.Feature($T05().POISON_GAS).PhysicalObject$color$value;
    }
    if ($S07().CallVirtual("Is", null, this, $T05().FUNGUS_ACTIVE)) {
      return $thisType.Feature($T05().FUNGUS_ACTIVE).PhysicalObject$color$value;
    }
    if ($S07().CallVirtual("Is", null, this, $T05().FOG)) {
      return $thisType.Feature($T05().FOG).PhysicalObject$color$value;
    }
    if ($S07().CallVirtual("Is", null, this, $T05().FUNGUS)) {
      return $thisType.Feature($T05().FUNGUS).PhysicalObject$color$value;
    }
    if ($S07().CallVirtual("Is", null, this, $T05().TROLL_SEER_CORPSE)) {
      return $thisType.Feature($T05().TROLL_SEER_CORPSE).PhysicalObject$color$value;
    }
    if ($S07().CallVirtual("Is", null, this, $T05().TROLL_CORPSE)) {
      return $thisType.Feature($T05().TROLL_CORPSE).PhysicalObject$color$value;
    }
    if ($S07().CallVirtual("Is", null, this, $T05().RUNE_OF_RETREAT)) {
      return $thisType.Feature($T05().RUNE_OF_RETREAT).PhysicalObject$color$value;
    }
    if ($S07().CallVirtual("Is", null, this, $T05().SLIME)) {
      return $thisType.Feature($T05().SLIME).PhysicalObject$color$value;
    }
    return this.PhysicalObject$color$value;
  };

  function Tile_FeatureSymbol () {
    if ($S07().CallVirtual("Is", null, this, $T05().FUNGUS_PRIMED)) {
      return $thisType.Feature($T05().FUNGUS_PRIMED).PhysicalObject$symbol$value;
    }
    if ($S07().CallVirtual("Is", null, this, $T05().GRENADE)) {
      return $thisType.Feature($T05().GRENADE).PhysicalObject$symbol$value;
    }
    if ($S07().CallVirtual("Is", null, this, $T05().QUICKFIRE)) {
      return $thisType.Feature($T05().QUICKFIRE).PhysicalObject$symbol$value;
    }
    if ($S07().CallVirtual("Is", null, this, $T05().POISON_GAS)) {
      return $thisType.Feature($T05().POISON_GAS).PhysicalObject$symbol$value;
    }
    if ($S07().CallVirtual("Is", null, this, $T05().FUNGUS_ACTIVE)) {
      return $thisType.Feature($T05().FUNGUS_ACTIVE).PhysicalObject$symbol$value;
    }
    if ($S07().CallVirtual("Is", null, this, $T05().FOG)) {
      return $thisType.Feature($T05().FOG).PhysicalObject$symbol$value;
    }
    if ($S07().CallVirtual("Is", null, this, $T05().FUNGUS)) {
      return $thisType.Feature($T05().FUNGUS).PhysicalObject$symbol$value;
    }
    if ($S07().CallVirtual("Is", null, this, $T05().TROLL_SEER_CORPSE)) {
      return $thisType.Feature($T05().TROLL_SEER_CORPSE).PhysicalObject$symbol$value;
    }
    if ($S07().CallVirtual("Is", null, this, $T05().TROLL_CORPSE)) {
      return $thisType.Feature($T05().TROLL_CORPSE).PhysicalObject$symbol$value;
    }
    if ($S07().CallVirtual("Is", null, this, $T05().RUNE_OF_RETREAT)) {
      return $thisType.Feature($T05().RUNE_OF_RETREAT).PhysicalObject$symbol$value;
    }
    if ($S07().CallVirtual("Is", null, this, $T05().SLIME)) {
      return $thisType.Feature($T05().SLIME).PhysicalObject$symbol$value;
    }
    return this.PhysicalObject$symbol$value;
  };

  function Tile_get_B () {
    return $thisType.Tile$B$value;
  };

  function Tile_get_inv () {
    return this.Tile$inv$value;
  };

  function Tile_get_light_value () {
    return this.internal_light_value;
  };

  function Tile_get_opaque () {
    return (this.internal_opaque || this.features.Contains($T05().FOG));
  };

  function Tile_get_passable () {
    return this.Tile$passable$value;
  };

  function Tile_get_player () {
    return $thisType.Tile$player$value;
  };

  function Tile_get_Q () {
    return $thisType.Tile$Q$value;
  };

  function Tile_get_seen () {
    return this.Tile$seen$value;
  };

  function Tile_get_solid_rock () {
    return this.Tile$solid_rock$value;
  };

  function Tile_get_type () {
    return this.Tile$type$value;
  };

  function Tile_GetItem (item) {
    var $temp00;
    if (this.Tile$inv$value === null) {
      item.set_row(this.get_row());
      item.set_col(this.get_col());
      if (item.PhysicalObject$light_radius$value > 0) {
        item.UpdateRadius(0, item.PhysicalObject$light_radius$value);
      }
      this.Tile$inv$value = item;
      return true;
    }
    if (!((this.Tile$inv$value.Item$type$value !== item.Item$type$value) || 
        this.Tile$inv$value.Item$do_not_stack$value || item.Item$do_not_stack$value)) {
      ($temp00 = ((this.Tile$inv$value.Item$quantity$value + item.Item$quantity$value) | 0), 
        this.Tile$inv$value.Item$quantity$value = $temp00, 
        $temp00);
      return true;
    }

    for (var i = 1; i < $thisType.COLS; i = ((i + 1) | 0)) {

      for (var list = this.TilesAtDistance(i); list.get_Count() > 0; ) {
        var tile = $T12().Random$b1($thisType)(list);
        if (!(!tile.Tile$passable$value || (tile.Tile$inv$value !== null))) {
          item.set_row(tile.get_row());
          item.set_col(tile.get_col());
          if (item.PhysicalObject$light_radius$value > 0) {
            item.UpdateRadius(0, item.PhysicalObject$light_radius$value);
          }
          tile.Tile$inv$value = item;
          return true;
        }
        list.Remove(tile);
      }
    }
    return false;
  };

  function Tile_Is$03 (t) {
    return (this.Tile$type$value === t);
  };

  function Tile_Is$04 (t) {
    var $temp00;

    for (var a$0 = this.features._items, i$0 = 0, l$0 = this.features._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      if (current === t) {
        return true;
      }
    }
    return false;
  };

  function Tile_IsKnownTrap () {
    return !(!this.IsTrap() || !(this.PhysicalObject$$name$value != "floor"));
  };

  function Tile_IsLit$05 () {
    return this.IsLit(
      $thisType.Tile$player$value.get_row(), 
      $thisType.Tile$player$value.get_col()
    );
  };

  function Tile_IsLit$06 (viewer_row, viewer_col) {
    var $temp00;
    if ($T04().PhysicalObject$M$value.get_wiz_lite()) {
      return true;
    }
    if ($T04().PhysicalObject$M$value.Map$wiz_dark$value) {
      return false;
    }
    if (this.get_light_value() > 0) {
      return true;
    }
    if (this.features.Contains($T05().QUICKFIRE)) {
      return true;
    }
    if (this.get_opaque()) {

      for (var a$0 = this.NeighborsBetween(viewer_row, viewer_col)._items, i$0 = 0, l$0 = this.NeighborsBetween(viewer_row, viewer_col)._size; i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current = a$0[i$0];
        if (current.get_light_value() > 0) {
          return true;
        }
      }
      if (!(($T0F().prototype.get_Item.call($T04().PhysicalObject$M$value.actor, viewer_row, viewer_col) === null) || 
          ($T0F().prototype.get_Item.call($T04().PhysicalObject$M$value.actor, viewer_row, viewer_col).LightRadius() <= 0) || 
          ($T0F().prototype.get_Item.call($T04().PhysicalObject$M$value.actor, viewer_row, viewer_col).LightRadius() < this.DistanceFrom(viewer_row, viewer_col)) || !$T0F().prototype.get_Item.call($T04().PhysicalObject$M$value.actor, viewer_row, viewer_col).HasBresenhamLine(
            this.get_row(), 
            this.get_col()
          ))) {
        return true;
      }
      return false;
    }
    return false;
  };

  function Tile_IsLitFromAnywhere$07 () {
    return this.IsLitFromAnywhere(this.get_opaque());
  };

  function Tile_IsLitFromAnywhere$08 (considered_opaque) {
    var $temp00, $temp01;
    if ($T04().PhysicalObject$M$value.get_wiz_lite()) {
      return true;
    }
    if ($T04().PhysicalObject$M$value.Map$wiz_dark$value) {
      return false;
    }
    if (this.get_light_value() > 0) {
      return true;
    }
    if (this.features.Contains($T05().QUICKFIRE)) {
      return true;
    }
    if (considered_opaque) {

      for (var a$0 = this.TilesAtDistance(1)._items, i$0 = 0, l$0 = this.TilesAtDistance(1)._size; i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current = a$0[i$0];
        if (current.get_light_value() > 0) {
          var result = true;
          return result;
        }
      }

      for (var a$1 = this.ActorsWithinDistance(12)._items, i$1 = 0, l$1 = this.ActorsWithinDistance(12)._size; i$1 < l$1; ($temp01 = i$1, 
          i$1 = ((i$1 + 1) | 0), 
          $temp01)) {
        var current2 = a$1[i$1];
        if (!((current2.LightRadius() <= 0) || 
            (current2.LightRadius() < $S08().CallVirtual("DistanceFrom", null, current2, this)) || !current2.HasBresenhamLine(
              this.get_row(), 
              this.get_col()
            ))) {
          result = true;
          return result;
        }
      }
      return false;
    }
    return false;
  };

  function Tile_IsShrine () {
    switch (this.Tile$type$value.valueOf()) {
      case 21: 
      case 22: 
      case 23: 
      case 24: 
      case 25: 
      case 27: 
        return true;

    }
    return false;
  };

  function Tile_IsTrap () {
    switch (this.Tile$type$value.valueOf()) {
      case 8: 
      case 9: 
      case 10: 
      case 11: 
      case 12: 
      case 13: 
      case 14: 
      case 15: 
      case 16: 
      case 17: 
      case 18: 
      case 19: 
        return true;

      default: 
        return false;

    }
  };

  function Tile_IsTrapOrVent () {
    return (this.IsTrap() || 
      (this.Tile$type$value === $T02().FIRE_GEYSER) || 
      (this.Tile$type$value === $T02().FOG_VENT) || (this.Tile$type$value === $T02().POISON_GAS_VENT));
  };

  function Tile_NeighborsBetween (r, c) {
    var del = function Tile_$lNeighborsBetween$gm__16 (x) {
      return ((x >= -1) ? ((x <= 1) ? x : 1) : -1);
    };
    var num = ((r - this.get_row()) | 0);
    var num2 = ((c - this.get_col()) | 0);
    var list = $S09().Construct();
    if (!((num !== 0) || (num2 !== 0))) {
      return list;
    }
    var num3 = ((this.get_row() + del(num)) | 0);
    var num4 = ((this.get_col() + del(num2)) | 0);
    if (!$T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, num3, num4).get_opaque()) {
      list.Add($T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, num3, num4));
    }
    if (!(((Math.abs(num)) >= (Math.abs(num2))) || (num === 0))) {
      num3 = ((num3 - del(num)) | 0);
      if (!$T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, num3, num4).get_opaque()) {
        list.Add($T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, num3, num4));
      }
    }
    if (!(((Math.abs(num2)) >= (Math.abs(num))) || (num2 === 0))) {
      num4 = ((num4 - del(num2)) | 0);
      if (!$T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, num3, num4).get_opaque()) {
        list.Add($T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, num3, num4));
      }
    }
    return list;
  };

  function Tile_OpenChest () {
    var $s00 = new JSIL.MethodSignature($asm02.TypeRef("System.Collections.Generic.LinkedListNode`1", [$asm00.TypeRef("Forays.MagicItemType")]), [$asm00.TypeRef("Forays.MagicItemType")], []);
    if (this.Tile$type$value === $T02().CHEST) {
      if ($T15().Roll(1, 10) === 10) {
        var list = $S0A().Construct();
        if (!(($T15().Roll(1, 2) !== 2) || $thisType.Tile$player$value.weapons.Contains($T18().FLAMEBRAND))) {
          list.Add(0);
        }
        if (!(($T15().Roll(1, 2) !== 2) || $thisType.Tile$player$value.weapons.Contains($T18().MACE_OF_FORCE))) {
          list.Add(1);
        }
        if (!(($T15().Roll(1, 2) !== 2) || $thisType.Tile$player$value.weapons.Contains($T18().VENOMOUS_DAGGER))) {
          list.Add(2);
        }
        if (!(($T15().Roll(1, 2) !== 2) || $thisType.Tile$player$value.weapons.Contains($T18().STAFF_OF_MAGIC))) {
          list.Add(3);
        }
        if (!(($T15().Roll(1, 2) !== 2) || $thisType.Tile$player$value.weapons.Contains($T18().HOLY_LONGBOW))) {
          list.Add(4);
        }
        if (!(($T15().Roll(1, 3) !== 3) || $thisType.Tile$player$value.armors.Contains($T1A().ELVEN_LEATHER))) {
          list.Add(5);
        }
        if (!(($T15().Roll(1, 3) !== 3) || $thisType.Tile$player$value.armors.Contains($T1A().CHAINMAIL_OF_ARCANA))) {
          list.Add(6);
        }
        if (!(($T15().Roll(1, 3) !== 3) || $thisType.Tile$player$value.armors.Contains($T1A().FULL_PLATE_OF_RESISTANCE))) {
          list.Add(7);
        }
        if (!(($T15().Roll(1, 2) !== 2) || $thisType.Tile$player$value.magic_items.Contains($T1C().PENDANT_OF_LIFE))) {
          list.Add(8);
        }
        if (!(($T15().Roll(1, 3) !== 3) || $thisType.Tile$player$value.magic_items.Contains($T1C().RING_OF_RESISTANCE))) {
          list.Add(9);
        }
        if (!(($T15().Roll(1, 2) !== 2) || $thisType.Tile$player$value.magic_items.Contains($T1C().RING_OF_PROTECTION))) {
          list.Add(10);
        }
        if (!(($T15().Roll(1, 2) !== 2) || $thisType.Tile$player$value.magic_items.Contains($T1C().CLOAK_OF_DISAPPEARANCE))) {
          list.Add(11);
        }
        if (list.get_Count() === 0) {
          this.OpenChest();
          return;
        }
        var num = list.get_Item((($T15().Roll(1, list.get_Count()) - 1) | 0));
        switch (num) {
          case 0: 
            $T17().prototype.Find.call($thisType.Tile$player$value.weapons, $T18().SWORD).set_Value($T18().FLAMEBRAND);
            if ($T1E().BaseWeapon($thisType.Tile$player$value.weapons.get_First().get_Value()).valueOf() === 0) {
              $S0B().CallVirtual("UpdateOnEquip", null, $thisType.Tile$player$value, $T18().SWORD, $T18().FLAMEBRAND);
            }
            break;

          case 1: 
            $T17().prototype.Find.call($thisType.Tile$player$value.weapons, $T18().MACE).set_Value($T18().MACE_OF_FORCE);
            if ($T1E().BaseWeapon($thisType.Tile$player$value.weapons.get_First().get_Value()) === $T18().MACE) {
              $S0B().CallVirtual("UpdateOnEquip", null, $thisType.Tile$player$value, $T18().MACE, $T18().MACE_OF_FORCE);
            }
            break;

          case 2: 
            $T17().prototype.Find.call($thisType.Tile$player$value.weapons, $T18().DAGGER).set_Value($T18().VENOMOUS_DAGGER);
            if ($T1E().BaseWeapon($thisType.Tile$player$value.weapons.get_First().get_Value()) === $T18().DAGGER) {
              $S0B().CallVirtual("UpdateOnEquip", null, $thisType.Tile$player$value, $T18().DAGGER, $T18().VENOMOUS_DAGGER);
            }
            break;

          case 3: 
            $T17().prototype.Find.call($thisType.Tile$player$value.weapons, $T18().STAFF).set_Value($T18().STAFF_OF_MAGIC);
            if ($T1E().BaseWeapon($thisType.Tile$player$value.weapons.get_First().get_Value()) === $T18().STAFF) {
              $S0B().CallVirtual("UpdateOnEquip", null, $thisType.Tile$player$value, $T18().STAFF, $T18().STAFF_OF_MAGIC);
            }
            break;

          case 4: 
            $T17().prototype.Find.call($thisType.Tile$player$value.weapons, $T18().BOW).set_Value($T18().HOLY_LONGBOW);
            if ($T1E().BaseWeapon($thisType.Tile$player$value.weapons.get_First().get_Value()) === $T18().BOW) {
              $S0B().CallVirtual("UpdateOnEquip", null, $thisType.Tile$player$value, $T18().BOW, $T18().HOLY_LONGBOW);
            }
            break;

          case 5: 
            $T19().prototype.Find.call($thisType.Tile$player$value.armors, $T1A().LEATHER).set_Value($T1A().ELVEN_LEATHER);
            if ($T20().BaseArmor($thisType.Tile$player$value.armors.get_First().get_Value()).valueOf() === 0) {
              $S0C().CallVirtual("UpdateOnEquip", null, $thisType.Tile$player$value, $T1A().LEATHER, $T1A().ELVEN_LEATHER);
            }
            break;

          case 6: 
            $T19().prototype.Find.call($thisType.Tile$player$value.armors, $T1A().CHAINMAIL).set_Value($T1A().CHAINMAIL_OF_ARCANA);
            if ($T20().BaseArmor($thisType.Tile$player$value.armors.get_First().get_Value()) === $T1A().CHAINMAIL) {
              $S0C().CallVirtual("UpdateOnEquip", null, $thisType.Tile$player$value, $T1A().CHAINMAIL, $T1A().CHAINMAIL_OF_ARCANA);
            }
            break;

          case 7: 
            $T19().prototype.Find.call($thisType.Tile$player$value.armors, $T1A().FULL_PLATE).set_Value($T1A().FULL_PLATE_OF_RESISTANCE);
            if ($T20().BaseArmor($thisType.Tile$player$value.armors.get_First().get_Value()) === $T1A().FULL_PLATE) {
              $S0C().CallVirtual("UpdateOnEquip", null, $thisType.Tile$player$value, $T1A().FULL_PLATE, $T1A().FULL_PLATE_OF_RESISTANCE);
            }
            break;

          case 8: 
            $s00.Call($T1B().prototype, "AddLast", null, $thisType.Tile$player$value.magic_items, $T1C().PENDANT_OF_LIFE);
            break;

          case 9: 
            $s00.Call($T1B().prototype, "AddLast", null, $thisType.Tile$player$value.magic_items, $T1C().RING_OF_RESISTANCE);
            break;

          case 10: 
            $s00.Call($T1B().prototype, "AddLast", null, $thisType.Tile$player$value.magic_items, $T1C().RING_OF_PROTECTION);
            break;

          case 11: 
            $s00.Call($T1B().prototype, "AddLast", null, $thisType.Tile$player$value.magic_items, $T1C().CLOAK_OF_DISAPPEARANCE);
            break;

        }
        if (num <= 4) {
          $thisType.Tile$B$value.Add(("You find a " + $T1E().Name($asm00.Forays.WeaponType.$Cast(num + $T18().FLAMEBRAND)) + "! "), JSIL.Array.New($T04(), 0));
        } else if (num <= 7) {
          $thisType.Tile$B$value.Add(("You find " + $T20().Name($T1A().$Cast(((num - 2) | 0))) + "! "), JSIL.Array.New($T04(), 0));
        } else {
          $thisType.Tile$B$value.Add(("You find a " + $T22().Name($T1C().$Cast(((num - 8) | 0))) + "! "), JSIL.Array.New($T04(), 0));
        }
      } else {
        var flag = false;
        if ($thisType.Tile$player$value.InventoryCount() >= 20) {
          flag = true;
        }
        var item = $T10().Create($T10().RandomItem(), $thisType.Tile$player$value);
        if (item !== null) {
          $thisType.Tile$B$value.Add(("You find " + $T10().Prototype(item.Item$type$value).AName() + ". "), JSIL.Array.New($T04(), 0));
          if (flag) {
            $thisType.Tile$B$value.Add("Your pack is too full to pick it up. ", JSIL.Array.New($T04(), 0));
          }
        }
      }
      this.TurnToFloor();
    }
  };

  function Tile_Preposition () {
    switch (this.Tile$type$value.valueOf()) {
      case 1: 
      case 4: 
        return " on ";

      case 2: 
        return " in ";

    }
    return " and ";
  };

  function Tile_Prototype (type) {
    return $thisType.proto.get_Item(type);
  };

  function Tile_RandomTrap () {
    return $asm00.Forays.TileType.$Cast($T15().Roll(12) + $T02().STALAGMITE);
  };

  function Tile_RandomVent () {
    switch ($T15().Roll(3)) {
      case 1: 
        return $T02().FIRE_GEYSER;

      case 2: 
        return $T02().FOG_VENT;

    }
    return $T02().POISON_GAS_VENT;
  };

  function Tile_RemoveOpaqueFeature (f) {
    var $temp00;
    if (this.features.Contains(f)) {
      var flag = false;
      var list = $S05().Construct();

      for (var i = ((this.get_row() - 1) | 0); i <= ((this.get_row() + 1) | 0); i = ((i + 1) | 0)) {

        for (var j = ((this.get_col() - 1) | 0); j <= ((this.get_col() + 1) | 0); j = ((j + 1) | 0)) {
          if ($T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, i, j).IsLit()) {
            flag = true;
          }
        }
      }
      if (flag) {

        for (var k = ((this.get_row() - 12) | 0); k <= ((this.get_row() + 12) | 0); k = ((k + 1) | 0)) {

          for (var l = ((this.get_col() - 12) | 0); l <= ((this.get_col() + 12) | 0); l = ((l + 1) | 0)) {
            if (!((k <= 0) || 
                (k >= (($thisType.ROWS - 1) | 0)) || 
                (l <= 0) || (l >= (($thisType.COLS - 1) | 0)))) {
              if (!(($T0F().prototype.get_Item.call($T04().PhysicalObject$M$value.actor, k, l) === null) || ($T0F().prototype.get_Item.call($T04().PhysicalObject$M$value.actor, k, l).LightRadius() <= 0))) {
                list.Add($T0F().prototype.get_Item.call($T04().PhysicalObject$M$value.actor, k, l));
                $T0F().prototype.get_Item.call($T04().PhysicalObject$M$value.actor, k, l).UpdateRadius($T0F().prototype.get_Item.call($T04().PhysicalObject$M$value.actor, k, l).LightRadius(), 0);
              }
              if (!(($T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, k, l).Tile$inv$value === null) || ($T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, k, l).Tile$inv$value.PhysicalObject$light_radius$value <= 0))) {
                list.Add($T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, k, l).Tile$inv$value);
                $T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, k, l).Tile$inv$value.UpdateRadius($T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, k, l).Tile$inv$value.PhysicalObject$light_radius$value, 0);
              }
              if ($T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, k, l).PhysicalObject$light_radius$value > 0) {
                list.Add($T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, k, l));
                $T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, k, l).UpdateRadius($T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, k, l).PhysicalObject$light_radius$value, 0);
              }
            }
          }
        }
      }
      this.features.Remove(f);
      if (flag) {

        for (var a$0 = list._items, i$0 = 0, l$0 = list._size; i$0 < l$0; ($temp00 = i$0, 
            i$0 = ((i$0 + 1) | 0), 
            $temp00)) {
          var current = a$0[i$0];
          if ($T0C().$As(current) !== null) {
            var actor = $T0C().$As(current);
            actor.UpdateRadius(0, actor.LightRadius());
          } else {
            current.UpdateRadius(0, current.PhysicalObject$light_radius$value);
          }
        }
      }
    }
  };

  function Tile_set_B (value) {
    $thisType.Tile$B$value = value;
  };

  function Tile_set_inv (value) {
    this.Tile$inv$value = value;
  };

  function Tile_set_light_value (value) {
    this.internal_light_value = value;
    if (!((value <= 0) || !this.features.Contains($T05().FUNGUS))) {
      $thisType.Tile$Q$value.Add($S0D().Construct(this, 200, $T25().BLAST_FUNGUS));
      $thisType.Tile$B$value.Add("The blast fungus starts to smolder in the light. ", JSIL.Array.New($T04(), [this]));
      this.features.Remove($T05().FUNGUS);
      this.features.Add($T05().FUNGUS_ACTIVE);
    }
  };

  function Tile_set_opaque (value) {
    this.internal_opaque = value;
  };

  function Tile_set_passable (value) {
    this.Tile$passable$value = value;
  };

  function Tile_set_player (value) {
    $thisType.Tile$player$value = value;
  };

  function Tile_set_Q (value) {
    $thisType.Tile$Q$value = value;
  };

  function Tile_set_seen (value) {
    this.Tile$seen$value = value;
  };

  function Tile_set_solid_rock (value) {
    this.Tile$solid_rock$value = value;
  };

  function Tile_set_type (value) {
    this.Tile$type$value = value;
  };

  function Tile_Toggle$09 (toggler) {
    var tileType = this.toggles_into;
    if (tileType !== null) {
      this.Toggle(toggler, this.toggles_into);
    }
  };

  function Tile_Toggle$0A (toggler, toggle_to) {
    var $temp00;
    var flag = false;
    var list = $S05().Construct();
    var type = this.Tile$type$value;
    if (this.get_opaque() !== $thisType.Prototype(toggle_to).get_opaque()) {

      for (var i = ((this.get_row() - 1) | 0); i <= ((this.get_row() + 1) | 0); i = ((i + 1) | 0)) {

        for (var j = ((this.get_col() - 1) | 0); j <= ((this.get_col() + 1) | 0); j = ((j + 1) | 0)) {
          if ($T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, i, j).IsLit()) {
            flag = true;
          }
        }
      }
    }
    if (flag) {

      for (var k = ((this.get_row() - 12) | 0); k <= ((this.get_row() + 12) | 0); k = ((k + 1) | 0)) {

        for (var l = ((this.get_col() - 12) | 0); l <= ((this.get_col() + 12) | 0); l = ((l + 1) | 0)) {
          if (!((k <= 0) || 
              (k >= (($thisType.ROWS - 1) | 0)) || 
              (l <= 0) || (l >= (($thisType.COLS - 1) | 0)))) {
            if (!(($T0F().prototype.get_Item.call($T04().PhysicalObject$M$value.actor, k, l) === null) || ($T0F().prototype.get_Item.call($T04().PhysicalObject$M$value.actor, k, l).LightRadius() <= 0))) {
              list.Add($T0F().prototype.get_Item.call($T04().PhysicalObject$M$value.actor, k, l));
              $T0F().prototype.get_Item.call($T04().PhysicalObject$M$value.actor, k, l).UpdateRadius($T0F().prototype.get_Item.call($T04().PhysicalObject$M$value.actor, k, l).LightRadius(), 0);
            }
            if (!(($T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, k, l).Tile$inv$value === null) || ($T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, k, l).Tile$inv$value.PhysicalObject$light_radius$value <= 0))) {
              list.Add($T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, k, l).Tile$inv$value);
              $T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, k, l).Tile$inv$value.UpdateRadius($T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, k, l).Tile$inv$value.PhysicalObject$light_radius$value, 0);
            }
            if ($T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, k, l).PhysicalObject$light_radius$value > 0) {
              list.Add($T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, k, l));
              $T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, k, l).UpdateRadius($T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, k, l).PhysicalObject$light_radius$value, 0);
            }
          }
        }
      }
    }
    this.TransformTo(toggle_to);
    if (flag) {

      for (var a$0 = list._items, i$0 = 0, l$0 = list._size; i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current = a$0[i$0];
        if ($T0C().$As(current) !== null) {
          var actor = $T0C().$As(current);
          actor.UpdateRadius(0, actor.LightRadius());
        } else {
          current.UpdateRadius(0, current.PhysicalObject$light_radius$value);
        }
      }
    }
    if (!((toggler === null) || (toggler === $thisType.Tile$player$value))) {
      if (!((this.Tile$type$value !== $T02().DOOR_C) || (type !== $T02().DOOR_O))) {
        if ($thisType.Tile$player$value.CanSee(this)) {
          $thisType.Tile$B$value.Add(JSIL.ConcatString(toggler.TheVisible(), " closes the door. "), JSIL.Array.New($T04(), 0));
        } else if (!(!this.Tile$seen$value && ($S08().CallVirtual("DistanceFrom", null, $thisType.Tile$player$value, this) > 6))) {
          $thisType.Tile$B$value.Add("You hear a door closing. ", JSIL.Array.New($T04(), 0));
        }
      }
      if (!((this.Tile$type$value !== $T02().DOOR_O) || (type !== $T02().DOOR_C))) {
        if ($thisType.Tile$player$value.CanSee(this)) {
          $thisType.Tile$B$value.Add(JSIL.ConcatString(toggler.TheVisible(), " opens the door. "), JSIL.Array.New($T04(), 0));
        } else if (!(!this.Tile$seen$value && ($S08().CallVirtual("DistanceFrom", null, $thisType.Tile$player$value, this) > 6))) {
          $thisType.Tile$B$value.Add("You hear a door opening. ", JSIL.Array.New($T04(), 0));
        }
      }
    }
    if (!((toggler === null) || (type !== $T02().RUBBLE))) {
      $thisType.Tile$B$value.Add(JSIL.ConcatString(toggler.YouVisible("shift"), " the rubble aside. "), JSIL.Array.New($T04(), [this]));
    }
  };

  function Tile_toString () {
    var type = this.Tile$type$value;
    switch (type.valueOf()) {
      case 21: 
      case 22: 
      case 23: 
      case 24: 
      case 25: 
      case 26: 
      case 27: 
        return "_";

      default: 
      case 28: 
      case 29: 
        switch (type.valueOf()) {
          case 0: 
            return "#";

          case 1: 
            return ".";

          case 2: 
            return "-";

          case 3: 
            return "+";

          case 4: 
            return ">";

          case 5: 
            return "~";

          case 6: 
            return "0";

          default: 
            return ".";

        }
        break;

      case 30: 
        return "&";

    }
  };

  function Tile_TransformTo (type_) {
    this.PhysicalObject$$name$value = $thisType.Prototype(type_).PhysicalObject$$name$value;
    this.PhysicalObject$a_name$value = $thisType.Prototype(type_).PhysicalObject$a_name$value;
    this.PhysicalObject$the_name$value = $thisType.Prototype(type_).PhysicalObject$the_name$value;
    this.PhysicalObject$symbol$value = $thisType.Prototype(type_).PhysicalObject$symbol$value;
    this.PhysicalObject$color$value = $thisType.Prototype(type_).PhysicalObject$color$value;
    this.Tile$type$value = $thisType.Prototype(type_).Tile$type$value;
    this.Tile$passable$value = $thisType.Prototype(type_).Tile$passable$value;
    this.set_opaque($thisType.Prototype(type_).get_opaque());
    this.toggles_into = $thisType.Prototype(type_).toggles_into;
    if (this.get_opaque()) {
      this.set_light_value(0);
    }
    if (this.PhysicalObject$light_radius$value !== $thisType.Prototype(type_).PhysicalObject$light_radius$value) {
      this.UpdateRadius(this.PhysicalObject$light_radius$value, $thisType.Prototype(type_).PhysicalObject$light_radius$value);
    }
    this.PhysicalObject$light_radius$value = $thisType.Prototype(type_).PhysicalObject$light_radius$value;
  };

  function Tile_TriggerTrap () {
    var $temp00, $temp01, $temp02, $temp03, $temp04;
    var attrs = null;
    if (this.actor().Actor$type$value === $T27().FIRE_DRAKE) {
      if (this.PhysicalObject$$name$value == "floor") {
        $thisType.Tile$B$value.Add((this.actor().PhysicalObject$the_name$value + " smashes " + $thisType.Prototype(this.Tile$type$value).PhysicalObject$a_name$value + ". "), JSIL.Array.New($T04(), [this]));
      } else {
        $thisType.Tile$B$value.Add((this.actor().PhysicalObject$the_name$value + " smashes " + this.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T04(), [this]));
      }
      this.TransformTo($T02().FLOOR);
      return;
    }
    if ($thisType.Tile$player$value.CanSee(this)) {
      $thisType.Tile$B$value.Add("*CLICK* ", JSIL.Array.New($T04(), [this]));
      $thisType.Tile$B$value.PrintAll();
    }
    switch (this.Tile$type$value.valueOf()) {
      case 8: 
        $thisType.Tile$B$value.Add(("Fire pours over " + this.actor().TheVisible() + " and starts to spread! "), JSIL.Array.New($T04(), [this]));
        var actor = this.actor();
        if (!(actor.HasAttr($T28().RESIST_FIRE) || 
            actor.HasAttr($T28().CATCHING_FIRE) || 
            actor.HasAttr($T28().ON_FIRE) || 
            actor.HasAttr($T28().IMMUNE_FIRE) || actor.HasAttr($T28().STARTED_CATCHING_FIRE_THIS_TURN))) {
          if (actor === this.actor()) {
            $T26().prototype.set_Item.call(actor.attrs, $T28().STARTED_CATCHING_FIRE_THIS_TURN, 1);
          } else {
            $T26().prototype.set_Item.call(actor.attrs, $T28().CATCHING_FIRE, 1);
          }
          if ($thisType.Tile$player$value.CanSee(actor.tile())) {
            $thisType.Tile$B$value.Add(JSIL.ConcatString(actor.You("start"), " to catch fire. "), JSIL.Array.New($T04(), [actor]));
          }
        }
        this.features.Add($T05().QUICKFIRE);
        this.Toggle(this.actor());
        var list = $S09().Construct();
        list.Add(this);
        $thisType.Tile$Q$value.Add($S0E().Construct(this, list, 100, $T25().QUICKFIRE, $T28().NO_ATTR, 3, "", JSIL.Array.New($T04(), 0)));
        break;

      case 9: 
        $thisType.Tile$B$value.Add(
          ("An unstable energy covers " + this.actor().TheVisible() + ". "), 
          JSIL.Array.New($T04(), [this.actor()])
        );
        $T26().prototype.set_Item.call(this.actor().attrs, $T28().TELEPORTING, $T15().Roll(4));
        $S0F().CallVirtual("KillEvents", null, $thisType.Tile$Q$value, this.actor(), $T28().TELEPORTING);
        $thisType.Tile$Q$value.Add($S10().Construct(this.actor(), ((this.actor().DurationOfMagicalEffect((($T15().Roll(10) + 25) | 0)) * 100) | 0), $T28().TELEPORTING, JSIL.ConcatString(this.actor().YouFeel(), " more stable. "), JSIL.Array.New($T04(), [this.actor()])));
        this.Toggle(this.actor());
        break;

      case 10: 
        if (!$T04().PhysicalObject$M$value.get_wiz_lite()) {
          if (!(!$thisType.Tile$player$value.HasLOS(
                this.get_row(), 
                this.get_col()
              ) || this.actor().IsHiddenFrom($thisType.Tile$player$value))) {
            $thisType.Tile$B$value.Add(("A wave of light washes out from above " + this.actor().PhysicalObject$the_name$value + "! "), JSIL.Array.New($T04(), 0));
          } else {
            $thisType.Tile$B$value.Add("A wave of light washes over the area! ", JSIL.Array.New($T04(), 0));
          }
          $T04().PhysicalObject$M$value.set_wiz_lite(true);
          $T04().PhysicalObject$M$value.Map$wiz_dark$value = false;
        } else {
          $thisType.Tile$B$value.Add("Nothing happens. ", JSIL.Array.New($T04(), [this]));
        }
        this.Toggle(this.actor());
        break;

      case 11: 
        var list2 = $S0A().Construct();

        for (var i = 2; i <= 8; i = ((i + 2) | 0)) {
          var tile = this;
          var flag = true;

        $loop1: 
          while (tile.Tile$type$value.valueOf() !== 0) {
            tile = tile.TileInDirection(i);
            if (!(!tile.get_opaque() || (tile.Tile$type$value.valueOf() === 0))) {
              flag = false;
              break $loop1;
            }
            if ($S08().CallVirtual("DistanceFrom", null, this, tile) > 6) {
              flag = false;
              break $loop1;
            }
          }
          if (!(!flag || 
              (tile.get_row() <= 0) || 
              (tile.get_row() >= (($thisType.ROWS - 1) | 0)) || 
              (tile.get_col() <= 0) || (tile.get_col() >= (($thisType.COLS - 1) | 0)))) {
            tile = tile.TileInDirection(i);
          } else {
            flag = false;
          }
          if (!(!flag || 
              (tile.get_row() <= 0) || 
              (tile.get_row() >= (($thisType.ROWS - 1) | 0)) || 
              (tile.get_col() <= 0) || (tile.get_col() >= (($thisType.COLS - 1) | 0)))) {

            for (var a$0 = tile.TilesWithinDistance(1)._items, i$0 = 0, l$0 = tile.TilesWithinDistance(1)._size; i$0 < l$0; ($temp00 = i$0, 
                i$0 = ((i$0 + 1) | 0), 
                $temp00)) {
              var current = a$0[i$0];
              if (current.Tile$type$value.valueOf() !== 0) {
                flag = false;
              }
            }
          } else {
            flag = false;
          }
          if (flag) {
            list2.Add(i);
          }
        }
        if (list2.get_Count() === 0) {
          $thisType.Tile$B$value.Add("Nothing happens. ", JSIL.Array.New($T04(), [this]));
        } else {
          var dir = list2.get_Item((($T15().Roll(list2.get_Count()) - 1) | 0));

          for (var tile2 = this; tile2.Tile$type$value.valueOf() !== 0; tile2 = tile2.TileInDirection(dir)) {
          }
          tile2.TileInDirection(dir).TurnToFloor();
          var type = (!$T15().CoinFlip() ? $T27().ZOMBIE : $T27().SKELETON);
          $T0C().Create(
            type, 
            tile2.TileInDirection(dir).get_row(), 
            tile2.TileInDirection(dir).get_col(), 
            true, 
            true
          );
          tile2.TurnToFloor();

          for (var a$1 = tile2.TileInDirection(dir).TilesWithinDistance(1)._items, i$1 = 0, l$1 = tile2.TileInDirection(dir).TilesWithinDistance(1)._size; i$1 < l$1; ($temp01 = i$1, 
              i$1 = ((i$1 + 1) | 0), 
              $temp01)) {
            var current2 = a$1[i$1];
            current2.Tile$solid_rock$value = false;
          }
          tile2.ActorInDirection(dir).FindPath(this.TileInDirection(dir));
          if ($thisType.Tile$player$value.CanSee(tile2)) {
            $thisType.Tile$B$value.Add("The wall slides away. ", JSIL.Array.New($T04(), 0));
          } else if ($S08().CallVirtual("DistanceFrom", null, this, $thisType.Tile$player$value) <= 6) {
            $thisType.Tile$B$value.Add("You hear rock sliding on rock. ", JSIL.Array.New($T04(), 0));
          }
        }
        this.Toggle(this.actor());
        break;

      case 12: 
        if ($thisType.Tile$player$value.CanSee(this.actor())) {
          $thisType.Tile$B$value.Add(("Grenades fall from the ceiling above " + this.actor().PhysicalObject$the_name$value + "! "), JSIL.Array.New($T04(), [this]));
        } else {
          $thisType.Tile$B$value.Add("Grenades fall from the ceiling! ", JSIL.Array.New($T04(), [this]));
        }
        var list3 = $S09().Construct();

        for (var a$2 = this.TilesWithinDistance(1)._items, i$2 = 0, l$2 = this.TilesWithinDistance(1)._size; i$2 < l$2; ($temp02 = i$2, 
            i$2 = ((i$2 + 1) | 0), 
            $temp02)) {
          var current3 = a$2[i$2];
          if (!(!current3.Tile$passable$value || $S07().CallVirtual("Is", null, current3, $T05().GRENADE))) {
            list3.Add(current3);
          }
        }

        for (var num = (!$T15().OneIn(10) ? 2 : 3); (num > 0) & (list3.get_Count() > 0); num = ((num - 1) | 0)) {
          var tile3 = $T12().Random$b1($thisType)(list3);
          if (tile3.actor() !== null) {
            if (tile3.actor() === $thisType.Tile$player$value) {
              $thisType.Tile$B$value.Add("One lands under you! ", JSIL.Array.New($T04(), 0));
            } else if ($thisType.Tile$player$value.CanSee(this)) {
              $thisType.Tile$B$value.Add(
                ("One lands under " + tile3.actor().PhysicalObject$the_name$value + ". "), 
                JSIL.Array.New($T04(), [tile3.actor()])
              );
            }
          } else if (tile3.Tile$inv$value !== null) {
            $thisType.Tile$B$value.Add(("One lands under " + tile3.Tile$inv$value.TheName() + ". "), JSIL.Array.New($T04(), [tile3]));
          }
          tile3.features.Add($T05().GRENADE);
          list3.Remove(tile3);
          $thisType.Tile$Q$value.Add($S0D().Construct(tile3, 100, $T25().GRENADE));
        }
        this.Toggle(this.actor());
        break;

      case 13: 
        if ($thisType.Tile$player$value.CanSee(this.actor())) {
          $thisType.Tile$B$value.Add(("A disorienting flash assails " + this.actor().PhysicalObject$the_name$value + ". "), JSIL.Array.New($T04(), [this]));
        } else {
          $thisType.Tile$B$value.Add("You notice a flash of light. ", JSIL.Array.New($T04(), [this]));
        }
        this.actor().GainAttrRefreshDuration(
          $T28().STUNNED, 
          ((this.actor().DurationOfMagicalEffect((($T15().Roll(10) + 7) | 0)) * 100) | 0), 
          JSIL.ConcatString(this.actor().YouFeel(), " less disoriented. "), 
          JSIL.Array.New($T04(), [this.actor()])
        );
        this.Toggle(this.actor());
        break;

      case 14: 
        if (this.actor() === $thisType.Tile$player$value) {
          $thisType.Tile$B$value.Add("A high-pitched ringing sound reverberates from above you. ", JSIL.Array.New($T04(), 0));
        } else if ($thisType.Tile$player$value.CanSee(this.actor())) {
          $thisType.Tile$B$value.Add(("A high-pitched ringing sound reverberates from above " + this.actor().PhysicalObject$the_name$value + ". "), JSIL.Array.New($T04(), 0));
        } else {
          $thisType.Tile$B$value.Add("You hear a high-pitched ringing sound. ", JSIL.Array.New($T04(), 0));
        }

        for (var a$3 = this.ActorsWithinDistance(12, true)._items, i$3 = 0, l$3 = this.ActorsWithinDistance(12, true)._size; i$3 < l$3; ($temp03 = i$3, 
            i$3 = ((i$3 + 1) | 0), 
            $temp03)) {
          var current4 = a$3[i$3];
          if (!((current4.Actor$type$value === $T27().LARGE_BAT) || 
              (current4.Actor$type$value === $T27().BLOOD_MOTH) || 
              (current4.Actor$type$value === $T27().CARNIVOROUS_BRAMBLE) || 
              (current4.Actor$type$value === $T27().LASHER_FUNGUS) || (current4.Actor$type$value === $T27().PHASE_SPIDER))) {
            current4.FindPath(this);
          }
        }
        this.Toggle(this.actor());
        break;

      case 15: 
        if (!$T04().PhysicalObject$M$value.Map$wiz_dark$value) {
          if ($thisType.Tile$player$value.CanSee(this.actor())) {
            $thisType.Tile$B$value.Add(("A surge of darkness radiates out from above " + this.actor().PhysicalObject$the_name$value + "! "), JSIL.Array.New($T04(), 0));
            if ($thisType.Tile$player$value.PhysicalObject$light_radius$value > 0) {
              $thisType.Tile$B$value.Add("Your light is extinguished! ", JSIL.Array.New($T04(), 0));
            }
          } else {
            $thisType.Tile$B$value.Add("A surge of darkness extinguishes all light in the area! ", JSIL.Array.New($T04(), 0));
          }
          $T04().PhysicalObject$M$value.Map$wiz_dark$value = true;
          $T04().PhysicalObject$M$value.set_wiz_lite(false);
        } else {
          $thisType.Tile$B$value.Add("Nothing happens. ", JSIL.Array.New($T04(), [this]));
        }
        this.Toggle(this.actor());
        break;

      case 16: 
        var tile4 = this;
        var num2 = (($T15().Roll(5) + 7) | 0);
        var list4 = $S09().Construct();

        for (var j = 0; j < num2; j = ((j + 1) | 0)) {
          if (!$S07().CallVirtual("Is", null, tile4, $T05().POISON_GAS)) {
            tile4.features.Add($T05().POISON_GAS);
            list4.Add(tile4);
          } else {

          $loop9: 
            for (var k = 0; k < 50; k = ((k + 1) | 0)) {
              var list5 = $S09().Construct();

              for (var a$4 = tile4.TilesAtDistance(1)._items, i$4 = 0, l$4 = tile4.TilesAtDistance(1)._size; i$4 < l$4; ($temp04 = i$4, 
                  i$4 = ((i$4 + 1) | 0), 
                  $temp04)) {
                var current5 = a$4[i$4];
                if (current5.Tile$passable$value) {
                  list5.Add(current5);
                }
              }
              if (list5.get_Count() <= 0) {
                break $loop9;
              }
              var tile5 = $T12().Random$b1($thisType)(list5);
              if (!$S07().CallVirtual("Is", null, tile5, $T05().POISON_GAS)) {
                tile5.features.Add($T05().POISON_GAS);
                list4.Add(tile5);
                break $loop9;
              }
              tile4 = tile5;
            }
          }
        }
        if (list4.get_Count() > 0) {
          $thisType.Tile$B$value.Add("Poisonous gas fills the area! ", JSIL.Array.New($T04(), [this]));
          $thisType.Tile$Q$value.Add($S11().Construct(list4, 300, $T25().POISON_GAS));
        }
        this.Toggle(this.actor());
        break;

      case 17: 
        $thisType.Tile$B$value.Add(
          ("A dart strikes " + this.actor().PhysicalObject$the_name$value + ". "), 
          JSIL.Array.New($T04(), [this.actor()])
        );
        if (this.actor() === $thisType.Tile$player$value) {
          $thisType.Tile$B$value.Add("Your vision becomes weaker! ", JSIL.Array.New($T04(), 0));
          this.actor().GainAttrRefreshDuration($T28().DIM_VISION, ((this.actor().DurationOfMagicalEffect((($T15().Roll(10) + 20) | 0)) * 100) | 0), "Your vision returns to normal. ", JSIL.Array.New($T04(), 0));
        } else if (!(this.actor().HasAttr($T28().IMMUNE_TOXINS) || 
            this.actor().HasAttr($T28().UNDEAD) || 
            this.actor().HasAttr($T28().BLINDSIGHT) || 
            (this.actor().Actor$type$value === $T27().BLOOD_MOTH) || (this.actor().Actor$type$value === $T27().PHASE_SPIDER))) {
          if ($thisType.Tile$player$value.CanSee(this.actor())) {
            $thisType.Tile$B$value.Add(JSIL.ConcatString(this.actor().PhysicalObject$the_name$value, " seems to have trouble seeing. "), JSIL.Array.New($T04(), 0));
          }
          this.actor().GainAttrRefreshDuration($T28().DIM_VISION, ((this.actor().DurationOfMagicalEffect((($T15().Roll(10) + 20) | 0)) * 100) | 0));
        }
        this.Toggle(this.actor());
        break;

      case 18: 
        if ($thisType.Tile$player$value.CanSee(this)) {
          $thisType.Tile$B$value.Add(("The air suddenly freezes, encasing " + this.actor().TheVisible() + " in ice. "), JSIL.Array.New($T04(), 0));
        }
        $T26().prototype.set_Item.call(this.actor().attrs, $T28().FROZEN, 25);
        this.Toggle(this.actor());
        break;

      case 19: 
        var tile6 = $T12().Random$b1($thisType)($T12().Where$b1($thisType)(
            this.TilesWithinDistance(3), 
            function Tile_$lTriggerTrap$gm__15 (t) {
              return (!(!t.Tile$passable$value || 
                  (t.actor() !== null)) && 
                t.HasLOE(this));
            }.bind(this)
          ));
        if (tile6 !== null) {
          var actor2 = $T0C().CreatePhantom(
            tile6.get_row(), 
            tile6.get_col()
          );
          if (actor2 !== null) {
            var num3 = $T26().prototype.get_Item.call(attrs, $T28().PLAYER_NOTICED);
            $T26().prototype.set_Item.call((attrs = actor2.attrs), $T28().PLAYER_NOTICED, ((num3 + 1) | 0));
            actor2.player_visibility_duration = -1;
            $thisType.Tile$B$value.Add("A ghostly image rises! ", JSIL.Array.New($T04(), [actor2]));
          } else {
            $thisType.Tile$B$value.Add("Nothing happens. ", JSIL.Array.New($T04(), [this]));
          }
        } else {
          $thisType.Tile$B$value.Add("Nothing happens. ", JSIL.Array.New($T04(), [this]));
        }
        this.Toggle(this.actor());
        break;

    }
  };

  function Tile_TurnToFloor () {
    var $temp00, $temp01;
    var flag = false;
    var list = $S05().Construct();
    if (this.get_opaque()) {

      for (var a$0 = this.TilesWithinDistance(1)._items, i$0 = 0, l$0 = this.TilesWithinDistance(1)._size; i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current = a$0[i$0];
        if (current.IsLit()) {
          flag = true;
        }
      }
    }
    if (flag) {

      for (var i = ((this.get_row() - 12) | 0); i <= ((this.get_row() + 12) | 0); i = ((i + 1) | 0)) {

        for (var j = ((this.get_col() - 12) | 0); j <= ((this.get_col() + 12) | 0); j = ((j + 1) | 0)) {
          if (!((i <= 0) || 
              (i >= (($thisType.ROWS - 1) | 0)) || 
              (j <= 0) || (j >= (($thisType.COLS - 1) | 0)))) {
            if (!(($T0F().prototype.get_Item.call($T04().PhysicalObject$M$value.actor, i, j) === null) || ($T0F().prototype.get_Item.call($T04().PhysicalObject$M$value.actor, i, j).LightRadius() <= 0))) {
              list.Add($T0F().prototype.get_Item.call($T04().PhysicalObject$M$value.actor, i, j));
              $T0F().prototype.get_Item.call($T04().PhysicalObject$M$value.actor, i, j).UpdateRadius($T0F().prototype.get_Item.call($T04().PhysicalObject$M$value.actor, i, j).LightRadius(), 0);
            }
            if (!(($T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, i, j).Tile$inv$value === null) || ($T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, i, j).Tile$inv$value.PhysicalObject$light_radius$value <= 0))) {
              list.Add($T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, i, j).Tile$inv$value);
              $T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, i, j).Tile$inv$value.UpdateRadius($T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, i, j).Tile$inv$value.PhysicalObject$light_radius$value, 0);
            }
            if ($T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, i, j).PhysicalObject$light_radius$value > 0) {
              list.Add($T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, i, j));
              $T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, i, j).UpdateRadius($T0E().prototype.get_Item.call($T04().PhysicalObject$M$value.tile, i, j).PhysicalObject$light_radius$value, 0);
            }
          }
        }
      }
    }
    this.TransformTo($T02().FLOOR);
    if (flag) {

      for (var a$1 = list._items, i$1 = 0, l$1 = list._size; i$1 < l$1; ($temp01 = i$1, 
          i$1 = ((i$1 + 1) | 0), 
          $temp01)) {
        var current2 = a$1[i$1];
        if ($T0C().$As(current2) !== null) {
          var actor = $T0C().$As(current2);
          actor.UpdateRadius(0, actor.LightRadius());
        } else {
          current2.UpdateRadius(0, current2.PhysicalObject$light_radius$value);
        }
      }
    }
  };

  JSIL.MakeClass($asm00.TypeRef("Forays.PhysicalObject"), "Forays.Tile", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], []), 
      Tile__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Type, $.Int32, 
          $.Int32
        ], []), 
      Tile__ctor$01
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.TileType"), $.String, 
          $.Char, $asm00.TypeRef("Forays.Color"), 
          $.Boolean, $.Boolean, 
          $asm01.TypeRef("System.Nullable`1", [$asm00.TypeRef("Forays.TileType")])
        ], []), 
      Tile__ctor$02
    );

    $.Method({Static:true , Public:false}, "$lNeighborsBetween$gm__16", 
      new JSIL.MethodSignature($.Int32, [$.Int32], []), 
      Tile_$lNeighborsBetween$gm__16
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "$lTriggerTrap$gm__15", 
      new JSIL.MethodSignature($.Boolean, [$.Type], []), 
      Tile_$lTriggerTrap$gm__15
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "AddOpaqueFeature", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.FeatureType")], []), 
      Tile_AddOpaqueFeature
    );

    $.Method({Static:false, Public:true }, "ConductsElectricity", 
      new JSIL.MethodSignature($.Boolean, [], []), 
      Tile_ConductsElectricity
    );

    $.Method({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [
          $asm00.TypeRef("Forays.TileType"), $.Int32, 
          $.Int32
        ], []), 
      Tile_Create
    );

    $.Method({Static:true , Public:false}, "Define", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.TileType"), $.String, 
          $.Char, $asm00.TypeRef("Forays.Color"), 
          $.Boolean, $.Boolean, 
          $asm01.TypeRef("System.Nullable`1", [$asm00.TypeRef("Forays.TileType")])
        ], []), 
      Tile_Define
    );

    $.Method({Static:true , Public:true }, "Feature", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.PhysicalObject"), [$asm00.TypeRef("Forays.FeatureType")], []), 
      Tile_Feature
    );

    $.Method({Static:false, Public:true }, "FeatureColor", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Color"), [], []), 
      Tile_FeatureColor
    );

    $.Method({Static:false, Public:true }, "FeatureSymbol", 
      new JSIL.MethodSignature($.Char, [], []), 
      Tile_FeatureSymbol
    );

    $.Method({Static:true , Public:true }, "get_B", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Buffer"), [], []), 
      Tile_get_B
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_inv", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Item"), [], []), 
      Tile_get_inv
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_light_value", 
      new JSIL.MethodSignature($.Int32, [], []), 
      Tile_get_light_value
    );

    $.Method({Static:false, Public:true }, "get_opaque", 
      new JSIL.MethodSignature($.Boolean, [], []), 
      Tile_get_opaque
    );

    $.Method({Static:false, Public:true }, "get_passable", 
      new JSIL.MethodSignature($.Boolean, [], []), 
      Tile_get_passable
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:true }, "get_player", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Actor"), [], []), 
      Tile_get_player
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:true }, "get_Q", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Queue"), [], []), 
      Tile_get_Q
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_seen", 
      new JSIL.MethodSignature($.Boolean, [], []), 
      Tile_get_seen
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_solid_rock", 
      new JSIL.MethodSignature($.Boolean, [], []), 
      Tile_get_solid_rock
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_type", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.TileType"), [], []), 
      Tile_get_type
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "GetItem", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Item")], []), 
      Tile_GetItem
    );

    $.Method({Static:false, Public:true }, "Is", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.TileType")], []), 
      Tile_Is$03
    );

    $.Method({Static:false, Public:true }, "Is", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.FeatureType")], []), 
      Tile_Is$04
    );

    $.Method({Static:false, Public:true }, "IsKnownTrap", 
      new JSIL.MethodSignature($.Boolean, [], []), 
      Tile_IsKnownTrap
    );

    $.Method({Static:false, Public:true }, "IsLit", 
      new JSIL.MethodSignature($.Boolean, [], []), 
      Tile_IsLit$05
    );

    $.Method({Static:false, Public:true }, "IsLit", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $.Int32], []), 
      Tile_IsLit$06
    );

    $.Method({Static:false, Public:true }, "IsLitFromAnywhere", 
      new JSIL.MethodSignature($.Boolean, [], []), 
      Tile_IsLitFromAnywhere$07
    );

    $.Method({Static:false, Public:true }, "IsLitFromAnywhere", 
      new JSIL.MethodSignature($.Boolean, [$.Boolean], []), 
      Tile_IsLitFromAnywhere$08
    );

    $.Method({Static:false, Public:true }, "IsShrine", 
      new JSIL.MethodSignature($.Boolean, [], []), 
      Tile_IsShrine
    );

    $.Method({Static:false, Public:true }, "IsTrap", 
      new JSIL.MethodSignature($.Boolean, [], []), 
      Tile_IsTrap
    );

    $.Method({Static:false, Public:true }, "IsTrapOrVent", 
      new JSIL.MethodSignature($.Boolean, [], []), 
      Tile_IsTrapOrVent
    );

    $.Method({Static:false, Public:true }, "NeighborsBetween", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$.Type]), [$.Int32, $.Int32], []), 
      Tile_NeighborsBetween
    );

    $.Method({Static:false, Public:true }, "OpenChest", 
      new JSIL.MethodSignature(null, [], []), 
      Tile_OpenChest
    );

    $.Method({Static:false, Public:true }, "Preposition", 
      new JSIL.MethodSignature($.String, [], []), 
      Tile_Preposition
    );

    $.Method({Static:true , Public:true }, "Prototype", 
      new JSIL.MethodSignature($.Type, [$asm00.TypeRef("Forays.TileType")], []), 
      Tile_Prototype
    );

    $.Method({Static:true , Public:true }, "RandomTrap", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.TileType"), [], []), 
      Tile_RandomTrap
    );

    $.Method({Static:true , Public:true }, "RandomVent", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.TileType"), [], []), 
      Tile_RandomVent
    );

    $.Method({Static:false, Public:true }, "RemoveOpaqueFeature", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.FeatureType")], []), 
      Tile_RemoveOpaqueFeature
    );

    $.Method({Static:true , Public:true }, "set_B", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.Buffer")], []), 
      Tile_set_B
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_inv", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.Item")], []), 
      Tile_set_inv
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_light_value", 
      new JSIL.MethodSignature(null, [$.Int32], []), 
      Tile_set_light_value
    );

    $.Method({Static:false, Public:true }, "set_opaque", 
      new JSIL.MethodSignature(null, [$.Boolean], []), 
      Tile_set_opaque
    );

    $.Method({Static:false, Public:true }, "set_passable", 
      new JSIL.MethodSignature(null, [$.Boolean], []), 
      Tile_set_passable
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:true }, "set_player", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.Actor")], []), 
      Tile_set_player
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:true }, "set_Q", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.Queue")], []), 
      Tile_set_Q
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_seen", 
      new JSIL.MethodSignature(null, [$.Boolean], []), 
      Tile_set_seen
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_solid_rock", 
      new JSIL.MethodSignature(null, [$.Boolean], []), 
      Tile_set_solid_rock
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_type", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.TileType")], []), 
      Tile_set_type
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "Toggle", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.PhysicalObject")], []), 
      Tile_Toggle$09
    );

    $.Method({Static:false, Public:true }, "Toggle", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.PhysicalObject"), $asm00.TypeRef("Forays.TileType")], []), 
      Tile_Toggle$0A
    );

    $.Method({Static:false, Public:true , Virtual:true }, "toString", 
      new JSIL.MethodSignature($.String, [], []), 
      Tile_toString
    );

    $.Method({Static:false, Public:true }, "TransformTo", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.TileType")], []), 
      Tile_TransformTo
    );

    $.Method({Static:false, Public:true }, "TriggerTrap", 
      new JSIL.MethodSignature(null, [], []), 
      Tile_TriggerTrap
    );

    $.Method({Static:false, Public:true }, "TurnToFloor", 
      new JSIL.MethodSignature(null, [], []), 
      Tile_TurnToFloor
    );

    $.Field({Static:false, Public:false}, "internal_opaque", $.Boolean); 
    $.Field({Static:false, Public:false}, "internal_light_value", $.Int32); 
    $.Field({Static:false, Public:true }, "toggles_into", $asm01.TypeRef("System.Nullable`1", [$asm00.TypeRef("Forays.TileType")])); 
    $.Field({Static:false, Public:true }, "features", $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.FeatureType")])); 
    $.Field({Static:true , Public:false}, "proto", $asm01.TypeRef("System.Collections.Generic.Dictionary`2", [$asm00.TypeRef("Forays.TileType"), $.Type])); 
    $.Field({Static:true , Public:false}, "proto_feature", $asm01.TypeRef("System.Collections.Generic.Dictionary`2", [$asm00.TypeRef("Forays.FeatureType"), $asm00.TypeRef("Forays.PhysicalObject")])); 
    $.Field({Static:true , Public:false}, "ROWS", $.Int32, 22); 
    $.Field({Static:true , Public:false}, "COLS", $.Int32, 66); 
    $.Field({Static:false, Public:false}, "Tile$type$value", $asm00.TypeRef("Forays.TileType"))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:false, Public:false}, "Tile$passable$value", $.Boolean)
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:false, Public:false}, "Tile$seen$value", $.Boolean)
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:false, Public:false}, "Tile$solid_rock$value", $.Boolean)
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:false, Public:false}, "Tile$inv$value", $asm00.TypeRef("Forays.Item"))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "Tile$B$value", $asm00.TypeRef("Forays.Buffer"))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "Tile$Q$value", $asm00.TypeRef("Forays.Queue"))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "Tile$player$value", $asm00.TypeRef("Forays.Actor"))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "$am", $asm00.TypeRef("Forays.Tile/del"))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    function Tile__cctor () {
      $thisType.proto = $S00().Construct();
      $thisType.proto_feature = $S01().Construct();
      $thisType.ROWS = 22;
      $thisType.COLS = 66;
      $thisType.proto.set_Item($T02().FLOOR, $S02().Construct($T02().FLOOR, "floor", ".", $T03().White, true, false, null));
      $thisType.proto.set_Item($T02().WALL, $S02().Construct($T02().WALL, "wall", "#", $T03().Gray, false, true, null));
      $thisType.proto.set_Item($T02().DOOR_C, $S02().Construct($T02().DOOR_C, "closed door", "+", $T03().DarkYellow, false, true, $T02().DOOR_O));
      $thisType.proto.set_Item($T02().DOOR_O, $S02().Construct($T02().DOOR_O, "open door", "-", $T03().DarkYellow, true, false, $T02().DOOR_C));
      $thisType.proto.set_Item($T02().STAIRS, $S02().Construct($T02().STAIRS, "stairway", ">", $T03().White, true, false, null));
      $thisType.proto.set_Item($T02().CHEST, $S02().Construct($T02().CHEST, "treasure chest", "=", $T03().DarkYellow, true, false, null));
      $thisType.proto.set_Item($T02().FIREPIT, $S02().Construct($T02().FIREPIT, "fire pit", "0", $T03().Red, true, false, null));
      $thisType.proto.get_Item($T02().FIREPIT).PhysicalObject$light_radius$value = 1;
      $thisType.proto.set_Item($T02().STALAGMITE, $S02().Construct($T02().STALAGMITE, "stalagmite", "^", $T03().White, false, true, $T02().FLOOR));
      $thisType.proto.set_Item($T02().QUICKFIRE_TRAP, $S02().Construct($T02().QUICKFIRE_TRAP, "quickfire trap", "^", $T03().RandomFire, true, false, $T02().FLOOR));
      $thisType.proto.set_Item($T02().LIGHT_TRAP, $S02().Construct($T02().LIGHT_TRAP, "light trap", "^", $T03().Yellow, true, false, $T02().FLOOR));
      $thisType.proto.set_Item($T02().TELEPORT_TRAP, $S02().Construct($T02().TELEPORT_TRAP, "teleport trap", "^", $T03().Magenta, true, false, $T02().FLOOR));
      $thisType.proto.set_Item($T02().UNDEAD_TRAP, $S02().Construct($T02().UNDEAD_TRAP, "sliding wall trap", "^", $T03().DarkCyan, true, false, $T02().FLOOR));
      $thisType.proto.set_Item($T02().GRENADE_TRAP, $S02().Construct($T02().GRENADE_TRAP, "grenade trap", "^", $T03().DarkGray, true, false, $T02().FLOOR));
      $thisType.proto.set_Item($T02().STUN_TRAP, $S02().Construct($T02().STUN_TRAP, "stun trap", "^", $T03().Red, true, false, $T02().FLOOR));
      $thisType.Define(
        $T02().ALARM_TRAP, 
        "alarm trap", 
        "^", 
        $T03().White, 
        true, 
        false, 
        $T02().FLOOR
      );
      $thisType.Define(
        $T02().DARKNESS_TRAP, 
        "darkness trap", 
        "^", 
        $T03().Blue, 
        true, 
        false, 
        $T02().FLOOR
      );
      $thisType.Define(
        $T02().POISON_GAS_TRAP, 
        "poison gas trap", 
        "^", 
        $T03().Green, 
        true, 
        false, 
        $T02().FLOOR
      );
      $thisType.Define(
        $T02().DIM_VISION_TRAP, 
        "dim vision trap", 
        "^", 
        $T03().DarkMagenta, 
        true, 
        false, 
        $T02().FLOOR
      );
      $thisType.Define(
        $T02().ICE_TRAP, 
        "ice trap", 
        "^", 
        $T03().RandomIce, 
        true, 
        false, 
        $T02().FLOOR
      );
      $thisType.Define(
        $T02().PHANTOM_TRAP, 
        "phantom trap", 
        "^", 
        $T03().Cyan, 
        true, 
        false, 
        $T02().FLOOR
      );
      $thisType.proto.set_Item($T02().HIDDEN_DOOR, $S02().Construct($T02().HIDDEN_DOOR, "wall", "#", $T03().Gray, false, true, $T02().DOOR_C));
      $thisType.Define(
        $T02().RUBBLE, 
        "pile of rubble", 
        ":", 
        $T03().Gray, 
        false, 
        true, 
        $T02().FLOOR
      );
      $thisType.Define(
        $T02().COMBAT_SHRINE, 
        "shrine of combat", 
        "_", 
        $T03().DarkRed, 
        true, 
        false, 
        $T02().RUINED_SHRINE
      );
      $thisType.Define(
        $T02().DEFENSE_SHRINE, 
        "shrine of defense", 
        "_", 
        $T03().White, 
        true, 
        false, 
        $T02().RUINED_SHRINE
      );
      $thisType.Define(
        $T02().MAGIC_SHRINE, 
        "shrine of magic", 
        "_", 
        $T03().Magenta, 
        true, 
        false, 
        $T02().RUINED_SHRINE
      );
      $thisType.Define(
        $T02().SPIRIT_SHRINE, 
        "shrine of spirit", 
        "_", 
        $T03().Yellow, 
        true, 
        false, 
        $T02().RUINED_SHRINE
      );
      $thisType.Define(
        $T02().STEALTH_SHRINE, 
        "shrine of stealth", 
        "_", 
        $T03().Blue, 
        true, 
        false, 
        $T02().RUINED_SHRINE
      );
      $thisType.Define(
        $T02().RUINED_SHRINE, 
        "ruined shrine", 
        "_", 
        $T03().DarkGray, 
        true, 
        false, 
        null
      );
      $thisType.Define(
        $T02().SPELL_EXCHANGE_SHRINE, 
        "spell exchange shrine", 
        "_", 
        $T03().DarkMagenta, 
        true, 
        false, 
        $T02().RUINED_SHRINE
      );
      $thisType.Define(
        $T02().FIRE_GEYSER, 
        "fire geyser", 
        "~", 
        $T03().Red, 
        true, 
        false, 
        null
      );
      $thisType.Define(
        $T02().STATUE, 
        "statue", 
        "&", 
        $T03().Gray, 
        false, 
        false, 
        null
      );
      $thisType.Define(
        $T02().HEALING_POOL, 
        "healing pool", 
        "0", 
        $T03().Cyan, 
        true, 
        false, 
        $T02().FLOOR
      );
      $thisType.Define(
        $T02().FOG_VENT, 
        "fog vent", 
        "~", 
        $T03().Gray, 
        true, 
        false, 
        null
      );
      $thisType.Define(
        $T02().POISON_GAS_VENT, 
        "gas vent", 
        "~", 
        $T03().DarkGreen, 
        true, 
        false, 
        null
      );
      $thisType.Define(
        $T02().STONE_SLAB, 
        "stone slab", 
        "#", 
        $T03().White, 
        false, 
        true, 
        null
      );
      $thisType.Define(
        $T02().CHASM, 
        "chasm", 
        ":", 
        $T03().DarkBlue, 
        true, 
        false, 
        null
      );
      $thisType.proto_feature.set_Item($T05().GRENADE, $S03().Construct("grenade", ",", $T03().Red));
      $thisType.proto_feature.set_Item($T05().QUICKFIRE, $S03().Construct("quickfire", "&", $T03().RandomFire));
      $thisType.proto_feature.get_Item($T05().QUICKFIRE).PhysicalObject$a_name$value = "quickfire";
      $thisType.proto_feature.set_Item($T05().TROLL_CORPSE, $S03().Construct("troll corpse", "%", $T03().DarkGreen));
      $thisType.proto_feature.set_Item($T05().TROLL_SEER_CORPSE, $S03().Construct("troll seer corpse", "%", $T03().Cyan));
      $thisType.proto_feature.set_Item($T05().RUNE_OF_RETREAT, $S03().Construct("rune of retreat", "&", $T03().RandomPrismatic));
      $thisType.proto_feature.set_Item($T05().POISON_GAS, $S03().Construct("cloud of poison gas", "*", $T03().DarkGreen));
      $thisType.proto_feature.set_Item($T05().FOG, $S03().Construct("cloud of fog", "*", $T03().Gray));
      $thisType.proto_feature.set_Item($T05().SLIME, $S03().Construct("slime", ",", $T03().Green));
      $thisType.proto_feature.get_Item($T05().SLIME).PhysicalObject$a_name$value = "slime";
      $thisType.proto_feature.set_Item($T05().FUNGUS, $S03().Construct("blast fungus", "\"", $T03().DarkRed));
      $thisType.proto_feature.set_Item($T05().FUNGUS_ACTIVE, $S03().Construct("blast fungus(active)", "\"", $T03().Red));
      $thisType.proto_feature.set_Item($T05().FUNGUS_PRIMED, $S03().Construct("blast fungus(exploding)", "\"", $T03().Yellow));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      new JSIL.MethodSignature(null, [], []), 
      Tile__cctor
    );

    $.Property({Static:false, Public:true }, "type", $asm00.TypeRef("Forays.TileType"));

    $.Property({Static:false, Public:true }, "passable", $.Boolean);

    $.Property({Static:false, Public:true }, "opaque", $.Boolean);

    $.Property({Static:false, Public:true }, "seen", $.Boolean);

    $.Property({Static:false, Public:true }, "solid_rock", $.Boolean);

    $.Property({Static:false, Public:true }, "light_value", $.Int32);

    $.Property({Static:false, Public:true }, "inv", $asm00.TypeRef("Forays.Item"));

    $.Property({Static:true , Public:true }, "B", $asm00.TypeRef("Forays.Buffer"));

    $.Property({Static:true , Public:true }, "Q", $asm00.TypeRef("Forays.Queue"));

    $.Property({Static:true , Public:true }, "player", $asm00.TypeRef("Forays.Actor"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.MakeDelegate("Forays.Tile/del", false, []);

(function Buffer$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Forays.Game)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm01.System.String))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm01.System.String)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm01.System.Int32)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize(System.Array.Of($asm00.Forays.PhysicalObject))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm01.System.Boolean)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Forays.PhysicalObject)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Forays.Actor)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm01.System.Char)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize(System.Array.Of($asm01.System.Char))) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm01.System.Void)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.Forays.Screen)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.Forays.Extensions)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm01.System.Console)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm00.Forays.Global)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm00.Forays.OptionType)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm00.Forays.Color)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm01.System.ConsoleColor)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm01.System.Convert)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm00.Forays.Map)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize(System.Array.Of($asm01.System.String))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm01.TypeRef("System.String")]), []))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.String"), [$jsilcore.TypeRef("System.Array", [$asm01.TypeRef("System.Char")])]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $asm01.TypeRef("System.String")
      ], []))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Int32"), [$asm01.TypeRef("System.String")], []))) ();
  };

  function Buffer__ctor (g) {
    this.str = $S00().Construct();
    this.max_length = 66;
    this.str.Add("");
    this.overflow = "";
    this.log = JSIL.Array.New($T02(), 20);

    for (var i = 0; i < 20; i = ((i + 1) | 0)) {
      this.log[i] = "";
    }
    this.position = 0;
    $thisType.Buffer$M$value = g.M;
    $thisType.Buffer$player$value = g.player;
  };

  function Buffer_Add (s, objs) {
    var flag = false;
    if (!((objs === null) || (objs.length <= 0))) {

    $loop0: 
      for (var i = 0; i < objs.length; i = ((i + 1) | 0)) {
        var physicalObject = objs[i];
        if (!((physicalObject !== $thisType.Buffer$player$value) && !$thisType.Buffer$player$value.CanSee(physicalObject))) {
          flag = true;
          break $loop0;
        }
      }
    } else {
      flag = true;
    }
    if (!(!flag || (s.length <= 0))) {
      if ($T08().IsLetter(s[0])) {
        var array = (JSIL.StringToCharArray(s));
        array[0] = $T08().ToUpper(s[0]);
        s = $S01().Construct(array);
      }
      var index = ((this.str.get_Count() - 1) | 0);
      this.str.set_Item(index, JSIL.ConcatString(this.str.get_Item(index), s));

      while (this.str.get_Item(index).length > this.max_length) {
        var num = 7;
        if (this.str.get_Count() < 3) {
          num = 1;
        }

      $loop2: 
        for (var j = ((this.max_length - num) | 0); j >= 0; j = ((j - 1) | 0)) {
          if (this.str.get_Item(index).substr(j, 1) == " ") {
            if (this.str.get_Count() === 3) {
              this.overflow = (this.str.get_Item(index).substr(((j + 1) | 0)));
            } else {
              this.str.Add(this.str.get_Item(index).substr(((j + 1) | 0)));
            }
            this.str.set_Item(index, this.str.get_Item(index).substr(0, ((j + 1) | 0)));
            break $loop2;
          }
        }
        if (this.overflow != "") {
          $T0B().ResetColors();
          this.Print(false);
          index = 0;
        }
      }
    }
  };

  function Buffer_AddDependingOnLastPartialMessage (s) {
    if (!$T0C().Last$b1($T02())(this.str).EndsWith(s, true, null)) {
      this.Add(s, JSIL.Array.New($T06(), 0));
    }
  };

  function Buffer_AddIfEmpty (s) {
    if ($T0C().Last$b1($T02())(this.str).length === 0) {
      this.Add(s, JSIL.Array.New($T06(), 0));
    }
  };

  function Buffer_DisplayNow$00 (s) {
    this.DisplayNow(s, true);
  };

  function Buffer_DisplayNow$01 (s, display_stats) {
    if (display_stats) {
      $thisType.Buffer$player$value.DisplayStats();
    }
    $T0D().set_CursorVisible(false);
    var list = $S00().Construct();
    if (s.length > this.max_length) {

    $loop0: 
      for (var i = ((this.max_length - 1) | 0); i >= 0; i = ((i - 1) | 0)) {
        if (s.substr(i, 1) == " ") {
          list.Add(s.substr(0, ((i + 1) | 0)));
          s = (s.substr(((i + 1) | 0)));
          break $loop0;
        }
      }
    }
    if (s.length > this.max_length) {

    $loop1: 
      for (var j = ((this.max_length - 1) | 0); j >= 0; j = ((j - 1) | 0)) {
        if (s.substr(j, 1) == " ") {
          list.Add(s.substr(0, ((j + 1) | 0)));
          s = (s.substr(((j + 1) | 0)));
          break $loop1;
        }
      }
    }
    list.Add(s);

    for (var k = 0; k < 3; k = ((k + 1) | 0)) {
      if (((3 - k) | 0) > list.get_Count()) {
        $S02().CallStatic($T0B(), "WriteMapString", null, ((k - 3) | 0), 0, $T0C().PadToMapSize(""));
      } else {
        $S02().CallStatic($T0B(), "WriteMapString", null, ((k - 3) | 0), 0, $T0C().PadToMapSize(list.get_Item(((((k + list.get_Count()) | 0) - 3) | 0))));
      }
    }
    $T0D().SetCursorPosition(((13 + s.length) | 0), 2);
  };

  function Buffer_DisplayNow$02 () {
    $T0D().set_CursorVisible(false);
    $T0B().ResetColors();
    if ($T0E().Option($T0F().HIDE_OLD_MESSAGES)) {

      for (var i = 0; i < 3; i = ((i + 1) | 0)) {
        if (i < this.str.get_Count()) {
          $S02().CallStatic($T0B(), "WriteMapString", null, ((i - 3) | 0), 0, $T0C().PadToMapSize(this.str.get_Item(i)));
        } else {
          $S02().CallStatic($T0B(), "WriteMapString", null, ((i - 3) | 0), 0, $T0C().PadToMapSize(""));
        }
      }
    } else {
      var num = this.str.get_Count();
      if ($T0C().Last$b1($T02())(this.str) == "") {
        num = ((num - 1) | 0);
      }

      for (var j = 0; j < 3; j = ((j + 1) | 0)) {
        var flag = true;
        if (((3 - j) | 0) <= num) {
          flag = false;
        }
        if (flag) {
          $T0B().WriteMapString(((j - 3) | 0), 0, $T0C().PadToMapSize(this.PreviousMessage(((3 - ((j + num) | 0)) | 0))), $T10().DarkGray);
          $T0B().set_ForegroundColor($T11().Gray);
        } else {
          $S02().CallStatic($T0B(), "WriteMapString", null, ((j - 3) | 0), 0, $T0C().PadToMapSize(this.str.get_Item(((((j + num) | 0) - 3) | 0))));
        }
      }
    }
  };

  function Buffer_get_M () {
    return $thisType.Buffer$M$value;
  };

  function Buffer_get_player () {
    return $thisType.Buffer$player$value;
  };

  function Buffer_GetMessages () {
    var list = $S00().Construct();

    for (var i = 0; i < 20; i = ((i + 1) | 0)) {
      list.Add(this.Printed(i));
    }
    return list;
  };

  function Buffer_PreviousMessage (num) {
    var num2 = ((this.position - num) | 0);
    if (num2 < 0) {
      num2 = ((num2 + 20) | 0);
    }
    return this.log[num2];
  };

  function Buffer_Print (special_message) {
    var $temp00, $temp01;
    $T0D().set_CursorVisible(false);

    for (var a$0 = this.str._items, i$0 = 0, l$0 = this.str._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      if (!(!(current != "You regenerate. ") || 
          !(current != "You rest... ") || !(current != ""))) {
        $thisType.Buffer$player$value.Interrupt();
      }
    }
    var flag = false;

    for (var a$1 = this.str._items, i$1 = 0, l$1 = this.str._size; i$1 < l$1; ($temp01 = i$1, 
        i$1 = ((i$1 + 1) | 0), 
        $temp01)) {
      var current2 = a$1[i$1];
      if (current2 != "") {
        var num = ((this.position - 1) | 0);
        if (num === -1) {
          num = 19;
        }
        var text = this.log[num];
        var text2 = "1";
        var num2 = (text.lastIndexOf(" (x"));
        if (num2 !== -1) {
          text2 = (text.substr(((num2 + 3) | 0)));
          text2 = (text2.substr(0, ((text2.length - 1) | 0)));
          text = (text.substr(0, ((num2 + 1) | 0)));
        }
        var flag2 = false;
        if (((((text.length + 3) | 0) + ((($S03().CallStatic($T12(), "ToInt32", null, text2) + 1) | 0)).toString().length) | 0) > this.max_length) {
          flag2 = true;
        }
        if (!(!(text == current2) || 
            (this.str.get_Count() !== 1) || flag2)) {
          this.log[num] = ((text + "(x" + ((($S03().CallStatic($T12(), "ToInt32", null, text2) + 1) | 0)).toString() + ")"));
          flag = true;
        } else {
          this.log[this.position] = current2;
          this.position = ((this.position + 1) | 0);
          if (this.position === 20) {
            this.position = 0;
          }
          flag = false;
        }
      }
    }
    if ($T0E().Option($T0F().HIDE_OLD_MESSAGES)) {

      for (var i = 0; i < 3; i = ((i + 1) | 0)) {
        if (i <= ((this.str.get_Count() - 1) | 0)) {
          $S02().CallStatic($T0B(), "WriteMapString", null, ((i - 3) | 0), 0, $T0C().PadToMapSize(this.str.get_Item(i)));
        } else {
          $S02().CallStatic($T0B(), "WriteMapString", null, ((i - 3) | 0), 0, $T0C().PadToMapSize(""));
        }
      }
    } else {
      var num3 = this.str.get_Count();
      if ($T0C().Last$b1($T02())(this.str) == "") {
        num3 = ((num3 - 1) | 0);
      }

      for (var j = 0; j < 3; j = ((j + 1) | 0)) {
        var flag3 = true;
        if (((3 - j) | 0) <= num3) {
          flag3 = false;
        }
        if (flag3) {
          $T0B().WriteMapString(((j - 3) | 0), 0, $T0C().PadToMapSize(this.PreviousMessage(((3 - j) | 0))), $T10().DarkGray);
          $T0B().set_ForegroundColor($T11().Gray);
        } else if (flag) {
          var num4 = (this.PreviousMessage(((3 - j) | 0)).lastIndexOf(" (x"));
          if (num4 !== -1) {
            $S02().CallStatic($T0B(), "WriteMapString", null, ((j - 3) | 0), 0, this.PreviousMessage(((3 - j) | 0)).substr(0, num4));
            $T0B().WriteMapString(((j - 3) | 0), num4, $T0C().PadToMapSize(this.PreviousMessage(((3 - j) | 0)).substr(num4)), $T10().DarkGray);
            $T0B().set_ForegroundColor($T11().Gray);
          } else {
            $S02().CallStatic($T0B(), "WriteMapString", null, ((j - 3) | 0), 0, $T0C().PadToMapSize(this.PreviousMessage(((3 - j) | 0))));
          }
        } else {
          $S02().CallStatic($T0B(), "WriteMapString", null, ((j - 3) | 0), 0, $T0C().PadToMapSize(this.PreviousMessage(((3 - j) | 0))));
        }
      }
    }
    if (!(!(this.overflow != "") && !special_message)) {
      var c = (($T0C().Last$b1($T02())(this.str).length + 13) | 0);
      var num5 = $T0D().get_CursorTop();
      if (num5 > 2) {
        num5 = 2;
      }
      if (($T0B().MapChar(0, 0).c).charCodeAt(0) === "-".charCodeAt(0)) {
        $thisType.Buffer$M$value.RedrawWithStrings();
      } else {
        $thisType.Buffer$M$value.Draw();
      }
      $T0B().WriteString(num5, c, "[more]", $T10().Yellow);
      $T0B().set_ForegroundColor($T11().Gray);
      $T0D().set_CursorVisible(true);
      $T0D().ReadKey(true);
    }
    this.str.Clear();
    this.str.Add(this.overflow);
    this.overflow = "";
  };

  function Buffer_PrintAll () {
    $T0B().ResetColors();
    if ($T0C().Last$b1($T02())(this.str) != "") {
      if ($T0C().Last$b1($T02())(this.str).length > ((this.max_length - 7) | 0)) {

      $loop0: 
        for (var i = ((this.max_length - 7) | 0); i >= 0; i = ((i - 1) | 0)) {
          if ($T0C().Last$b1($T02())(this.str).substr(i, 1) == " ") {
            this.overflow = ($T0C().Last$b1($T02())(this.str).substr(((i + 1) | 0)));
            this.str.set_Item(
              ((this.str.get_Count() - 1) | 0), 
              $T0C().Last$b1($T02())(this.str).substr(0, ((i + 1) | 0))
            );
            break $loop0;
          }
        }
        this.Print(true);
        if ($T0C().Last$b1($T02())(this.str) != "") {
          this.Print(true);
        }
      } else {
        this.Print(true);
      }
    }
  };

  function Buffer_Printed (num) {
    return this.log[((((this.position + num) | 0) % 20) | 0)];
  };

  function Buffer_set_M (value) {
    $thisType.Buffer$M$value = value;
  };

  function Buffer_set_player (value) {
    $thisType.Buffer$player$value = value;
  };

  function Buffer_SetPreviousMessages (s) {

    for (var i = 0; i < 20; i = ((i + 1) | 0)) {
      this.log[i] = s[i];
    }
  };

  JSIL.MakeClass($asm01.TypeRef("System.Object"), "Forays.Buffer", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.Game")], []), 
      Buffer__ctor
    );

    $.Method({Static:false, Public:true }, "Add", 
      new JSIL.MethodSignature(null, [$.String, $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.PhysicalObject")])], []), 
      Buffer_Add
    );

    $.Method({Static:false, Public:true }, "AddDependingOnLastPartialMessage", 
      new JSIL.MethodSignature(null, [$.String], []), 
      Buffer_AddDependingOnLastPartialMessage
    );

    $.Method({Static:false, Public:true }, "AddIfEmpty", 
      new JSIL.MethodSignature(null, [$.String], []), 
      Buffer_AddIfEmpty
    );

    $.Method({Static:false, Public:true }, "DisplayNow", 
      new JSIL.MethodSignature(null, [$.String], []), 
      Buffer_DisplayNow$00
    );

    $.Method({Static:false, Public:true }, "DisplayNow", 
      new JSIL.MethodSignature(null, [$.String, $.Boolean], []), 
      Buffer_DisplayNow$01
    );

    $.Method({Static:false, Public:true }, "DisplayNow", 
      new JSIL.MethodSignature(null, [], []), 
      Buffer_DisplayNow$02
    );

    $.Method({Static:true , Public:true }, "get_M", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Map"), [], []), 
      Buffer_get_M
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:true }, "get_player", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Actor"), [], []), 
      Buffer_get_player
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "GetMessages", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$.String]), [], []), 
      Buffer_GetMessages
    );

    $.Method({Static:false, Public:true }, "PreviousMessage", 
      new JSIL.MethodSignature($.String, [$.Int32], []), 
      Buffer_PreviousMessage
    );

    $.Method({Static:false, Public:true }, "Print", 
      new JSIL.MethodSignature(null, [$.Boolean], []), 
      Buffer_Print
    );

    $.Method({Static:false, Public:true }, "PrintAll", 
      new JSIL.MethodSignature(null, [], []), 
      Buffer_PrintAll
    );

    $.Method({Static:false, Public:true }, "Printed", 
      new JSIL.MethodSignature($.String, [$.Int32], []), 
      Buffer_Printed
    );

    $.Method({Static:true , Public:true }, "set_M", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.Map")], []), 
      Buffer_set_M
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:true }, "set_player", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.Actor")], []), 
      Buffer_set_player
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "SetPreviousMessages", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$.String])], []), 
      Buffer_SetPreviousMessages
    );

    $.Field({Static:false, Public:false}, "max_length", $.Int32); 
    $.Field({Static:false, Public:false}, "str", $asm01.TypeRef("System.Collections.Generic.List`1", [$.String])); 
    $.Field({Static:false, Public:false}, "overflow", $.String); 
    $.Field({Static:false, Public:false}, "log", $jsilcore.TypeRef("System.Array", [$.String])); 
    $.Field({Static:false, Public:false}, "position", $.Int32); 
    $.Field({Static:true , Public:false}, "Buffer$M$value", $asm00.TypeRef("Forays.Map"))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "Buffer$player$value", $asm00.TypeRef("Forays.Actor"))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Property({Static:true , Public:true }, "M", $asm00.TypeRef("Forays.Map"));

    $.Property({Static:true , Public:true }, "player", $asm00.TypeRef("Forays.Actor"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function Global$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.System.Collections.Generic.Dictionary$b2.Of($asm00.Forays.OptionType, $asm01.System.Boolean))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm01.System.Random)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm01.System.String)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm01.System.Int32)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm01.System.Console)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm01.System.Boolean)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Forays.Screen)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm01.System.ConsoleKeyInfo)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm01.System.Void)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm01.System.Char)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm01.System.ConsoleKey)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm01.System.Convert)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm01.System.IO.StreamReader)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm01.System.IO.TextReader)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize(System.Array.Of($asm01.System.String))) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize(System.Array.Of($asm01.System.Char))) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm00.Forays.OptionType)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm01.System.Enum)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm00.Forays.TutorialTopic)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm00.Forays.Dict$b2.Of($asm00.Forays.TutorialTopic, $asm01.System.Boolean))) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm00.Forays.Help)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm01.System.Environment)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm01.System.Object)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize(System.Array.Of($asm01.System.Object))) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm00.Forays.Buffer)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm00.Forays.Map)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm00.Forays.Queue)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm00.Forays.Global_$lSaveGame$gc__AnonStorey0)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm01.System.IO.FileStream)) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm01.System.IO.FileMode)) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize($asm01.System.IO.BinaryWriter)) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm01.System.Collections.Generic.Dictionary$b2.Of($asm00.Forays.PhysicalObject, $asm01.System.Int32))) ();
  };
  var $T20 = function () {
    return ($T20 = JSIL.Memoize($asm00.Forays.Global_IDMethod)) ();
  };
  var $T21 = function () {
    return ($T21 = JSIL.Memoize($asm00.Forays.Actor)) ();
  };
  var $T22 = function () {
    return ($T22 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.LevelType))) ();
  };
  var $T23 = function () {
    return ($T23 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.FeatType))) ();
  };
  var $T24 = function () {
    return ($T24 = JSIL.Memoize($asm00.Forays.FeatType)) ();
  };
  var $T25 = function () {
    return ($T25 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.SpellType))) ();
  };
  var $T26 = function () {
    return ($T26 = JSIL.Memoize($asm00.Forays.SpellType)) ();
  };
  var $T27 = function () {
    return ($T27 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.Actor)))) ();
  };
  var $T28 = function () {
    return ($T28 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.Actor))) ();
  };
  var $T29 = function () {
    return ($T29 = JSIL.Memoize($asm00.Forays.PhysicalObject)) ();
  };
  var $T2A = function () {
    return ($T2A = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.Item))) ();
  };
  var $T2B = function () {
    return ($T2B = JSIL.Memoize($asm00.Forays.Item)) ();
  };
  var $T2C = function () {
    return ($T2C = JSIL.Memoize($asm01.System.Collections.Generic.Dictionary$b2.Of($asm00.Forays.AttrType, $asm01.System.Int32))) ();
  };
  var $T2D = function () {
    return ($T2D = JSIL.Memoize($asm01.System.Collections.Generic.Dictionary$b2_KeyCollection_Enumerator.Of($asm00.Forays.AttrType, $asm01.System.Int32))) ();
  };
  var $T2E = function () {
    return ($T2E = JSIL.Memoize($asm01.System.Collections.Generic.Dictionary$b2_KeyCollection.Of($asm00.Forays.AttrType, $asm01.System.Int32))) ();
  };
  var $T2F = function () {
    return ($T2F = JSIL.Memoize($asm00.Forays.AttrType)) ();
  };
  var $T30 = function () {
    return ($T30 = JSIL.Memoize($asm00.Forays.Dict$b2.Of($asm00.Forays.AttrType, $asm01.System.Int32))) ();
  };
  var $T31 = function () {
    return ($T31 = JSIL.Memoize($asm01.System.Collections.Generic.Dictionary$b2.Of($asm00.Forays.SkillType, $asm01.System.Int32))) ();
  };
  var $T32 = function () {
    return ($T32 = JSIL.Memoize($asm01.System.Collections.Generic.Dictionary$b2_KeyCollection_Enumerator.Of($asm00.Forays.SkillType, $asm01.System.Int32))) ();
  };
  var $T33 = function () {
    return ($T33 = JSIL.Memoize($asm01.System.Collections.Generic.Dictionary$b2_KeyCollection.Of($asm00.Forays.SkillType, $asm01.System.Int32))) ();
  };
  var $T34 = function () {
    return ($T34 = JSIL.Memoize($asm00.Forays.SkillType)) ();
  };
  var $T35 = function () {
    return ($T35 = JSIL.Memoize($asm00.Forays.Dict$b2.Of($asm00.Forays.SkillType, $asm01.System.Int32))) ();
  };
  var $T36 = function () {
    return ($T36 = JSIL.Memoize($asm01.System.Collections.Generic.Dictionary$b2.Of($asm00.Forays.FeatType, $asm01.System.Int32))) ();
  };
  var $T37 = function () {
    return ($T37 = JSIL.Memoize($asm01.System.Collections.Generic.Dictionary$b2_KeyCollection_Enumerator.Of($asm00.Forays.FeatType, $asm01.System.Int32))) ();
  };
  var $T38 = function () {
    return ($T38 = JSIL.Memoize($asm01.System.Collections.Generic.Dictionary$b2_KeyCollection.Of($asm00.Forays.FeatType, $asm01.System.Int32))) ();
  };
  var $T39 = function () {
    return ($T39 = JSIL.Memoize($asm00.Forays.Dict$b2.Of($asm00.Forays.FeatType, $asm01.System.Int32))) ();
  };
  var $T3A = function () {
    return ($T3A = JSIL.Memoize($asm01.System.Collections.Generic.Dictionary$b2.Of($asm00.Forays.SpellType, $asm01.System.Int32))) ();
  };
  var $T3B = function () {
    return ($T3B = JSIL.Memoize($asm01.System.Collections.Generic.Dictionary$b2_KeyCollection_Enumerator.Of($asm00.Forays.SpellType, $asm01.System.Int32))) ();
  };
  var $T3C = function () {
    return ($T3C = JSIL.Memoize($asm01.System.Collections.Generic.Dictionary$b2_KeyCollection.Of($asm00.Forays.SpellType, $asm01.System.Int32))) ();
  };
  var $T3D = function () {
    return ($T3D = JSIL.Memoize($asm00.Forays.Dict$b2.Of($asm00.Forays.SpellType, $asm01.System.Int32))) ();
  };
  var $T3E = function () {
    return ($T3E = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.pos))) ();
  };
  var $T3F = function () {
    return ($T3F = JSIL.Memoize($asm00.Forays.pos)) ();
  };
  var $T40 = function () {
    return ($T40 = JSIL.Memoize($asm00.Forays.Extensions)) ();
  };
  var $T41 = function () {
    return ($T41 = JSIL.Memoize($asm02.System.Collections.Generic.LinkedList$b1.Of($asm00.Forays.WeaponType))) ();
  };
  var $T42 = function () {
    return ($T42 = JSIL.Memoize($asm02.System.Collections.Generic.LinkedList$b1_Enumerator.Of($asm00.Forays.WeaponType))) ();
  };
  var $T43 = function () {
    return ($T43 = JSIL.Memoize($asm00.Forays.WeaponType)) ();
  };
  var $T44 = function () {
    return ($T44 = JSIL.Memoize($asm01.System.IDisposable)) ();
  };
  var $T45 = function () {
    return ($T45 = JSIL.Memoize($asm02.System.Collections.Generic.LinkedList$b1.Of($asm00.Forays.ArmorType))) ();
  };
  var $T46 = function () {
    return ($T46 = JSIL.Memoize($asm02.System.Collections.Generic.LinkedList$b1_Enumerator.Of($asm00.Forays.ArmorType))) ();
  };
  var $T47 = function () {
    return ($T47 = JSIL.Memoize($asm00.Forays.ArmorType)) ();
  };
  var $T48 = function () {
    return ($T48 = JSIL.Memoize($asm02.System.Collections.Generic.LinkedList$b1.Of($asm00.Forays.MagicItemType))) ();
  };
  var $T49 = function () {
    return ($T49 = JSIL.Memoize($asm02.System.Collections.Generic.LinkedList$b1_Enumerator.Of($asm00.Forays.MagicItemType))) ();
  };
  var $T4A = function () {
    return ($T4A = JSIL.Memoize($asm00.Forays.MagicItemType)) ();
  };
  var $T4B = function () {
    return ($T4B = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.Tile))) ();
  };
  var $T4C = function () {
    return ($T4C = JSIL.Memoize($asm00.Forays.Tile)) ();
  };
  var $T4D = function () {
    return ($T4D = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.FeatureType))) ();
  };
  var $T4E = function () {
    return ($T4E = JSIL.Memoize($asm00.Forays.FeatureType)) ();
  };
  var $T4F = function () {
    return ($T4F = JSIL.Memoize($asm02.System.Collections.Generic.LinkedList$b1.Of($asm00.Forays.Event))) ();
  };
  var $T50 = function () {
    return ($T50 = JSIL.Memoize($asm02.System.Collections.Generic.LinkedList$b1_Enumerator.Of($asm00.Forays.Event))) ();
  };
  var $T51 = function () {
    return ($T51 = JSIL.Memoize($asm00.Forays.Event)) ();
  };
  var $T52 = function () {
    return ($T52 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.PhysicalObject))) ();
  };
  var $T53 = function () {
    return ($T53 = JSIL.Memoize($asm01.System.IO.Stream)) ();
  };
  var $T54 = function () {
    return ($T54 = JSIL.Memoize($asm01.System.IO.StreamWriter)) ();
  };
  var $T55 = function () {
    return ($T55 = JSIL.Memoize($asm01.System.IO.TextWriter)) ();
  };
  var $T56 = function () {
    return ($T56 = JSIL.Memoize($asm01.System.Collections.IEnumerator)) ();
  };
  var $T57 = function () {
    return ($T57 = JSIL.Memoize($asm01.System.Array)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.Dictionary`2", [$asm00.TypeRef("Forays.OptionType"), $asm01.TypeRef("System.Boolean")]), []))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Random"), []))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $asm01.TypeRef("System.String")
      ], []))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $asm01.TypeRef("System.Char")
      ], []))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Int32"), [$asm01.TypeRef("System.String")], []))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.IO.StreamReader"), [$asm01.TypeRef("System.String")]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.IO.FileStream"), [$asm01.TypeRef("System.String"), $asm01.TypeRef("System.IO.FileMode")]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.IO.BinaryWriter"), [$asm01.TypeRef("System.IO.Stream")]))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.Dictionary`2", [$asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Int32")]), []))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm01.TypeRef("System.String")], []))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm01.TypeRef("System.Int32")], []))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm01.TypeRef("System.Boolean")], []))) ();
  };
  var $S0C = function () {
    return ($S0C = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Actor")])]), []))) ();
  };
  var $S0D = function () {
    return ($S0D = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm01.TypeRef("System.Char")], []))) ();
  };
  var $S0E = function () {
    return ($S0E = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.IO.StreamWriter"), [$asm01.TypeRef("System.String"), $asm01.TypeRef("System.Boolean")]))) ();
  };
  var $S0F = function () {
    return ($S0F = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm01.TypeRef("System.String")], []))) ();
  };
  var $S10 = function () {
    return ($S10 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm01.TypeRef("System.String")], []))) ();
  };
  var $S11 = function () {
    return ($S11 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Random"), [$asm01.TypeRef("System.Int32")]))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm01.System.IDisposable.Dispose)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm01.System.Collections.IEnumerator.MoveNext)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm01.System.Collections.IEnumerator.get_Current)) ();
  };

  function Global_BoundsCheck (r, c) {
    return !((r < 0) || 
      (r >= 22) || 
      (c < 0) || (c >= 66));
  };

  function Global_CoinFlip () {
    return ($thisType.r.Next(1, 3) === 2);
  };

  function Global_EnterInt$00 () {
    return $thisType.EnterInt(4);
  };

  function Global_EnterInt$01 (max_length) {
    var text = "";
    $T04().set_CursorVisible(true);
    var flag = false;
    var num = $T04().get_CursorLeft();
    $S02().CallStatic($T06(), "WriteString", null, $T04().get_CursorTop(), num, System.String.PadRight("", max_length, ' '));

    while (!flag) {
      $T04().SetCursorPosition(num, $T04().get_CursorTop());
      var consoleKeyInfo = $T04().ReadKey(true).MemberwiseClone();
      if (!((consoleKeyInfo.get_KeyChar().charCodeAt(0) < "0".charCodeAt(0)) || (consoleKeyInfo.get_KeyChar().charCodeAt(0) > "9".charCodeAt(0)))) {
        if (text.length < max_length) {
          text = (JSIL.ConcatString(text, consoleKeyInfo.get_KeyChar()));
          $S03().CallStatic($T06(), "WriteChar", null, 
            $T04().get_CursorTop(), 
            num, 
            consoleKeyInfo.get_KeyChar()
          );
          num = ((num + 1) | 0);
        }
      } else if (!((consoleKeyInfo.get_Key() !== $T0A().Backspace) || (text.length <= 0))) {
        text = (text.substr(0, ((text.length - 1) | 0)));
        num = ((num - 1) | 0);
        $S03().CallStatic($T06(), "WriteChar", null, $T04().get_CursorTop(), num, " ");
        $T04().SetCursorPosition(num, $T04().get_CursorTop());
      } else {
        if (consoleKeyInfo.get_Key() === $T0A().Escape) {
          return 0;
        }
        if (consoleKeyInfo.get_Key() === $T0A().Enter) {
          if (text.length === 0) {
            return -1;
          }
          flag = true;
        }
      }
    }
    return $S04().CallStatic($T0B(), "ToInt32", null, text);
  };

  function Global_EnterString$02 () {
    return $thisType.EnterString(65);
  };

  function Global_EnterString$03 (max_length) {
    var text = "";
    $T04().set_CursorVisible(true);
    var flag = false;
    var num = $T04().get_CursorLeft();
    $S02().CallStatic($T06(), "WriteString", null, $T04().get_CursorTop(), num, System.String.PadRight("", max_length, ' '));

    while (!flag) {
      $T04().SetCursorPosition(num, $T04().get_CursorTop());
      var consoleKeyInfo = $T04().ReadKey(true).MemberwiseClone();
      if (!(!((consoleKeyInfo.get_KeyChar().charCodeAt(0) >= "!".charCodeAt(0)) && 
            (consoleKeyInfo.get_KeyChar().charCodeAt(0) <= "~".charCodeAt(0))) && (consoleKeyInfo.get_KeyChar().charCodeAt(0) !== " ".charCodeAt(0)))) {
        if (text.length < max_length) {
          text = (JSIL.ConcatString(text, consoleKeyInfo.get_KeyChar()));
          $S03().CallStatic($T06(), "WriteChar", null, 
            $T04().get_CursorTop(), 
            num, 
            consoleKeyInfo.get_KeyChar()
          );
          num = ((num + 1) | 0);
        }
      } else if (!((consoleKeyInfo.get_Key() !== $T0A().Backspace) || (text.length <= 0))) {
        text = (text.substr(0, ((text.length - 1) | 0)));
        num = ((num - 1) | 0);
        $S03().CallStatic($T06(), "WriteChar", null, $T04().get_CursorTop(), num, " ");
        $T04().SetCursorPosition(num, $T04().get_CursorTop());
      } else {
        if (consoleKeyInfo.get_Key() === $T0A().Escape) {
          return "";
        }
        if (consoleKeyInfo.get_Key() === $T0A().Enter) {
          if (text.length === 0) {
            return "";
          }
          flag = true;
        }
      }
    }
    return text;
  };

  function Global_FlushInput () {

    while ($T04().get_KeyAvailable()) {
      $T04().ReadKey(true);
    }
  };

  function Global_LoadOptions () {
    var streamReader = $S05().Construct("options.txt");

  $loop0: 
    for (var text = ""; (text.length < 2) || (text.substr(0, 2) != "--"); ) {
      text = streamReader.ReadLine();
      if (!((text.length < 2) || !(text.substr(0, 2) == "--"))) {
        break $loop0;
      }
      var array = (JSIL.SplitString(text, JSIL.Array.New($T09(), [" "])));
      if (array[0].length === 1) {
        var c = $T09().ToUpper(array[0][0]);
        if (!((c.charCodeAt(0) !== "F".charCodeAt(0)) && (c.charCodeAt(0) !== "T".charCodeAt(0)))) {
          var key = $T10().$Cast($T11().Parse($T10().__Type__, array[1], true));
          if (c.charCodeAt(0) === "F".charCodeAt(0)) {
            $thisType.Options.set_Item(key, false);
          } else {
            $thisType.Options.set_Item(key, true);
          }
        }
      }
    }

  $loop1: 
    for (text = ""; (text.length < 2) || (text.substr(0, 2) != "--"); ) {
      text = streamReader.ReadLine();
      if (!((text.length < 2) || !(text.substr(0, 2) == "--"))) {
        break $loop1;
      }
      var array2 = (JSIL.SplitString(text, JSIL.Array.New($T09(), [" "])));
      if (array2[0].length === 1) {
        var c2 = $T09().ToUpper(array2[0][0]);
        if (!((c2.charCodeAt(0) !== "F".charCodeAt(0)) && (c2.charCodeAt(0) !== "T".charCodeAt(0)))) {
          var key2 = $T12().$Cast($T11().Parse($T12().__Type__, array2[1], true));
          if (!((c2.charCodeAt(0) !== "F".charCodeAt(0)) && !$thisType.Option($T10().ALWAYS_RESET_TIPS))) {
            $T13().prototype.set_Item.call($T14().displayed, key2, false);
          } else {
            $T13().prototype.set_Item.call($T14().displayed, key2, true);
          }
        }
      }
    }
  };

  function Global_OneIn (num) {
    var num2 = $thisType.Roll(num);
    return (num2 === num);
  };

  function Global_Option (option) {
    var result = new JSIL.BoxedVariable(false);
    $thisType.Options.TryGetValue(option, /* ref */ result);
    return result.get();
  };

  function Global_Quit () {
    if ($thisType.LINUX) {
      $T06().Blank();
      $T06().ResetColors();
      $T04().SetCursorPosition(0, 0);
      $T04().set_CursorVisible(true);
    }
    $T15().Exit(0);
  };

  function Global_RandomDirection () {
    var num = $thisType.r.Next(1, 8);
    if (num === 5) {
      num = 9;
    }
    return num;
  };

  function Global_Roll$04 (dice, sides) {
    var num = 0;

    for (var i = 0; i < dice; i = ((i + 1) | 0)) {
      num = ((num + $thisType.r.Next(1, ((sides + 1) | 0))) | 0);
    }
    return num;
  };

  function Global_Roll$05 (sides) {
    return ((0 + $thisType.r.Next(1, ((sides + 1) | 0))) | 0);
  };

  function Global_RomanNumeral (num) {
    var str = "";

    while (num > 1000) {
      str = (JSIL.ConcatString(str, "M"));
      num = ((num - 1000) | 0);
    }
    str = (JSIL.ConcatString(str, $thisType.RomanPattern(((num / 100) | 0), "C", "D", "M")));
    num = ((num - ((((num / 100) | 0) * 100) | 0)) | 0);
    str = (JSIL.ConcatString(str, $thisType.RomanPattern(((num / 10) | 0), "X", "L", "C")));
    num = ((num - ((((num / 10) | 0) * 10) | 0)) | 0);
    return JSIL.ConcatString(str, $thisType.RomanPattern(num, "I", "V", "X"));
  };

  function Global_RomanPattern (num, one, five, ten) {
    switch (num) {
      case 1: 
        return JSIL.ConcatString("", one);

      case 2: 
        return JSIL.ConcatString("", one, one);

      case 3: 
        return JSIL.ConcatString.apply(null, JSIL.Array.New($T16(), ["", one, one, one]));

      case 4: 
        return JSIL.ConcatString("", one, five);

      case 5: 
        return JSIL.ConcatString("", five);

      case 6: 
        return JSIL.ConcatString("", five, one);

      case 7: 
        return JSIL.ConcatString.apply(null, JSIL.Array.New($T16(), ["", five, one, one]));

      case 8: 
        return JSIL.ConcatString.apply(null, JSIL.Array.New($T16(), ["", five, one, one, one]));

      case 9: 
        return JSIL.ConcatString("", one, ten);

      default: 
        return "";

    }
  };

  function Global_RotateDirection$06 (dir, clockwise) {
    return $thisType.RotateDirection(dir, clockwise, 1);
  };

  function Global_RotateDirection$07 (dir, clockwise, num) {

    for (var i = 0; i < num; i = ((i + 1) | 0)) {
      switch (dir) {
        case 1: 
          dir = (!clockwise ? 2 : 4);
          break;

        case 2: 
          dir = (!clockwise ? 3 : 1);
          break;

        case 3: 
          dir = (!clockwise ? 6 : 2);
          break;

        case 4: 
          dir = (!clockwise ? 1 : 7);
          break;

        case 5: 
          break;

        case 6: 
          dir = (!clockwise ? 9 : 3);
          break;

        case 7: 
          dir = (!clockwise ? 4 : 8);
          break;

        case 8: 
          dir = (!clockwise ? 7 : 9);
          break;

        case 9: 
          dir = (!clockwise ? 8 : 6);
          break;

        default: 
          dir = 0;
          break;

      }
    }
    return dir;
  };

  function Global_SaveGame (B, M, Q) {
    var $temp00, $temp01, $temp02, $temp03, $temp04, $temp05, $temp06, $temp07, $temp08, $temp09, $temp0A, $temp0B, $temp0C;
    var $lSaveGame$gc__AnonStorey = new ($T1B())();
    var fileStream = $S06().Construct("forays.sav", $T1D().CreateNew);
    var binaryWriter = $S07().Construct(fileStream);
    $lSaveGame$gc__AnonStorey.id = $S08().Construct();
    $lSaveGame$gc__AnonStorey.next_id = 1;
    var iDMethod = function (o) {
      if (o === null) {
        return 0;
      }
      if (!this.id.ContainsKey(o)) {
        this.id.Add(o, this.next_id);
        this.next_id = ((this.next_id + 1) | 0);
      }
      return this.id.get_Item(o);
    }.bind($lSaveGame$gc__AnonStorey);
    $S09().CallVirtual("Write", null, binaryWriter, $T21().player_name);
    $S0A().CallVirtual("Write", null, binaryWriter, M.Map$current_level$value);

    for (var i = 0; i < 20; i = ((i + 1) | 0)) {
      $S0A().CallVirtual("Write", null, binaryWriter, M.level_types.get_Item(i).valueOf());
    }
    $S0B().CallVirtual("Write", null, binaryWriter, M.get_wiz_lite());
    $S0B().CallVirtual("Write", null, binaryWriter, M.Map$wiz_dark$value);
    $S0A().CallVirtual("Write", null, binaryWriter, $T21().feats_in_order.get_Count());

    for (var a$0 = $T21().feats_in_order._items, i$0 = 0, l$0 = $T21().feats_in_order._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      $S0A().CallVirtual("Write", null, binaryWriter, current.valueOf());
    }
    $S0A().CallVirtual("Write", null, binaryWriter, $T21().partial_feats_in_order.get_Count());

    for (var a$1 = $T21().partial_feats_in_order._items, i$1 = 0, l$1 = $T21().partial_feats_in_order._size; i$1 < l$1; ($temp01 = i$1, 
        i$1 = ((i$1 + 1) | 0), 
        $temp01)) {
      var current2 = a$1[i$1];
      $S0A().CallVirtual("Write", null, binaryWriter, current2.valueOf());
    }
    $S0A().CallVirtual("Write", null, binaryWriter, $T21().spells_in_order.get_Count());

    for (var a$2 = $T21().spells_in_order._items, i$2 = 0, l$2 = $T21().spells_in_order._size; i$2 < l$2; ($temp02 = i$2, 
        i$2 = ((i$2 + 1) | 0), 
        $temp02)) {
      var current3 = a$2[i$2];
      $S0A().CallVirtual("Write", null, binaryWriter, current3.valueOf());
    }
    var list = $S0C().Construct();
    $S0A().CallVirtual("Write", null, binaryWriter, M.AllActors().get_Count());

    for (var a$3 = M.AllActors()._items, i$3 = 0, l$3 = M.AllActors()._size; i$3 < l$3; ($temp03 = i$3, 
        i$3 = ((i$3 + 1) | 0), 
        $temp03)) {
      var current4 = a$3[i$3];
      $S0A().CallVirtual("Write", null, binaryWriter, iDMethod(current4));
      $S0A().CallVirtual("Write", null, binaryWriter, current4.get_row());
      $S0A().CallVirtual("Write", null, binaryWriter, current4.get_col());
      $S09().CallVirtual("Write", null, binaryWriter, current4.PhysicalObject$$name$value);
      $S09().CallVirtual("Write", null, binaryWriter, current4.PhysicalObject$the_name$value);
      $S09().CallVirtual("Write", null, binaryWriter, current4.PhysicalObject$a_name$value);
      $S0D().CallVirtual("Write", null, binaryWriter, current4.PhysicalObject$symbol$value);
      $S0A().CallVirtual("Write", null, binaryWriter, current4.PhysicalObject$color$value.valueOf());
      $S0A().CallVirtual("Write", null, binaryWriter, current4.Actor$type$value.valueOf());
      $S0A().CallVirtual("Write", null, binaryWriter, current4.Actor$maxhp$value);
      $S0A().CallVirtual("Write", null, binaryWriter, current4.Actor$curhp$value);
      $S0A().CallVirtual("Write", null, binaryWriter, current4.Actor$speed$value);
      $S0A().CallVirtual("Write", null, binaryWriter, current4.Actor$level$value);
      $S0A().CallVirtual("Write", null, binaryWriter, current4.PhysicalObject$light_radius$value);
      $S0A().CallVirtual("Write", null, binaryWriter, iDMethod(current4.Actor$target$value));
      $S0A().CallVirtual("Write", null, binaryWriter, current4.Actor$inv$value.get_Count());

      for (var a$4 = current4.Actor$inv$value._items, i$4 = 0, l$4 = current4.Actor$inv$value._size; i$4 < l$4; ($temp04 = i$4, 
          i$4 = ((i$4 + 1) | 0), 
          $temp04)) {
        var current5 = a$4[i$4];
        $S09().CallVirtual("Write", null, binaryWriter, current5.PhysicalObject$$name$value);
        $S09().CallVirtual("Write", null, binaryWriter, current5.PhysicalObject$the_name$value);
        $S09().CallVirtual("Write", null, binaryWriter, current5.PhysicalObject$a_name$value);
        $S0D().CallVirtual("Write", null, binaryWriter, current5.PhysicalObject$symbol$value);
        $S0A().CallVirtual("Write", null, binaryWriter, current5.PhysicalObject$color$value.valueOf());
        $S0A().CallVirtual("Write", null, binaryWriter, current5.Item$type$value.valueOf());
        $S0A().CallVirtual("Write", null, binaryWriter, current5.Item$quantity$value);
        $S0B().CallVirtual("Write", null, binaryWriter, current5.Item$ignored$value);
      }

      for (var j = 0; j < 13; j = ((j + 1) | 0)) {
        $S0A().CallVirtual("Write", null, binaryWriter, current4.Actor$F$value[j].valueOf());
      }
      $S0A().CallVirtual("Write", null, binaryWriter, current4.attrs.d.get_Count());
      var enumerator6 = current4.attrs.d.get_Keys().GetEnumerator();

      while (enumerator6.MoveNext()) {
        var current6 = enumerator6.get_Current();
        $S0A().CallVirtual("Write", null, binaryWriter, current6.valueOf());
        $S0A().CallVirtual("Write", null, binaryWriter, $T30().prototype.get_Item.call(current4.attrs, current6));
      }
      $S0A().CallVirtual("Write", null, binaryWriter, current4.skills.d.get_Count());
      var enumerator7 = current4.skills.d.get_Keys().GetEnumerator();

      while (enumerator7.MoveNext()) {
        var current7 = enumerator7.get_Current();
        $S0A().CallVirtual("Write", null, binaryWriter, current7.valueOf());
        $S0A().CallVirtual("Write", null, binaryWriter, $T35().prototype.get_Item.call(current4.skills, current7));
      }
      $S0A().CallVirtual("Write", null, binaryWriter, current4.feats.d.get_Count());
      var enumerator8 = current4.feats.d.get_Keys().GetEnumerator();

      while (enumerator8.MoveNext()) {
        var current8 = enumerator8.get_Current();
        $S0A().CallVirtual("Write", null, binaryWriter, current8.valueOf());
        $S0A().CallVirtual("Write", null, binaryWriter, $T39().prototype.get_Item.call(current4.feats, current8));
      }
      $S0A().CallVirtual("Write", null, binaryWriter, current4.spells.d.get_Count());
      var enumerator9 = current4.spells.d.get_Keys().GetEnumerator();

      while (enumerator9.MoveNext()) {
        var current9 = enumerator9.get_Current();
        $S0A().CallVirtual("Write", null, binaryWriter, current9.valueOf());
        $S0A().CallVirtual("Write", null, binaryWriter, $T3D().prototype.get_Item.call(current4.spells, current9));
      }
      $S0A().CallVirtual("Write", null, binaryWriter, current4.magic_penalty);
      $S0A().CallVirtual("Write", null, binaryWriter, current4.time_of_last_action);
      $S0A().CallVirtual("Write", null, binaryWriter, current4.recover_time);
      $S0A().CallVirtual("Write", null, binaryWriter, current4.path.get_Count());

      for (var a$5 = current4.path._items, i$5 = 0, l$5 = current4.path._size; i$5 < l$5; ($temp05 = i$5, 
          i$5 = ((i$5 + 1) | 0), 
          $temp05)) {
        var current10 = a$5[i$5].MemberwiseClone();
        $S0A().CallVirtual("Write", null, binaryWriter, current10.row);
        $S0A().CallVirtual("Write", null, binaryWriter, current10.col);
      }
      $S0A().CallVirtual("Write", null, binaryWriter, iDMethod(current4.target_location));
      $S0A().CallVirtual("Write", null, binaryWriter, current4.player_visibility_duration);
      if (current4.group !== null) {
        $T40().AddUnique$b1($T28())(list, current4.group);
      }
      $S0A().CallVirtual("Write", null, binaryWriter, current4.weapons.get_Count());
      var enumerator11 = $T41().prototype.GetEnumerator.call(current4.weapons).MemberwiseClone();
      try {

        while (enumerator11.MoveNext()) {
          var current11 = enumerator11.get_Current();
          $S0A().CallVirtual("Write", null, binaryWriter, current11.valueOf());
        }
      } finally {
        $IM00().Call(enumerator11, null);
      }
      $S0A().CallVirtual("Write", null, binaryWriter, current4.armors.get_Count());
      var enumerator12 = $T45().prototype.GetEnumerator.call(current4.armors).MemberwiseClone();
      try {

        while (enumerator12.MoveNext()) {
          var current12 = enumerator12.get_Current();
          $S0A().CallVirtual("Write", null, binaryWriter, current12.valueOf());
        }
      } finally {
        $IM00().Call(enumerator12, null);
      }
      $S0A().CallVirtual("Write", null, binaryWriter, current4.magic_items.get_Count());
      var enumerator13 = $T48().prototype.GetEnumerator.call(current4.magic_items).MemberwiseClone();
      try {

        while (enumerator13.MoveNext()) {
          var current13 = enumerator13.get_Current();
          $S0A().CallVirtual("Write", null, binaryWriter, current13.valueOf());
        }
      } finally {
        $IM00().Call(enumerator13, null);
      }
    }
    $S0A().CallVirtual("Write", null, binaryWriter, list.get_Count());

    for (var a$6 = list._items, i$6 = 0, l$6 = list._size; i$6 < l$6; ($temp06 = i$6, 
        i$6 = ((i$6 + 1) | 0), 
        $temp06)) {
      var current14 = a$6[i$6];
      $S0A().CallVirtual("Write", null, binaryWriter, current14.get_Count());

      for (var a$7 = current14._items, i$7 = 0, l$7 = current14._size; i$7 < l$7; ($temp07 = i$7, 
          i$7 = ((i$7 + 1) | 0), 
          $temp07)) {
        var current15 = a$7[i$7];
        $S0A().CallVirtual("Write", null, binaryWriter, iDMethod(current15));
      }
    }
    $S0A().CallVirtual("Write", null, binaryWriter, M.AllTiles().get_Count());

    for (var a$8 = M.AllTiles()._items, i$8 = 0, l$8 = M.AllTiles()._size; i$8 < l$8; ($temp08 = i$8, 
        i$8 = ((i$8 + 1) | 0), 
        $temp08)) {
      var current16 = a$8[i$8];
      $S0A().CallVirtual("Write", null, binaryWriter, iDMethod(current16));
      $S0A().CallVirtual("Write", null, binaryWriter, current16.get_row());
      $S0A().CallVirtual("Write", null, binaryWriter, current16.get_col());
      $S09().CallVirtual("Write", null, binaryWriter, current16.PhysicalObject$$name$value);
      $S09().CallVirtual("Write", null, binaryWriter, current16.PhysicalObject$the_name$value);
      $S09().CallVirtual("Write", null, binaryWriter, current16.PhysicalObject$a_name$value);
      $S0D().CallVirtual("Write", null, binaryWriter, current16.PhysicalObject$symbol$value);
      $S0A().CallVirtual("Write", null, binaryWriter, current16.PhysicalObject$color$value.valueOf());
      $S0A().CallVirtual("Write", null, binaryWriter, current16.Tile$type$value.valueOf());
      $S0B().CallVirtual("Write", null, binaryWriter, current16.Tile$passable$value);
      $S0B().CallVirtual("Write", null, binaryWriter, current16.get_opaque());
      $S0B().CallVirtual("Write", null, binaryWriter, current16.Tile$seen$value);
      $S0B().CallVirtual("Write", null, binaryWriter, current16.Tile$solid_rock$value);
      $S0A().CallVirtual("Write", null, binaryWriter, current16.get_light_value());
      if (current16.toggles_into !== null) {
        $S0B().CallVirtual("Write", null, binaryWriter, true);
        $S0A().CallVirtual("Write", null, binaryWriter, JSIL.ValueOfNullable(current16.toggles_into));
      } else {
        $S0B().CallVirtual("Write", null, binaryWriter, false);
      }
      if (current16.Tile$inv$value !== null) {
        $S0B().CallVirtual("Write", null, binaryWriter, true);
        $S09().CallVirtual("Write", null, binaryWriter, current16.Tile$inv$value.PhysicalObject$$name$value);
        $S09().CallVirtual("Write", null, binaryWriter, current16.Tile$inv$value.PhysicalObject$the_name$value);
        $S09().CallVirtual("Write", null, binaryWriter, current16.Tile$inv$value.PhysicalObject$a_name$value);
        $S0D().CallVirtual("Write", null, binaryWriter, current16.Tile$inv$value.PhysicalObject$symbol$value);
        $S0A().CallVirtual("Write", null, binaryWriter, current16.Tile$inv$value.PhysicalObject$color$value.valueOf());
        $S0A().CallVirtual("Write", null, binaryWriter, current16.Tile$inv$value.Item$type$value.valueOf());
        $S0A().CallVirtual("Write", null, binaryWriter, current16.Tile$inv$value.Item$quantity$value);
        $S0B().CallVirtual("Write", null, binaryWriter, current16.Tile$inv$value.Item$ignored$value);
      } else {
        $S0B().CallVirtual("Write", null, binaryWriter, false);
      }
      $S0A().CallVirtual("Write", null, binaryWriter, current16.features.get_Count());

      for (var a$9 = current16.features._items, i$9 = 0, l$9 = current16.features._size; i$9 < l$9; ($temp09 = i$9, 
          i$9 = ((i$9 + 1) | 0), 
          $temp09)) {
        var current17 = a$9[i$9];
        $S0A().CallVirtual("Write", null, binaryWriter, current17.valueOf());
      }
    }
    $S0A().CallVirtual("Write", null, binaryWriter, Q.Queue$turn$value);
    $S0A().CallVirtual("Write", null, binaryWriter, $T21().tiebreakers.get_Count());

    for (var a$a = $T21().tiebreakers._items, i$a = 0, l$a = $T21().tiebreakers._size; i$a < l$a; ($temp0A = i$a, 
        i$a = ((i$a + 1) | 0), 
        $temp0A)) {
      var current18 = a$a[i$a];
      $S0A().CallVirtual("Write", null, binaryWriter, iDMethod(current18));
    }
    $S0A().CallVirtual("Write", null, binaryWriter, Q.list.get_Count());
    var enumerator19 = $T4F().prototype.GetEnumerator.call(Q.list).MemberwiseClone();
    try {

      while (enumerator19.MoveNext()) {
        var current19 = enumerator19.get_Current();
        $S0A().CallVirtual("Write", null, binaryWriter, iDMethod(current19.Event$target$value));
        if (current19.area === null) {
          $S0A().CallVirtual("Write", null, binaryWriter, 0);
        } else {
          $S0A().CallVirtual("Write", null, binaryWriter, current19.area.get_Count());

          for (var a$b = current19.area._items, i$b = 0, l$b = current19.area._size; i$b < l$b; ($temp0B = i$b, 
              i$b = ((i$b + 1) | 0), 
              $temp0B)) {
            var current20 = a$b[i$b];
            $S0A().CallVirtual("Write", null, binaryWriter, iDMethod(current20));
          }
        }
        $S0A().CallVirtual("Write", null, binaryWriter, current19.Event$delay$value);
        $S0A().CallVirtual("Write", null, binaryWriter, current19.Event$type$value.valueOf());
        $S0A().CallVirtual("Write", null, binaryWriter, current19.Event$attr$value.valueOf());
        $S0A().CallVirtual("Write", null, binaryWriter, current19.Event$value$value);
        $S09().CallVirtual("Write", null, binaryWriter, current19.Event$msg$value);
        if (current19.msg_objs === null) {
          $S0A().CallVirtual("Write", null, binaryWriter, 0);
        } else {
          $S0A().CallVirtual("Write", null, binaryWriter, current19.msg_objs.get_Count());

          for (var a$c = current19.msg_objs._items, i$c = 0, l$c = current19.msg_objs._size; i$c < l$c; ($temp0C = i$c, 
              i$c = ((i$c + 1) | 0), 
              $temp0C)) {
            var current21 = a$c[i$c];
            $S0A().CallVirtual("Write", null, binaryWriter, iDMethod(current21));
          }
        }
        $S0A().CallVirtual("Write", null, binaryWriter, current19.Event$time_created$value);
        $S0B().CallVirtual("Write", null, binaryWriter, current19.Event$dead$value);
        $S0A().CallVirtual("Write", null, binaryWriter, current19.Event$tiebreaker$value);
      }
    } finally {
      $IM00().Call(enumerator19, null);
    }

    for (var k = 0; k < 20; k = ((k + 1) | 0)) {
      $S09().CallVirtual("Write", null, binaryWriter, B.Printed(k));
    }
    binaryWriter.Close();
    fileStream.Close();
  };

  function Global_SaveOptions () {
    var disposable = null, disposable2 = null;
    var streamWriter = $S0E().Construct("options.txt", false);
    $S0F().CallVirtual("WriteLine", null, streamWriter, "Options:");
    $S0F().CallVirtual("WriteLine", null, streamWriter, "Any line that starts with [TtFf] and a space MUST be one of the valid options(or, in the 2nd part, one of the valid tutorial tips):");
    $S0F().CallVirtual("WriteLine", null, streamWriter, "last_target autopickup no_roman_numerals hide_old_messages hide_commands never_display_tips always_reset_tips");
    var enumerator = (JSIL.GetEnumerator($T11().GetValues($T10().__Type__)));
    try {

      while ($IM01().Call(enumerator, null)) {
        var optionType = $T10().$Cast($IM02().Call(enumerator, null));
        if ($thisType.Options.get_Item(optionType)) {
          $S10().CallVirtual("Write", null, streamWriter, "t ");
        } else {
          $S10().CallVirtual("Write", null, streamWriter, "f ");
        }
        $S0F().CallVirtual("WriteLine", null, streamWriter, $T11().GetName($T10().__Type__, optionType).toLowerCase());
      }
    } finally {
      if ((disposable = $T44().$As(enumerator)) !== null) {
        $IM00().Call(disposable, null);
      }
    }
    $S0F().CallVirtual("WriteLine", null, streamWriter, "-- Tracking which tutorial tips have been displayed:");
    var enumerator2 = (JSIL.GetEnumerator($T11().GetValues($T12().__Type__)));
    try {

      while ($IM01().Call(enumerator2, null)) {
        var tutorialTopic = $T12().$Cast($IM02().Call(enumerator2, null));
        if ($T13().prototype.get_Item.call($T14().displayed, tutorialTopic)) {
          $S10().CallVirtual("Write", null, streamWriter, "t ");
        } else {
          $S10().CallVirtual("Write", null, streamWriter, "f ");
        }
        $S0F().CallVirtual("WriteLine", null, streamWriter, $T11().GetName($T12().__Type__, tutorialTopic).toLowerCase());
      }
    } finally {
      if ((disposable2 = $T44().$As(enumerator2)) !== null) {
        $IM00().Call(disposable2, null);
      }
    }
    $S0F().CallVirtual("WriteLine", null, streamWriter, "--");
    streamWriter.Close();
  };

  function Global_SetSeed (seed) {
    $thisType.r = $S11().Construct(seed);
  };

  JSIL.MakeStaticClass("Forays.Global", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:true }, "BoundsCheck", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $.Int32], []), 
      Global_BoundsCheck
    );

    $.Method({Static:true , Public:true }, "CoinFlip", 
      new JSIL.MethodSignature($.Boolean, [], []), 
      Global_CoinFlip
    );

    $.Method({Static:true , Public:true }, "EnterInt", 
      new JSIL.MethodSignature($.Int32, [], []), 
      Global_EnterInt$00
    );

    $.Method({Static:true , Public:true }, "EnterInt", 
      new JSIL.MethodSignature($.Int32, [$.Int32], []), 
      Global_EnterInt$01
    );

    $.Method({Static:true , Public:true }, "EnterString", 
      new JSIL.MethodSignature($.String, [], []), 
      Global_EnterString$02
    );

    $.Method({Static:true , Public:true }, "EnterString", 
      new JSIL.MethodSignature($.String, [$.Int32], []), 
      Global_EnterString$03
    );

    $.Method({Static:true , Public:true }, "FlushInput", 
      new JSIL.MethodSignature(null, [], []), 
      Global_FlushInput
    );

    $.Method({Static:true , Public:true }, "LoadOptions", 
      new JSIL.MethodSignature(null, [], []), 
      Global_LoadOptions
    );

    $.Method({Static:true , Public:true }, "OneIn", 
      new JSIL.MethodSignature($.Boolean, [$.Int32], []), 
      Global_OneIn
    );

    $.Method({Static:true , Public:true }, "Option", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.OptionType")], []), 
      Global_Option
    );

    $.Method({Static:true , Public:true }, "Quit", 
      new JSIL.MethodSignature(null, [], []), 
      Global_Quit
    );

    $.Method({Static:true , Public:true }, "RandomDirection", 
      new JSIL.MethodSignature($.Int32, [], []), 
      Global_RandomDirection
    );

    $.Method({Static:true , Public:true }, "Roll", 
      new JSIL.MethodSignature($.Int32, [$.Int32, $.Int32], []), 
      Global_Roll$04
    );

    $.Method({Static:true , Public:true }, "Roll", 
      new JSIL.MethodSignature($.Int32, [$.Int32], []), 
      Global_Roll$05
    );

    $.Method({Static:true , Public:true }, "RomanNumeral", 
      new JSIL.MethodSignature($.String, [$.Int32], []), 
      Global_RomanNumeral
    );

    $.Method({Static:true , Public:false}, "RomanPattern", 
      new JSIL.MethodSignature($.String, [
          $.Int32, $.Char, 
          $.Char, $.Char
        ], []), 
      Global_RomanPattern
    );

    $.Method({Static:true , Public:true }, "RotateDirection", 
      new JSIL.MethodSignature($.Int32, [$.Int32, $.Boolean], []), 
      Global_RotateDirection$06
    );

    $.Method({Static:true , Public:true }, "RotateDirection", 
      new JSIL.MethodSignature($.Int32, [
          $.Int32, $.Boolean, 
          $.Int32
        ], []), 
      Global_RotateDirection$07
    );

    $.Method({Static:true , Public:true }, "SaveGame", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.Buffer"), $asm00.TypeRef("Forays.Map"), 
          $asm00.TypeRef("Forays.Queue")
        ], []), 
      Global_SaveGame
    );

    $.Method({Static:true , Public:true }, "SaveOptions", 
      new JSIL.MethodSignature(null, [], []), 
      Global_SaveOptions
    );

    $.Method({Static:true , Public:true }, "SetSeed", 
      new JSIL.MethodSignature(null, [$.Int32], []), 
      Global_SetSeed
    );

    $.Constant({Static:true , Public:true }, "VERSION", "version 0.7.0 "); 
    $.Constant({Static:true , Public:true }, "SCREEN_H", 25); 
    $.Constant({Static:true , Public:true }, "SCREEN_W", 80); 
    $.Constant({Static:true , Public:true }, "ROWS", 22); 
    $.Constant({Static:true , Public:true }, "COLS", 66); 
    $.Constant({Static:true , Public:true }, "MAP_OFFSET_ROWS", 3); 
    $.Constant({Static:true , Public:true }, "MAP_OFFSET_COLS", 13); 
    $.Constant({Static:true , Public:true }, "MAX_LIGHT_RADIUS", 12); 
    $.Constant({Static:true , Public:true }, "MAX_INVENTORY_SIZE", 20); 
    $.Field({Static:true , Public:true }, "LINUX", $.Boolean, false); 
    $.Field({Static:true , Public:true }, "GAME_OVER", $.Boolean, false); 
    $.Field({Static:true , Public:true }, "BOSS_KILLED", $.Boolean, false); 
    $.Field({Static:true , Public:true }, "QUITTING", $.Boolean, false); 
    $.Field({Static:true , Public:true }, "SAVING", $.Boolean, false); 
    $.Field({Static:true , Public:true }, "KILLED_BY", $.String, "debugged to death"); 
    $.Field({Static:true , Public:true }, "quickstartinfo", $asm01.TypeRef("System.Collections.Generic.List`1", [$.String]), null); 
    $.Field({Static:true , Public:true }, "Options", $asm01.TypeRef("System.Collections.Generic.Dictionary`2", [$asm00.TypeRef("Forays.OptionType"), $.Boolean])); 
    $.Field({Static:true , Public:true }, "r", $asm01.TypeRef("System.Random")); 
    $.Field({Static:true , Public:true }, "titlescreen", $jsilcore.TypeRef("System.Array", [$.String])); 
    function Global__cctor () {
      $thisType.LINUX = false;
      $thisType.GAME_OVER = false;
      $thisType.BOSS_KILLED = false;
      $thisType.QUITTING = false;
      $thisType.SAVING = false;
      $thisType.KILLED_BY = "debugged to death";
      $thisType.quickstartinfo = null;
      $thisType.Options = $S00().Construct();
      $thisType.r = $S01().Construct();
      $thisType.titlescreen = JSIL.Array.New($T02(), ["                                                                                ", "                                                                                ", "        #######                                                                 ", "        #######                                                                 ", "        ##    #                                                                 ", "        ##                                                                      ", "        ##  #                                                                   ", "        #####                                                                   ", "        #####                                                                   ", "        ##  #   ###   # ##   ###    #   #   ###                                 ", "        ##     #   #  ##    #   #   #   #  #                                    ", "        ##     #   #  #     #   #    # #    ##                                  ", "        ##     #   #  #     #   #     #       #                                 ", "        ##      ###   #      ### ##   #    ###                                  ", "                                     #                                          ", "                                    #                                           ", "                                                                                ", "                                                                                ", "                         I N T O     N O R R E N D R I N                        ", "                                                                                ", "                                                                                ", "                                                                                ", "                                                                  version 0.7.0 ", "                                                             by Derrick Creamer "]);
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      new JSIL.MethodSignature(null, [], []), 
      Global__cctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.MakeDelegate("Forays.Global/IDMethod", false, []);

(function $lSaveGame$gc__AnonStorey0$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Forays.PhysicalObject)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm01.System.Collections.Generic.Dictionary$b2.Of($asm00.Forays.PhysicalObject, $asm01.System.Int32))) ();
  };

  function $lSaveGame$gc__AnonStorey0__ctor () {
  };

  function $lSaveGame$gc__AnonStorey0_$l$gm__17 (o) {
    if (o === null) {
      return 0;
    }
    if (!this.id.ContainsKey(o)) {
      this.id.Add(o, this.next_id);
      this.next_id = ((this.next_id + 1) | 0);
    }
    return this.id.get_Item(o);
  };

  JSIL.MakeClass($asm01.TypeRef("System.Object"), "Forays.Global/<SaveGame>c__AnonStorey0", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], []), 
      $lSaveGame$gc__AnonStorey0__ctor
    );

    $.Method({Static:false, Public:false}, "$l$gm__17", 
      new JSIL.MethodSignature($.Int32, [$asm00.TypeRef("Forays.PhysicalObject")], []), 
      $lSaveGame$gc__AnonStorey0_$l$gm__17
    );

    $.Field({Static:false, Public:false}, "id", $asm01.TypeRef("System.Collections.Generic.Dictionary`2", [$asm00.TypeRef("Forays.PhysicalObject"), $.Int32])); 
    $.Field({Static:false, Public:false}, "next_id", $.Int32); 
    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

(function Dict$b2$Members () {
  var $, $thisType;
  function Dict$b2__ctor$00 () {
    var $s00 = new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.Dictionary`2", [$thisType.TKey.get(this), $thisType.TValue.get(this)]), []);
    this.d = $s00.Construct();
  };

  function Dict$b2__ctor$01 (d2) {
    var $s00 = new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.Dictionary`2", [$thisType.TKey.get(this), $thisType.TValue.get(this)]), [$asm01.TypeRef("System.Collections.Generic.IDictionary`2", [$thisType.TKey.get(this), $thisType.TValue.get(this)])]);
    this.d = $s00.Construct(d2.d);
  };

  function Dict$b2_get_Item (key) {
    return (!this.d.ContainsKey(JSIL.CloneParameter($thisType.TKey.get(this), key)) ? ($thisType.TValue.get(this).IsValueType ? JSIL.CreateInstanceOfType($thisType.TValue.get(this)) : null) : this.d.get_Item(key));
  };

  function Dict$b2_set_Item (key, value) {
    this.d.set_Item(key, value);
  };

  JSIL.MakeClass($asm01.TypeRef("System.Object"), "Forays.Dict`2", true, ["TKey", "TValue"], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], []), 
      Dict$b2__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Type], []), 
      Dict$b2__ctor$01
    );

    $.Method({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature(new JSIL.GenericParameter("TValue", "Forays.Dict`2"), [new JSIL.GenericParameter("TKey", "Forays.Dict`2")], []), 
      Dict$b2_get_Item
    );

    $.Method({Static:false, Public:true }, "set_Item", 
      new JSIL.MethodSignature(null, [new JSIL.GenericParameter("TKey", "Forays.Dict`2"), new JSIL.GenericParameter("TValue", "Forays.Dict`2")], []), 
      Dict$b2_set_Item
    );

    $.Field({Static:false, Public:true }, "d", $asm01.TypeRef("System.Collections.Generic.Dictionary`2", [$.GenericParameter("TKey"), $.GenericParameter("TValue")])); 
    $.Property({Static:false, Public:true }, "Item", new JSIL.GenericParameter("TValue", "Forays.Dict`2"));

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm01.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

(function pos$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Forays.PhysicalObject)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm01.System.Void)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.pos))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Forays.Global)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm01.System.Boolean)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.pos")]), []))) ();
  };

  function pos__ctor (r, c) {
    this.row = r;
    this.col = c;
  };

  function pos_BoundsCheck () {
    return !((this.row < 0) || 
      (this.row >= 22) || 
      (this.col < 0) || (this.col >= 66));
  };

  function pos_DistanceFrom$00 (o) {
    return this.DistanceFrom(
      o.get_row(), 
      o.get_col()
    );
  };

  function pos_DistanceFrom$01 (p) {
    return this.DistanceFrom(p.row, p.col);
  };

  function pos_DistanceFrom$02 (r, c) {
    var num = (Math.abs(((r - this.row) | 0)));
    var num2 = (Math.abs(((c - this.col) | 0)));
    if (num2 > num) {
      return num2;
    }
    return num;
  };

  function pos_EstimatedEuclideanDistanceFromX10$03 (o) {
    return this.EstimatedEuclideanDistanceFromX10(
      o.get_row(), 
      o.get_col()
    );
  };

  function pos_EstimatedEuclideanDistanceFromX10$04 (p) {
    return this.EstimatedEuclideanDistanceFromX10(p.row, p.col);
  };

  function pos_EstimatedEuclideanDistanceFromX10$05 (r, c) {
    var num = (((Math.abs(((r - this.row) | 0))) * 10) | 0);
    var num2 = (((Math.abs(((c - this.col) | 0))) * 10) | 0);
    if (num2 > num) {
      return ((num2 + ((num / 2) | 0)) | 0);
    }
    return ((num + ((num2 / 2) | 0)) | 0);
  };

  function pos_PositionInDirection (dir) {
    switch (dir) {
      case 1: 
        return new $thisType(((this.row + 1) | 0), ((this.col - 1) | 0));

      case 2: 
        return new $thisType(((this.row + 1) | 0), this.col);

      case 3: 
        return new $thisType(((this.row + 1) | 0), ((this.col + 1) | 0));

      case 4: 
        return new $thisType(this.row, ((this.col - 1) | 0));

      case 5: 
        return new $thisType(this.row, this.col);

      case 6: 
        return new $thisType(this.row, ((this.col + 1) | 0));

      case 7: 
        return new $thisType(((this.row - 1) | 0), ((this.col - 1) | 0));

      case 8: 
        return new $thisType(((this.row - 1) | 0), this.col);

      case 9: 
        return new $thisType(((this.row - 1) | 0), ((this.col + 1) | 0));

      default: 
        return new $thisType(-2, -2);

    }
  };

  function pos_PositionsAtDistance (dist) {
    var list = $S00().Construct();

    for (var i = ((this.row - dist) | 0); i <= ((this.row + dist) | 0); i = ((i + 1) | 0)) {

      for (var j = ((this.col - dist) | 0); j <= ((this.col + dist) | 0); j = ((j + 1) | 0)) {
        if (!((this.DistanceFrom(i, j) !== dist) || !$T04().BoundsCheck(i, j))) {
          list.Add(new $thisType(i, j));
        }
      }
    }
    return list;
  };

  function pos_PositionsWithinDistance$06 (dist) {
    return this.PositionsWithinDistance(dist, false);
  };

  function pos_PositionsWithinDistance$07 (dist, exclude_origin) {
    var list = $S00().Construct();

    for (var i = ((this.row - dist) | 0); i <= ((this.row + dist) | 0); i = ((i + 1) | 0)) {

      for (var j = ((this.col - dist) | 0); j <= ((this.col + dist) | 0); j = ((j + 1) | 0)) {
        if (!(((i === this.row) && 
              (j === this.col) && 
              exclude_origin) || !$T04().BoundsCheck(i, j))) {
          list.Add(new $thisType(i, j));
        }
      }
    }
    return list;
  };

  JSIL.MakeStruct($asm01.TypeRef("System.ValueType"), "Forays.pos", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32], []), 
      pos__ctor
    );

    $.Method({Static:false, Public:true }, "BoundsCheck", 
      new JSIL.MethodSignature($.Boolean, [], []), 
      pos_BoundsCheck
    );

    $.Method({Static:false, Public:true }, "DistanceFrom", 
      new JSIL.MethodSignature($.Int32, [$asm00.TypeRef("Forays.PhysicalObject")], []), 
      pos_DistanceFrom$00
    );

    $.Method({Static:false, Public:true }, "DistanceFrom", 
      new JSIL.MethodSignature($.Int32, [$.Type], []), 
      pos_DistanceFrom$01
    );

    $.Method({Static:false, Public:true }, "DistanceFrom", 
      new JSIL.MethodSignature($.Int32, [$.Int32, $.Int32], []), 
      pos_DistanceFrom$02
    );

    $.Method({Static:false, Public:true }, "EstimatedEuclideanDistanceFromX10", 
      new JSIL.MethodSignature($.Int32, [$asm00.TypeRef("Forays.PhysicalObject")], []), 
      pos_EstimatedEuclideanDistanceFromX10$03
    );

    $.Method({Static:false, Public:true }, "EstimatedEuclideanDistanceFromX10", 
      new JSIL.MethodSignature($.Int32, [$.Type], []), 
      pos_EstimatedEuclideanDistanceFromX10$04
    );

    $.Method({Static:false, Public:true }, "EstimatedEuclideanDistanceFromX10", 
      new JSIL.MethodSignature($.Int32, [$.Int32, $.Int32], []), 
      pos_EstimatedEuclideanDistanceFromX10$05
    );

    $.Method({Static:false, Public:true }, "PositionInDirection", 
      new JSIL.MethodSignature($.Type, [$.Int32], []), 
      pos_PositionInDirection
    );

    $.Method({Static:false, Public:true }, "PositionsAtDistance", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$.Type]), [$.Int32], []), 
      pos_PositionsAtDistance
    );

    $.Method({Static:false, Public:true }, "PositionsWithinDistance", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$.Type]), [$.Int32], []), 
      pos_PositionsWithinDistance$06
    );

    $.Method({Static:false, Public:true }, "PositionsWithinDistance", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$.Type]), [$.Int32, $.Boolean], []), 
      pos_PositionsWithinDistance$07
    );

    $.Field({Static:false, Public:true }, "row", $.Int32); 
    $.Field({Static:false, Public:true }, "col", $.Int32); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function Extensions$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.System.Type)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm01.System.String)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Forays.Color)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Forays.colorstring)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Forays.cstr)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm01.System.Int32)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm01.System.Char)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.cstr))) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm01.System.Void)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm01.System.String))) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.Tile))) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.Forays.Tile)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.Forays.Global)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm01.System.Boolean)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm00.Forays.PhysicalObject)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm00.Forays.Actor)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.colorstring"), [$jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.cstr")])]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.cstr"), [$asm01.TypeRef("System.String"), $asm00.TypeRef("Forays.Color")]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.colorstring"), [$asm01.TypeRef("System.String"), $asm00.TypeRef("Forays.Color")]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm01.TypeRef("System.String")]), []))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), []))) ();
  };

  function Extensions_AddUnique$b1 (T, l, obj) {
    if (!l.Contains(JSIL.CloneParameter(T, obj))) {
      l.Add(JSIL.CloneParameter(T, obj));
    }
  };

  function Extensions_Any$b1 (T, l, condition) {
    var $temp00;

    for (var a$0 = l._items, i$0 = 0, l$0 = l._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = JSIL.CloneParameter(T, a$0[i$0]);
      if (condition(JSIL.CloneParameter(T, current))) {
        return true;
      }
    }
    return false;
  };

  function Extensions_Each$b1 (T, l, del) {
    var $temp00;

    for (var a$0 = l._items, i$0 = 0, l$0 = l._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = JSIL.CloneParameter(T, a$0[i$0]);
      del(JSIL.CloneParameter(T, current));
    }
  };

  function Extensions_GetColorString$00 (s) {
    return $thisType.GetColorString(s, $T02().Gray);
  };

  function Extensions_GetColorString$01 (s, color) {
    if ((s.indexOf("[") != -1)) {
      var text = s;
      var colorstring = $S00().Construct(JSIL.Array.New($T04(), 0));

      while ((text.indexOf("[") != -1)) {
        var num = (text.indexOf("["));
        var num2 = (text.indexOf("]"));
        if (num2 === -1) {
          colorstring.strings.Add($S01().Construct(text, color));
          text = "";
        } else {
          var num3 = (text.indexOf("-"));
          if (!((num3 === -1) || 
              (num3 <= num) || (num3 >= num2))) {
            colorstring.strings.Add($S01().Construct(text.substr(0, ((num + 1) | 0)), color));
            colorstring.strings.Add($S01().Construct(text.substr(((num + 1) | 0), ((((num3 - num) | 0) - 1) | 0)), $T02().Cyan));
            colorstring.strings.Add($S01().Construct("-", color));
            colorstring.strings.Add($S01().Construct(text.substr(((num3 + 1) | 0), ((((num2 - num3) | 0) - 1) | 0)), $T02().Cyan));
            colorstring.strings.Add($S01().Construct("]", color));
            text = (text.substr(((num2 + 1) | 0)));
          } else {
            colorstring.strings.Add($S01().Construct(text.substr(0, ((num + 1) | 0)), color));
            colorstring.strings.Add($S01().Construct(text.substr(((num + 1) | 0), ((((num2 - num) | 0) - 1) | 0)), $T02().Cyan));
            colorstring.strings.Add($S01().Construct("]", color));
            text = (text.substr(((num2 + 1) | 0)));
          }
        }
      }
      if (text != "") {
        colorstring.strings.Add($S01().Construct(text, color));
      }
      return colorstring;
    }
    return $S02().Construct(s, color);
  };

  function Extensions_GetWordWrappedList (s, max_length) {
    var list = $S03().Construct();

    while (s.length > max_length) {

    $loop1: 
      for (var i = max_length; i >= 0; i = ((i - 1) | 0)) {
        if (s.substr(i, 1) == " ") {
          list.Add(s.substr(0, i));
          s = (s.substr(((i + 1) | 0)));
          break $loop1;
        }
      }
    }
    list.Add(s);
    return list;
  };

  function Extensions_Last$b1 (T, l) {
    if (l.get_Count() === 0) {
      return (T.IsValueType ? JSIL.CreateInstanceOfType(T) : null);
    }
    return l.get_Item(((l.get_Count() - 1) | 0));
  };

  function Extensions_LastBeforeSolidTile (line) {
    var $temp00;
    var result = null;

  $loop0: 
    for (var a$0 = line._items, i$0 = 0, l$0 = line._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      if (!current.Tile$passable$value) {
        break $loop0;
      }
      result = current;
    }
    return result;
  };

  function Extensions_PadOuter$02 (s, totalWidth) {
    return $thisType.PadOuter(s, totalWidth, " ");
  };

  function Extensions_PadOuter$03 (s, totalWidth, paddingChar) {
    if (s.length >= totalWidth) {
      return s;
    }
    var num = ((totalWidth - s.length) | 0);
    var text = "";

    for (var i = 0; i < ((((num + 1) | 0) / 2) | 0); i = ((i + 1) | 0)) {
      text = (JSIL.ConcatString(text, paddingChar));
    }
    var text2 = "";

    for (var j = 0; j < ((num / 2) | 0); j = ((j + 1) | 0)) {
      text2 = (JSIL.ConcatString(text2, paddingChar));
    }
    return (text + s + text2);
  };

  function Extensions_PadToMapSize (s) {
    return System.String.PadRight(s, 66, ' ');
  };

  function Extensions_Random$b1 (T, l) {
    if (l.get_Count() === 0) {
      return (T.IsValueType ? JSIL.CreateInstanceOfType(T) : null);
    }
    return l.get_Item((($T0C().Roll(l.get_Count()) - 1) | 0));
  };

  function Extensions_Randomize$b1 (T, l) {
    var $s00 = new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [T]), [$asm01.TypeRef("System.Collections.Generic.IEnumerable`1", [T])]);
    var list = $s00.Construct(l);
    l.Clear();

    while (list.get_Count() > 0) {
      l.Add(JSIL.CloneParameter(T, $thisType.RemoveRandom$b1(T)(list)));
    }
  };

  function Extensions_RemoveRandom$b1 (T, l) {
    if (l.get_Count() === 0) {
      return (T.IsValueType ? JSIL.CreateInstanceOfType(T) : null);
    }
    var t = JSIL.CloneParameter(T, l.get_Item((($T0C().Roll(l.get_Count()) - 1) | 0)));
    l.Remove(JSIL.CloneParameter(T, t));
    return t;
  };

  function Extensions_RotateDirection$04 (dir, clockwise) {
    return $thisType.RotateDirection(dir, clockwise, 1);
  };

  function Extensions_RotateDirection$05 (dir, clockwise, num) {

    for (var i = 0; i < num; i = ((i + 1) | 0)) {
      switch (dir) {
        case 1: 
          dir = (!clockwise ? 2 : 4);
          break;

        case 2: 
          dir = (!clockwise ? 3 : 1);
          break;

        case 3: 
          dir = (!clockwise ? 6 : 2);
          break;

        case 4: 
          dir = (!clockwise ? 1 : 7);
          break;

        case 5: 
          break;

        case 6: 
          dir = (!clockwise ? 9 : 3);
          break;

        case 7: 
          dir = (!clockwise ? 4 : 8);
          break;

        case 8: 
          dir = (!clockwise ? 7 : 9);
          break;

        case 9: 
          dir = (!clockwise ? 8 : 6);
          break;

        default: 
          dir = 0;
          break;

      }
    }
    return dir;
  };

  function Extensions_To (line, o) {
    var $temp00;
    var list = $S04().Construct();

  $loop0: 
    for (var a$0 = line._items, i$0 = 0, l$0 = line._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      list.Add(current);
      if (!((o.get_row() !== current.get_row()) || (o.get_col() !== current.get_col()))) {
        break $loop0;
      }
    }
    return list;
  };

  function Extensions_ToFirstObstruction (line) {
    var $temp00;
    var list = $S04().Construct();
    var num = 0;

  $loop0: 
    for (var a$0 = line._items, i$0 = 0, l$0 = line._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      list.Add(current);
      if (!((num === 0) || (current.Tile$passable$value && 
            (current.actor() === null)))) {
        break $loop0;
      }
      num = ((num + 1) | 0);
    }
    return list;
  };

  function Extensions_ToFirstSolidTile (line) {
    var $temp00;
    var list = $S04().Construct();

  $loop0: 
    for (var a$0 = line._items, i$0 = 0, l$0 = line._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      list.Add(current);
      if (!current.Tile$passable$value) {
        break $loop0;
      }
    }
    return list;
  };

  function Extensions_Where$b1 (T, l, condition) {
    var $temp00;
    var $s00 = new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [T]), []);
    var list = $s00.Construct();

    for (var a$0 = l._items, i$0 = 0, l$0 = l._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = JSIL.CloneParameter(T, a$0[i$0]);
      if (condition(JSIL.CloneParameter(T, current))) {
        list.Add(JSIL.CloneParameter(T, current));
      }
    }
    return list;
  };

  function Extensions_WhereGreatest$b1 (T, l, value) {
    var $temp00;
    var $s00 = new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [T]), []);
    var list = $s00.Construct();
    var num = 0;
    var flag = true;

    for (var a$0 = l._items, i$0 = 0, l$0 = l._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = JSIL.CloneParameter(T, a$0[i$0]);
      var num2 = value(JSIL.CloneParameter(T, current));
      if (flag) {
        flag = false;
        num = num2;
        list.Add(JSIL.CloneParameter(T, current));
      } else if (num2 > num) {
        num = num2;
        list.Clear();
        list.Add(JSIL.CloneParameter(T, current));
      } else if (num2 === num) {
        list.Add(JSIL.CloneParameter(T, current));
      }
    }
    return list;
  };

  function Extensions_WhereLeast$b1 (T, l, value) {
    var $temp00;
    var $s00 = new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [T]), []);
    var list = $s00.Construct();
    var num = 0;
    var flag = true;

    for (var a$0 = l._items, i$0 = 0, l$0 = l._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = JSIL.CloneParameter(T, a$0[i$0]);
      var num2 = value(JSIL.CloneParameter(T, current));
      if (flag) {
        flag = false;
        num = num2;
        list.Add(JSIL.CloneParameter(T, current));
      } else if (num2 < num) {
        num = num2;
        list.Clear();
        list.Add(JSIL.CloneParameter(T, current));
      } else if (num2 === num) {
        list.Add(JSIL.CloneParameter(T, current));
      }
    }
    return list;
  };

  JSIL.MakeStaticClass("Forays.Extensions", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:true }, "AddUnique", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("System.Collections.Generic.List`1", ["!!0"]), "!!0"], ["T"]), 
      Extensions_AddUnique$b1
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "Any", 
      new JSIL.MethodSignature($.Boolean, [$asm01.TypeRef("System.Collections.Generic.List`1", ["!!0"]), $asm00.TypeRef("Forays.Extensions/BooleanDelegate`1", ["!!0"])], ["T"]), 
      Extensions_Any$b1
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "Each", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("System.Collections.Generic.List`1", ["!!0"]), $asm00.TypeRef("Forays.Extensions/ListDelegate`1", ["!!0"])], ["T"]), 
      Extensions_Each$b1
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "GetColorString", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.colorstring"), [$.String], []), 
      Extensions_GetColorString$00
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "GetColorString", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.colorstring"), [$.String, $asm00.TypeRef("Forays.Color")], []), 
      Extensions_GetColorString$01
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "GetWordWrappedList", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$.String]), [$.String, $.Int32], []), 
      Extensions_GetWordWrappedList
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "Last", 
      new JSIL.MethodSignature("!!0", [$asm01.TypeRef("System.Collections.Generic.List`1", ["!!0"])], ["T"]), 
      Extensions_Last$b1
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "LastBeforeSolidTile", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Tile"), [$asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")])], []), 
      Extensions_LastBeforeSolidTile
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "PadOuter", 
      new JSIL.MethodSignature($.String, [$.String, $.Int32], []), 
      Extensions_PadOuter$02
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "PadOuter", 
      new JSIL.MethodSignature($.String, [
          $.String, $.Int32, 
          $.Char
        ], []), 
      Extensions_PadOuter$03
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "PadToMapSize", 
      new JSIL.MethodSignature($.String, [$.String], []), 
      Extensions_PadToMapSize
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "Random", 
      new JSIL.MethodSignature("!!0", [$asm01.TypeRef("System.Collections.Generic.List`1", ["!!0"])], ["T"]), 
      Extensions_Random$b1
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "Randomize", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("System.Collections.Generic.List`1", ["!!0"])], ["T"]), 
      Extensions_Randomize$b1
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "RemoveRandom", 
      new JSIL.MethodSignature("!!0", [$asm01.TypeRef("System.Collections.Generic.List`1", ["!!0"])], ["T"]), 
      Extensions_RemoveRandom$b1
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "RotateDirection", 
      new JSIL.MethodSignature($.Int32, [$.Int32, $.Boolean], []), 
      Extensions_RotateDirection$04
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "RotateDirection", 
      new JSIL.MethodSignature($.Int32, [
          $.Int32, $.Boolean, 
          $.Int32
        ], []), 
      Extensions_RotateDirection$05
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "To", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), [$asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), $asm00.TypeRef("Forays.PhysicalObject")], []), 
      Extensions_To
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "ToFirstObstruction", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), [$asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")])], []), 
      Extensions_ToFirstObstruction
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "ToFirstSolidTile", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), [$asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")])], []), 
      Extensions_ToFirstSolidTile
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "Where", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", ["!!0"]), [$asm01.TypeRef("System.Collections.Generic.List`1", ["!!0"]), $asm00.TypeRef("Forays.Extensions/BooleanDelegate`1", ["!!0"])], ["T"]), 
      Extensions_Where$b1
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "WhereGreatest", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", ["!!0"]), [$asm01.TypeRef("System.Collections.Generic.List`1", ["!!0"]), $asm00.TypeRef("Forays.Extensions/IntegerDelegate`1", ["!!0"])], ["T"]), 
      Extensions_WhereGreatest$b1
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "WhereLeast", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", ["!!0"]), [$asm01.TypeRef("System.Collections.Generic.List`1", ["!!0"]), $asm00.TypeRef("Forays.Extensions/IntegerDelegate`1", ["!!0"])], ["T"]), 
      Extensions_WhereLeast$b1
    )
      .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm04.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

})();

JSIL.MakeDelegate("Forays.Extensions/ListDelegate`1", false, ["T"]);

JSIL.MakeDelegate("Forays.Extensions/BooleanDelegate`1", false, ["T"]);

JSIL.MakeDelegate("Forays.Extensions/IntegerDelegate`1", false, ["T"]);

JSIL.MakeEnum(
  "Forays.Color", true, {
    Black: 0, 
    White: 1, 
    Gray: 2, 
    Red: 3, 
    Green: 4, 
    Blue: 5, 
    Yellow: 6, 
    Magenta: 7, 
    Cyan: 8, 
    DarkGray: 9, 
    DarkRed: 10, 
    DarkGreen: 11, 
    DarkBlue: 12, 
    DarkYellow: 13, 
    DarkMagenta: 14, 
    DarkCyan: 15, 
    RandomFire: 16, 
    RandomIce: 17, 
    RandomLightning: 18, 
    RandomPrismatic: 19, 
    RandomDark: 20, 
    RandomBright: 21
  }, false
);

(function colorchar$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.System.Char)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Forays.Color)) ();
  };

  function colorchar__ctor$00 (c_, color_, bgcolor_) {
    this.color = color_;
    this.bgcolor = bgcolor_;
    this.c = c_;
  };

  function colorchar__ctor$01 (c_, color_) {
    this.color = color_;
    this.bgcolor = $T01().Black;
    this.c = c_;
  };

  function colorchar__ctor$02 (color_, bgcolor_, c_) {
    this.color = color_;
    this.bgcolor = bgcolor_;
    this.c = c_;
  };

  function colorchar__ctor$03 (color_, c_) {
    this.color = color_;
    this.bgcolor = $T01().Black;
    this.c = c_;
  };

  JSIL.MakeStruct($asm01.TypeRef("System.ValueType"), "Forays.colorchar", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Char, $asm00.TypeRef("Forays.Color"), 
          $asm00.TypeRef("Forays.Color")
        ], []), 
      colorchar__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Char, $asm00.TypeRef("Forays.Color")], []), 
      colorchar__ctor$01
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.Color"), $asm00.TypeRef("Forays.Color"), 
          $.Char
        ], []), 
      colorchar__ctor$02
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.Color"), $.Char], []), 
      colorchar__ctor$03
    );

    $.Field({Static:false, Public:true }, "color", $asm00.TypeRef("Forays.Color")); 
    $.Field({Static:false, Public:true }, "bgcolor", $asm00.TypeRef("Forays.Color")); 
    $.Field({Static:false, Public:true }, "c", $.Char); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function cstr$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Forays.Color)) ();
  };

  function cstr__ctor$00 (s_, color_) {
    this.color = color_;
    this.bgcolor = $T01().Black;
    this.s = s_;
  };

  function cstr__ctor$01 (s_, color_, bgcolor_) {
    this.color = color_;
    this.bgcolor = bgcolor_;
    this.s = s_;
  };

  function cstr__ctor$02 (color_, s_) {
    this.color = color_;
    this.bgcolor = $T01().Black;
    this.s = s_;
  };

  function cstr__ctor$03 (color_, bgcolor_, s_) {
    this.color = color_;
    this.bgcolor = bgcolor_;
    this.s = s_;
  };

  JSIL.MakeStruct($asm01.TypeRef("System.ValueType"), "Forays.cstr", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm00.TypeRef("Forays.Color")], []), 
      cstr__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm00.TypeRef("Forays.Color"), 
          $asm00.TypeRef("Forays.Color")
        ], []), 
      cstr__ctor$01
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.Color"), $.String], []), 
      cstr__ctor$02
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.Color"), $asm00.TypeRef("Forays.Color"), 
          $.String
        ], []), 
      cstr__ctor$03
    );

    $.Field({Static:false, Public:true }, "color", $asm00.TypeRef("Forays.Color")); 
    $.Field({Static:false, Public:true }, "bgcolor", $asm00.TypeRef("Forays.Color")); 
    $.Field({Static:false, Public:true }, "s", $.String); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function colorstring$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Forays.Color)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.cstr))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Forays.cstr)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize(System.Array.Of($asm00.Forays.cstr))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm01.System.Int32)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.cstr")]), []))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.cstr"), [$asm01.TypeRef("System.String"), $asm00.TypeRef("Forays.Color")]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.colorstring"), [$jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.cstr")])]))) ();
  };

  function colorstring__ctor$00 (s1, c1) {
    this.strings = $S00().Construct();
    this.strings.Add($S01().Construct(s1, c1));
  };

  function colorstring__ctor$01 (s1, c1, s2, c2) {
    this.strings = $S00().Construct();
    this.strings.Add($S01().Construct(s1, c1));
    this.strings.Add($S01().Construct(s2, c2));
  };

  function colorstring__ctor$02 (s1, c1, s2, c2, s3, c3) {
    this.strings = $S00().Construct();
    this.strings.Add($S01().Construct(s1, c1));
    this.strings.Add($S01().Construct(s2, c2));
    this.strings.Add($S01().Construct(s3, c3));
  };

  function colorstring__ctor$03 (s1, c1, s2, c2, s3, c3, s4, c4) {
    this.strings = $S00().Construct();
    this.strings.Add($S01().Construct(s1, c1));
    this.strings.Add($S01().Construct(s2, c2));
    this.strings.Add($S01().Construct(s3, c3));
    this.strings.Add($S01().Construct(s4, c4));
  };

  function colorstring__ctor$04 (s1, c1, s2, c2, s3, c3, s4, c4, s5, c5) {
    this.strings = $S00().Construct();
    this.strings.Add($S01().Construct(s1, c1));
    this.strings.Add($S01().Construct(s2, c2));
    this.strings.Add($S01().Construct(s3, c3));
    this.strings.Add($S01().Construct(s4, c4));
    this.strings.Add($S01().Construct(s5, c5));
  };

  function colorstring__ctor$05 (s1, c1, s2, c2, s3, c3, s4, c4, s5, c5, s6, c6) {
    this.strings = $S00().Construct();
    this.strings.Add($S01().Construct(s1, c1));
    this.strings.Add($S01().Construct(s2, c2));
    this.strings.Add($S01().Construct(s3, c3));
    this.strings.Add($S01().Construct(s4, c4));
    this.strings.Add($S01().Construct(s5, c5));
    this.strings.Add($S01().Construct(s6, c6));
  };

  function colorstring__ctor$06 (cstrs) {
    this.strings = $S00().Construct();
    if (!((cstrs === null) || (cstrs.length <= 0))) {

      for (var i = 0; i < cstrs.length; i = ((i + 1) | 0)) {
        var item = cstrs[i].MemberwiseClone();
        this.strings.Add(item.MemberwiseClone());
      }
    }
  };

  function colorstring_Length () {
    var $temp00;
    var num = 0;

    for (var a$0 = this.strings._items, i$0 = 0, l$0 = this.strings._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0].MemberwiseClone();
      num = ((num + current.s.length) | 0);
    }
    return num;
  };

  function colorstring_op_Addition (one, two) {
    var $temp00, $temp01;
    var colorstring = $S02().Construct(JSIL.Array.New($T03(), 0));

    for (var a$0 = one.strings._items, i$0 = 0, l$0 = one.strings._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0].MemberwiseClone();
      colorstring.strings.Add(current.MemberwiseClone());
    }

    for (var a$1 = two.strings._items, i$1 = 0, l$1 = two.strings._size; i$1 < l$1; ($temp01 = i$1, 
        i$1 = ((i$1 + 1) | 0), 
        $temp01)) {
      var current2 = a$1[i$1].MemberwiseClone();
      colorstring.strings.Add(current2.MemberwiseClone());
    }
    return colorstring;
  };

  JSIL.MakeClass($asm01.TypeRef("System.Object"), "Forays.colorstring", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm00.TypeRef("Forays.Color")], []), 
      colorstring__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm00.TypeRef("Forays.Color"), 
          $.String, $asm00.TypeRef("Forays.Color")
        ], []), 
      colorstring__ctor$01
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm00.TypeRef("Forays.Color"), 
          $.String, $asm00.TypeRef("Forays.Color"), 
          $.String, $asm00.TypeRef("Forays.Color")
        ], []), 
      colorstring__ctor$02
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm00.TypeRef("Forays.Color"), 
          $.String, $asm00.TypeRef("Forays.Color"), 
          $.String, $asm00.TypeRef("Forays.Color"), 
          $.String, $asm00.TypeRef("Forays.Color")
        ], []), 
      colorstring__ctor$03
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm00.TypeRef("Forays.Color"), 
          $.String, $asm00.TypeRef("Forays.Color"), 
          $.String, $asm00.TypeRef("Forays.Color"), 
          $.String, $asm00.TypeRef("Forays.Color"), 
          $.String, $asm00.TypeRef("Forays.Color")
        ], []), 
      colorstring__ctor$04
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm00.TypeRef("Forays.Color"), 
          $.String, $asm00.TypeRef("Forays.Color"), 
          $.String, $asm00.TypeRef("Forays.Color"), 
          $.String, $asm00.TypeRef("Forays.Color"), 
          $.String, $asm00.TypeRef("Forays.Color"), 
          $.String, $asm00.TypeRef("Forays.Color")
        ], []), 
      colorstring__ctor$05
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.cstr")])], []), 
      colorstring__ctor$06
    );

    $.Method({Static:false, Public:true }, "Length", 
      new JSIL.MethodSignature($.Int32, [], []), 
      colorstring_Length
    );

    $.Method({Static:true , Public:true }, "op_Addition", 
      new JSIL.MethodSignature($.Type, [$.Type, $.Type], []), 
      colorstring_op_Addition
    );

    $.Field({Static:false, Public:true }, "strings", $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.cstr")])); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function Screen$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.System.Void)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm01.System.Char)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm01.System.String)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Forays.colorchar)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm01.System.Int32)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize(System.Array.Of($asm00.Forays.colorchar))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Forays.Color)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm01.System.Console)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.Tile))) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.colorchar))) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.Forays.Tile)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.Forays.PhysicalObject)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm01.System.Threading.Thread)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm01.System.Boolean)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.pos))) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm00.Forays.pos)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm00.Forays.Extensions)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm00.Forays.Global)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm01.System.ConsoleColor)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm00.Forays.cstr)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm01.System.Object)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.colorstring))) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm00.Forays.colorstring)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.colorchar")]), []))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.colorchar")
      ], []))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm01.TypeRef("System.Int32")], []))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Int32"), [$asm00.TypeRef("Forays.PhysicalObject")], []))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.colorchar")
      ], []))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.pos")]), $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.colorchar")]), 
        $asm01.TypeRef("System.Int32")
      ], []))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.pos")]), $asm00.TypeRef("Forays.colorchar"), 
        $asm01.TypeRef("System.Int32")
      ], []))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.colorchar"), [$asm01.TypeRef("System.Char"), $asm00.TypeRef("Forays.Color")]))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.pos")]), []))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.pos")]), $asm00.TypeRef("Forays.colorchar")], []))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.colorchar"), [$asm00.TypeRef("Forays.Color"), $asm01.TypeRef("System.Char")]))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.cstr")
      ], []))) ();
  };
  var $S0C = function () {
    return ($S0C = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.colorstring")
      ], []))) ();
  };
  var $S0D = function () {
    return ($S0D = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm01.TypeRef("System.String"), $asm00.TypeRef("Forays.Color"), 
        $asm00.TypeRef("Forays.Color")
      ], []))) ();
  };
  var $S0E = function () {
    return ($S0E = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.cstr")
      ], []))) ();
  };
  var $S0F = function () {
    return ($S0F = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.cstr")
      ], []))) ();
  };
  var $S10 = function () {
    return ($S10 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.cstr"), [$asm00.TypeRef("Forays.Color"), $asm01.TypeRef("System.String")]))) ();
  };
  var $S11 = function () {
    return ($S11 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.cstr"), [$asm01.TypeRef("System.String"), $asm00.TypeRef("Forays.Color")]))) ();
  };

  function Screen_AnimateBeam$00 (list, ch) {
    $thisType.AnimateBeam(list, ch, 50);
  };

  function Screen_AnimateBeam$01 (list, ch, duration) {
    var $temp00, $temp01, $temp02;
    $T07().set_CursorVisible(false);
    list.RemoveAt(0);
    var list2 = $S00().Construct();

    for (var a$0 = list._items, i$0 = 0, l$0 = list._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      list2.Add($thisType.MapChar(
          current.get_row(), 
          current.get_col()
        ).MemberwiseClone());
      $S01().CallStatic($thisType, "WriteMapChar", null, 
        current.get_row(), 
        current.get_col(), 
        ch
      );
      $S02().CallStatic($T0C(), "Sleep", null, duration);
    }
    var num = 0;

    for (var a$1 = list._items, i$1 = 0, l$1 = list._size; i$1 < l$1; ($temp01 = i$1, 
        i$1 = ((i$1 + 1) | 0), 
        $temp01)) {
      var current2 = a$1[i$1];
      $S01().CallStatic($thisType, "WriteMapChar", null, 
        current2.get_row(), 
        current2.get_col(), 
        list2.get_Item(($temp02 = num, 
            num = ((num + 1) | 0), 
            $temp02)).MemberwiseClone()
      );
    }
    $T07().set_CursorVisible(true);
  };

  function Screen_AnimateBoltBeam$02 (list, color) {
    $thisType.AnimateBoltBeam(list, color, 50);
  };

  function Screen_AnimateBoltBeam$03 (list, color, duration) {
    var $temp00, $temp01, $temp02;
    var ch = new ($T03())();
    $T07().set_CursorVisible(false);
    ch.color = color;
    ch.bgcolor = $T06().Black;
    ch.c = "!";
    switch ($S03().CallVirtual("DirectionOf", null, list.get_Item(0), list.get_Item(((list.get_Count() - 1) | 0)))) {
      case 1: 
      case 9: 
        ch.c = "/";
        break;

      case 2: 
      case 8: 
        ch.c = "|";
        break;

      case 3: 
      case 7: 
        ch.c = "\\";
        break;

      case 4: 
      case 6: 
        ch.c = "-";
        break;

    }
    list.RemoveAt(0);
    var list2 = $S00().Construct();

    for (var a$0 = list._items, i$0 = 0, l$0 = list._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      list2.Add($thisType.MapChar(
          current.get_row(), 
          current.get_col()
        ).MemberwiseClone());
      $S01().CallStatic($thisType, "WriteMapChar", null, 
        current.get_row(), 
        current.get_col(), 
        ch.MemberwiseClone()
      );
      $S02().CallStatic($T0C(), "Sleep", null, duration);
    }
    var num = 0;

    for (var a$1 = list._items, i$1 = 0, l$1 = list._size; i$1 < l$1; ($temp01 = i$1, 
        i$1 = ((i$1 + 1) | 0), 
        $temp01)) {
      var current2 = a$1[i$1];
      $S01().CallStatic($thisType, "WriteMapChar", null, 
        current2.get_row(), 
        current2.get_col(), 
        list2.get_Item(($temp02 = num, 
            num = ((num + 1) | 0), 
            $temp02)).MemberwiseClone()
      );
    }
    $T07().set_CursorVisible(true);
  };

  function Screen_AnimateBoltProjectile$04 (list, color) {
    $thisType.AnimateBoltProjectile(list, color, 50);
  };

  function Screen_AnimateBoltProjectile$05 (list, color, duration) {
    var $temp00;
    var ch = new ($T03())();
    $T07().set_CursorVisible(false);
    ch.color = color;
    ch.bgcolor = $T06().Black;
    ch.c = "!";
    switch ($S03().CallVirtual("DirectionOf", null, list.get_Item(0), list.get_Item(((list.get_Count() - 1) | 0)))) {
      case 1: 
      case 9: 
        ch.c = "/";
        break;

      case 2: 
      case 8: 
        ch.c = "|";
        break;

      case 3: 
      case 7: 
        ch.c = "\\";
        break;

      case 4: 
      case 6: 
        ch.c = "-";
        break;

    }
    list.RemoveAt(0);

    for (var a$0 = list._items, i$0 = 0, l$0 = list._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      $thisType.AnimateMapCell(
        current.get_row(), 
        current.get_col(), 
        ch.MemberwiseClone(), 
        duration
      );
    }
    $T07().set_CursorVisible(true);
  };

  function Screen_AnimateCell (r, c, ch, duration) {
    var ch2 = $thisType.memory.Get(r, c);
    $S04().CallStatic($thisType, "WriteChar", null, r, c, ch);
    $S02().CallStatic($T0C(), "Sleep", null, duration);
    $S04().CallStatic($thisType, "WriteChar", null, r, c, ch2.MemberwiseClone());
  };

  function Screen_AnimateExplosion$06 (obj, radius, ch) {
    $thisType.AnimateExplosion(
      obj, 
      radius, 
      ch, 
      50, 
      false
    );
  };

  function Screen_AnimateExplosion$07 (obj, radius, ch, single_frame) {
    $thisType.AnimateExplosion(
      obj, 
      radius, 
      ch, 
      50, 
      single_frame
    );
  };

  function Screen_AnimateExplosion$08 (obj, radius, ch, duration) {
    $thisType.AnimateExplosion(
      obj, 
      radius, 
      ch, 
      duration, 
      false
    );
  };

  function Screen_AnimateExplosion$09 (obj, radius, ch, duration, single_frame) {
    var $temp00, $temp01;
    $T07().set_CursorVisible(false);
    var array = JSIL.MultidimensionalArray.New($T03(), ((((radius * 2) | 0) + 1) | 0), ((((radius * 2) | 0) + 1) | 0));

    for (var i = 0; i <= ((radius * 2) | 0); i = ((i + 1) | 0)) {

      for (var j = 0; j <= ((radius * 2) | 0); j = ((j + 1) | 0)) {
        if ($thisType.MapBoundsCheck(
            ((((obj.get_row() - radius) | 0) + i) | 0), 
            ((((obj.get_col() - radius) | 0) + j) | 0)
          )) {
          array.GetReference(i, j).set($thisType.MapChar(
              ((((obj.get_row() - radius) | 0) + i) | 0), 
              ((((obj.get_col() - radius) | 0) + j) | 0)
            ).MemberwiseClone());
        }
      }
    }
    if (!single_frame) {

      for (var k = 0; k <= radius; k = ((k + 1) | 0)) {

        for (var a$0 = obj.TilesAtDistance(k)._items, i$0 = 0, l$0 = obj.TilesAtDistance(k)._size; i$0 < l$0; ($temp00 = i$0, 
            i$0 = ((i$0 + 1) | 0), 
            $temp00)) {
          var current = a$0[i$0];
          $S01().CallStatic($thisType, "WriteMapChar", null, 
            current.get_row(), 
            current.get_col(), 
            ch.MemberwiseClone()
          );
        }
        $S02().CallStatic($T0C(), "Sleep", null, duration);
      }
    } else {

      for (var a$1 = obj.TilesWithinDistance(radius)._items, i$1 = 0, l$1 = obj.TilesWithinDistance(radius)._size; i$1 < l$1; ($temp01 = i$1, 
          i$1 = ((i$1 + 1) | 0), 
          $temp01)) {
        var current2 = a$1[i$1];
        $S01().CallStatic($thisType, "WriteMapChar", null, 
          current2.get_row(), 
          current2.get_col(), 
          ch.MemberwiseClone()
        );
      }
      $S02().CallStatic($T0C(), "Sleep", null, duration);
    }

    for (var l = 0; l <= ((radius * 2) | 0); l = ((l + 1) | 0)) {

      for (var m = 0; m <= ((radius * 2) | 0); m = ((m + 1) | 0)) {
        if ($thisType.MapBoundsCheck(
            ((((obj.get_row() - radius) | 0) + l) | 0), 
            ((((obj.get_col() - radius) | 0) + m) | 0)
          )) {
          $S01().CallStatic($thisType, "WriteMapChar", null, 
            ((((obj.get_row() - radius) | 0) + l) | 0), 
            ((((obj.get_col() - radius) | 0) + m) | 0), 
            array.Get(l, m).MemberwiseClone()
          );
        }
      }
    }
    $T07().set_CursorVisible(true);
  };

  function Screen_AnimateMapCell$0A (r, c, ch) {
    $thisType.AnimateMapCell(r, c, ch, 50);
  };

  function Screen_AnimateMapCell$0B (r, c, ch, duration) {
    $thisType.AnimateCell(((r + 3) | 0), ((c + 13) | 0), ch, duration);
  };

  function Screen_AnimateMapCells$0C (cells, chars) {
    $S05().CallStatic($thisType, "AnimateMapCells", null, cells, chars, 50);
  };

  function Screen_AnimateMapCells$0D (cells, chars, duration) {
    var $temp00, $temp01;
    var list = $S00().Construct();
    var num = 0;

    for (var a$0 = cells._items, i$0 = 0, l$0 = cells._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0].MemberwiseClone();
      list.Add($thisType.MapChar(current.row, current.col).MemberwiseClone());
      $S01().CallStatic($thisType, "WriteMapChar", null, current.row, current.col, chars.get_Item(num).MemberwiseClone());
      num = ((num + 1) | 0);
    }
    $S02().CallStatic($T0C(), "Sleep", null, duration);
    num = 0;

    for (var a$1 = cells._items, i$1 = 0, l$1 = cells._size; i$1 < l$1; ($temp01 = i$1, 
        i$1 = ((i$1 + 1) | 0), 
        $temp01)) {
      var current2 = a$1[i$1].MemberwiseClone();
      $S01().CallStatic($thisType, "WriteMapChar", null, current2.row, current2.col, list.get_Item(num).MemberwiseClone());
      num = ((num + 1) | 0);
    }
  };

  function Screen_AnimateMapCells$0E (cells, ch) {
    $S06().CallStatic($thisType, "AnimateMapCells", null, cells, ch, 50);
  };

  function Screen_AnimateMapCells$0F (cells, ch, duration) {
    var $temp00, $temp01;
    var list = $S00().Construct();
    var num = 0;

    for (var a$0 = cells._items, i$0 = 0, l$0 = cells._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0].MemberwiseClone();
      list.Add($thisType.MapChar(current.row, current.col).MemberwiseClone());
      $S01().CallStatic($thisType, "WriteMapChar", null, current.row, current.col, ch);
      num = ((num + 1) | 0);
    }
    $S02().CallStatic($T0C(), "Sleep", null, duration);
    num = 0;

    for (var a$1 = cells._items, i$1 = 0, l$1 = cells._size; i$1 < l$1; ($temp01 = i$1, 
        i$1 = ((i$1 + 1) | 0), 
        $temp01)) {
      var current2 = a$1[i$1].MemberwiseClone();
      $S01().CallStatic($thisType, "WriteMapChar", null, current2.row, current2.col, list.get_Item(num).MemberwiseClone());
      num = ((num + 1) | 0);
    }
  };

  function Screen_AnimateProjectile$10 (list, ch) {
    $thisType.AnimateProjectile(list, ch, 50);
  };

  function Screen_AnimateProjectile$11 (list, ch, duration) {
    var $temp00;
    $T07().set_CursorVisible(false);
    list.RemoveAt(0);

    for (var a$0 = list._items, i$0 = 0, l$0 = list._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      $thisType.AnimateMapCell(
        current.get_row(), 
        current.get_col(), 
        ch, 
        duration
      );
    }
    $T07().set_CursorVisible(true);
  };

  function Screen_AnimateStorm$12 (origin, radius, num_frames, num_per_frame, c, color) {
    $thisType.AnimateStorm(
      origin, 
      radius, 
      num_frames, 
      num_per_frame, 
      $S07().Construct(c, color)
    );
  };

  function Screen_AnimateStorm$13 (origin, radius, num_frames, num_per_frame, ch) {

    for (var i = 0; i < num_frames; i = ((i + 1) | 0)) {
      var list = $S08().Construct();
      var l = origin.PositionsWithinDistance(radius);

      for (var j = 0; j < num_per_frame; j = ((j + 1) | 0)) {
        list.Add($T10().RemoveRandom$b1($T0F())(l).MemberwiseClone());
      }
      $S09().CallStatic($thisType, "AnimateMapCells", null, list, ch);
    }
  };

  function Screen_Blank () {
    $T07().set_CursorVisible(false);

    for (var i = 0; i < 25; i = ((i + 1) | 0)) {
      $T07().SetCursorPosition(0, i);
      $T07().Write(System.String.PadRight("", 80, ' '));

      for (var j = 0; j < 80; j = ((j + 1) | 0)) {
        $thisType.memory.Get(i, j).c = " ";
        $thisType.memory.Get(i, j).color = $T06().Black;
        $thisType.memory.Get(i, j).bgcolor = $T06().Black;
      }
    }
  };

  function Screen_BlankChar () {
    return $S0A().Construct($T06().Black, " ");
  };

  function Screen_BoundsCheck (r, c) {
    return !((r < 0) || 
      (r >= 25) || 
      (c < 0) || (c >= 80));
  };

  function Screen_Char (r, c) {
    return $thisType.memory.Get(r, c);
  };

  function Screen_DrawMapBorder (ch) {

    for (var i = 0; i < 22; i = ((i + 21) | 0)) {

      for (var j = 0; j < 66; j = ((j + 1) | 0)) {
        $S01().CallStatic($thisType, "WriteMapChar", null, i, j, ch.MemberwiseClone());
      }
    }

    for (var k = 0; k < 66; k = ((k + 65) | 0)) {

      for (var l = 0; l < 22; l = ((l + 1) | 0)) {
        $S01().CallStatic($thisType, "WriteMapChar", null, l, k, ch.MemberwiseClone());
      }
    }
    $thisType.ResetColors();
  };

  function Screen_get_BackgroundColor () {
    return $T07().get_BackgroundColor();
  };

  function Screen_get_ForegroundColor () {
    if (!(!$T11().LINUX || !$thisType.terminal_bold)) {
      return $asm01.System.ConsoleColor.$Cast($T07().get_ForegroundColor() + 8);
    }
    return $T07().get_ForegroundColor();
  };

  function Screen_GetColor (c) {
    switch (c.valueOf()) {
      case 0: 
        return $T12().Black;

      case 1: 
        return $T12().White;

      case 2: 
        return $T12().Gray;

      case 3: 
        return $T12().Red;

      case 4: 
        return $T12().Green;

      case 5: 
        return $T12().Blue;

      case 6: 
        return $T12().Yellow;

      case 7: 
        return $T12().Magenta;

      case 8: 
        return $T12().Cyan;

      case 9: 
        return $T12().DarkGray;

      case 10: 
        return $T12().DarkRed;

      case 11: 
        return $T12().DarkGreen;

      case 12: 
        return $T12().DarkBlue;

      case 13: 
        return $T12().DarkYellow;

      case 14: 
        return $T12().DarkMagenta;

      case 15: 
        return $T12().DarkCyan;

      case 16: 
      case 17: 
      case 18: 
      case 19: 
      case 20: 
      case 21: 
        return $thisType.GetColor($thisType.ResolveColor(c));

      default: 
        return $T12().Black;

    }
  };

  function Screen_GetCurrentMap () {
    var array = JSIL.MultidimensionalArray.New($T03(), 22, 66);

    for (var i = 0; i < 22; i = ((i + 1) | 0)) {

      for (var j = 0; j < 66; j = ((j + 1) | 0)) {
        array.GetReference(i, j).set($thisType.MapChar(i, j).MemberwiseClone());
      }
    }
    return array;
  };

  function Screen_GetCurrentRect (row, col, height, width) {
    var array = JSIL.MultidimensionalArray.New($T03(), height, width);

    for (var i = 0; i < height; i = ((i + 1) | 0)) {

      for (var j = 0; j < width; j = ((j + 1) | 0)) {
        array.GetReference(i, j).set($thisType.Char(((row + i) | 0), ((col + j) | 0)).MemberwiseClone());
      }
    }
    return array;
  };

  function Screen_GetCurrentScreen () {
    var array = JSIL.MultidimensionalArray.New($T03(), 25, 80);

    for (var i = 0; i < 25; i = ((i + 1) | 0)) {

      for (var j = 0; j < 80; j = ((j + 1) | 0)) {
        array.GetReference(i, j).set($thisType.Char(i, j).MemberwiseClone());
      }
    }
    return array;
  };

  function Screen_MapBoundsCheck (r, c) {
    return !((r < 0) || 
      (r >= 22) || 
      (c < 0) || (c >= 66));
  };

  function Screen_MapChar (r, c) {
    return $thisType.memory.Get(((r + 3) | 0), ((c + 13) | 0));
  };

  function Screen_MapDrawWithStrings (array, row, col, height, width) {
    var s = new ($T13())();
    s.s = "";
    s.bgcolor = $T06().Black;
    s.color = $T06().Black;

    for (var i = row; i < ((row + height) | 0); i = ((i + 1) | 0)) {
      s.s = "";
      var c = col;

      for (var j = col; j < ((col + width) | 0); j = ((j + 1) | 0)) {
        var colorchar = array.Get(i, j).MemberwiseClone();
        if ($thisType.ResolveColor(colorchar.color) !== s.color) {
          if (s.s.length > 0) {
            $S0B().CallStatic($thisType, "WriteMapString", null, i, c, s.MemberwiseClone());
            s.s = "";
            s.s = (JSIL.ConcatString(s.s, colorchar.c));
            s.color = colorchar.color;
            c = j;
          } else {
            s.s = (JSIL.ConcatString(s.s, colorchar.c));
            s.color = colorchar.color;
          }
        } else {
          s.s = (JSIL.ConcatString(s.s, colorchar.c));
        }
      }
      $S0B().CallStatic($thisType, "WriteMapString", null, i, c, s.MemberwiseClone());
    }
  };

  function Screen_ResetColors () {
    if ($thisType.get_ForegroundColor() !== $T12().Gray) {
      $thisType.set_ForegroundColor($T12().Gray);
    }
    if ($thisType.get_BackgroundColor().valueOf() !== 0) {
      $thisType.set_BackgroundColor($T12().Black);
    }
  };

  function Screen_ResolveColor (c) {
    switch (c.valueOf()) {
      case 16: 
        switch ($T11().Roll(1, 3)) {
          case 1: 
            return $T06().Red;

          case 2: 
            return $T06().DarkRed;

          case 3: 
            return $T06().Yellow;

          default: 
            return $T06().Black;

        }
        break;

      case 17: 
        switch ($T11().Roll(1, 4)) {
          case 1: 
            return $T06().White;

          case 2: 
            return $T06().Cyan;

          case 3: 
            return $T06().Blue;

          case 4: 
            return $T06().DarkBlue;

          default: 
            return $T06().Black;

        }
        break;

      case 18: 
        switch ($T11().Roll(1, 4)) {
          case 1: 
            return $T06().White;

          case 2: 
            return $T06().Yellow;

          case 3: 
            return $T06().Yellow;

          case 4: 
            return $T06().DarkYellow;

          default: 
            return $T06().Black;

        }
        break;

      case 19: 
        switch ($T11().Roll(3)) {
          case 1: 
            return $T06().Red;

          case 2: 
            return $T06().Blue;

          case 3: 
            return $T06().Yellow;

          default: 
            return $T06().Black;

        }
        break;

      case 20: 
        switch ($T11().Roll(7)) {
          case 1: 
            return $T06().DarkBlue;

          case 2: 
            return $T06().DarkCyan;

          case 3: 
            return $T06().DarkGray;

          case 4: 
            return $T06().DarkGreen;

          case 5: 
            return $T06().DarkMagenta;

          case 6: 
            return $T06().DarkRed;

          case 7: 
            return $T06().DarkYellow;

          default: 
            return $T06().Black;

        }
        break;

      case 21: 
        switch ($T11().Roll(8)) {
          case 1: 
            return $T06().Blue;

          case 2: 
            return $T06().Cyan;

          case 3: 
            return $T06().Gray;

          case 4: 
            return $T06().Green;

          case 5: 
            return $T06().Magenta;

          case 6: 
            return $T06().Red;

          case 7: 
            return $T06().Yellow;

          case 8: 
            return $T06().White;

          default: 
            return $T06().Black;

        }
        break;

      default: 
        return c;

    }
  };

  function Screen_set_BackgroundColor (value) {
    if (!(!$T11().LINUX || (value < $T12().DarkGray))) {
      $T07().set_BackgroundColor($asm01.System.ConsoleColor.$Cast(value - 8));
    } else {
      $T07().set_BackgroundColor(value);
    }
  };

  function Screen_set_ForegroundColor (value) {
    if (!(!$T11().LINUX || (value < $T12().DarkGray))) {
      $T07().set_ForegroundColor($asm01.System.ConsoleColor.$Cast(value - 8));
      if (!$thisType.terminal_bold) {
        $thisType.terminal_bold = true;
        $T07().Write($thisType.bold_on);
      }
    } else {
      if (!(!$T11().LINUX || !$thisType.terminal_bold)) {
        $T07().Write($thisType.bold_off);
        $thisType.terminal_bold = false;
      }
      $T07().set_ForegroundColor(value);
    }
  };

  function Screen_StatsChar (r, c) {
    return $thisType.memory.Get(r, c);
  };

  function Screen_WriteArray (r, c, array) {
    var length = array.length0;
    var length2 = array.length1;

    for (var i = 0; i < length; i = ((i + 1) | 0)) {

      for (var j = 0; j < length2; j = ((j + 1) | 0)) {
        $S04().CallStatic($thisType, "WriteChar", null, ((i + r) | 0), ((j + c) | 0), array.Get(i, j).MemberwiseClone());
      }
    }
  };

  function Screen_WriteChar$14 (r, c, ch) {
    $S04().CallStatic($thisType, "WriteChar", null, r, c, $S0A().Construct($T06().Gray, ch));
  };

  function Screen_WriteChar$15 (r, c, ch, color) {
    $S04().CallStatic($thisType, "WriteChar", null, r, c, $S07().Construct(ch, color));
  };

  function Screen_WriteChar$16 (r, c, ch) {
    if (!$thisType.memory.Get(r, c).Object_Equals(ch)) {
      ch.color = $thisType.ResolveColor(ch.color);
      ch.bgcolor = $thisType.ResolveColor(ch.bgcolor);
      $thisType.memory.GetReference(r, c).set(ch.MemberwiseClone());
      var color = $thisType.GetColor(ch.color);
      if (color !== $thisType.get_ForegroundColor()) {
        $thisType.set_ForegroundColor(color);
      }
      color = $thisType.GetColor(ch.bgcolor);
      if (!((color === $T07().get_BackgroundColor()) && (!$T11().LINUX || 
            (ch.c.charCodeAt(0) !== " ".charCodeAt(0)) || 
            (ch.color.valueOf() !== 0)))) {
        $thisType.set_BackgroundColor(color);
      }
      $T07().SetCursorPosition(c, r);
      $T07().Write(ch.c);
    }
  };

  function Screen_WriteList (r, c, ls) {
    var $temp00;
    var num = r;

    for (var a$0 = ls._items, i$0 = 0, l$0 = ls._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      $S0C().CallStatic($thisType, "WriteString", null, num, c, current);
      num = ((num + 1) | 0);
    }
  };

  function Screen_WriteMapChar$17 (r, c, ch) {
    $S01().CallStatic($thisType, "WriteMapChar", null, r, c, $S0A().Construct($T06().Gray, ch));
  };

  function Screen_WriteMapChar$18 (r, c, ch, color) {
    $S01().CallStatic($thisType, "WriteMapChar", null, r, c, $S07().Construct(ch, color));
  };

  function Screen_WriteMapChar$19 (r, c, ch) {
    $S04().CallStatic($thisType, "WriteChar", null, ((r + 3) | 0), ((c + 13) | 0), ch);
  };

  function Screen_WriteMapString$1A (r, c, s) {
    var s2 = new ($T13())();
    s2.color = $T06().Gray;
    s2.bgcolor = $T06().Black;
    s2.s = s;
    $S0B().CallStatic($thisType, "WriteMapString", null, r, c, s2.MemberwiseClone());
  };

  function Screen_WriteMapString$1B (r, c, s, color) {
    var s2 = new ($T13())();
    s2.color = color;
    s2.bgcolor = $T06().Black;
    s2.s = s;
    $S0B().CallStatic($thisType, "WriteMapString", null, r, c, s2.MemberwiseClone());
  };

  function Screen_WriteMapString$1C (r, c, s) {
    var colorchar = new ($T03())();
    if (((66 - c) | 0) <= s.s.length) {
      s.s = (s.s.substr(0, ((66 - c) | 0)));
    }
    if (s.s.length > 0) {
      r = ((r + 3) | 0);
      c = ((c + 13) | 0);
      s.color = $thisType.ResolveColor(s.color);
      s.bgcolor = $thisType.ResolveColor(s.bgcolor);
      colorchar.color = s.color;
      colorchar.bgcolor = s.bgcolor;
      var color = $thisType.GetColor(s.color);
      if ($thisType.get_ForegroundColor() !== color) {
        $thisType.set_ForegroundColor(color);
      }
      color = $thisType.GetColor(s.bgcolor);
      if ($thisType.get_BackgroundColor() !== color) {
        $thisType.set_BackgroundColor(color);
      }
      var num = 0;
      var flag = false;
      var s2 = s.s;

      for (var i = 0; i < s2.length; i = ((i + 1) | 0)) {
        var c2 = (s2[i]);
        colorchar.c = c2;
        if (!$thisType.memory.Get(r, ((c + num) | 0)).Object_Equals(colorchar)) {
          $thisType.memory.GetReference(r, ((c + num) | 0)).set(colorchar.MemberwiseClone());
          flag = true;
        }
        num = ((num + 1) | 0);
      }
      if (flag) {
        $T07().SetCursorPosition(c, r);
        $T07().Write(s.s);
      }
    }
  };

  function Screen_WriteMapString$1D (r, c, cs) {
    var $temp00;
    var cstr = new ($T13())(), colorchar = new ($T03())();
    if (cs.Length() > 0) {
      r = ((r + 3) | 0);
      c = ((c + 13) | 0);
      var num = c;

      for (var a$0 = cs.strings._items, i$0 = 0, l$0 = cs.strings._size; i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current = a$0[i$0].MemberwiseClone();
        $S0D().Call($T13().prototype, "_ctor", null, cstr, current.s, current.color, current.bgcolor);
        if (((((num - 13) | 0) + cstr.s.length) | 0) > 66) {
          cstr.s = (cstr.s.substr(0, ((66 - ((num - 13) | 0)) | 0)));
        }
        cstr.color = $thisType.ResolveColor(cstr.color);
        cstr.bgcolor = $thisType.ResolveColor(cstr.bgcolor);
        colorchar.color = cstr.color;
        colorchar.bgcolor = cstr.bgcolor;
        var color = $thisType.GetColor(cstr.color);
        if ($thisType.get_ForegroundColor() !== color) {
          $thisType.set_ForegroundColor(color);
        }
        color = $thisType.GetColor(cstr.bgcolor);
        if ($thisType.get_BackgroundColor() !== color) {
          $thisType.set_BackgroundColor(color);
        }
        var num2 = 0;
        var flag = false;
        var s = cstr.s;

        for (var i = 0; i < s.length; i = ((i + 1) | 0)) {
          var c2 = (s[i]);
          colorchar.c = c2;
          if (!$thisType.memory.Get(r, ((num + num2) | 0)).Object_Equals(colorchar)) {
            $thisType.memory.GetReference(r, ((num + num2) | 0)).set(colorchar.MemberwiseClone());
            flag = true;
          }
          num2 = ((num2 + 1) | 0);
        }
        if (flag) {
          $T07().SetCursorPosition(num, r);
          $T07().Write(cstr.s);
        }
        num = ((num + cstr.s.length) | 0);
      }
    }
  };

  function Screen_WriteStatsChar (r, c, ch) {
    $S04().CallStatic($thisType, "WriteChar", null, r, c, ch);
  };

  function Screen_WriteStatsString$1E (r, c, s) {
    var s2 = new ($T13())();
    s2.color = $T06().Gray;
    s2.bgcolor = $T06().Black;
    s2.s = s;
    $S0E().CallStatic($thisType, "WriteStatsString", null, r, c, s2.MemberwiseClone());
  };

  function Screen_WriteStatsString$1F (r, c, s, color) {
    var s2 = new ($T13())();
    s2.color = color;
    s2.bgcolor = $T06().Black;
    s2.s = s;
    $S0E().CallStatic($thisType, "WriteStatsString", null, r, c, s2.MemberwiseClone());
  };

  function Screen_WriteStatsString$20 (r, c, s) {
    var colorchar = new ($T03())();
    if (((12 - c) | 0) <= s.s.length) {
      s.s = (s.s.substr(0, ((12 - c) | 0)));
    }
    if (s.s.length > 0) {
      s.color = $thisType.ResolveColor(s.color);
      s.bgcolor = $thisType.ResolveColor(s.bgcolor);
      colorchar.color = s.color;
      colorchar.bgcolor = s.bgcolor;
      var color = $thisType.GetColor(s.color);
      if ($thisType.get_ForegroundColor() !== color) {
        $thisType.set_ForegroundColor(color);
      }
      color = $thisType.GetColor(s.bgcolor);
      if ($thisType.get_BackgroundColor() !== color) {
        $thisType.set_BackgroundColor(color);
      }
      var num = 0;
      var s2 = s.s;

      for (var i = 0; i < s2.length; i = ((i + 1) | 0)) {
        var c2 = (s2[i]);
        colorchar.c = c2;
        if (!$thisType.memory.Get(r, ((c + num) | 0)).Object_Equals(colorchar)) {
          $thisType.memory.GetReference(r, ((c + num) | 0)).set(colorchar.MemberwiseClone());
        }
        num = ((num + 1) | 0);
      }
      $T07().SetCursorPosition(c, r);
      $T07().Write(s.s);
    }
  };

  function Screen_WriteString$21 (r, c, s) {
    $S0F().CallStatic($thisType, "WriteString", null, r, c, $S10().Construct($T06().Gray, s));
  };

  function Screen_WriteString$22 (r, c, s, color) {
    $S0F().CallStatic($thisType, "WriteString", null, r, c, $S11().Construct(s, color));
  };

  function Screen_WriteString$23 (r, c, s) {
    var colorchar = new ($T03())();
    if (((80 - c) | 0) <= s.s.length) {
      s.s = (s.s.substr(0, ((80 - c) | 0)));
    }
    if (s.s.length > 0) {
      s.color = $thisType.ResolveColor(s.color);
      s.bgcolor = $thisType.ResolveColor(s.bgcolor);
      colorchar.color = s.color;
      colorchar.bgcolor = s.bgcolor;
      var color = $thisType.GetColor(s.color);
      if ($thisType.get_ForegroundColor() !== color) {
        $thisType.set_ForegroundColor(color);
      }
      color = $thisType.GetColor(s.bgcolor);
      if ($thisType.get_BackgroundColor() !== color) {
        $thisType.set_BackgroundColor(color);
      }
      var num = 0;
      var flag = false;
      var s2 = s.s;

      for (var i = 0; i < s2.length; i = ((i + 1) | 0)) {
        var c2 = (s2[i]);
        colorchar.c = c2;
        if (!$thisType.memory.Get(r, ((c + num) | 0)).Object_Equals(colorchar)) {
          $thisType.memory.GetReference(r, ((c + num) | 0)).set(colorchar.MemberwiseClone());
          flag = true;
        }
        num = ((num + 1) | 0);
      }
      if (flag) {
        $T07().SetCursorPosition(c, r);
        $T07().Write(s.s);
      }
    }
  };

  function Screen_WriteString$24 (r, c, cs) {
    var $temp00;
    var cstr = new ($T13())(), colorchar = new ($T03())();
    if (cs.Length() > 0) {
      var num = c;

      for (var a$0 = cs.strings._items, i$0 = 0, l$0 = cs.strings._size; i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current = a$0[i$0].MemberwiseClone();
        $S0D().Call($T13().prototype, "_ctor", null, cstr, current.s, current.color, current.bgcolor);
        if (((cstr.s.length + num) | 0) > 80) {
          cstr.s = (cstr.s.substr(0, ((80 - num) | 0)));
        }
        cstr.color = $thisType.ResolveColor(cstr.color);
        cstr.bgcolor = $thisType.ResolveColor(cstr.bgcolor);
        colorchar.color = cstr.color;
        colorchar.bgcolor = cstr.bgcolor;
        var color = $thisType.GetColor(cstr.color);
        if ($thisType.get_ForegroundColor() !== color) {
          $thisType.set_ForegroundColor(color);
        }
        color = $thisType.GetColor(cstr.bgcolor);
        if ($thisType.get_BackgroundColor() !== color) {
          $thisType.set_BackgroundColor(color);
        }
        var num2 = 0;
        var flag = false;
        var s = cstr.s;

        for (var i = 0; i < s.length; i = ((i + 1) | 0)) {
          var c2 = (s[i]);
          colorchar.c = c2;
          if (!$thisType.memory.Get(r, ((num + num2) | 0)).Object_Equals(colorchar)) {
            $thisType.memory.GetReference(r, ((num + num2) | 0)).set(colorchar.MemberwiseClone());
            flag = true;
          }
          num2 = ((num2 + 1) | 0);
        }
        if (flag) {
          $T07().SetCursorPosition(num, r);
          $T07().Write(cstr.s);
        }
        num = ((num + cstr.s.length) | 0);
      }
    }
  };

  JSIL.MakeStaticClass("Forays.Screen", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:true }, "AnimateBeam", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), $asm00.TypeRef("Forays.colorchar")], []), 
      Screen_AnimateBeam$00
    );

    $.Method({Static:true , Public:true }, "AnimateBeam", 
      new JSIL.MethodSignature(null, [
          $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), $asm00.TypeRef("Forays.colorchar"), 
          $.Int32
        ], []), 
      Screen_AnimateBeam$01
    );

    $.Method({Static:true , Public:true }, "AnimateBoltBeam", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), $asm00.TypeRef("Forays.Color")], []), 
      Screen_AnimateBoltBeam$02
    );

    $.Method({Static:true , Public:true }, "AnimateBoltBeam", 
      new JSIL.MethodSignature(null, [
          $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), $asm00.TypeRef("Forays.Color"), 
          $.Int32
        ], []), 
      Screen_AnimateBoltBeam$03
    );

    $.Method({Static:true , Public:true }, "AnimateBoltProjectile", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), $asm00.TypeRef("Forays.Color")], []), 
      Screen_AnimateBoltProjectile$04
    );

    $.Method({Static:true , Public:true }, "AnimateBoltProjectile", 
      new JSIL.MethodSignature(null, [
          $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), $asm00.TypeRef("Forays.Color"), 
          $.Int32
        ], []), 
      Screen_AnimateBoltProjectile$05
    );

    $.Method({Static:true , Public:true }, "AnimateCell", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $asm00.TypeRef("Forays.colorchar"), $.Int32
        ], []), 
      Screen_AnimateCell
    );

    $.Method({Static:true , Public:true }, "AnimateExplosion", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.PhysicalObject"), $.Int32, 
          $asm00.TypeRef("Forays.colorchar")
        ], []), 
      Screen_AnimateExplosion$06
    );

    $.Method({Static:true , Public:true }, "AnimateExplosion", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.PhysicalObject"), $.Int32, 
          $asm00.TypeRef("Forays.colorchar"), $.Boolean
        ], []), 
      Screen_AnimateExplosion$07
    );

    $.Method({Static:true , Public:true }, "AnimateExplosion", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.PhysicalObject"), $.Int32, 
          $asm00.TypeRef("Forays.colorchar"), $.Int32
        ], []), 
      Screen_AnimateExplosion$08
    );

    $.Method({Static:true , Public:true }, "AnimateExplosion", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.PhysicalObject"), $.Int32, 
          $asm00.TypeRef("Forays.colorchar"), $.Int32, 
          $.Boolean
        ], []), 
      Screen_AnimateExplosion$09
    );

    $.Method({Static:true , Public:true }, "AnimateMapCell", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $asm00.TypeRef("Forays.colorchar")
        ], []), 
      Screen_AnimateMapCell$0A
    );

    $.Method({Static:true , Public:true }, "AnimateMapCell", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $asm00.TypeRef("Forays.colorchar"), $.Int32
        ], []), 
      Screen_AnimateMapCell$0B
    );

    $.Method({Static:true , Public:true }, "AnimateMapCells", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.pos")]), $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.colorchar")])], []), 
      Screen_AnimateMapCells$0C
    );

    $.Method({Static:true , Public:true }, "AnimateMapCells", 
      new JSIL.MethodSignature(null, [
          $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.pos")]), $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.colorchar")]), 
          $.Int32
        ], []), 
      Screen_AnimateMapCells$0D
    );

    $.Method({Static:true , Public:true }, "AnimateMapCells", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.pos")]), $asm00.TypeRef("Forays.colorchar")], []), 
      Screen_AnimateMapCells$0E
    );

    $.Method({Static:true , Public:true }, "AnimateMapCells", 
      new JSIL.MethodSignature(null, [
          $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.pos")]), $asm00.TypeRef("Forays.colorchar"), 
          $.Int32
        ], []), 
      Screen_AnimateMapCells$0F
    );

    $.Method({Static:true , Public:true }, "AnimateProjectile", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), $asm00.TypeRef("Forays.colorchar")], []), 
      Screen_AnimateProjectile$10
    );

    $.Method({Static:true , Public:true }, "AnimateProjectile", 
      new JSIL.MethodSignature(null, [
          $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), $asm00.TypeRef("Forays.colorchar"), 
          $.Int32
        ], []), 
      Screen_AnimateProjectile$11
    );

    $.Method({Static:true , Public:true }, "AnimateStorm", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.pos"), $.Int32, 
          $.Int32, $.Int32, 
          $.Char, $asm00.TypeRef("Forays.Color")
        ], []), 
      Screen_AnimateStorm$12
    );

    $.Method({Static:true , Public:true }, "AnimateStorm", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.pos"), $.Int32, 
          $.Int32, $.Int32, 
          $asm00.TypeRef("Forays.colorchar")
        ], []), 
      Screen_AnimateStorm$13
    );

    $.Method({Static:true , Public:true }, "Blank", 
      new JSIL.MethodSignature(null, [], []), 
      Screen_Blank
    );

    $.Method({Static:true , Public:true }, "BlankChar", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.colorchar"), [], []), 
      Screen_BlankChar
    );

    $.Method({Static:true , Public:true }, "BoundsCheck", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $.Int32], []), 
      Screen_BoundsCheck
    );

    $.Method({Static:true , Public:true }, "Char", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.colorchar"), [$.Int32, $.Int32], []), 
      Screen_Char
    );

    $.Method({Static:true , Public:true }, "DrawMapBorder", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.colorchar")], []), 
      Screen_DrawMapBorder
    );

    $.Method({Static:true , Public:true }, "get_BackgroundColor", 
      new JSIL.MethodSignature($asm01.TypeRef("System.ConsoleColor"), [], []), 
      Screen_get_BackgroundColor
    );

    $.Method({Static:true , Public:true }, "get_ForegroundColor", 
      new JSIL.MethodSignature($asm01.TypeRef("System.ConsoleColor"), [], []), 
      Screen_get_ForegroundColor
    );

    $.Method({Static:true , Public:true }, "GetColor", 
      new JSIL.MethodSignature($asm01.TypeRef("System.ConsoleColor"), [$asm00.TypeRef("Forays.Color")], []), 
      Screen_GetColor
    );

    $.Method({Static:true , Public:true }, "GetCurrentMap", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.colorchar")]), [], []), 
      Screen_GetCurrentMap
    );

    $.Method({Static:true , Public:true }, "GetCurrentRect", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.colorchar")]), [
          $.Int32, $.Int32, 
          $.Int32, $.Int32
        ], []), 
      Screen_GetCurrentRect
    );

    $.Method({Static:true , Public:true }, "GetCurrentScreen", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.colorchar")]), [], []), 
      Screen_GetCurrentScreen
    );

    $.Method({Static:true , Public:true }, "MapBoundsCheck", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $.Int32], []), 
      Screen_MapBoundsCheck
    );

    $.Method({Static:true , Public:true }, "MapChar", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.colorchar"), [$.Int32, $.Int32], []), 
      Screen_MapChar
    );

    $.Method({Static:true , Public:true }, "MapDrawWithStrings", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.colorchar")]), $.Int32, 
          $.Int32, $.Int32, 
          $.Int32
        ], []), 
      Screen_MapDrawWithStrings
    );

    $.Method({Static:true , Public:true }, "ResetColors", 
      new JSIL.MethodSignature(null, [], []), 
      Screen_ResetColors
    );

    $.Method({Static:true , Public:true }, "ResolveColor", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Color"), [$asm00.TypeRef("Forays.Color")], []), 
      Screen_ResolveColor
    );

    $.Method({Static:true , Public:true }, "set_BackgroundColor", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("System.ConsoleColor")], []), 
      Screen_set_BackgroundColor
    );

    $.Method({Static:true , Public:true }, "set_ForegroundColor", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("System.ConsoleColor")], []), 
      Screen_set_ForegroundColor
    );

    $.Method({Static:true , Public:true }, "StatsChar", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.colorchar"), [$.Int32, $.Int32], []), 
      Screen_StatsChar
    );

    $.Method({Static:true , Public:true }, "WriteArray", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.colorchar")])
        ], []), 
      Screen_WriteArray
    );

    $.Method({Static:true , Public:true }, "WriteChar", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Char
        ], []), 
      Screen_WriteChar$14
    );

    $.Method({Static:true , Public:true }, "WriteChar", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Char, $asm00.TypeRef("Forays.Color")
        ], []), 
      Screen_WriteChar$15
    );

    $.Method({Static:true , Public:true }, "WriteChar", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $asm00.TypeRef("Forays.colorchar")
        ], []), 
      Screen_WriteChar$16
    );

    $.Method({Static:true , Public:true }, "WriteList", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.colorstring")])
        ], []), 
      Screen_WriteList
    );

    $.Method({Static:true , Public:true }, "WriteMapChar", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Char
        ], []), 
      Screen_WriteMapChar$17
    );

    $.Method({Static:true , Public:true }, "WriteMapChar", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Char, $asm00.TypeRef("Forays.Color")
        ], []), 
      Screen_WriteMapChar$18
    );

    $.Method({Static:true , Public:true }, "WriteMapChar", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $asm00.TypeRef("Forays.colorchar")
        ], []), 
      Screen_WriteMapChar$19
    );

    $.Method({Static:true , Public:true }, "WriteMapString", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.String
        ], []), 
      Screen_WriteMapString$1A
    );

    $.Method({Static:true , Public:true }, "WriteMapString", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.String, $asm00.TypeRef("Forays.Color")
        ], []), 
      Screen_WriteMapString$1B
    );

    $.Method({Static:true , Public:true }, "WriteMapString", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $asm00.TypeRef("Forays.cstr")
        ], []), 
      Screen_WriteMapString$1C
    );

    $.Method({Static:true , Public:true }, "WriteMapString", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $asm00.TypeRef("Forays.colorstring")
        ], []), 
      Screen_WriteMapString$1D
    );

    $.Method({Static:true , Public:true }, "WriteStatsChar", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $asm00.TypeRef("Forays.colorchar")
        ], []), 
      Screen_WriteStatsChar
    );

    $.Method({Static:true , Public:true }, "WriteStatsString", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.String
        ], []), 
      Screen_WriteStatsString$1E
    );

    $.Method({Static:true , Public:true }, "WriteStatsString", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.String, $asm00.TypeRef("Forays.Color")
        ], []), 
      Screen_WriteStatsString$1F
    );

    $.Method({Static:true , Public:true }, "WriteStatsString", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $asm00.TypeRef("Forays.cstr")
        ], []), 
      Screen_WriteStatsString$20
    );

    $.Method({Static:true , Public:true }, "WriteString", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.String
        ], []), 
      Screen_WriteString$21
    );

    $.Method({Static:true , Public:true }, "WriteString", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.String, $asm00.TypeRef("Forays.Color")
        ], []), 
      Screen_WriteString$22
    );

    $.Method({Static:true , Public:true }, "WriteString", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $asm00.TypeRef("Forays.cstr")
        ], []), 
      Screen_WriteString$23
    );

    $.Method({Static:true , Public:true }, "WriteString", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $asm00.TypeRef("Forays.colorstring")
        ], []), 
      Screen_WriteString$24
    );

    $.Field({Static:true , Public:false}, "memory", $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.colorchar")]), function ($pi) {
        return JSIL.MultidimensionalArray.New($asm00.Forays.colorchar, 25, 80);
      }); 
    $.Field({Static:true , Public:false}, "terminal_bold", $.Boolean, false); 
    $.Field({Static:true , Public:false, ReadOnly:true }, "bold_on", $.String); 
    $.Field({Static:true , Public:false, ReadOnly:true }, "bold_off", $.String); 
    function Screen__cctor () {
      $thisType.terminal_bold = false;
      $thisType.bold_on = (JSIL.ConcatString("\x1b", "[1m"));
      $thisType.bold_off = (JSIL.ConcatString("\x1b", "[m"));
      $thisType.memory = JSIL.MultidimensionalArray.New($T03(), 25, 80);

      for (var i = 0; i < 25; i = ((i + 1) | 0)) {

        for (var j = 0; j < 80; j = ((j + 1) | 0)) {
          $thisType.memory.Get(i, j).c = " ";
          $thisType.memory.Get(i, j).color = $T06().Black;
          $thisType.memory.Get(i, j).bgcolor = $T06().Black;
        }
      }
      $thisType.set_BackgroundColor($T07().get_BackgroundColor());
      $thisType.set_ForegroundColor($T07().get_ForegroundColor());
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      new JSIL.MethodSignature(null, [], []), 
      Screen__cctor
    );

    $.Property({Static:true , Public:true }, "ForegroundColor", $asm01.TypeRef("System.ConsoleColor"));

    $.Property({Static:true , Public:true }, "BackgroundColor", $asm01.TypeRef("System.ConsoleColor"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function Spell$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Forays.SpellType)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Forays.colorstring)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Forays.Color)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.colorstring"), [$asm01.TypeRef("System.String"), $asm00.TypeRef("Forays.Color")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.colorstring"), [
        $asm01.TypeRef("System.String"), $asm00.TypeRef("Forays.Color"), 
        $asm01.TypeRef("System.String"), $asm00.TypeRef("Forays.Color")
      ]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.colorstring"), [
        $asm01.TypeRef("System.String"), $asm00.TypeRef("Forays.Color"), 
        $asm01.TypeRef("System.String"), $asm00.TypeRef("Forays.Color"), 
        $asm01.TypeRef("System.String"), $asm00.TypeRef("Forays.Color")
      ]))) ();
  };

  function Spell_Description (spell) {
    switch (spell.valueOf()) {
      case 0: 
        return $S00().Construct("  Doubles your torch's radius     ", $T02().Gray);

      case 1: 
        return $S00().Construct("  Throws flame to ignite an enemy ", $T02().Gray);

      case 2: 
        return $S00().Construct("  1d6 damage, range 1, knockback  ", $T02().Gray);

      case 3: 
        return $S00().Construct("  Encases an enemy in ice         ", $T02().Gray);

      case 4: 
        return $S00().Construct("  Teleports you a short distance  ", $T02().Gray);

      case 5: 
        return $S00().Construct("  2d6 fire damage, ranged         ", $T02().Gray);

      case 6: 
        return $S00().Construct("  Tracks one nearby living enemy  ", $T02().Gray);

      case 7: 
        return $S00().Construct("  2d6 electric, leaps between foes", $T02().Gray);

      case 8: 
        return $S00().Construct("  Grants better vision in the dark", $T02().Gray);

      case 9: 
        return $S00().Construct("  3d6 electric, radius 2 burst    ", $T02().Gray);

      case 10: 
        return $S00().Construct("  4d6 damage, range 1, stun       ", $T02().Gray);

      case 11: 
        return $S00().Construct("  Marks a spot, then returns to it", $T02().Gray);

      case 12: 
        return $S00().Construct("  3d6 cold damage, ranged         ", $T02().Gray);

      case 13: 
        return $S00().Construct("  Move to the other side of a wall", $T02().Gray);

      case 14: 
        return $S00().Construct("  3d6 fire damage, ranged radius 2", $T02().Gray);

      case 15: 
        return $S00().Construct("  3d6 magic damage, can stun foes ", $T02().Gray);

      case 16: 
        return $S00().Construct("  4d6, breaks walls, leaves rubble", $T02().Gray);

      case 17: 
        return $S00().Construct("  Three 1d6 beams knock foes back ", $T02().Gray);

      case 18: 
        return $S00().Construct("  An enemy forgets your presence  ", $T02().Gray);

      case 19: 
        return $S00().Construct("  5d6 radius 5 burst, freezes foes", $T02().Gray);

      case 20: 
        return $S00().Construct("  Increases Combat skill briefly  ", $T02().Gray);

      case 21: 
        return $S00().Construct("  Heals 4d6 damage                ", $T02().Gray);

      case 22: 
        return $S00().Construct("  Attackers take 2d6 magic damage ", $T02().Gray);

      default: 
        return $S00().Construct("  Unknown.                        ", $T02().Gray);

    }
  };

  function Spell_DescriptionWithIncreasedDamage (spell) {
    switch (spell.valueOf()) {
      case 2: 
        return $S01().Construct("  2d6", $T02().Yellow, " damage, range 1, knockback  ", $T02().Gray);

      case 5: 
        return $S01().Construct("  3d6", $T02().Yellow, " fire damage, ranged         ", $T02().Gray);

      case 7: 
        return $S01().Construct("  3d6", $T02().Yellow, " electric, leaps between foes", $T02().Gray);

      case 9: 
        return $S01().Construct("  4d6", $T02().Yellow, " electric, radius 2 burst    ", $T02().Gray);

      case 10: 
        return $S01().Construct("  5d6", $T02().Yellow, " damage, range 1, stun       ", $T02().Gray);

      case 12: 
        return $S01().Construct("  4d6", $T02().Yellow, " cold damage, ranged         ", $T02().Gray);

      case 14: 
        return $S01().Construct("  4d6", $T02().Yellow, " fire damage, ranged radius 2", $T02().Gray);

      case 15: 
        return $S01().Construct("  4d6", $T02().Yellow, " magic damage, can stun foes ", $T02().Gray);

      case 16: 
        return $S01().Construct("  5d6", $T02().Yellow, ", breaks walls, leaves rubble", $T02().Gray);

      case 17: 
        return $S02().Construct("  Three ", $T02().Gray, "2d6", $T02().Yellow, " beams knock foes back ", $T02().Gray);

      case 19: 
        return $S01().Construct("  6d6", $T02().Yellow, " radius 5 burst, freezes foes", $T02().Gray);

    }
    return $thisType.Description(spell);
  };

  function Spell_IsDamaging (spell) {
    switch (spell.valueOf()) {
      case 2: 
      case 5: 
      case 7: 
      case 9: 
      case 10: 
      case 12: 
      case 14: 
      case 15: 
      case 16: 
      case 17: 
      case 19: 
        return true;

    }
    return false;
  };

  function Spell_Level (spell) {
    switch (spell.valueOf()) {
      case 0: 
        return 1;

      case 1: 
      case 2: 
        return 2;

      case 3: 
        return 3;

      case 4: 
      case 5: 
        return 4;

      case 6: 
        return 5;

      case 7: 
        return 6;

      case 8: 
      case 9: 
        return 7;

      case 10: 
        return 8;

      case 11: 
        return 9;

      case 12: 
        return 10;

      case 13: 
        return 11;

      case 14: 
        return 13;

      case 15: 
        return 15;

      case 16: 
        return 16;

      case 17: 
        return 17;

      case 18: 
        return 18;

      case 19: 
        return 20;

      case 20: 
        return 3;

      case 21: 
        return 7;

      case 22: 
        return 9;

      default: 
        return 20;

    }
  };

  function Spell_Name (spell) {
    switch (spell.valueOf()) {
      case 0: 
        return "Shine";

      case 1: 
        return "Immolate";

      case 2: 
        return "Force palm";

      case 3: 
        return "Freeze";

      case 4: 
        return "Blink";

      case 5: 
        return "Scorch";

      case 6: 
        return "Bloodscent";

      case 7: 
        return "Lightning bolt";

      case 8: 
        return "Shadowsight";

      case 9: 
        return "Voltaic surge";

      case 10: 
        return "Magic hammer";

      case 11: 
        return "Retreat";

      case 12: 
        return "Glacial blast";

      case 13: 
        return "Passage";

      case 14: 
        return "Flashfire";

      case 15: 
        return "Sonic boom";

      case 16: 
        return "Collapse";

      case 17: 
        return "Force beam";

      case 18: 
        return "Amnesia";

      case 19: 
        return "Blizzard";

      case 20: 
        return "Bless";

      case 21: 
        return "Minor heal";

      case 22: 
        return "Holy shield";

      default: 
        return "unknown spell";

    }
  };

  JSIL.MakeStaticClass("Forays.Spell", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:true }, "Description", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.colorstring"), [$asm00.TypeRef("Forays.SpellType")], []), 
      Spell_Description
    );

    $.Method({Static:true , Public:true }, "DescriptionWithIncreasedDamage", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.colorstring"), [$asm00.TypeRef("Forays.SpellType")], []), 
      Spell_DescriptionWithIncreasedDamage
    );

    $.Method({Static:true , Public:true }, "IsDamaging", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.SpellType")], []), 
      Spell_IsDamaging
    );

    $.Method({Static:true , Public:true }, "Level", 
      new JSIL.MethodSignature($.Int32, [$asm00.TypeRef("Forays.SpellType")], []), 
      Spell_Level
    );

    $.Method({Static:true , Public:true }, "Name", 
      new JSIL.MethodSignature($.String, [$asm00.TypeRef("Forays.SpellType")], []), 
      Spell_Name
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("DungeonGen");
(function MainClass$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize(System.Array.Of($asm01.System.String))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm01.System.Exception)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm01.System.Console)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm01.System.IO.StreamWriter)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.DungeonGen.StandardDungeon)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm01.System.Boolean)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm01.System.Int32)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm01.System.ConsoleColor)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm01.System.Void)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm01.System.String)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm01.System.Object)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm01.System.ConsoleKeyInfo)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm01.System.FormatException)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize(System.Array.Of($asm01.System.Char))) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm01.System.Char)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm01.System.IO.TextWriter)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm00.DungeonGen.Dungeon)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.IO.StreamWriter"), [$asm01.TypeRef("System.String"), $asm01.TypeRef("System.Boolean")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm01.TypeRef("System.String")], []))) ();
  };

  function MainClass__ctor () {
  };

  function MainClass_Main (args, $exception) {
    $T02().set_CursorVisible(false);
    var streamWriter = $S00().Construct("dungeons.txt", true);
    var standardDungeon = new ($T04())();
    var flag = false;
    var num = 1;
    var flag2 = false;
    standardDungeon.CreateBasicMap();

    while (!flag) {
      if (flag2) {
        standardDungeon.DrawConverted();
      } else {
        standardDungeon.Draw();
      }
      $T02().SetCursorPosition(67, 0);
      $T02().Write("q: corridor");
      $T02().SetCursorPosition(67, 1);
      $T02().Write("w: room");
      $T02().SetCursorPosition(67, 2);
      $T02().Write("e: room / cor");
      $T02().SetCursorPosition(67, 4);
      if (standardDungeon.allow_all_corner_connections) {
        $T02().set_ForegroundColor($T07().Green);
      } else {
        $T02().set_ForegroundColor($T07().Red);
      }
      $T02().Write("1: corner");
      $T02().SetCursorPosition(67, 5);
      $T02().Write(" connections?");
      $T02().SetCursorPosition(67, 6);
      if (standardDungeon.rooms_overwrite_corridors) {
        $T02().set_ForegroundColor($T07().Green);
      } else {
        $T02().set_ForegroundColor($T07().Red);
      }
      $T02().Write("2: rooms");
      $T02().SetCursorPosition(67, 7);
      $T02().Write(" overwrite");
      $T02().SetCursorPosition(67, 8);
      $T02().Write(" corridors?");
      $T02().SetCursorPosition(67, 9);
      if (flag2) {
        $T02().set_ForegroundColor($T07().Green);
      } else {
        $T02().set_ForegroundColor($T07().Red);
      }
      $T02().Write("3: display");
      $T02().SetCursorPosition(67, 10);
      $T02().Write(" converted?");
      $T02().set_ForegroundColor($T07().Gray);
      $T02().SetCursorPosition(67, 12);
      $T02().Write("a: remove");
      $T02().SetCursorPosition(67, 13);
      $T02().Write(" diagonals");
      $T02().SetCursorPosition(67, 14);
      $T02().Write("s: remove");
      $T02().SetCursorPosition(67, 15);
      $T02().Write(" unconnected");
      $T02().SetCursorPosition(67, 16);
      $T02().Write("d: remove");
      $T02().SetCursorPosition(67, 17);
      $T02().Write(" dead ends");
      $T02().SetCursorPosition(67, 19);
      $T02().Write("z: reset map");
      $T02().SetCursorPosition(67, 20);
      $T02().Write("x: fill map");
      $T02().SetCursorPosition(67, 21);
      $T02().Write(" with walls");
      $T02().SetCursorPosition(0, 22);
      $T02().Write("  c: reject map if too empty   v: reject map if floors < count");
      $T02().SetCursorPosition(0, 23);
      $T02().Write(JSIL.ConcatString("  ESC: end program   b: save to file   n: choose count: ", num, "     "));
      $T02().SetCursorPosition(0, 24);
      $T02().Write("  Rooms: hjkl; Corridors: 67890;   {0} {1} {2} {3} ;  {4} {5} {6} {7} {8}    ", JSIL.Array.New($T0A(), [standardDungeon.room_height_min, standardDungeon.room_height_max, standardDungeon.room_width_min, standardDungeon.room_width_max, standardDungeon.corridor_length_min, standardDungeon.corridor_length_max, standardDungeon.corridor_chain_length_min, standardDungeon.corridor_chain_length_max, standardDungeon.corridor_length_addition]));
      switch ($T02().ReadKey(true).get_Key().valueOf()) {
        case 27: 
          flag = true;
          break;

        case 48: 
          $T02().SetCursorPosition(56, 23);
          $T02().Write("          ");
          $T02().SetCursorPosition(56, 23);
          $T02().set_CursorVisible(true);
          try {
            standardDungeon.corridor_length_addition = $T06().Parse($T02().ReadLine());
          } catch ($exception) {
            if ($T0C().$Is($exception)) {
            } else {
              throw $exception;
            }
          }
          $T02().set_CursorVisible(false);
          break;

        case 49: 
          standardDungeon.allow_all_corner_connections = !standardDungeon.allow_all_corner_connections;
          break;

        case 50: 
          standardDungeon.rooms_overwrite_corridors = !standardDungeon.rooms_overwrite_corridors;
          break;

        case 51: 
          flag2 = !flag2;
          break;

        case 54: 
          $T02().SetCursorPosition(56, 23);
          $T02().Write("          ");
          $T02().SetCursorPosition(56, 23);
          $T02().set_CursorVisible(true);
          try {
            standardDungeon.corridor_length_min = $T06().Parse($T02().ReadLine());
          } catch ($exception) {
            if ($T0C().$Is($exception)) {
            } else {
              throw $exception;
            }
          }
          $T02().set_CursorVisible(false);
          break;

        case 55: 
          $T02().SetCursorPosition(56, 23);
          $T02().Write("          ");
          $T02().SetCursorPosition(56, 23);
          $T02().set_CursorVisible(true);
          try {
            standardDungeon.corridor_length_max = $T06().Parse($T02().ReadLine());
          } catch ($exception) {
            if ($T0C().$Is($exception)) {
            } else {
              throw $exception;
            }
          }
          $T02().set_CursorVisible(false);
          break;

        case 56: 
          $T02().SetCursorPosition(56, 23);
          $T02().Write("          ");
          $T02().SetCursorPosition(56, 23);
          $T02().set_CursorVisible(true);
          try {
            standardDungeon.corridor_chain_length_min = $T06().Parse($T02().ReadLine());
          } catch ($exception) {
            if ($T0C().$Is($exception)) {
            } else {
              throw $exception;
            }
          }
          $T02().set_CursorVisible(false);
          break;

        case 57: 
          $T02().SetCursorPosition(56, 23);
          $T02().Write("          ");
          $T02().SetCursorPosition(56, 23);
          $T02().set_CursorVisible(true);
          try {
            standardDungeon.corridor_chain_length_max = $T06().Parse($T02().ReadLine());
          } catch ($exception) {
            if ($T0C().$Is($exception)) {
            } else {
              throw $exception;
            }
          }
          $T02().set_CursorVisible(false);
          break;

        case 65: 
          standardDungeon.RemoveDiagonals();
          break;

        case 66: 

          for (var i = 0; i < 22; i = ((i + 1) | 0)) {
            var text = "";

            for (var j = 0; j < 66; j = ((j + 1) | 0)) {
              if (flag2) {
                text = (JSIL.ConcatString(text, $T04().ConvertedChar(standardDungeon.map.Get(i, j))));
              } else {
                text = (JSIL.ConcatString(text, standardDungeon.map.Get(i, j)));
              }
            }
            $S01().CallVirtual("WriteLine", null, streamWriter, text);
          }
          streamWriter.WriteLine();
          streamWriter.WriteLine();
          break;

        case 67: 
          if (standardDungeon.HasLargeUnusedSpaces()) {
            standardDungeon.Clear();
          }
          break;

        case 68: 
          standardDungeon.RemoveDeadEnds();
          break;

        case 69: 

          for (var k = 0; k < num; k = ((k + 1) | 0)) {
            if ($T10().CoinFlip()) {
              standardDungeon.CreateCorridor((($T10().Roll(((standardDungeon.corridor_chain_length_max - ((standardDungeon.corridor_chain_length_min - 1) | 0)) | 0)) + ((standardDungeon.corridor_chain_length_min - 1) | 0)) | 0));
            } else {
              standardDungeon.CreateRoom();
            }
          }
          break;

        case 70: 
          standardDungeon.AddPillars(num);
          break;

        case 71: 
          standardDungeon.ApplyCaveModification();
          break;

        case 72: 
          $T02().SetCursorPosition(56, 23);
          $T02().Write("          ");
          $T02().SetCursorPosition(56, 23);
          $T02().set_CursorVisible(true);
          try {
            standardDungeon.room_height_min = $T06().Parse($T02().ReadLine());
          } catch ($exception) {
            if ($T0C().$Is($exception)) {
            } else {
              throw $exception;
            }
          }
          $T02().set_CursorVisible(false);
          break;

        case 73: 
          standardDungeon.ApplyCellularAutomataXYRule(3);
          break;

        case 74: 
          $T02().SetCursorPosition(56, 23);
          $T02().Write("          ");
          $T02().SetCursorPosition(56, 23);
          $T02().set_CursorVisible(true);
          try {
            standardDungeon.room_height_max = $T06().Parse($T02().ReadLine());
          } catch ($exception) {
            if ($T0C().$Is($exception)) {
            } else {
              throw $exception;
            }
          }
          $T02().set_CursorVisible(false);
          break;

        case 75: 
          $T02().SetCursorPosition(56, 23);
          $T02().Write("          ");
          $T02().SetCursorPosition(56, 23);
          $T02().set_CursorVisible(true);
          try {
            standardDungeon.room_width_min = $T06().Parse($T02().ReadLine());
          } catch ($exception) {
            if ($T0C().$Is($exception)) {
            } else {
              throw $exception;
            }
          }
          $T02().set_CursorVisible(false);
          break;

        case 76: 
          $T02().SetCursorPosition(56, 23);
          $T02().Write("          ");
          $T02().SetCursorPosition(56, 23);
          $T02().set_CursorVisible(true);
          try {
            standardDungeon.room_width_max = $T06().Parse($T02().ReadLine());
          } catch ($exception) {
            if ($T0C().$Is($exception)) {
            } else {
              throw $exception;
            }
          }
          $T02().set_CursorVisible(false);
          break;

        case 77: 
          standardDungeon.MarkInterestingLocations();
          break;

        case 78: 
          $T02().SetCursorPosition(56, 23);
          $T02().Write("          ");
          $T02().SetCursorPosition(56, 23);
          $T02().set_CursorVisible(true);
          try {
            num = $T06().Parse($T02().ReadLine());
          } catch ($exception) {
            if ($T0C().$Is($exception)) {
            } else {
              throw $exception;
            }
          }
          $T02().set_CursorVisible(false);
          break;

        case 79: 
          standardDungeon.CreateRandomWalls(num);
          break;

        case 80: 
          standardDungeon.ApplyCellularAutomataFourFiveRule();
          break;

        case 81: 

          for (var l = 0; l < num; l = ((l + 1) | 0)) {
            standardDungeon.CreateCorridor((($T10().Roll(((standardDungeon.corridor_chain_length_max - ((standardDungeon.corridor_chain_length_min - 1) | 0)) | 0)) + ((standardDungeon.corridor_chain_length_min - 1) | 0)) | 0));
          }
          break;

        case 82: 
          switch ((num % 10 | 0)) {
            case 1: 
              standardDungeon.Reflect(true, false);
              break;

            case 2: 
              standardDungeon.Reflect(false, true);
              break;

            case 3: 
              standardDungeon.Reflect(true, true);
              break;

          }
          break;

        case 83: 
          standardDungeon.RemoveUnconnected();
          break;

        case 84: 
          standardDungeon.Convert();
          break;

        case 85: 
          standardDungeon.ApplyRuin();
          break;

        case 86: 
          if (standardDungeon.NumberOfFloors() < num) {
            standardDungeon.Clear();
          }
          break;

        case 87: 

          for (var m = 0; m < num; m = ((m + 1) | 0)) {
            standardDungeon.CreateRoom();
          }
          break;

        case 88: 
          standardDungeon.Clear();
          break;

        case 89: 
          standardDungeon.ConvertToShowFloorType();
          break;

        case 90: 
          standardDungeon.Clear();
          standardDungeon.CreateBasicMap();
          break;

      }
    }
    if (flag2) {
      standardDungeon.DrawConverted();
    } else {
      standardDungeon.Draw();
    }
    streamWriter.Close();
    $T02().SetCursorPosition(0, 21);
    $T02().set_CursorVisible(true);
  };

  JSIL.MakeClass($asm01.TypeRef("System.Object"), "DungeonGen.MainClass", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], []), 
      MainClass__ctor
    );

    $.Method({Static:true , Public:false}, "Main", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$.String])], []), 
      MainClass_Main
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function pos$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.System.Int32)) ();
  };

  function pos__ctor (r_, c_) {
    this.r = r_;
    this.c = c_;
  };

  JSIL.MakeStruct($asm01.TypeRef("System.ValueType"), "DungeonGen.pos", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32], []), 
      pos__ctor
    );

    $.Field({Static:false, Public:true }, "r", $.Int32); 
    $.Field({Static:false, Public:true }, "c", $.Int32); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function Dungeon$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.System.Random)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm01.System.Char)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm01.System.Int32)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize(System.Array.Of($asm01.System.Char))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.DungeonGen.pos)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm01.System.Void)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm01.System.Boolean)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Random"), []))) ();
  };

  function Dungeon__ctor () {
    this.map = JSIL.MultidimensionalArray.New($T01(), 22, 66);

    for (var i = 0; i < 22; i = ((i + 1) | 0)) {

      for (var j = 0; j < 66; j = ((j + 1) | 0)) {
        this.map.Set(i, j, "#");
      }
    }
  };

  function Dungeon_BoundsCheck$00 (r, c) {
    return !((r <= 0) || 
      (r >= 21) || 
      (c <= 0) || (c >= 65));
  };

  function Dungeon_BoundsCheck$01 (r, c, H, W) {
    return !((r <= 0) || 
      (r >= ((H - 1) | 0)) || 
      (c <= 0) || (c >= ((W - 1) | 0)));
  };

  function Dungeon_CoinFlip () {
    return ($thisType.r.Next(1, 3) === 2);
  };

  function Dungeon_EstimatedEuclideanDistanceFromX10$02 (p1, p2) {
    return $thisType.EstimatedEuclideanDistanceFromX10(p1.r, p1.c, p2.r, p2.c);
  };

  function Dungeon_EstimatedEuclideanDistanceFromX10$03 (r1, c1, r2, c2) {
    var num = (((Math.abs(((r1 - r2) | 0))) * 10) | 0);
    var num2 = (((Math.abs(((c1 - c2) | 0))) * 10) | 0);
    if (num2 > num) {
      return ((num2 + ((num / 2) | 0)) | 0);
    }
    return ((num + ((num2 / 2) | 0)) | 0);
  };

  function Dungeon_Map (p) {
    return this.map.Get(p.r, p.c);
  };

  function Dungeon_PosInDir$04 (r, c, dir) {
    return $thisType.PosInDir(new ($T04())(r, c), dir);
  };

  function Dungeon_PosInDir$05 (p, dir) {
    switch (dir) {
      case 1: 
        return new ($T04())(((p.r + 1) | 0), ((p.c - 1) | 0));

      case 2: 
        return new ($T04())(((p.r + 1) | 0), p.c);

      case 3: 
        return new ($T04())(((p.r + 1) | 0), ((p.c + 1) | 0));

      case 4: 
        return new ($T04())(p.r, ((p.c - 1) | 0));

      case 5: 
        return p;

      case 6: 
        return new ($T04())(p.r, ((p.c + 1) | 0));

      case 7: 
        return new ($T04())(((p.r - 1) | 0), ((p.c - 1) | 0));

      case 8: 
        return new ($T04())(((p.r - 1) | 0), p.c);

      case 9: 
        return new ($T04())(((p.r - 1) | 0), ((p.c + 1) | 0));

      default: 
        return new ($T04())(-1, -1);

    }
  };

  function Dungeon_Roll$06 (dice, sides) {
    var num = 0;

    for (var i = 0; i < dice; i = ((i + 1) | 0)) {
      num = ((num + $thisType.r.Next(1, ((sides + 1) | 0))) | 0);
    }
    return num;
  };

  function Dungeon_Roll$07 (sides) {
    return $thisType.r.Next(1, ((sides + 1) | 0));
  };

  function Dungeon_RotateDir$08 (dir, clockwise) {
    return $thisType.RotateDir(dir, clockwise, 1);
  };

  function Dungeon_RotateDir$09 (dir, clockwise, times) {
    if (dir === 5) {
      return 5;
    }

    for (var i = 0; i < times; i = ((i + 1) | 0)) {
      switch (dir) {
        case 1: 
          dir = (!clockwise ? 2 : 4);
          break;

        case 2: 
          dir = (!clockwise ? 3 : 1);
          break;

        case 3: 
          dir = (!clockwise ? 6 : 2);
          break;

        case 4: 
          dir = (!clockwise ? 1 : 7);
          break;

        case 5: 
          return 0;

        case 6: 
          dir = (!clockwise ? 9 : 3);
          break;

        case 7: 
          dir = (!clockwise ? 4 : 8);
          break;

        case 8: 
          dir = (!clockwise ? 7 : 9);
          break;

        case 9: 
          dir = (!clockwise ? 8 : 6);
          break;

        default: 
          return 0;

      }
    }
    return dir;
  };

  JSIL.MakeClass($asm01.TypeRef("System.Object"), "DungeonGen.Dungeon", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], []), 
      Dungeon__ctor
    );

    $.Method({Static:false, Public:true }, "BoundsCheck", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $.Int32], []), 
      Dungeon_BoundsCheck$00
    );

    $.Method({Static:true , Public:true }, "BoundsCheck", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32
        ], []), 
      Dungeon_BoundsCheck$01
    );

    $.Method({Static:true , Public:true }, "CoinFlip", 
      new JSIL.MethodSignature($.Boolean, [], []), 
      Dungeon_CoinFlip
    );

    $.Method({Static:true , Public:true }, "EstimatedEuclideanDistanceFromX10", 
      new JSIL.MethodSignature($.Int32, [$asm00.TypeRef("DungeonGen.pos"), $asm00.TypeRef("DungeonGen.pos")], []), 
      Dungeon_EstimatedEuclideanDistanceFromX10$02
    );

    $.Method({Static:true , Public:true }, "EstimatedEuclideanDistanceFromX10", 
      new JSIL.MethodSignature($.Int32, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32
        ], []), 
      Dungeon_EstimatedEuclideanDistanceFromX10$03
    );

    $.Method({Static:false, Public:true }, "Map", 
      new JSIL.MethodSignature($.Char, [$asm00.TypeRef("DungeonGen.pos")], []), 
      Dungeon_Map
    );

    $.Method({Static:true , Public:true }, "PosInDir", 
      new JSIL.MethodSignature($asm00.TypeRef("DungeonGen.pos"), [
          $.Int32, $.Int32, 
          $.Int32
        ], []), 
      Dungeon_PosInDir$04
    );

    $.Method({Static:true , Public:true }, "PosInDir", 
      new JSIL.MethodSignature($asm00.TypeRef("DungeonGen.pos"), [$asm00.TypeRef("DungeonGen.pos"), $.Int32], []), 
      Dungeon_PosInDir$05
    );

    $.Method({Static:true , Public:true }, "Roll", 
      new JSIL.MethodSignature($.Int32, [$.Int32, $.Int32], []), 
      Dungeon_Roll$06
    );

    $.Method({Static:true , Public:true }, "Roll", 
      new JSIL.MethodSignature($.Int32, [$.Int32], []), 
      Dungeon_Roll$07
    );

    $.Method({Static:true , Public:true }, "RotateDir", 
      new JSIL.MethodSignature($.Int32, [$.Int32, $.Boolean], []), 
      Dungeon_RotateDir$08
    );

    $.Method({Static:true , Public:true }, "RotateDir", 
      new JSIL.MethodSignature($.Int32, [
          $.Int32, $.Boolean, 
          $.Int32
        ], []), 
      Dungeon_RotateDir$09
    );

    $.Constant({Static:true , Public:true }, "H", 22); 
    $.Constant({Static:true , Public:true }, "W", 66); 
    $.Field({Static:false, Public:true }, "map", $jsilcore.TypeRef("System.Array", [$.Char])); 
    $.Field({Static:true , Public:true }, "r", $asm01.TypeRef("System.Random")); 
    function Dungeon__cctor () {
      $thisType.r = $S00().Construct();
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      new JSIL.MethodSignature(null, [], []), 
      Dungeon__cctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function StandardDungeon$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.DungeonGen.Dungeon)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm01.System.Int32)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize(System.Array.Of($asm01.System.Char))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm01.System.Char)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.DungeonGen.pos))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.DungeonGen.pos)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm01.System.Boolean)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.DungeonGen.StandardDungeon_$lAddPillars$gc__AnonStorey1)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize(System.Array.Of($asm01.System.Char))) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm01.System.Object)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm01.System.Console)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.DungeonGen.StandardDungeon_BooleanDelegate)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.DungeonGen.StandardDungeon_RoomDelegate)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize(System.Array.Of($asm01.System.Int32))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("DungeonGen.pos")]), []))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Boolean"), [$asm01.TypeRef("System.Char")], []))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("DungeonGen.StandardDungeon/PillarArrangement")]), []))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Boolean"), [$asm00.TypeRef("DungeonGen.pos")], []))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Boolean"), [$asm00.TypeRef("DungeonGen.pos")], []))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Boolean"), [$asm01.TypeRef("System.Char")], []))) ();
  };

  function StandardDungeon__ctor () {
    this.allow_all_corner_connections = false;
    this.rooms_overwrite_corridors = true;
    this.rooms_over_rooms = false;
    this.room_height_min = 3;
    this.room_height_max = 8;
    this.room_width_min = 3;
    this.room_width_max = 10;
    this.corridor_length_min = 3;
    this.corridor_length_max = 7;
    this.corridor_length_addition = 8;
    this.corridor_chain_length_min = 1;
    this.corridor_chain_length_max = 4;
    $T00().prototype._ctor.call(this);

    for (var i = 0; i < 22; i = ((i + 1) | 0)) {

      for (var j = 0; j < 66; j = ((j + 1) | 0)) {
        this.map.Set(i, j, "#");
      }
    }
  };

  function StandardDungeon_$lApplyCaveModification$gm__1D (start_r, start_c, end_r, end_c) {
    var $temp00;
    var array = JSIL.MultidimensionalArray.New($T03(), ((((end_r - start_r) | 0) + 3) | 0), ((((end_c - start_c) | 0) + 3) | 0));
    var list = $S00().Construct();

    for (var i = 1; i < ((array.length0 - 1) | 0); i = ((i + 1) | 0)) {

      for (var j = 1; j < ((array.length1 - 1) | 0); j = ((j + 1) | 0)) {
        if (!(((i !== 1) && 
              (j !== 1) && 
              (i !== ((array.length0 - 2) | 0)) && 
              (j !== ((array.length1 - 2) | 0))) || (!$S01().CallVirtual("IsCorridor", null, this, this.map.Get(((((start_r + i) | 0) - 2) | 0), ((((start_c + j) | 0) - 1) | 0))) && 
              !$S01().CallVirtual("IsCorridor", null, this, this.map.Get(((((start_r + i) | 0) - 1) | 0), ((((start_c + j) | 0) - 2) | 0))) && 
              !$S01().CallVirtual("IsCorridor", null, this, this.map.Get(((start_r + i) | 0), ((((start_c + j) | 0) - 1) | 0))) && 
              !$S01().CallVirtual("IsCorridor", null, this, this.map.Get(((((start_r + i) | 0) - 1) | 0), ((start_c + j) | 0)))))) {
          list.Add(new ($T05())(i, j));
        }
      }
    }

  $loop2: 
    for (var num = 0; true && (num < 500); ) {
      $thisType.CreateRandomWalls(array, 25);
      $thisType.ApplyCellularAutomataXYRule(array, 3);
      $thisType.RemoveDiagonals(array);
      $thisType.RemoveDeadEnds(array);
      $thisType.RemoveUnconnected(array);
      var flag = true;

      for (var a$0 = list._items, i$0 = 0, l$0 = list._size; i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current = a$0[i$0].MemberwiseClone();
        if ($thisType.ConvertedChar(array.Get(current.r, current.c)).charCodeAt(0) !== ".".charCodeAt(0)) {
          flag = false;
        }
      }
      if (flag) {

        for (var k = start_r; k <= end_r; k = ((k + 1) | 0)) {

          for (var l = start_c; l <= end_c; l = ((l + 1) | 0)) {
            this.map.Set(k, l, array.Get(((((k - start_r) | 0) + 1) | 0), ((((l - start_c) | 0) + 1) | 0)));
          }
        }
        break $loop2;
      }
      num = ((num + 1) | 0);
      if (num > 50) {
        return false;
      }
    }
    return true;
  };

  function StandardDungeon_$lApplyCellularAutomataXYRule$gm__18 (ch) {
    return ($thisType.ConvertedChar(ch).charCodeAt(0) === "#".charCodeAt(0));
  };

  function StandardDungeon_$lApplyCellularAutomataXYRule$gm__1E (ch) {
    return ($thisType.ConvertedChar(ch).charCodeAt(0) === "#".charCodeAt(0));
  };

  function StandardDungeon_$lApplyRuin$gm__19 (ch) {
    return (($thisType.ConvertedChar(ch).charCodeAt(0) === "#".charCodeAt(0)) || ($thisType.ConvertedChar(ch).charCodeAt(0) === "&".charCodeAt(0)));
  };

  function StandardDungeon_$lApplyRuin$gm__1A (ch) {
    return ($thisType.ConvertedChar(ch).charCodeAt(0) === "#".charCodeAt(0));
  };

  function StandardDungeon_$lMarkInterestingLocations$gm__1B (start_r, start_c, end_r, end_c) {
    var $temp00, $temp01, $temp02, $temp03, $temp04, $temp05, $temp06, $temp07, $temp08, $temp09;
    var num = ((((end_r - start_r) | 0) + 1) | 0);
    var num2 = ((((end_c - start_c) | 0) + 1) | 0);
    if (!((((num % 2) | 0) !== 1) && (((num2 % 2) | 0) !== 1))) {
      var list = $S00().Construct();

      for (var i = start_r; i <= end_r; i = ((i + 1) | 0)) {

        for (var j = start_c; j <= end_c; j = ((j + 1) | 0)) {
          if (!(((i !== start_r) && 
                (j !== start_c) && 
                (i !== end_r) && 
                (j !== end_c)) || (!$S01().CallVirtual("IsCorridor", null, this, this.map.Get(((i - 1) | 0), j)) && 
                !$S01().CallVirtual("IsCorridor", null, this, this.map.Get(i, ((j - 1) | 0))) && 
                !$S01().CallVirtual("IsCorridor", null, this, this.map.Get(((i + 1) | 0), j)) && 
                !$S01().CallVirtual("IsCorridor", null, this, this.map.Get(i, ((j + 1) | 0)))))) {
            list.Add(new ($T05())(i, j));
          }
        }
      }
      var num3 = ((((start_r + end_r) | 0) / 2) | 0);
      var num4 = ((((start_c + end_c) | 0) / 2) | 0);
      var num5 = ((((((start_r + end_r) | 0) + 1) | 0) / 2) | 0);
      var num6 = ((((((start_c + end_c) | 0) + 1) | 0) / 2) | 0);
      var list2 = $S00().Construct();
      list2.Add(new ($T05())(num3, num4));
      if (num3 !== num5) {
        list2.Add(new ($T05())(num5, num4));
      } else if (num4 !== num6) {
        list2.Add(new ($T05())(num3, num6));
      }
      var list3 = $S00().Construct();
      if (((num2 % 2) | 0) === 1) {

        for (var k = start_r; k <= end_r; k = ((k + 1) | 0)) {
          list3.Add(new ($T05())(k, num4));
        }
      }
      if (((num % 2) | 0) === 1) {

        for (var l = start_c; l <= end_c; l = ((l + 1) | 0)) {
          var flag = true;

        $loop4: 
          for (var a$0 = list3._items, i$0 = 0, l$0 = list3._size; i$0 < l$0; ($temp00 = i$0, 
              i$0 = ((i$0 + 1) | 0), 
              $temp00)) {
            var current = a$0[i$0].MemberwiseClone();
            if (!((current.r !== num3) || (current.c !== l))) {
              flag = false;
              break $loop4;
            }
          }
          if (flag) {
            list3.Add(new ($T05())(num3, l));
          }
        }
      }
      var list4 = $S00().Construct();

      for (var a$1 = list3._items, i$1 = 0, l$1 = list3._size; i$1 < l$1; ($temp01 = i$1, 
          i$1 = ((i$1 + 1) | 0), 
          $temp01)) {
        var current2 = a$1[i$1].MemberwiseClone();
        var num7 = this.ForEachDirection(current2.r, current2.c, function (ch) {
            return ($thisType.ConvertedChar(ch).charCodeAt(0) === ".".charCodeAt(0));
          }, true);
        if (!(($thisType.ConvertedChar(this.Map(current2)).charCodeAt(0) === ".".charCodeAt(0)) && (num7 === 8))) {
          list4.Add(current2.MemberwiseClone());
        }
      }

      for (var a$2 = list4._items, i$2 = 0, l$2 = list4._size; i$2 < l$2; ($temp02 = i$2, 
          i$2 = ((i$2 + 1) | 0), 
          $temp02)) {
        var current3 = a$2[i$2].MemberwiseClone();
        list3.Remove(current3.MemberwiseClone());
      }
      list4.Clear();

      for (var a$3 = list._items, i$3 = 0, l$3 = list._size; i$3 < l$3; ($temp03 = i$3, 
          i$3 = ((i$3 + 1) | 0), 
          $temp03)) {
        var current4 = a$3[i$3].MemberwiseClone();
        var num8 = 0;

        for (var a$4 = list2._items, i$4 = 0, l$4 = list2._size; i$4 < l$4; ($temp04 = i$4, 
            i$4 = ((i$4 + 1) | 0), 
            $temp04)) {
          var current5 = a$4[i$4].MemberwiseClone();
          if ($T00().EstimatedEuclideanDistanceFromX10(current4.MemberwiseClone(), current5.MemberwiseClone()) > num8) {
            num8 = $T00().EstimatedEuclideanDistanceFromX10(current4.MemberwiseClone(), current5.MemberwiseClone());
          }
        }

        for (var a$5 = list3._items, i$5 = 0, l$5 = list3._size; i$5 < l$5; ($temp05 = i$5, 
            i$5 = ((i$5 + 1) | 0), 
            $temp05)) {
          var current6 = a$5[i$5].MemberwiseClone();
          if ($T00().EstimatedEuclideanDistanceFromX10(current4.MemberwiseClone(), current6.MemberwiseClone()) <= num8) {
            list4.Add(current6.MemberwiseClone());
          }
        }
      }

      for (var a$6 = list4._items, i$6 = 0, l$6 = list4._size; i$6 < l$6; ($temp06 = i$6, 
          i$6 = ((i$6 + 1) | 0), 
          $temp06)) {
        var current7 = a$6[i$6].MemberwiseClone();
        list3.Remove(current7.MemberwiseClone());
      }
      if (list3.get_Count() > 0) {
        var num9 = 0;
        var list5 = $S00().Construct();

        for (var a$7 = list3._items, i$7 = 0, l$7 = list3._size; i$7 < l$7; ($temp07 = i$7, 
            i$7 = ((i$7 + 1) | 0), 
            $temp07)) {
          var current8 = a$7[i$7].MemberwiseClone();
          var num10 = 0;

          for (var a$8 = list._items, i$8 = 0, l$8 = list._size; i$8 < l$8; ($temp08 = i$8, 
              i$8 = ((i$8 + 1) | 0), 
              $temp08)) {
            var current9 = a$8[i$8].MemberwiseClone();
            num10 = ((num10 + $T00().EstimatedEuclideanDistanceFromX10(current8.MemberwiseClone(), current9.MemberwiseClone())) | 0);
          }
          if (num10 > num9) {
            num9 = num10;
            list5.Clear();
            list5.Add(current8.MemberwiseClone());
          } else if (num10 === num9) {
            list5.Add(current8.MemberwiseClone());
          }
        }

        for (var a$9 = list5._items, i$9 = 0, l$9 = list5._size; i$9 < l$9; ($temp09 = i$9, 
            i$9 = ((i$9 + 1) | 0), 
            $temp09)) {
          var current10 = a$9[i$9].MemberwiseClone();
          this.map.Set(current10.r, current10.c, "$");
        }
      } else if (!((((num % 2) | 0) !== 1) || (((num2 % 2) | 0) !== 1))) {
        var num11 = this.ForEachDirection(num3, num4, function (ch) {
            return ($thisType.ConvertedChar(ch).charCodeAt(0) === ".".charCodeAt(0));
          }, true);
        if (!(($thisType.ConvertedChar(this.map.Get(num3, num4)).charCodeAt(0) !== ".".charCodeAt(0)) || (num11 !== 8))) {
          this.map.Set(num3, num4, "$");
        }
      }
    }
    return true;
  };

  function StandardDungeon_$lMarkInterestingLocations$gm__1F (ch) {
    return ($thisType.ConvertedChar(ch).charCodeAt(0) === ".".charCodeAt(0));
  };

  function StandardDungeon_$lMarkInterestingLocations$gm__20 (ch) {
    return ($thisType.ConvertedChar(ch).charCodeAt(0) === ".".charCodeAt(0));
  };

  function StandardDungeon_AddDoors () {

    for (var i = 0; i < 22; i = ((i + 1) | 0)) {

      for (var j = 0; j < 66; j = ((j + 1) | 0)) {
        if (!(($thisType.ConvertedChar(this.map.Get(i, j)).charCodeAt(0) !== ".".charCodeAt(0)) || (!(((this.map.Get(((i - 1) | 0), j)).charCodeAt(0) === "#".charCodeAt(0)) && 
                ((this.map.Get(((i + 1) | 0), j)).charCodeAt(0) === "#".charCodeAt(0))) && 
              (((this.map.Get(i, ((j - 1) | 0))).charCodeAt(0) !== "#".charCodeAt(0)) || 
                ((this.map.Get(i, ((j + 1) | 0))).charCodeAt(0) !== "#".charCodeAt(0)))))) {
          var flag = false;

        $loop2: 
          for (var k = 2; k <= 8; k = ((k + 2) | 0)) {
            if (!(($thisType.ConvertedChar(this.Map($T00().PosInDir(i, j, k))).charCodeAt(0) !== ".".charCodeAt(0)) || ($thisType.ConvertedChar(this.Map($T00().PosInDir($T00().PosInDir(i, j, k).MemberwiseClone(), k))).charCodeAt(0) !== ".".charCodeAt(0)))) {
              if (!((($thisType.ConvertedChar(this.Map($T00().PosInDir(
                            $T00().PosInDir(i, j, k).MemberwiseClone(), 
                            $T00().RotateDir(k, false, 2)
                          )))).charCodeAt(0) !== ".".charCodeAt(0)) || (($thisType.ConvertedChar(this.Map($T00().PosInDir(
                            $T00().PosInDir(i, j, k).MemberwiseClone(), 
                            $T00().RotateDir(k, false, 1)
                          )))).charCodeAt(0) !== ".".charCodeAt(0)))) {
                flag = true;
              }
              if (!((($thisType.ConvertedChar(this.Map($T00().PosInDir(
                            $T00().PosInDir(i, j, k).MemberwiseClone(), 
                            $T00().RotateDir(k, true, 2)
                          )))).charCodeAt(0) !== ".".charCodeAt(0)) || (($thisType.ConvertedChar(this.Map($T00().PosInDir(
                            $T00().PosInDir(i, j, k).MemberwiseClone(), 
                            $T00().RotateDir(k, true, 1)
                          )))).charCodeAt(0) !== ".".charCodeAt(0)))) {
                flag = true;
              }
            }
            if (this.Map($T00().PosInDir(i, j, k)).charCodeAt(0) === "+".charCodeAt(0)) {
              flag = false;
              break $loop2;
            }
          }
          if (!(!flag || ($T00().Roll(4) !== 4))) {
            this.map.Set(i, j, "+");
          }
        }
      }
    }
  };

  function StandardDungeon_AddFirePits () {
    var p = new ($T05())();
    var num = 0;
    var num2 = $T00().Roll(5);
    if (num2 !== 1) {
      if (num2 === 2) {
        num = (($T00().Roll(4) + 1) | 0);
      }
    } else {
      num = 1;
    }

    for (var i = 0; i < num; i = ((i + 1) | 0)) {
      var num3 = 0;
      var flag = false;

      while (!flag && (num3 < 100)) {
        var num4 = (($T00().Roll(18) + 1) | 0);
        var num5 = (($T00().Roll(62) + 1) | 0);
        if ($thisType.ConvertedChar(this.map.Get(num4, num5)).charCodeAt(0) === ".".charCodeAt(0)) {
          var flag2 = true;
          $T05().prototype._ctor.call(p, num4, num5);

        $loop2: 
          for (var j = 1; j <= 8; j = ((j + 1) | 0)) {
            var num6 = j;
            if (num6 === 5) {
              num6 = 9;
            }
            if ($thisType.ConvertedChar(this.Map($T00().PosInDir(p.MemberwiseClone(), num6))).charCodeAt(0) !== ".".charCodeAt(0)) {
              flag2 = false;
              break $loop2;
            }
          }
          if (flag2) {
            this.map.Set(num4, num5, "0");
            flag = true;
          }
        }
        num3 = ((num3 + 1) | 0);
      }
    }
  };

  function StandardDungeon_AddPillars (percent_chance_per_room) {
    var $lAddPillars$gc__AnonStorey = new ($T07())();
    $lAddPillars$gc__AnonStorey.percent_chance_per_room = percent_chance_per_room;
    $lAddPillars$gc__AnonStorey.$this = this;
    this.ForEachRoom(function (start_r, start_c, end_r, end_c) {
        if ($asm00.DungeonGen.Dungeon.Roll(100) <= this.percent_chance_per_room) {
          var num = ((((end_r - start_r) | 0) + 1) | 0);
          var num2 = ((((end_c - start_c) | 0) + 1) | 0);
          if (!((num <= 3) && (num2 <= 3))) {
            var list = $S02().Construct();
            if (!((((num % 2) | 0) !== 1) || (((num2 % 2) | 0) !== 1))) {
              list.Add($asm00.DungeonGen.StandardDungeon_PillarArrangement.Single);
            }
            if (!(((((num % 2) | 0) !== 1) && 
                  (((num2 % 2) | 0) !== 1)) || 
                (num === 4) || (num2 === 4))) {
              list.Add($asm00.DungeonGen.StandardDungeon_PillarArrangement.Row);
            }
            if (!((num < 5) || (num2 < 5))) {
              list.Add($asm00.DungeonGen.StandardDungeon_PillarArrangement.Corners);
            }
            if (!((num <= 2) || 
                (num2 <= 2) || 
                (num === 4) || (num2 === 4))) {
              list.Add($asm00.DungeonGen.StandardDungeon_PillarArrangement.Full);
            }
            if (!(!((((num2 % 2) | 0) === 1) && 
                  (num2 >= 5)) && ((((num % 2) | 0) !== 1) || 
                  (num < 5)))) {
              list.Add($asm00.DungeonGen.StandardDungeon_PillarArrangement.StatueEdges);
            }
            if (!((list.get_Count() !== 0) && !$asm00.DungeonGen.Dungeon.CoinFlip())) {
              list.Add($asm00.DungeonGen.StandardDungeon_PillarArrangement.StatueCorners);
            }
            if (list.get_Count() > 0) {
              var c = " ";
              switch ($asm00.DungeonGen.Dungeon.Roll(4)) {
                case 1: 
                case 2: 
                  c = "P";
                  break;

                case 3: 
                  c = "&";
                  break;

                case 4: 
                  c = "0";
                  break;

              }
              switch ((list.get_Item((($asm00.DungeonGen.Dungeon.Roll(list.get_Count()) - 1) | 0))).valueOf()) {
                case 0: 
                  this.$this.map.Set(((((start_r + end_r) | 0) / 2) | 0), ((((start_c + end_c) | 0) / 2) | 0), "P");
                  break;

                case 1: 
                  var num3 = 0;
                  var num4 = 0;
                  if (((num % 4) | 0) === 0) {
                    num3 = (($asm00.DungeonGen.Dungeon.Roll(2) - 1) | 0);
                  }
                  if (((num2 % 4) | 0) === 0) {
                    num4 = (($asm00.DungeonGen.Dungeon.Roll(2) - 1) | 0);
                  }
                  var num5 = ((((start_r + end_r) | 0) / 2) | 0);
                  var num6 = ((((start_c + end_c) | 0) / 2) | 0);
                  var num7 = ((((((start_r + end_r) | 0) + 1) | 0) / 2) | 0);
                  var num8 = ((((((start_c + end_c) | 0) + 1) | 0) / 2) | 0);

                  for (var i = ((((start_r + 1) | 0) + num3) | 0); i < num5; i = ((i + 2) | 0)) {

                    for (var j = ((((start_c + 1) | 0) + num4) | 0); j < num6; j = ((j + 2) | 0)) {
                      this.$this.map.Set(i, j, c);
                    }
                  }

                  for (var k = ((((start_r + 1) | 0) + num3) | 0); k < num5; k = ((k + 2) | 0)) {

                    for (var l = ((((end_c - 1) | 0) - num4) | 0); l > num8; l = ((l - 2) | 0)) {
                      this.$this.map.Set(k, l, c);
                    }
                  }

                  for (var m = ((((end_r - 1) | 0) - num3) | 0); m > num7; m = ((m - 2) | 0)) {

                    for (var n = ((((start_c + 1) | 0) + num4) | 0); n < num6; n = ((n + 2) | 0)) {
                      this.$this.map.Set(m, n, c);
                    }
                  }

                  for (var num9 = ((((end_r - 1) | 0) - num3) | 0); num9 > num7; num9 = ((num9 - 2) | 0)) {

                    for (var num10 = ((((end_c - 1) | 0) - num4) | 0); num10 > num8; num10 = ((num10 - 2) | 0)) {
                      this.$this.map.Set(num9, num10, c);
                    }
                  }
                  if (((((num2 + 1) | 0) % 4) | 0) === 0) {
                    if (((num % 2) | 0) === 1) {

                      for (var num11 = ((start_r + 1) | 0); num11 <= ((end_r - 1) | 0); num11 = ((num11 + 2) | 0)) {
                        this.$this.map.Set(num11, num6, c);
                      }
                    } else {
                      var num12 = 0;
                      if (((num % 4) | 0) === 0) {
                        num12 = (($asm00.DungeonGen.Dungeon.Roll(2) - 1) | 0);
                      }

                      for (var num13 = ((((start_r + 1) | 0) + num12) | 0); num13 < num5; num13 = ((num13 + 2) | 0)) {
                        this.$this.map.Set(num13, num6, c);
                      }

                      for (var num14 = ((((end_r - 1) | 0) - num12) | 0); num14 > num7; num14 = ((num14 - 2) | 0)) {
                        this.$this.map.Set(num14, num6, c);
                      }
                    }
                  }
                  if (((((num + 1) | 0) % 4) | 0) === 0) {
                    if (((num2 % 2) | 0) === 1) {

                      for (var num15 = ((start_c + 1) | 0); num15 <= ((end_c - 1) | 0); num15 = ((num15 + 2) | 0)) {
                        this.$this.map.Set(num5, num15, c);
                      }
                    } else {
                      var num16 = 0;
                      if (((num2 % 4) | 0) === 0) {
                        num16 = (($asm00.DungeonGen.Dungeon.Roll(2) - 1) | 0);
                      }

                      for (var num17 = ((((start_c + 1) | 0) + num16) | 0); num17 < num6; num17 = ((num17 + 2) | 0)) {
                        this.$this.map.Set(num5, num17, c);
                      }

                      for (var num18 = ((((end_c - 1) | 0) - num16) | 0); num18 > num8; num18 = ((num18 - 2) | 0)) {
                        this.$this.map.Set(num5, num18, c);
                      }
                    }
                  }
                  break;

                case 2: 
                  var num19 = 0;
                  var num20 = 0;
                  if (((num % 4) | 0) === 0) {
                    num19 = (($asm00.DungeonGen.Dungeon.Roll(2) - 1) | 0);
                  }
                  if (((num2 % 4) | 0) === 0) {
                    num20 = (($asm00.DungeonGen.Dungeon.Roll(2) - 1) | 0);
                  }
                  this.$this.map.Set(((((start_r + 1) | 0) + num19) | 0), ((((start_c + 1) | 0) + num20) | 0), c);
                  this.$this.map.Set(((((start_r + 1) | 0) + num19) | 0), ((((end_c - 1) | 0) - num20) | 0), c);
                  this.$this.map.Set(((((end_r - 1) | 0) - num19) | 0), ((((start_c + 1) | 0) + num20) | 0), c);
                  this.$this.map.Set(((((end_r - 1) | 0) - num19) | 0), ((((end_c - 1) | 0) - num20) | 0), c);
                  break;

                case 3: 
                  var flag = (!((((num2 % 2) | 0) !== 1) || 
                      (((num % 2) | 0) !== 0)) || 
                    (((((num % 2) | 0) !== 1) || 
                        (((num2 % 2) | 0) !== 0)) && 
                      $asm00.DungeonGen.Dungeon.CoinFlip()));
                  if (flag) {
                    if (((num % 2) | 0) === 1) {

                      for (var num21 = ((start_r + 1) | 0); num21 <= ((end_r - 1) | 0); num21 = ((num21 + 2) | 0)) {
                        this.$this.map.Set(num21, ((((start_c + end_c) | 0) / 2) | 0), c);
                      }
                    } else {
                      var num22 = 0;
                      if (((num % 4) | 0) === 0) {
                        num22 = (($asm00.DungeonGen.Dungeon.Roll(2) - 1) | 0);
                      }

                      for (var num23 = ((((start_r + 1) | 0) + num22) | 0); num23 < ((((start_r + end_r) | 0) / 2) | 0); num23 = ((num23 + 2) | 0)) {
                        this.$this.map.Set(num23, ((((start_c + end_c) | 0) / 2) | 0), c);
                      }

                      for (var num24 = ((((end_r - 1) | 0) - num22) | 0); num24 > ((((((start_r + end_r) | 0) / 2) | 0) + 1) | 0); num24 = ((num24 - 2) | 0)) {
                        this.$this.map.Set(num24, ((((start_c + end_c) | 0) / 2) | 0), c);
                      }
                    }
                  } else if (((num2 % 2) | 0) === 1) {

                    for (var num25 = ((start_c + 1) | 0); num25 <= ((end_c - 1) | 0); num25 = ((num25 + 2) | 0)) {
                      this.$this.map.Set(((((start_r + end_r) | 0) / 2) | 0), num25, c);
                    }
                  } else {
                    var num26 = 0;
                    if (((num2 % 4) | 0) === 0) {
                      num26 = (($asm00.DungeonGen.Dungeon.Roll(2) - 1) | 0);
                    }

                    for (var num27 = ((((start_c + 1) | 0) + num26) | 0); num27 < ((((start_c + end_c) | 0) / 2) | 0); num27 = ((num27 + 2) | 0)) {
                      this.$this.map.Set(((((start_r + end_r) | 0) / 2) | 0), num27, c);
                    }

                    for (var num28 = ((((end_c - 1) | 0) - num26) | 0); num28 > ((((((start_c + end_c) | 0) / 2) | 0) + 1) | 0); num28 = ((num28 - 2) | 0)) {
                      this.$this.map.Set(((((start_r + end_r) | 0) / 2) | 0), num28, c);
                    }
                  }
                  break;

                case 4: 
                  this.$this.map.Set(start_r, start_c, "&");
                  this.$this.map.Set(start_r, end_c, "&");
                  this.$this.map.Set(end_r, start_c, "&");
                  this.$this.map.Set(end_r, end_c, "&");
                  break;

                case 5: 
                  this.$this.map.Set(start_r, start_c, "&");
                  this.$this.map.Set(start_r, end_c, "&");
                  this.$this.map.Set(end_r, start_c, "&");
                  this.$this.map.Set(end_r, end_c, "&");
                  if (!((((num2 % 2) | 0) !== 1) || (num2 <= 3))) {
                    var num29 = ((((start_c + end_c) | 0) / 2) | 0);
                    if (this.$this.ForEachOrthDirection(start_r, num29, function (ch) {
                          return $S01().CallVirtual("IsCorridor", null, this.$this, ch);
                        }.bind(this), false) === 0) {
                      this.$this.map.Set(start_r, num29, "&");
                    }
                    if (this.$this.ForEachOrthDirection(end_r, num29, function (ch) {
                          return $S01().CallVirtual("IsCorridor", null, this.$this, ch);
                        }.bind(this), false) === 0) {
                      this.$this.map.Set(end_r, num29, "&");
                    }
                  }
                  if (!((((num % 2) | 0) !== 1) || (num <= 3))) {
                    var num30 = ((((start_r + end_r) | 0) / 2) | 0);
                    if (this.$this.ForEachOrthDirection(num30, start_c, function (ch) {
                          return $S01().CallVirtual("IsCorridor", null, this.$this, ch);
                        }.bind(this), false) === 0) {
                      this.$this.map.Set(num30, start_c, "&");
                    }
                    if (this.$this.ForEachOrthDirection(num30, end_c, function (ch) {
                          return $S01().CallVirtual("IsCorridor", null, this.$this, ch);
                        }.bind(this), false) === 0) {
                      this.$this.map.Set(num30, end_c, "&");
                    }
                  }
                  break;

              }
            }
          }
        }
        return true;
      }.bind($lAddPillars$gc__AnonStorey));
  };

  function StandardDungeon_ApplyCaveModification () {
    return this.ForEachRoom(function StandardDungeon_$lApplyCaveModification$gm__1D (start_r, start_c, end_r, end_c) {
        var $temp00;
        var array = JSIL.MultidimensionalArray.New($T03(), ((((end_r - start_r) | 0) + 3) | 0), ((((end_c - start_c) | 0) + 3) | 0));
        var list = $S00().Construct();

        for (var i = 1; i < ((array.length0 - 1) | 0); i = ((i + 1) | 0)) {

          for (var j = 1; j < ((array.length1 - 1) | 0); j = ((j + 1) | 0)) {
            if (!(((i !== 1) && 
                  (j !== 1) && 
                  (i !== ((array.length0 - 2) | 0)) && 
                  (j !== ((array.length1 - 2) | 0))) || (!$S01().CallVirtual("IsCorridor", null, this, this.map.Get(((((start_r + i) | 0) - 2) | 0), ((((start_c + j) | 0) - 1) | 0))) && 
                  !$S01().CallVirtual("IsCorridor", null, this, this.map.Get(((((start_r + i) | 0) - 1) | 0), ((((start_c + j) | 0) - 2) | 0))) && 
                  !$S01().CallVirtual("IsCorridor", null, this, this.map.Get(((start_r + i) | 0), ((((start_c + j) | 0) - 1) | 0))) && 
                  !$S01().CallVirtual("IsCorridor", null, this, this.map.Get(((((start_r + i) | 0) - 1) | 0), ((start_c + j) | 0)))))) {
              list.Add(new ($T05())(i, j));
            }
          }
        }

      $loop2: 
        for (var num = 0; true && (num < 500); ) {
          $thisType.CreateRandomWalls(array, 25);
          $thisType.ApplyCellularAutomataXYRule(array, 3);
          $thisType.RemoveDiagonals(array);
          $thisType.RemoveDeadEnds(array);
          $thisType.RemoveUnconnected(array);
          var flag = true;

          for (var a$0 = list._items, i$0 = 0, l$0 = list._size; i$0 < l$0; ($temp00 = i$0, 
              i$0 = ((i$0 + 1) | 0), 
              $temp00)) {
            var current = a$0[i$0].MemberwiseClone();
            if ($thisType.ConvertedChar(array.Get(current.r, current.c)).charCodeAt(0) !== ".".charCodeAt(0)) {
              flag = false;
            }
          }
          if (flag) {

            for (var k = start_r; k <= end_r; k = ((k + 1) | 0)) {

              for (var l = start_c; l <= end_c; l = ((l + 1) | 0)) {
                this.map.Set(k, l, array.Get(((((k - start_r) | 0) + 1) | 0), ((((l - start_c) | 0) + 1) | 0)));
              }
            }
            break $loop2;
          }
          num = ((num + 1) | 0);
          if (num > 50) {
            return false;
          }
        }
        return true;
      }.bind(this));
  };

  function StandardDungeon_ApplyCellularAutomataFourFiveRule () {
    this.ApplyCellularAutomataXYRule(5);
  };

  function StandardDungeon_ApplyCellularAutomataXYRule$00 (target_number_of_walls) {
    var array = JSIL.MultidimensionalArray.New($T03(), 22, 66);

    for (var i = 0; i < 22; i = ((i + 1) | 0)) {

      for (var j = 0; j < 66; j = ((j + 1) | 0)) {
        var num = this.ForEachDirection(i, j, function StandardDungeon_$lApplyCellularAutomataXYRule$gm__18 (ch) {
            return ($thisType.ConvertedChar(ch).charCodeAt(0) === "#".charCodeAt(0));
          }, true);
        if (!((num < target_number_of_walls) && ((num < ((target_number_of_walls - 1) | 0)) || 
              ($thisType.ConvertedChar(this.map.Get(i, j)).charCodeAt(0) !== "#".charCodeAt(0))))) {
          array.Set(i, j, "#");
        } else {
          array.Set(i, j, ".");
        }
      }
    }

    for (var k = 0; k < 22; k = ((k + 1) | 0)) {

      for (var l = 0; l < 66; l = ((l + 1) | 0)) {
        this.map.Set(k, l, array.Get(k, l));
      }
    }
  };

  function StandardDungeon_ApplyCellularAutomataXYRule$01 (map, target_number_of_walls) {
    var array = JSIL.MultidimensionalArray.New($T03(), map.length0, map.length1);

    for (var i = 0; i < map.length0; i = ((i + 1) | 0)) {

      for (var j = 0; j < map.length1; j = ((j + 1) | 0)) {
        var num = $thisType.ForEachDirection(
          map, 
          i, 
          j, 
          function StandardDungeon_$lApplyCellularAutomataXYRule$gm__1E (ch) {
            return ($thisType.ConvertedChar(ch).charCodeAt(0) === "#".charCodeAt(0));
          }, 
          true
        );
        if (!((num < target_number_of_walls) && ((num < ((target_number_of_walls - 1) | 0)) || 
              ($thisType.ConvertedChar(map.Get(i, j)).charCodeAt(0) !== "#".charCodeAt(0))))) {
          array.Set(i, j, "#");
        } else {
          array.Set(i, j, ".");
        }
      }
    }

    for (var k = 0; k < map.length0; k = ((k + 1) | 0)) {

      for (var l = 0; l < map.length1; l = ((l + 1) | 0)) {
        map.Set(k, l, array.Get(k, l));
      }
    }
  };

  function StandardDungeon_ApplyRuin () {
    var array = JSIL.MultidimensionalArray.New($T03(), 22, 66);

    for (var i = 0; i < 22; i = ((i + 1) | 0)) {

      for (var j = 0; j < 66; j = ((j + 1) | 0)) {
        array.Set(i, j, this.map.Get(i, j));
      }
    }

    for (var k = 1; k < 21; k = ((k + 1) | 0)) {

      for (var l = 1; l < 65; l = ((l + 1) | 0)) {
        if ($thisType.ConvertedChar(this.map.Get(k, l)).charCodeAt(0) === "#".charCodeAt(0)) {
          var num = this.ForEachDirection(k, l, function StandardDungeon_$lApplyRuin$gm__19 (ch) {
              return (($thisType.ConvertedChar(ch).charCodeAt(0) === "#".charCodeAt(0)) || 
                ($thisType.ConvertedChar(ch).charCodeAt(0) === "&".charCodeAt(0)));
            }, true);
          if (!((num >= 8) || ($T00().Roll(20) !== 20))) {
            if ($T00().Roll(2) === 2) {
              array.Set(k, l, ".");
            } else {
              array.Set(k, l, ":");

              for (var m = 1; m <= 8; m = ((m + 1) | 0)) {
                var num2 = m;
                if (num2 === 5) {
                  num2 = 9;
                }
                if (!(($thisType.ConvertedChar(this.Map($T00().PosInDir(k, l, num2))).charCodeAt(0) !== ".".charCodeAt(0)) || ($T00().Roll(10) !== 10))) {
                  var pos = $T00().PosInDir(k, l, num2).MemberwiseClone();
                  array.Set(pos.r, pos.c, ":");
                }
              }
            }
          }
        } else if (!((this.ForEachDirection(k, l, function StandardDungeon_$lApplyRuin$gm__1A (ch) {
                  return ($thisType.ConvertedChar(ch).charCodeAt(0) === "#".charCodeAt(0));
                }, true) !== 0) || ($T00().Roll(100) !== 100))) {
          if ($T00().Roll(6) === 6) {
            array.Set(k, l, ":");
          }
          array.Set(k, l, ":");

          for (var n = 1; n <= 8; n = ((n + 1) | 0)) {
            var num3 = n;
            if (num3 === 5) {
              num3 = 9;
            }
            if (!(($thisType.ConvertedChar(this.Map($T00().PosInDir(k, l, num3))).charCodeAt(0) !== ".".charCodeAt(0)) || ($T00().Roll(6) !== 6))) {
              var pos2 = $T00().PosInDir(k, l, num3).MemberwiseClone();
              array.Set(pos2.r, pos2.c, ":");
            }
          }
        }
      }
    }

    for (var num4 = 0; num4 < 22; num4 = ((num4 + 1) | 0)) {

      for (var num5 = 0; num5 < 66; num5 = ((num5 + 1) | 0)) {
        this.map.Set(num4, num5, array.Get(num4, num5));
      }
    }
  };

  function StandardDungeon_Clear () {

    for (var i = 0; i < 22; i = ((i + 1) | 0)) {

      for (var j = 0; j < 66; j = ((j + 1) | 0)) {
        this.map.Set(i, j, "#");
      }
    }
  };

  function StandardDungeon_Convert () {

    for (var i = 0; i < 22; i = ((i + 1) | 0)) {

      for (var j = 0; j < 66; j = ((j + 1) | 0)) {

        var $label0 = 0;
      $labelgroup0: 
        while (true) {
          switch ($label0) {
            case 0: /* $entry0 */ 
              var c = this.map.Get(i, j);
              switch (c) {
                case "N": 
                  $label0 = 1 /* goto IL_66 */ ;
                  continue $labelgroup0;

                default: 
                case "O": 
                  if ((c.charCodeAt(0) === "h".charCodeAt(0)) || 
                    (c.charCodeAt(0) === "i".charCodeAt(0)) || 
                    (c.charCodeAt(0) === "E".charCodeAt(0)) || 
                    (c.charCodeAt(0) === "c".charCodeAt(0)) || 
                    (c.charCodeAt(0) === "r".charCodeAt(0)) || (c.charCodeAt(0) === "v".charCodeAt(0))) {
                    $label0 = 1 /* goto IL_66 */ ;
                    continue $labelgroup0;
                  }
                  break;

                case "P": 
                  this.map.Set(i, j, "#");
                  break;

              }
              break $labelgroup0;

            case 1: /* IL_66 */ 
              this.map.Set(i, j, ".");
              break $labelgroup0;

          }
        }
        /* Original label IL_8E */ 
      }
    }
  };

  function StandardDungeon_ConvertedChar (ch) {
    switch (ch) {
      case "+": 
        return "+";

      default: 
      case ",": 
      case "-": 
      case "/": 
        switch (ch) {
          case "$": 
            return ".";

          default: 
          case "%": 
            switch (ch) {
              case "N": 
                return ".";

              default: 
              case "O": 
                if ((ch.charCodeAt(0) === "h".charCodeAt(0)) || (ch.charCodeAt(0) === "i".charCodeAt(0))) {
                  return ".";
                }
                if (ch.charCodeAt(0) === ":".charCodeAt(0)) {
                  return ":";
                }
                if ((ch.charCodeAt(0) === "E".charCodeAt(0)) || 
                  (ch.charCodeAt(0) === "c".charCodeAt(0)) || 
                  (ch.charCodeAt(0) === "r".charCodeAt(0)) || (ch.charCodeAt(0) === "v".charCodeAt(0))) {
                  return ".";
                }
                break;

            }
            break;

          case "&": 
            return "&";

        }
        return "#";

      case "0": 
        return "0";

    }
    return ".";
  };

  function StandardDungeon_ConvertToShowFloorType () {

    for (var i = 0; i < 22; i = ((i + 1) | 0)) {

      for (var j = 0; j < 66; j = ((j + 1) | 0)) {
        if (this.map.Get(i, j).charCodeAt(0) === ".".charCodeAt(0)) {
          this.map.Set(i, j, this.FindFloorType(i, j));
        }
      }
    }
  };

  function StandardDungeon_CreateBasicMap () {
    var $temp00, $temp01;
    var num = 2;
    var num2 = 4;
    var list = $S00().Construct();

    for (var i = 1; i <= num; i = ((i + 1) | 0)) {

      for (var j = 1; j <= num2; j = ((j + 1) | 0)) {
        list.Add(new ($T05())(((((22 * i) | 0) / ((num + 1) | 0)) | 0), ((((66 * j) | 0) / ((num2 + 1) | 0)) | 0)));
      }
    }

    for (var a$0 = list._items, i$0 = 0, l$0 = list._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0].MemberwiseClone();
      this.map.Set(current.r, current.c, "X");
    }
    var flag = false;

    for (var num3 = $T00().Roll(4); (list.get_Count() > num3) || !flag; ) {
      var item = list.get_Item((($T00().Roll(list.get_Count()) - 1) | 0)).MemberwiseClone();
      this.map.Set(item.r, item.c, "#");

    $loop4: 
      for (var k = 0; k < 500; k = ((k + 1) | 0)) {
        if (this.CreateRoom(item.r, item.c)) {
          break $loop4;
        }
      }
      list.Remove(item.MemberwiseClone());
      if (!(list.Contains(new ($T05())(((22 / ((num + 1) | 0)) | 0), ((66 / ((num2 + 1) | 0)) | 0))) || list.Contains(new ($T05())(((((22 * num) | 0) / ((num + 1) | 0)) | 0), ((((66 * num2) | 0) / ((num2 + 1) | 0)) | 0))))) {
        flag = true;
      }
      if (!(list.Contains(new ($T05())(((22 / ((num + 1) | 0)) | 0), ((((66 * num2) | 0) / ((num2 + 1) | 0)) | 0))) || list.Contains(new ($T05())(((((22 * num) | 0) / ((num + 1) | 0)) | 0), ((66 / ((num2 + 1) | 0)) | 0))))) {
        flag = true;
      }
    }

    for (var a$1 = list._items, i$1 = 0, l$1 = list._size; i$1 < l$1; ($temp01 = i$1, 
        i$1 = ((i$1 + 1) | 0), 
        $temp01)) {
      var current2 = a$1[i$1].MemberwiseClone();
      if (this.map.Get(current2.r, current2.c).charCodeAt(0) === "X".charCodeAt(0)) {
        this.map.Set(current2.r, current2.c, "#");
      }
    }

    for (var l = 100; l < 200; l = ((l + 1) | 0)) {
      var num4 = -1;
      var num5 = -1;
      var num6 = 0;

      for (var num7 = 0; (num7 < 9999) && (num6 === 0); num7 = ((num7 + 1) | 0)) {
        num4 = (($T00().Roll(18) + 1) | 0);
        num5 = (($T00().Roll(62) + 1) | 0);
        if (this.map.Get(num4, num5).charCodeAt(0) === "#".charCodeAt(0)) {
          var num8 = 0;
          var num9 = 0;
          if (($thisType.ConvertedChar(this.map.Get(((num4 - 1) | 0), num5))).charCodeAt(0) === ".".charCodeAt(0)) {
            num8 = ((num8 + 1) | 0);
            num9 = 8;
          }
          if (($thisType.ConvertedChar(this.map.Get(((num4 + 1) | 0), num5))).charCodeAt(0) === ".".charCodeAt(0)) {
            num8 = ((num8 + 1) | 0);
            num9 = 2;
          }
          if (($thisType.ConvertedChar(this.map.Get(num4, ((num5 - 1) | 0)))).charCodeAt(0) === ".".charCodeAt(0)) {
            num8 = ((num8 + 1) | 0);
            num9 = 4;
          }
          if (($thisType.ConvertedChar(this.map.Get(num4, ((num5 + 1) | 0)))).charCodeAt(0) === ".".charCodeAt(0)) {
            num8 = ((num8 + 1) | 0);
            num9 = 6;
          }
          if (num8 === 1) {
            num6 = num9;
          }
        }
      }
      if (num6 !== 0) {
        var flag2 = false;
        if ($thisType.ConvertedChar(this.Map($T00().PosInDir($T00().PosInDir(num4, num5, num6).MemberwiseClone(), num6))).charCodeAt(0) === ".".charCodeAt(0)) {

          for (var m = 0; m < 2; m = ((m + 1) | 0)) {
            var clockwise = (m !== 0);
            if (!(($thisType.ConvertedChar(this.Map($T00().PosInDir(
                        $T00().PosInDir(num4, num5, num6).MemberwiseClone(), 
                        $T00().RotateDir(num6, clockwise)
                      ))).charCodeAt(0) !== ".".charCodeAt(0)) || ($thisType.ConvertedChar(this.Map($T00().PosInDir(num4, num5, $T00().RotateDir(num6, clockwise)))).charCodeAt(0) !== ".".charCodeAt(0)))) {
              flag2 = true;
            }
          }
        }
        var num10 = 0;
        if (flag2) {
          num10 = 6;
        }
        if ((($T00().Roll(1, 10) + num10) | 0) > 7) {
          this.CreateCorridor(num4, num5, (($T00().Roll(((this.corridor_chain_length_max - ((this.corridor_chain_length_min - 1) | 0)) | 0)) + ((this.corridor_chain_length_min - 1) | 0)) | 0), num6);
        } else {
          this.CreateRoom(num4, num5, num6);
        }
      }
    }
  };

  function StandardDungeon_CreateCorridor$02 () {
    return this.CreateCorridor(
      $T00().Roll(20), 
      $T00().Roll(64), 
      1, 
      (($T00().Roll(4) * 2) | 0)
    );
  };

  function StandardDungeon_CreateCorridor$03 (count) {
    return this.CreateCorridor(
      $T00().Roll(20), 
      $T00().Roll(64), 
      count, 
      (($T00().Roll(4) * 2) | 0)
    );
  };

  function StandardDungeon_CreateCorridor$04 (rr, rc) {
    return this.CreateCorridor(rr, rc, 1, (($T00().Roll(4) * 2) | 0));
  };

  function StandardDungeon_CreateCorridor$05 (rr, rc, count) {
    return this.CreateCorridor(rr, rc, count, (($T00().Roll(4) * 2) | 0));
  };

  function StandardDungeon_CreateCorridor$06 (rr, rc, count, dir) {
    var item = new ($T05())(), item2 = new ($T05())();
    var result = false;
    var pos = new ($T05())(rr, rc);
    var list = null;
    if (count > 1) {
      list = $S00().Construct();
    }

    for (var num = 0; (count > 0) && (num < 100); ) {
      num = ((num + 1) | 0);
      rr = pos.r;
      rc = pos.c;
      var pos2 = pos.MemberwiseClone();
      if (!((list === null) || (list.get_Count() <= 0))) {
        dir = (($T00().Roll(4) * 2) | 0);
      }
      var num2 = (($T00().Roll(((this.corridor_length_max - ((this.corridor_length_min - 1) | 0)) | 0)) + ((this.corridor_length_min - 1) | 0)) | 0);
      if ($T00().CoinFlip()) {
        num2 = ((num2 + this.corridor_length_addition) | 0);
      }
      switch (dir) {
        case 2: 
          pos2.r = ((pos2.r + ((num2 - 1) | 0)) | 0);
          break;

        case 4: 
          dir = 6;
          rc = ((rc - ((num2 - 1) | 0)) | 0);
          pos2.c = rc;
          break;

        case 6: 
          pos2.c = ((pos2.c + ((num2 - 1) | 0)) | 0);
          break;

        case 8: 
          dir = 2;
          rr = ((rr - ((num2 - 1) | 0)) | 0);
          pos2.r = rr;
          break;

      }
      var num3 = dir;
      if (num3 !== 2) {
        if (num3 === 6) {
          var flag = true;

        $loop8: 
          for (var i = rc; i < ((rc + num2) | 0); i = ((i + 1) | 0)) {
            if (!this.BoundsCheck(rr, i)) {
              flag = false;
              break $loop8;
            }
            if (!((list === null) || 
                (list.get_Count() <= 0) || 
                (i === pos.c) || !list.Contains(new ($T05())(rr, i)))) {
              flag = false;
              break $loop8;
            }
          }
          if (flag) {
            var array = JSIL.Array.New($T03(), ((num2 + 2) | 0));

            for (var j = 0; j < ((num2 + 2) | 0); j = ((j + 1) | 0)) {
              array[j] = this.map.Get(rr, ((((j + rc) | 0) - 1) | 0));
            }
            var flag2 = true;

            for (var k = 0; k < num2; k = ((k + 1) | 0)) {
              if (!((this.map.Get(rr, ((k + rc) | 0)).charCodeAt(0) !== "v".charCodeAt(0)) && 
                  ((this.map.Get(((rr - 1) | 0), ((k + rc) | 0))).charCodeAt(0) !== "v".charCodeAt(0)) && ((this.map.Get(((rr + 1) | 0), ((k + rc) | 0))).charCodeAt(0) !== "v".charCodeAt(0)))) {
                this.map.Set(rr, ((k + rc) | 0), "i");
              } else {
                var c = this.map.Get(rr, ((k + rc) | 0));
                if (c.charCodeAt(0) !== "E".charCodeAt(0)) {
                  if (c.charCodeAt(0) !== "X".charCodeAt(0)) {
                    if (c.charCodeAt(0) !== "c".charCodeAt(0)) {
                      if (!((c.charCodeAt(0) === "i".charCodeAt(0)) || (c.charCodeAt(0) === "r".charCodeAt(0)))) {
                        this.map.Set(rr, ((k + rc) | 0), "h");
                      }
                    } else if (!this.allow_all_corner_connections) {
                      flag2 = false;
                    }
                  } else {
                    flag2 = false;
                  }
                }
              }
            }
            if (!(!flag2 || ((this.map.Get(rr, ((rc - 1) | 0))).charCodeAt(0) !== "v".charCodeAt(0)))) {
              this.map.Set(rr, ((rc - 1) | 0), "i");
            }
            if (!(!flag2 || (this.map.Get(rr, ((rc + num2) | 0)).charCodeAt(0) !== "v".charCodeAt(0)))) {
              this.map.Set(rr, ((rc + num2) | 0), "i");
            }

            for (var num4 = ((rr - 1) | 0); (num4 < ((rr + 2) | 0)) && flag2; num4 = ((num4 + 1) | 0)) {

            $loop12: 
              for (var l = ((rc - 1) | 0); l < ((((rc + num2) | 0) + 1) | 0); l = ((l + 1) | 0)) {
                if (!((num4 === ((rr + 1) | 0)) || 
                    (l === ((rc + num2) | 0)) || 
                    !$S01().CallVirtual("IsCorridor", null, this, this.map.Get(num4, l)) || 
                    !$S01().CallVirtual("IsCorridor", null, this, this.map.Get(num4, ((l + 1) | 0))) || 
                    !$S01().CallVirtual("IsCorridor", null, this, this.map.Get(((num4 + 1) | 0), l)) || !$S01().CallVirtual("IsCorridor", null, this, this.map.Get(((num4 + 1) | 0), ((l + 1) | 0))))) {
                  flag2 = false;
                  break $loop12;
                }
                if (!this.IsLegal(num4, l)) {
                  flag2 = false;
                  break $loop12;
                }
              }
            }
            if (!flag2) {

              for (var m = 0; m < ((num2 + 2) | 0); m = ((m + 1) | 0)) {
                this.map.Set(rr, ((((m + rc) | 0) - 1) | 0), array[m]);
              }
            } else {
              count = ((count - 1) | 0);
              num = 0;
              if (list !== null) {
                if (list.get_Count() === 0) {
                  list.Add(pos.MemberwiseClone());
                }

                for (var n = rc; n < ((rc + num2) | 0); n = ((n + 1) | 0)) {
                  $T05().prototype._ctor.call(item, rr, n);
                  if (!item.Object_Equals(pos)) {
                    list.Add(item.MemberwiseClone());
                  }
                }
              }
              pos = pos2.MemberwiseClone();
              result = true;
            }
          }
        }
      } else {
        var flag3 = true;

      $loop1: 
        for (var num5 = rr; num5 < ((rr + num2) | 0); num5 = ((num5 + 1) | 0)) {
          if (!this.BoundsCheck(num5, rc)) {
            flag3 = false;
            break $loop1;
          }
          if (!((list === null) || 
              (list.get_Count() <= 0) || 
              (num5 === pos.r) || !list.Contains(new ($T05())(num5, rc)))) {
            flag3 = false;
            break $loop1;
          }
        }
        if (flag3) {
          var array2 = JSIL.Array.New($T03(), ((num2 + 2) | 0));

          for (var num6 = 0; num6 < ((num2 + 2) | 0); num6 = ((num6 + 1) | 0)) {
            array2[num6] = this.map.Get(((((num6 + rr) | 0) - 1) | 0), rc);
          }
          var flag4 = true;

          for (var num7 = 0; num7 < num2; num7 = ((num7 + 1) | 0)) {
            if (!((this.map.Get(((num7 + rr) | 0), rc).charCodeAt(0) !== "h".charCodeAt(0)) && 
                ((this.map.Get(((num7 + rr) | 0), ((rc - 1) | 0))).charCodeAt(0) !== "h".charCodeAt(0)) && ((this.map.Get(((num7 + rr) | 0), ((rc + 1) | 0))).charCodeAt(0) !== "h".charCodeAt(0)))) {
              this.map.Set(((num7 + rr) | 0), rc, "i");
            } else {
              c = this.map.Get(((num7 + rr) | 0), rc);
              if (c.charCodeAt(0) !== "E".charCodeAt(0)) {
                if (c.charCodeAt(0) !== "X".charCodeAt(0)) {
                  if (c.charCodeAt(0) !== "c".charCodeAt(0)) {
                    if (!((c.charCodeAt(0) === "i".charCodeAt(0)) || (c.charCodeAt(0) === "r".charCodeAt(0)))) {
                      this.map.Set(((num7 + rr) | 0), rc, "v");
                    }
                  } else if (!this.allow_all_corner_connections) {
                    flag4 = false;
                  }
                } else {
                  flag4 = false;
                }
              }
            }
          }
          if (!(!flag4 || ((this.map.Get(((rr - 1) | 0), rc)).charCodeAt(0) !== "h".charCodeAt(0)))) {
            this.map.Set(((rr - 1) | 0), rc, "i");
          }
          if (!(!flag4 || (this.map.Get(((rr + num2) | 0), rc).charCodeAt(0) !== "h".charCodeAt(0)))) {
            this.map.Set(((rr + num2) | 0), rc, "i");
          }

          for (var num8 = ((rr - 1) | 0); (num8 < ((((rr + num2) | 0) + 1) | 0)) && flag4; num8 = ((num8 + 1) | 0)) {

          $loop5: 
            for (var num9 = ((rc - 1) | 0); num9 < ((rc + 2) | 0); num9 = ((num9 + 1) | 0)) {
              if (!((num8 === ((rr + num2) | 0)) || 
                  (num9 === ((rc + 1) | 0)) || 
                  ($thisType.ConvertedChar(this.map.Get(num8, num9)).charCodeAt(0) !== ".".charCodeAt(0)) || 
                  (($thisType.ConvertedChar(this.map.Get(num8, ((num9 + 1) | 0)))).charCodeAt(0) !== ".".charCodeAt(0)) || 
                  (($thisType.ConvertedChar(this.map.Get(((num8 + 1) | 0), num9))).charCodeAt(0) !== ".".charCodeAt(0)) || (($thisType.ConvertedChar(this.map.Get(((num8 + 1) | 0), ((num9 + 1) | 0)))).charCodeAt(0) !== ".".charCodeAt(0)))) {
                flag4 = false;
                break $loop5;
              }
              if (!this.IsLegal(num8, num9)) {
                flag4 = false;
                break $loop5;
              }
            }
          }
          if (!flag4) {

            for (var num10 = 0; num10 < ((num2 + 2) | 0); num10 = ((num10 + 1) | 0)) {
              this.map.Set(((((num10 + rr) | 0) - 1) | 0), rc, array2[num10]);
            }
          } else {
            count = ((count - 1) | 0);
            num = 0;
            if (list !== null) {
              if (list.get_Count() === 0) {
                list.Add(pos.MemberwiseClone());
              }

              for (var num11 = rr; num11 < ((rr + num2) | 0); num11 = ((num11 + 1) | 0)) {
                $T05().prototype._ctor.call(item2, num11, rc);
                if (!item2.Object_Equals(pos)) {
                  list.Add(item2.MemberwiseClone());
                }
              }
            }
            pos = pos2.MemberwiseClone();
            result = true;
          }
        }
      }
    }
    return result;
  };

  function StandardDungeon_CreateRandomWalls$07 (percentage_of_walls) {

    for (var i = 0; i < 22; i = ((i + 1) | 0)) {

      for (var j = 0; j < 66; j = ((j + 1) | 0)) {
        if ($T00().Roll(100) <= percentage_of_walls) {
          this.map.Set(i, j, "#");
        } else {
          this.map.Set(i, j, ".");
        }
      }
    }
  };

  function StandardDungeon_CreateRandomWalls$08 (map, percentage_of_walls) {

    for (var i = 0; i < map.length0; i = ((i + 1) | 0)) {

      for (var j = 0; j < map.length1; j = ((j + 1) | 0)) {
        if ($T00().Roll(100) <= percentage_of_walls) {
          map.Set(i, j, "#");
        } else {
          map.Set(i, j, ".");
        }
      }
    }
  };

  function StandardDungeon_CreateRoom$09 () {
    return this.CreateRoom(
      $T00().Roll(20), 
      $T00().Roll(64)
    );
  };

  function StandardDungeon_CreateRoom$0A (rr, rc) {
    var num = (((($T00().Roll(4) * 2) | 0) - 1) | 0);
    if (num === 5) {
      num = 9;
    }
    return this.CreateRoom(rr, rc, num);
  };

  function StandardDungeon_CreateRoom$0B (rr, rc, dir) {
    var num = (($T00().Roll(((this.room_height_max - ((this.room_height_min - 1) | 0)) | 0)) + ((this.room_height_min - 1) | 0)) | 0);
    var num2 = (($T00().Roll(((this.room_width_max - ((this.room_width_min - 1) | 0)) | 0)) + ((this.room_width_min - 1) | 0)) | 0);
    var num3 = 0;
    var num4 = 0;
    if (((num % 2) | 0) === 0) {
      num3 = (($T00().Roll(2) - 1) | 0);
    }
    if (((num2 % 2) | 0) === 0) {
      num4 = (($T00().Roll(2) - 1) | 0);
    }
    switch (dir) {
      case 1: 
        rc = ((rc - ((num2 - 1) | 0)) | 0);
        break;

      case 2: 
        rc = ((rc - ((((num2 / 2) | 0) - num4) | 0)) | 0);
        break;

      case 4: 
        rr = ((rr - ((((num / 2) | 0) - num3) | 0)) | 0);
        rc = ((rc - ((num2 - 1) | 0)) | 0);
        break;

      case 6: 
        rr = ((rr - ((((num / 2) | 0) - num3) | 0)) | 0);
        break;

      case 7: 
        rr = ((rr - ((num - 1) | 0)) | 0);
        rc = ((rc - ((num2 - 1) | 0)) | 0);
        break;

      case 8: 
        rr = ((rr - ((num - 1) | 0)) | 0);
        rc = ((rc - ((((num2 / 2) | 0) - num4) | 0)) | 0);
        break;

      case 9: 
        rr = ((rr - ((num - 1) | 0)) | 0);
        break;

    }
    dir = 3;
    var flag = true;

    for (var num5 = rr; (num5 < ((rr + num) | 0)) && flag; num5 = ((num5 + 1) | 0)) {

    $loop1: 
      for (var i = rc; i < ((rc + num2) | 0); i = ((i + 1) | 0)) {
        if (!this.BoundsCheck(num5, i)) {
          flag = false;
          break $loop1;
        }
      }
    }
    if (flag) {
      var array = JSIL.MultidimensionalArray.New($T03(), num, num2);

      for (var j = 0; j < num; j = ((j + 1) | 0)) {

        for (var k = 0; k < num2; k = ((k + 1) | 0)) {
          array.Set(j, k, this.map.Get(((j + rr) | 0), ((k + rc) | 0)));
        }
      }
      var flag2 = true;

      for (var num6 = 0; (num6 < num) && flag2; num6 = ((num6 + 1) | 0)) {

        for (var num7 = 0; (num7 < num2) && flag2; num7 = ((num7 + 1) | 0)) {

          var $label0 = 0;
        $labelgroup0: 
          while (true) {
            switch ($label0) {
              case 0: /* $entry0 */ 
                var flag3 = false;
                var c = this.map.Get(((num6 + rr) | 0), ((num7 + rc) | 0));
                if ((c.charCodeAt(0) === "h".charCodeAt(0)) || (c.charCodeAt(0) === "i".charCodeAt(0))) {
                  $label0 = 1 /* goto IL_22E */ ;
                  continue $labelgroup0;
                }
                if (!((c.charCodeAt(0) === "E".charCodeAt(0)) || (c.charCodeAt(0) === "N".charCodeAt(0)))) {
                  if (c.charCodeAt(0) === "X".charCodeAt(0)) {
                    flag2 = false;
                    break $labelgroup0;
                  }
                  if (!((c.charCodeAt(0) === "c".charCodeAt(0)) || (c.charCodeAt(0) === "r".charCodeAt(0)))) {
                    if (c.charCodeAt(0) !== "v".charCodeAt(0)) {
                      flag3 = true;
                      break $labelgroup0;
                    }
                    $label0 = 1 /* goto IL_22E */ ;
                    continue $labelgroup0;
                  }
                }
                if (this.rooms_over_rooms) {
                  flag3 = true;
                } else {
                  flag2 = false;
                }
                break $labelgroup0;

              case 1: /* IL_22E */ 
                if (this.rooms_overwrite_corridors) {
                  flag3 = true;
                } else {
                  flag2 = false;
                }
                break $labelgroup0;

            }
          }
          /* Original label IL_274 */ 
          if (flag3) {
            var num8 = 0;
            if (num6 === 0) {
              num8 = ((num8 + 1) | 0);
            }
            if (num6 === ((num - 1) | 0)) {
              num8 = ((num8 + 1) | 0);
            }
            if (num7 === 0) {
              num8 = ((num8 + 1) | 0);
            }
            if (num7 === ((num2 - 1) | 0)) {
              num8 = ((num8 + 1) | 0);
            }
            switch (num8) {
              case 0: 
                this.map.Set(((num6 + rr) | 0), ((num7 + rc) | 0), "r");
                break;

              case 1: 
                this.map.Set(((num6 + rr) | 0), ((num7 + rc) | 0), "E");
                break;

              case 2: 
                this.map.Set(((num6 + rr) | 0), ((num7 + rc) | 0), "c");
                break;

              default: 
                this.map.Set(((num6 + rr) | 0), ((num7 + rc) | 0), "$");
                break;

            }
          }
        }
      }

      for (var num9 = -1; (num9 < ((num + 1) | 0)) && flag2; num9 = ((num9 + 1) | 0)) {

        for (var num10 = -1; (num10 < ((num2 + 1) | 0)) && flag2; num10 = ((num10 + 1) | 0)) {
          if (!this.IsLegal(((num9 + rr) | 0), ((num10 + rc) | 0))) {
            flag2 = false;
          }
        }
      }
      if (flag2) {
        return true;
      }

      for (var l = 0; l < num; l = ((l + 1) | 0)) {

        for (var m = 0; m < num2; m = ((m + 1) | 0)) {
          this.map.Set(((l + rr) | 0), ((m + rc) | 0), array.Get(l, m));
        }
      }
    }
    return false;
  };

  function StandardDungeon_Draw () {
    $T0A().set_CursorVisible(false);

    for (var i = 0; i < 22; i = ((i + 1) | 0)) {

      for (var j = 0; j < 66; j = ((j + 1) | 0)) {
        $T0A().SetCursorPosition(j, i);
        $T0A().Write(this.map.Get(i, j));
      }
    }
  };

  function StandardDungeon_DrawConverted () {
    $T0A().set_CursorVisible(false);

    for (var i = 0; i < 22; i = ((i + 1) | 0)) {

      for (var j = 0; j < 66; j = ((j + 1) | 0)) {
        $T0A().SetCursorPosition(j, i);
        $T0A().Write($thisType.ConvertedChar(this.map.Get(i, j)));
      }
    }
  };

  function StandardDungeon_FindFloorType (r, c) {
    var p = new ($T05())(r, c);
    if ($thisType.ConvertedChar(this.Map(p)).charCodeAt(0) !== ".".charCodeAt(0)) {
      return $thisType.ConvertedChar(this.Map(p));
    }
    if (this.IsRoom(r, c)) {
      var num = 0;

      for (var i = 1; i <= 8; i = ((i + 1) | 0)) {
        var num2 = i;
        if (num2 === 5) {
          num2 = 9;
        }
        if (!$S03().CallVirtual("IsRoom", null, this, $T00().PosInDir(p.MemberwiseClone(), num2).MemberwiseClone())) {
          num = ((num + 1) | 0);
        }
      }
      if (num === 0) {
        return "r";
      }
      var num3 = 0;

      for (var j = 2; j <= 8; j = ((j + 2) | 0)) {
        if (!($S03().CallVirtual("IsRoom", null, this, $T00().PosInDir(p.MemberwiseClone(), j).MemberwiseClone()) || 
            $S03().CallVirtual("IsRoom", null, this, $T00().PosInDir(p.MemberwiseClone(), $T00().RotateDir(j, true, 1)).MemberwiseClone()) || $S03().CallVirtual("IsRoom", null, this, $T00().PosInDir(p.MemberwiseClone(), $T00().RotateDir(j, false, 1)).MemberwiseClone()))) {
          num3 = ((num3 + 1) | 0);
        }
      }
      if (!((num !== 3) || (num3 !== 1))) {
        return "E";
      }
      if (!((num !== 5) || (num3 !== 2))) {
        return "c";
      }
    } else {
      if (!((($thisType.ConvertedChar(this.Map($T00().PosInDir(p.MemberwiseClone(), 8)))).charCodeAt(0) !== "#".charCodeAt(0)) || (($thisType.ConvertedChar(this.Map($T00().PosInDir(p.MemberwiseClone(), 2)))).charCodeAt(0) !== "#".charCodeAt(0)))) {
        return "h";
      }
      if (!((($thisType.ConvertedChar(this.Map($T00().PosInDir(p.MemberwiseClone(), 4)))).charCodeAt(0) !== "#".charCodeAt(0)) || (($thisType.ConvertedChar(this.Map($T00().PosInDir(p.MemberwiseClone(), 6)))).charCodeAt(0) !== "#".charCodeAt(0)))) {
        return "v";
      }
      if (!((($thisType.ConvertedChar(this.Map($T00().PosInDir(p.MemberwiseClone(), 1)))).charCodeAt(0) !== "#".charCodeAt(0)) || (($thisType.ConvertedChar(this.Map($T00().PosInDir(p.MemberwiseClone(), 9)))).charCodeAt(0) !== "#".charCodeAt(0)))) {
        return "i";
      }
      if (!((($thisType.ConvertedChar(this.Map($T00().PosInDir(p.MemberwiseClone(), 7)))).charCodeAt(0) !== "#".charCodeAt(0)) || (($thisType.ConvertedChar(this.Map($T00().PosInDir(p.MemberwiseClone(), 3)))).charCodeAt(0) !== "#".charCodeAt(0)))) {
        return "i";
      }
    }
    return "N";
  };

  function StandardDungeon_ForEachDirection$0C (r, c, condition, OOB_automatically_passes) {
    var num = 0;

    for (var i = 1; i <= 8; i = ((i + 1) | 0)) {
      var num2 = i;
      if (num2 === 5) {
        num2 = 9;
      }
      if (this.BoundsCheck(r, c)) {
        if (condition(this.Map($T00().PosInDir(r, c, num2)))) {
          num = ((num + 1) | 0);
        }
      } else if (OOB_automatically_passes) {
        num = ((num + 1) | 0);
      }
    }
    return num;
  };

  function StandardDungeon_ForEachDirection$0D (map, r, c, condition, OOB_automatically_passes) {
    var num = 0;

    for (var i = 1; i <= 8; i = ((i + 1) | 0)) {
      var num2 = i;
      if (num2 === 5) {
        num2 = 9;
      }
      if ($T00().BoundsCheck(r, c, map.length0, map.length1)) {
        var pos = $T00().PosInDir(r, c, num2).MemberwiseClone();
        if (condition(map.Get(pos.r, pos.c))) {
          num = ((num + 1) | 0);
        }
      } else if (OOB_automatically_passes) {
        num = ((num + 1) | 0);
      }
    }
    return num;
  };

  function StandardDungeon_ForEachOrthDirection (r, c, condition, OOB_automatically_passes) {
    var num = 0;

    for (var i = 2; i <= 8; i = ((i + 2) | 0)) {
      if (this.BoundsCheck(r, c)) {
        if (condition(this.Map($T00().PosInDir(r, c, i)))) {
          num = ((num + 1) | 0);
        }
      } else if (OOB_automatically_passes) {
        num = ((num + 1) | 0);
      }
    }
    return num;
  };

  function StandardDungeon_ForEachRoom (action) {
    var array = JSIL.MultidimensionalArray.New($T01(), 22, 66);

    for (var i = 0; i < 22; i = ((i + 1) | 0)) {

      for (var j = 0; j < 66; j = ((j + 1) | 0)) {
        if (this.IsRoom(i, j)) {
          array.Set(i, j, 0);
        } else {
          array.Set(i, j, -1);
        }
      }
    }
    var num = 1;

    for (var k = 0; k < 19; k = ((k + 1) | 0)) {

      for (var l = 0; l < 63; l = ((l + 1) | 0)) {
        if (!((array.Get(k, l) !== -1) || 
            (array.Get(((k + 1) | 0), ((l + 1) | 0)) !== 0) || (array.Get(((k + 2) | 0), ((l + 2) | 0)) !== 0))) {
          array.Set(((k + 1) | 0), ((l + 1) | 0), num);

          for (var flag = false; !flag; ) {
            flag = true;

            for (var m = ((k + 1) | 0); m < 21; m = ((m + 1) | 0)) {

              for (var n = ((l + 1) | 0); n < 65; n = ((n + 1) | 0)) {
                if (array.Get(m, n) === num) {

                  for (var num2 = ((m - 1) | 0); num2 <= ((m + 1) | 0); num2 = ((num2 + 1) | 0)) {

                    for (var num3 = ((n - 1) | 0); num3 <= ((n + 1) | 0); num3 = ((num3 + 1) | 0)) {
                      if (!(((num2 === m) && 
                            (num3 === n)) || (array.Get(num2, num3) !== 0))) {
                        array.Set(num2, num3, num);
                        flag = false;
                      }
                    }
                  }
                }
              }
            }
          }
          num = ((num + 1) | 0);
        }
      }
    }

    for (var num4 = 1; num4 < num; num4 = ((num4 + 1) | 0)) {
      var num5 = 999;
      var num6 = 999;
      var num7 = -1;
      var num8 = -1;

      for (var num9 = 1; num9 < 21; num9 = ((num9 + 1) | 0)) {

        for (var num10 = 1; num10 < 65; num10 = ((num10 + 1) | 0)) {
          if (array.Get(num9, num10) === num4) {
            if (num9 < num5) {
              num5 = num9;
            }
            if (num9 > num7) {
              num7 = num9;
            }
            if (num10 < num6) {
              num6 = num10;
            }
            if (num10 > num8) {
              num8 = num10;
            }
          }
        }
      }
      if (!action(num5, num6, num7, num8)) {
        return false;
      }
    }
    return true;
  };

  function StandardDungeon_GenerateCave () {
    this.ResetToDefaults();

  $loop0: 
    while (true) {
      this.CreateRandomWalls(25);
      this.ApplyCellularAutomataXYRule(3);
      this.RemoveDiagonals();
      this.RemoveDeadEnds();
      this.RemoveUnconnected();
      this.AddFirePits();
      if ((this.NumberOfFloors() >= 320) && !this.HasLargeUnusedSpaces()) {
        break $loop0;
      }
      this.Clear();
    }
    this.Convert();
    return this.map;
  };

  function StandardDungeon_GenerateExtravagant () {
    this.ResetToDefaults();

  $loop0: 
    while (true) {
      this.CreateBasicMap();
      this.RemoveDiagonals();
      this.RemoveDeadEnds();
      this.RemoveUnconnected();
      this.AddDoors();
      this.AddPillars(100);
      this.MarkInterestingLocations();
      if ((this.NumberOfFloors() >= 320) && !this.HasLargeUnusedSpaces()) {
        break $loop0;
      }
      this.Clear();
    }
    this.Convert();
    return this.map;
  };

  function StandardDungeon_GenerateFortress () {
    this.ResetToDefaults();

  $loop0: 
    while (true) {

      for (var i = 10; i < 12; i = ((i + 1) | 0)) {

        for (var j = 1; j < 65; j = ((j + 1) | 0)) {
          if (!((j !== 1) && (j !== 64))) {
            this.map.Set(i, j, "c");
          } else {
            this.map.Set(i, j, "E");
          }
        }
      }

      for (var k = 0; k < 700; k = ((k + 1) | 0)) {
        if ($T00().Roll(5) === 5) {
          this.CreateCorridor((($T00().Roll(((this.corridor_chain_length_max - ((this.corridor_chain_length_min - 1) | 0)) | 0)) + ((this.corridor_chain_length_min - 1) | 0)) | 0));
        } else {
          this.CreateRoom();
        }
      }
      var flag = ($T00().Roll(5) <= 4);
      if (flag) {
        this.AddDoors();
        this.AddPillars(30);
      }
      this.Reflect(true, false);
      this.RemoveDiagonals();
      this.RemoveDeadEnds();
      this.RemoveUnconnected();
      if (!flag) {
        this.AddDoors();
        this.AddPillars(30);
      }
      var flag2 = false;
      var flag3 = false;
      var num = 0;
      var num2 = 999;

      for (var l = 0; l < 22; l = ((l + 1) | 0)) {
        if (!((($thisType.ConvertedChar(this.map.Get(9, l))).charCodeAt(0) !== ".".charCodeAt(0)) && (($thisType.ConvertedChar(this.map.Get(9, l))).charCodeAt(0) !== "+".charCodeAt(0)))) {
          flag3 = true;
          if (num2 === 999) {
            num2 = l;
          }
        }
        if (!((($thisType.ConvertedChar(this.map.Get(9, ((65 - l) | 0)))).charCodeAt(0) !== ".".charCodeAt(0)) && (($thisType.ConvertedChar(this.map.Get(9, ((65 - l) | 0)))).charCodeAt(0) !== "+".charCodeAt(0)))) {
          flag2 = true;
          if (num === 0) {
            num = ((65 - l) | 0);
          }
        }
      }
      if (!(flag3 && flag2)) {
        this.Clear();
      } else {

        for (var m = 1; m < ((num2 - 6) | 0); m = ((m + 1) | 0)) {
          this.map.Set(10, m, "#");
          this.map.Set(11, m, "#");
        }

        for (var n = 64; n > ((num + 6) | 0); n = ((n - 1) | 0)) {
          this.map.Set(10, n, "#");
          this.map.Set(11, n, "#");
        }

      $loop7: 
        for (var num3 = 1; num3 < 65; num3 = ((num3 + 1) | 0)) {
          if (($thisType.ConvertedChar(this.map.Get(10, num3))).charCodeAt(0) === ".".charCodeAt(0)) {
            this.map.Set(10, num3, "&");
            this.map.Set(11, num3, "&");
            break $loop7;
          }
          if (($thisType.ConvertedChar(this.map.Get(10, num3))).charCodeAt(0) === "&".charCodeAt(0)) {
            break $loop7;
          }
        }

      $loop8: 
        for (var num4 = 64; num4 > 0; num4 = ((num4 - 1) | 0)) {
          if (($thisType.ConvertedChar(this.map.Get(10, num4))).charCodeAt(0) === ".".charCodeAt(0)) {
            this.map.Set(10, num4, "&");
            this.map.Set(11, num4, "&");
            break $loop8;
          }
          if (($thisType.ConvertedChar(this.map.Get(10, num4))).charCodeAt(0) === "&".charCodeAt(0)) {
            break $loop8;
          }
        }
        this.MarkInterestingLocations();
        if ((this.NumberOfFloors() >= 420) && !this.HasLargeUnusedSpaces()) {
          break $loop0;
        }
        this.Clear();
      }
    }
    this.Convert();
    return this.map;
  };

  function StandardDungeon_GenerateHive () {
    this.ResetToDefaults();
    this.room_height_max = 3;
    this.room_width_max = 3;
    this.corridor_length_min = 4;
    this.corridor_length_max = 4;
    this.corridor_length_addition = 4;

  $loop0: 
    while (true) {
      this.CreateBasicMap();

      for (var i = 0; i < 700; i = ((i + 1) | 0)) {
        if ($T00().CoinFlip()) {
          this.CreateCorridor((($T00().Roll(((this.corridor_chain_length_max - ((this.corridor_chain_length_min - 1) | 0)) | 0)) + ((this.corridor_chain_length_min - 1) | 0)) | 0));
        } else {
          this.CreateRoom();
        }
      }
      this.RemoveDiagonals();
      this.RemoveDeadEnds();
      this.RemoveUnconnected();
      if ((this.NumberOfFloors() >= 320) && !this.HasLargeUnusedSpaces()) {
        break $loop0;
      }
      this.Clear();
    }
    this.Convert();
    return this.map;
  };

  function StandardDungeon_GenerateMine () {
    this.ResetToDefaults();
    this.room_height_min = 4;
    this.room_height_max = 10;
    this.room_width_min = 4;
    this.room_width_max = 12;

  $loop0: 
    while (true) {
      this.CreateBasicMap();
      this.RemoveUnconnected();
      if (!this.ApplyCaveModification()) {
        this.Clear();
      } else {
        this.RemoveDiagonals();
        this.RemoveUnconnected();
        this.AddFirePits();
        this.MarkInterestingLocations();
        if ((this.NumberOfFloors() >= 420) && !this.HasLargeUnusedSpaces()) {
          break $loop0;
        }
        this.Clear();
      }
    }
    if ($T00().Roll(10) === 10) {
      this.ApplyRuin();
    }
    this.Convert();
    return this.map;
  };

  function StandardDungeon_GenerateRuined () {
    this.ResetToDefaults();

  $loop0: 
    while (true) {
      this.CreateBasicMap();
      this.RemoveDiagonals();
      this.RemoveDeadEnds();
      this.RemoveUnconnected();
      this.AddDoors();
      this.AddPillars(30);
      this.MarkInterestingLocations();
      if ((this.NumberOfFloors() >= 320) && !this.HasLargeUnusedSpaces()) {
        break $loop0;
      }
      this.Clear();
    }

    for (var i = 0; i < 5; i = ((i + 1) | 0)) {
      this.ApplyRuin();
    }
    this.Convert();
    return this.map;
  };

  function StandardDungeon_GenerateStandard () {
    this.ResetToDefaults();

  $loop0: 
    while (true) {
      this.CreateBasicMap();
      this.RemoveDiagonals();
      this.RemoveDeadEnds();
      this.RemoveUnconnected();
      this.AddDoors();
      this.AddPillars(30);
      this.MarkInterestingLocations();
      if ((this.NumberOfFloors() >= 320) && !this.HasLargeUnusedSpaces()) {
        break $loop0;
      }
      this.Clear();
    }
    this.Convert();
    return this.map;
  };

  function StandardDungeon_HasLargeUnusedSpaces () {

    for (var i = 1; i < 21; i = ((i + 1) | 0)) {

      for (var j = 1; j < 65; j = ((j + 1) | 0)) {
        var flag = true;
        var num = -1;
        if (((((66 - j) | 0) - 1) | 0) < 15) {
          flag = false;
        } else {

        $loop2: 
          for (var k = 0; k < ((((66 - j) | 0) - 1) | 0); k = ((k + 1) | 0)) {
            if ($thisType.ConvertedChar(this.map.Get(i, ((j + k) | 0))).charCodeAt(0) !== "#".charCodeAt(0)) {
              if (k < 15) {
                flag = false;
              }
              break $loop2;
            }
            num = ((k + 1) | 0);
          }
        }

        for (var num2 = 1; (num2 < ((((22 - i) | 0) - 1) | 0)) && flag; num2 = ((num2 + 1) | 0)) {
          if (((num2 * num) | 0) >= 300) {
            return true;
          }

        $loop4: 
          for (var l = 0; l < ((((66 - j) | 0) - 1) | 0); l = ((l + 1) | 0)) {
            if ($thisType.ConvertedChar(this.map.Get(((i + num2) | 0), ((j + l) | 0))).charCodeAt(0) !== "#".charCodeAt(0)) {
              if (l < 15) {
                flag = false;
              } else if (((l + 1) | 0) < num) {
                num = ((l + 1) | 0);
              }
              break $loop4;
            }
          }
        }
      }
    }
    return false;
  };

  function StandardDungeon_IsCorridor$0E (ch) {
    return ((ch.charCodeAt(0) === "h".charCodeAt(0)) || 
      (ch.charCodeAt(0) === "i".charCodeAt(0)) || 
      (ch.charCodeAt(0) === "+".charCodeAt(0)) || (ch.charCodeAt(0) === "v".charCodeAt(0)));
  };

  function StandardDungeon_IsCorridor$0F (r, c) {
    return $S04().CallVirtual("IsCorridor", null, this, new ($T05())(r, c));
  };

  function StandardDungeon_IsCorridor$10 (p) {
    return !($S03().CallVirtual("IsRoom", null, this, p.MemberwiseClone()) || ($thisType.ConvertedChar(this.Map(p)).charCodeAt(0) === "#".charCodeAt(0)));
  };

  function StandardDungeon_IsLegal$11 (r, c) {
    if (!((r !== 0) && 
        (r !== 21) && 
        (c !== 0) && (c !== 65))) {
      return true;
    }
    var c2 = this.map.Get(r, c);
    if (c2.charCodeAt(0) !== "h".charCodeAt(0)) {
      if (c2.charCodeAt(0) !== "i".charCodeAt(0)) {
        if (c2.charCodeAt(0) !== "E".charCodeAt(0)) {
          if (c2.charCodeAt(0) !== "N".charCodeAt(0)) {
            if (c2.charCodeAt(0) !== "X".charCodeAt(0)) {
              if (c2.charCodeAt(0) !== "c".charCodeAt(0)) {
                if (c2.charCodeAt(0) !== "r".charCodeAt(0)) {
                  if (c2.charCodeAt(0) === "v".charCodeAt(0)) {
                    if (!((c <= 63) && ((this.Map($T00().PosInDir($T00().PosInDir(r, c, 6).MemberwiseClone(), 6))).charCodeAt(0) !== "v".charCodeAt(0)))) {
                      return false;
                    }
                    if (!((c >= 2) && ((this.Map($T00().PosInDir($T00().PosInDir(r, c, 4).MemberwiseClone(), 4))).charCodeAt(0) !== "v".charCodeAt(0)))) {
                      return false;
                    }
                  }
                }
              } else {
                var num = 0;
                if ((this.map.Get(((r - 1) | 0), ((c - 1) | 0))).charCodeAt(0) === "r".charCodeAt(0)) {
                  num = 7;
                }
                if ((this.map.Get(((r - 1) | 0), ((c + 1) | 0))).charCodeAt(0) === "r".charCodeAt(0)) {
                  num = 9;
                }
                if ((this.map.Get(((r + 1) | 0), ((c - 1) | 0))).charCodeAt(0) === "r".charCodeAt(0)) {
                  num = 1;
                }
                if ((this.map.Get(((r + 1) | 0), ((c + 1) | 0))).charCodeAt(0) === "r".charCodeAt(0)) {
                  num = 3;
                }
                if (num === 0) {
                  return false;
                }
                var array = JSIL.Array.New($T03(), 8);
                array[0] = "r";

                for (var i = 1; i < 8; i = ((i + 1) | 0)) {
                  array[i] = this.Map($T00().PosInDir(r, c, $T00().RotateDir(num, true, i)));
                }
                if ((array[1]).charCodeAt(0) !== "E".charCodeAt(0)) {
                  return false;
                }
                if ((array[7]).charCodeAt(0) !== "E".charCodeAt(0)) {
                  return false;
                }
                if (this.allow_all_corner_connections) {
                  if (!(((array[2]).charCodeAt(0) === "#".charCodeAt(0)) || ((array[3]).charCodeAt(0) === "#".charCodeAt(0)))) {
                    return false;
                  }
                  if (!(((array[6]).charCodeAt(0) === "#".charCodeAt(0)) || ((array[5]).charCodeAt(0) === "#".charCodeAt(0)))) {
                    return false;
                  }
                  if ((array[4]).charCodeAt(0) !== "#".charCodeAt(0)) {
                    if (!(((array[3]).charCodeAt(0) === "#".charCodeAt(0)) || ((array[5]).charCodeAt(0) === "#".charCodeAt(0)))) {
                      return false;
                    }
                    if (!(((array[3]).charCodeAt(0) !== "#".charCodeAt(0)) || ((array[5]).charCodeAt(0) !== "#".charCodeAt(0)))) {
                      return false;
                    }
                  }
                } else if (!(((array[3]).charCodeAt(0) === "#".charCodeAt(0)) && 
                    ((array[4]).charCodeAt(0) === "#".charCodeAt(0)) && ((array[5]).charCodeAt(0) === "#".charCodeAt(0)))) {
                  return false;
                }
              }
            } else {

              for (var j = 1; j <= 8; j = ((j + 1) | 0)) {
                var num2 = j;
                if (num2 === 5) {
                  num2 = 9;
                }
                if ($thisType.ConvertedChar(this.Map($T00().PosInDir(r, c, num2))).charCodeAt(0) !== "#".charCodeAt(0)) {
                  return false;
                }
              }
            }
          }
        } else {
          var num3 = 0;
          if ((this.map.Get(((r - 1) | 0), c)).charCodeAt(0) === "r".charCodeAt(0)) {
            num3 = 8;
          }
          if ((this.map.Get(((r + 1) | 0), c)).charCodeAt(0) === "r".charCodeAt(0)) {
            num3 = 2;
          }
          if ((this.map.Get(r, ((c - 1) | 0))).charCodeAt(0) === "r".charCodeAt(0)) {
            num3 = 4;
          }
          if ((this.map.Get(r, ((c + 1) | 0))).charCodeAt(0) === "r".charCodeAt(0)) {
            num3 = 6;
          }
          if (num3 === 0) {
            var array2 = JSIL.Array.New($T03(), 8);

            for (var k = 0; k < 8; k = ((k + 1) | 0)) {
              array2[k] = this.Map($T00().PosInDir(r, c, $T00().RotateDir(8, true, k)));
            }
            var num4 = 0;
            if ($S01().CallVirtual("IsCorridor", null, this, array2[7])) {
              num4 = ((num4 + 1) | 0);
            }

            for (var l = 0; l < 8; l = ((l + 1) | 0)) {
              if ($S01().CallVirtual("IsCorridor", null, this, array2[l])) {
                num4 = ((num4 + 1) | 0);
              } else {
                num4 = 0;
              }
              if (num4 === 2) {
                return false;
              }
            }
            var num5 = 0;
            if ($S05().CallVirtual("IsRoom", null, this, array2[5])) {
              num5 = ((num5 + 1) | 0);
            }
            if ($S05().CallVirtual("IsRoom", null, this, array2[6])) {
              num5 = ((num5 + 1) | 0);
            } else {
              num5 = 0;
            }
            if ($S05().CallVirtual("IsRoom", null, this, array2[7])) {
              num5 = ((num5 + 1) | 0);
            } else {
              num5 = 0;
            }

            for (var m = 0; m < 8; m = ((m + 1) | 0)) {
              if ($S05().CallVirtual("IsRoom", null, this, array2[m])) {
                num5 = ((num5 + 1) | 0);
              } else {
                num5 = 0;
              }
              if (num5 === 5) {
                return true;
              }
            }
          } else {
            var array3 = JSIL.Array.New($T03(), 8);
            array3[0] = "r";

            for (var n = 1; n < 8; n = ((n + 1) | 0)) {
              array3[n] = this.Map($T00().PosInDir(r, c, $T00().RotateDir(num3, true, n)));
            }
            if (!(((array3[1]).charCodeAt(0) === "r".charCodeAt(0)) || ((array3[1]).charCodeAt(0) === "E".charCodeAt(0)))) {
              return false;
            }
            if (!(((array3[7]).charCodeAt(0) === "r".charCodeAt(0)) || ((array3[7]).charCodeAt(0) === "E".charCodeAt(0)))) {
              return false;
            }
            if (!(((array3[2]).charCodeAt(0) === "c".charCodeAt(0)) || 
                ((array3[2]).charCodeAt(0) === "E".charCodeAt(0)) || ((array3[2]).charCodeAt(0) === "N".charCodeAt(0)))) {
              return false;
            }
            if (!(((array3[6]).charCodeAt(0) === "c".charCodeAt(0)) || 
                ((array3[6]).charCodeAt(0) === "E".charCodeAt(0)) || ((array3[6]).charCodeAt(0) === "N".charCodeAt(0)))) {
              return false;
            }
            if (!(((array3[4]).charCodeAt(0) === "#".charCodeAt(0)) || (((array3[3]).charCodeAt(0) === "#".charCodeAt(0)) && 
                  ((array3[5]).charCodeAt(0) === "#".charCodeAt(0))))) {
              return false;
            }
          }
        }
      } else {
        var array4 = JSIL.Array.New($T03(), 8);

        for (var num6 = 0; num6 < 8; num6 = ((num6 + 1) | 0)) {
          array4[num6] = this.Map($T00().PosInDir(r, c, $T00().RotateDir(8, true, num6)));
        }
        var num7 = 0;
        if (($thisType.ConvertedChar(array4[6])).charCodeAt(0) === ".".charCodeAt(0)) {
          num7 = ((num7 + 1) | 0);
        }
        if (($thisType.ConvertedChar(array4[7])).charCodeAt(0) === ".".charCodeAt(0)) {
          num7 = ((num7 + 1) | 0);
        } else {
          num7 = 0;
        }

        for (var num8 = 0; num8 < 8; num8 = ((num8 + 1) | 0)) {
          if ($thisType.ConvertedChar(array4[num8]).charCodeAt(0) === ".".charCodeAt(0)) {
            num7 = ((num7 + 1) | 0);
          } else {
            num7 = 0;
          }
          if (num7 === 3) {
            return false;
          }
        }
      }
    } else {
      if (!((r <= 19) && ((this.Map($T00().PosInDir($T00().PosInDir(r, c, 2).MemberwiseClone(), 2))).charCodeAt(0) !== "h".charCodeAt(0)))) {
        return false;
      }
      if (!((r >= 2) && ((this.Map($T00().PosInDir($T00().PosInDir(r, c, 8).MemberwiseClone(), 8))).charCodeAt(0) !== "h".charCodeAt(0)))) {
        return false;
      }
    }
    return true;
  };

  function StandardDungeon_IsLegal$12 (map, r, c) {
    return $thisType.IsLegal(map, r, c, false);
  };

  function StandardDungeon_IsLegal$13 (map, r, c, allow_all_corner_connections) {
    if (!((r !== 0) && 
        (r !== ((map.length0 - 1) | 0)) && 
        (c !== 0) && (c !== ((map.length1 - 1) | 0)))) {
      return true;
    }
    var c2 = map.Get(r, c);
    if (c2.charCodeAt(0) !== "h".charCodeAt(0)) {
      if (c2.charCodeAt(0) !== "i".charCodeAt(0)) {
        if (c2.charCodeAt(0) !== "E".charCodeAt(0)) {
          if (c2.charCodeAt(0) !== "N".charCodeAt(0)) {
            if (c2.charCodeAt(0) !== "X".charCodeAt(0)) {
              if (c2.charCodeAt(0) !== "c".charCodeAt(0)) {
                if (c2.charCodeAt(0) !== "r".charCodeAt(0)) {
                  if (c2.charCodeAt(0) === "v".charCodeAt(0)) {
                    var pos = $T00().PosInDir($T00().PosInDir(r, c, 6).MemberwiseClone(), 6).MemberwiseClone();
                    if (!((c <= 63) && (map.Get(pos.r, pos.c).charCodeAt(0) !== "v".charCodeAt(0)))) {
                      return false;
                    }
                    pos = $T00().PosInDir($T00().PosInDir(r, c, 4).MemberwiseClone(), 4).MemberwiseClone();
                    if (!((c >= 2) && (map.Get(pos.r, pos.c).charCodeAt(0) !== "v".charCodeAt(0)))) {
                      return false;
                    }
                  }
                }
              } else {
                var num = 0;
                if ((map.Get(((r - 1) | 0), ((c - 1) | 0))).charCodeAt(0) === "r".charCodeAt(0)) {
                  num = 7;
                }
                if ((map.Get(((r - 1) | 0), ((c + 1) | 0))).charCodeAt(0) === "r".charCodeAt(0)) {
                  num = 9;
                }
                if ((map.Get(((r + 1) | 0), ((c - 1) | 0))).charCodeAt(0) === "r".charCodeAt(0)) {
                  num = 1;
                }
                if ((map.Get(((r + 1) | 0), ((c + 1) | 0))).charCodeAt(0) === "r".charCodeAt(0)) {
                  num = 3;
                }
                if (num === 0) {
                  return false;
                }
                var array = JSIL.Array.New($T03(), 8);
                array[0] = "r";

                for (var i = 1; i < 8; i = ((i + 1) | 0)) {
                  var pos2 = $T00().PosInDir(r, c, $T00().RotateDir(num, true, i)).MemberwiseClone();
                  array[i] = map.Get(pos2.r, pos2.c);
                }
                if ((array[1]).charCodeAt(0) !== "E".charCodeAt(0)) {
                  return false;
                }
                if ((array[7]).charCodeAt(0) !== "E".charCodeAt(0)) {
                  return false;
                }
                if (allow_all_corner_connections) {
                  if (!(((array[2]).charCodeAt(0) === "#".charCodeAt(0)) || ((array[3]).charCodeAt(0) === "#".charCodeAt(0)))) {
                    return false;
                  }
                  if (!(((array[6]).charCodeAt(0) === "#".charCodeAt(0)) || ((array[5]).charCodeAt(0) === "#".charCodeAt(0)))) {
                    return false;
                  }
                  if ((array[4]).charCodeAt(0) !== "#".charCodeAt(0)) {
                    if (!(((array[3]).charCodeAt(0) === "#".charCodeAt(0)) || ((array[5]).charCodeAt(0) === "#".charCodeAt(0)))) {
                      return false;
                    }
                    if (!(((array[3]).charCodeAt(0) !== "#".charCodeAt(0)) || ((array[5]).charCodeAt(0) !== "#".charCodeAt(0)))) {
                      return false;
                    }
                  }
                } else if (!(((array[3]).charCodeAt(0) === "#".charCodeAt(0)) && 
                    ((array[4]).charCodeAt(0) === "#".charCodeAt(0)) && ((array[5]).charCodeAt(0) === "#".charCodeAt(0)))) {
                  return false;
                }
              }
            } else {

              for (var j = 1; j <= 8; j = ((j + 1) | 0)) {
                var num2 = j;
                if (num2 === 5) {
                  num2 = 9;
                }
                var pos3 = $T00().PosInDir(r, c, num2).MemberwiseClone();
                if ($thisType.ConvertedChar(map.Get(pos3.r, pos3.c)).charCodeAt(0) !== "#".charCodeAt(0)) {
                  return false;
                }
              }
            }
          }
        } else {
          var num3 = 0;
          if ((map.Get(((r - 1) | 0), c)).charCodeAt(0) === "r".charCodeAt(0)) {
            num3 = 8;
          }
          if ((map.Get(((r + 1) | 0), c)).charCodeAt(0) === "r".charCodeAt(0)) {
            num3 = 2;
          }
          if ((map.Get(r, ((c - 1) | 0))).charCodeAt(0) === "r".charCodeAt(0)) {
            num3 = 4;
          }
          if ((map.Get(r, ((c + 1) | 0))).charCodeAt(0) === "r".charCodeAt(0)) {
            num3 = 6;
          }
          if (num3 === 0) {
            return false;
          }
          var array2 = JSIL.Array.New($T03(), 8);
          array2[0] = "r";

          for (var k = 1; k < 8; k = ((k + 1) | 0)) {
            var pos4 = $T00().PosInDir(r, c, $T00().RotateDir(num3, true, k)).MemberwiseClone();
            array2[k] = map.Get(pos4.r, pos4.c);
          }
          if (!(((array2[1]).charCodeAt(0) === "r".charCodeAt(0)) || ((array2[1]).charCodeAt(0) === "E".charCodeAt(0)))) {
            return false;
          }
          if (!(((array2[7]).charCodeAt(0) === "r".charCodeAt(0)) || ((array2[7]).charCodeAt(0) === "E".charCodeAt(0)))) {
            return false;
          }
          if (!(((array2[2]).charCodeAt(0) === "c".charCodeAt(0)) || 
              ((array2[2]).charCodeAt(0) === "E".charCodeAt(0)) || ((array2[2]).charCodeAt(0) === "N".charCodeAt(0)))) {
            return false;
          }
          if (!(((array2[6]).charCodeAt(0) === "c".charCodeAt(0)) || 
              ((array2[6]).charCodeAt(0) === "E".charCodeAt(0)) || ((array2[6]).charCodeAt(0) === "N".charCodeAt(0)))) {
            return false;
          }
          if (!(((array2[4]).charCodeAt(0) === "#".charCodeAt(0)) || (((array2[3]).charCodeAt(0) === "#".charCodeAt(0)) && 
                ((array2[5]).charCodeAt(0) === "#".charCodeAt(0))))) {
            return false;
          }
        }
      } else {
        var array3 = JSIL.Array.New($T03(), 8);

        for (var l = 0; l < 8; l = ((l + 1) | 0)) {
          var pos5 = $T00().PosInDir(r, c, $T00().RotateDir(8, true, l)).MemberwiseClone();
          array3[l] = map.Get(pos5.r, pos5.c);
        }
        var num4 = 0;
        if (($thisType.ConvertedChar(array3[6])).charCodeAt(0) === ".".charCodeAt(0)) {
          num4 = ((num4 + 1) | 0);
        }
        if (($thisType.ConvertedChar(array3[7])).charCodeAt(0) === ".".charCodeAt(0)) {
          num4 = ((num4 + 1) | 0);
        } else {
          num4 = 0;
        }

        for (var m = 0; m < 8; m = ((m + 1) | 0)) {
          if ($thisType.ConvertedChar(array3[m]).charCodeAt(0) === ".".charCodeAt(0)) {
            num4 = ((num4 + 1) | 0);
          } else {
            num4 = 0;
          }
          if (num4 === 3) {
            return false;
          }
        }
      }
    } else {
      var pos6 = $T00().PosInDir($T00().PosInDir(r, c, 2).MemberwiseClone(), 2).MemberwiseClone();
      if (!((r <= 19) && (map.Get(pos6.r, pos6.c).charCodeAt(0) !== "h".charCodeAt(0)))) {
        return false;
      }
      pos6 = $T00().PosInDir($T00().PosInDir(r, c, 8).MemberwiseClone(), 8).MemberwiseClone();
      if (!((r >= 2) && (map.Get(pos6.r, pos6.c).charCodeAt(0) !== "h".charCodeAt(0)))) {
        return false;
      }
    }
    return true;
  };

  function StandardDungeon_IsRoom$14 (ch) {
    switch (ch) {
      default: 
      case "%": 
        switch (ch) {
          default: 
          case "O": 
            if (!((ch.charCodeAt(0) === "0".charCodeAt(0)) || 
                (ch.charCodeAt(0) === "E".charCodeAt(0)) || 
                (ch.charCodeAt(0) === "c".charCodeAt(0)) || (ch.charCodeAt(0) === "r".charCodeAt(0)))) {
              return false;
            }
            break;

        }
        break;

    }
    return true;
  };

  function StandardDungeon_IsRoom$15 (r, c) {
    return $S03().CallVirtual("IsRoom", null, this, new ($T05())(r, c));
  };

  function StandardDungeon_IsRoom$16 (p) {
    if (!this.IsRoomOrGenericFloor(this.Map(p))) {
      return false;
    }

    for (var i = 2; i <= 8; i = ((i + 2) | 0)) {
      if (!(!this.IsRoomOrGenericFloor(this.Map($T00().PosInDir(p.MemberwiseClone(), i))) || 
          !this.IsRoomOrGenericFloor(this.Map($T00().PosInDir(p.MemberwiseClone(), $T00().RotateDir(i, true, 1)))) || !this.IsRoomOrGenericFloor(this.Map($T00().PosInDir(p.MemberwiseClone(), $T00().RotateDir(i, true, 2)))))) {
        return true;
      }
    }
    return false;
  };

  function StandardDungeon_IsRoomOrGenericFloor (ch) {
    return !(!$S05().CallVirtual("IsRoom", null, this, ch) && (ch.charCodeAt(0) !== ".".charCodeAt(0)));
  };

  function StandardDungeon_MarkInterestingLocations () {
    this.ForEachRoom(function StandardDungeon_$lMarkInterestingLocations$gm__1B (start_r, start_c, end_r, end_c) {
        var $temp00, $temp01, $temp02, $temp03, $temp04, $temp05, $temp06, $temp07, $temp08, $temp09;
        var num = ((((end_r - start_r) | 0) + 1) | 0);
        var num2 = ((((end_c - start_c) | 0) + 1) | 0);
        if (!((((num % 2) | 0) !== 1) && (((num2 % 2) | 0) !== 1))) {
          var list = $S00().Construct();

          for (var i = start_r; i <= end_r; i = ((i + 1) | 0)) {

            for (var j = start_c; j <= end_c; j = ((j + 1) | 0)) {
              if (!(((i !== start_r) && 
                    (j !== start_c) && 
                    (i !== end_r) && 
                    (j !== end_c)) || (!$S01().CallVirtual("IsCorridor", null, this, this.map.Get(((i - 1) | 0), j)) && 
                    !$S01().CallVirtual("IsCorridor", null, this, this.map.Get(i, ((j - 1) | 0))) && 
                    !$S01().CallVirtual("IsCorridor", null, this, this.map.Get(((i + 1) | 0), j)) && 
                    !$S01().CallVirtual("IsCorridor", null, this, this.map.Get(i, ((j + 1) | 0)))))) {
                list.Add(new ($T05())(i, j));
              }
            }
          }
          var num3 = ((((start_r + end_r) | 0) / 2) | 0);
          var num4 = ((((start_c + end_c) | 0) / 2) | 0);
          var num5 = ((((((start_r + end_r) | 0) + 1) | 0) / 2) | 0);
          var num6 = ((((((start_c + end_c) | 0) + 1) | 0) / 2) | 0);
          var list2 = $S00().Construct();
          list2.Add(new ($T05())(num3, num4));
          if (num3 !== num5) {
            list2.Add(new ($T05())(num5, num4));
          } else if (num4 !== num6) {
            list2.Add(new ($T05())(num3, num6));
          }
          var list3 = $S00().Construct();
          if (((num2 % 2) | 0) === 1) {

            for (var k = start_r; k <= end_r; k = ((k + 1) | 0)) {
              list3.Add(new ($T05())(k, num4));
            }
          }
          if (((num % 2) | 0) === 1) {

            for (var l = start_c; l <= end_c; l = ((l + 1) | 0)) {
              var flag = true;

            $loop4: 
              for (var a$0 = list3._items, i$0 = 0, l$0 = list3._size; i$0 < l$0; ($temp00 = i$0, 
                  i$0 = ((i$0 + 1) | 0), 
                  $temp00)) {
                var current = a$0[i$0].MemberwiseClone();
                if (!((current.r !== num3) || (current.c !== l))) {
                  flag = false;
                  break $loop4;
                }
              }
              if (flag) {
                list3.Add(new ($T05())(num3, l));
              }
            }
          }
          var list4 = $S00().Construct();

          for (var a$1 = list3._items, i$1 = 0, l$1 = list3._size; i$1 < l$1; ($temp01 = i$1, 
              i$1 = ((i$1 + 1) | 0), 
              $temp01)) {
            var current2 = a$1[i$1].MemberwiseClone();
            var num7 = this.ForEachDirection(current2.r, current2.c, function StandardDungeon_$lMarkInterestingLocations$gm__1F (ch) {
                return ($thisType.ConvertedChar(ch).charCodeAt(0) === ".".charCodeAt(0));
              }, true);
            if (!(($thisType.ConvertedChar(this.Map(current2)).charCodeAt(0) === ".".charCodeAt(0)) && (num7 === 8))) {
              list4.Add(current2.MemberwiseClone());
            }
          }

          for (var a$2 = list4._items, i$2 = 0, l$2 = list4._size; i$2 < l$2; ($temp02 = i$2, 
              i$2 = ((i$2 + 1) | 0), 
              $temp02)) {
            var current3 = a$2[i$2].MemberwiseClone();
            list3.Remove(current3.MemberwiseClone());
          }
          list4.Clear();

          for (var a$3 = list._items, i$3 = 0, l$3 = list._size; i$3 < l$3; ($temp03 = i$3, 
              i$3 = ((i$3 + 1) | 0), 
              $temp03)) {
            var current4 = a$3[i$3].MemberwiseClone();
            var num8 = 0;

            for (var a$4 = list2._items, i$4 = 0, l$4 = list2._size; i$4 < l$4; ($temp04 = i$4, 
                i$4 = ((i$4 + 1) | 0), 
                $temp04)) {
              var current5 = a$4[i$4].MemberwiseClone();
              if ($T00().EstimatedEuclideanDistanceFromX10(current4.MemberwiseClone(), current5.MemberwiseClone()) > num8) {
                num8 = $T00().EstimatedEuclideanDistanceFromX10(current4.MemberwiseClone(), current5.MemberwiseClone());
              }
            }

            for (var a$5 = list3._items, i$5 = 0, l$5 = list3._size; i$5 < l$5; ($temp05 = i$5, 
                i$5 = ((i$5 + 1) | 0), 
                $temp05)) {
              var current6 = a$5[i$5].MemberwiseClone();
              if ($T00().EstimatedEuclideanDistanceFromX10(current4.MemberwiseClone(), current6.MemberwiseClone()) <= num8) {
                list4.Add(current6.MemberwiseClone());
              }
            }
          }

          for (var a$6 = list4._items, i$6 = 0, l$6 = list4._size; i$6 < l$6; ($temp06 = i$6, 
              i$6 = ((i$6 + 1) | 0), 
              $temp06)) {
            var current7 = a$6[i$6].MemberwiseClone();
            list3.Remove(current7.MemberwiseClone());
          }
          if (list3.get_Count() > 0) {
            var num9 = 0;
            var list5 = $S00().Construct();

            for (var a$7 = list3._items, i$7 = 0, l$7 = list3._size; i$7 < l$7; ($temp07 = i$7, 
                i$7 = ((i$7 + 1) | 0), 
                $temp07)) {
              var current8 = a$7[i$7].MemberwiseClone();
              var num10 = 0;

              for (var a$8 = list._items, i$8 = 0, l$8 = list._size; i$8 < l$8; ($temp08 = i$8, 
                  i$8 = ((i$8 + 1) | 0), 
                  $temp08)) {
                var current9 = a$8[i$8].MemberwiseClone();
                num10 = ((num10 + $T00().EstimatedEuclideanDistanceFromX10(current8.MemberwiseClone(), current9.MemberwiseClone())) | 0);
              }
              if (num10 > num9) {
                num9 = num10;
                list5.Clear();
                list5.Add(current8.MemberwiseClone());
              } else if (num10 === num9) {
                list5.Add(current8.MemberwiseClone());
              }
            }

            for (var a$9 = list5._items, i$9 = 0, l$9 = list5._size; i$9 < l$9; ($temp09 = i$9, 
                i$9 = ((i$9 + 1) | 0), 
                $temp09)) {
              var current10 = a$9[i$9].MemberwiseClone();
              this.map.Set(current10.r, current10.c, "$");
            }
          } else if (!((((num % 2) | 0) !== 1) || (((num2 % 2) | 0) !== 1))) {
            var num11 = this.ForEachDirection(num3, num4, function StandardDungeon_$lMarkInterestingLocations$gm__20 (ch) {
                return ($thisType.ConvertedChar(ch).charCodeAt(0) === ".".charCodeAt(0));
              }, true);
            if (!(($thisType.ConvertedChar(this.map.Get(num3, num4)).charCodeAt(0) !== ".".charCodeAt(0)) || (num11 !== 8))) {
              this.map.Set(num3, num4, "$");
            }
          }
        }
        return true;
      }.bind(this));
  };

  function StandardDungeon_NumberOfFloors$17 () {
    var num = 0;

    for (var i = 0; i < 22; i = ((i + 1) | 0)) {

      for (var j = 0; j < 66; j = ((j + 1) | 0)) {
        if ($thisType.ConvertedChar(this.map.Get(i, j)).charCodeAt(0) === ".".charCodeAt(0)) {
          num = ((num + 1) | 0);
        }
      }
    }
    return num;
  };

  function StandardDungeon_NumberOfFloors$18 (map) {
    var num = 0;

    for (var i = 0; i < map.length0; i = ((i + 1) | 0)) {

      for (var j = 0; j < map.length1; j = ((j + 1) | 0)) {
        if ($thisType.ConvertedChar(map.Get(i, j)).charCodeAt(0) === ".".charCodeAt(0)) {
          num = ((num + 1) | 0);
        }
      }
    }
    return num;
  };

  function StandardDungeon_Reflect (horizontal_axis, vertical_axis) {
    var num = 11;
    var num2 = 33;
    if (horizontal_axis) {
      if (vertical_axis) {

        for (var i = 0; i < num; i = ((i + 1) | 0)) {

          for (var j = 0; j < num2; j = ((j + 1) | 0)) {
            this.map.Set(((21 - i) | 0), j, this.map.Get(i, j));
            this.map.Set(i, ((65 - j) | 0), this.map.Get(i, j));
            this.map.Set(((21 - i) | 0), ((65 - j) | 0), this.map.Get(i, j));
          }
        }
      } else {

        for (var k = 0; k < num; k = ((k + 1) | 0)) {

          for (var l = 0; l < 66; l = ((l + 1) | 0)) {
            this.map.Set(((21 - k) | 0), l, this.map.Get(k, l));
          }
        }
      }
    } else if (vertical_axis) {

      for (var m = 0; m < 22; m = ((m + 1) | 0)) {

        for (var n = 0; n < num2; n = ((n + 1) | 0)) {
          this.map.Set(m, ((65 - n) | 0), this.map.Get(m, n));
        }
      }
    }
  };

  function StandardDungeon_RemoveDeadEnds$19 () {

    for (var flag = true; flag; ) {
      flag = false;

      for (var i = 0; i < 22; i = ((i + 1) | 0)) {

        for (var j = 0; j < 66; j = ((j + 1) | 0)) {
          if (!(($thisType.ConvertedChar(this.map.Get(i, j)).charCodeAt(0) !== ".".charCodeAt(0)) && ($thisType.ConvertedChar(this.map.Get(i, j)).charCodeAt(0) !== "+".charCodeAt(0)))) {
            var num = 0;
            if (($thisType.ConvertedChar(this.map.Get(((i + 1) | 0), j))).charCodeAt(0) === "#".charCodeAt(0)) {
              num = ((num + 1) | 0);
            }
            if (($thisType.ConvertedChar(this.map.Get(((i - 1) | 0), j))).charCodeAt(0) === "#".charCodeAt(0)) {
              num = ((num + 1) | 0);
            }
            if (($thisType.ConvertedChar(this.map.Get(i, ((j + 1) | 0)))).charCodeAt(0) === "#".charCodeAt(0)) {
              num = ((num + 1) | 0);
            }
            if (($thisType.ConvertedChar(this.map.Get(i, ((j - 1) | 0)))).charCodeAt(0) === "#".charCodeAt(0)) {
              num = ((num + 1) | 0);
            }
            if (num >= 3) {
              this.map.Set(i, j, "#");
              flag = true;
            }
          }
        }
      }
    }
  };

  function StandardDungeon_RemoveDeadEnds$1A (map) {

    for (var flag = true; flag; ) {
      flag = false;

      for (var i = 0; i < map.length0; i = ((i + 1) | 0)) {

        for (var j = 0; j < map.length1; j = ((j + 1) | 0)) {
          if ($thisType.ConvertedChar(map.Get(i, j)).charCodeAt(0) === ".".charCodeAt(0)) {
            var num = 0;
            if (($thisType.ConvertedChar(map.Get(((i + 1) | 0), j))).charCodeAt(0) === "#".charCodeAt(0)) {
              num = ((num + 1) | 0);
            }
            if (($thisType.ConvertedChar(map.Get(((i - 1) | 0), j))).charCodeAt(0) === "#".charCodeAt(0)) {
              num = ((num + 1) | 0);
            }
            if (($thisType.ConvertedChar(map.Get(i, ((j + 1) | 0)))).charCodeAt(0) === "#".charCodeAt(0)) {
              num = ((num + 1) | 0);
            }
            if (($thisType.ConvertedChar(map.Get(i, ((j - 1) | 0)))).charCodeAt(0) === "#".charCodeAt(0)) {
              num = ((num + 1) | 0);
            }
            if (num >= 3) {
              map.Set(i, j, "#");
              flag = true;
            }
          }
        }
      }
    }
  };

  function StandardDungeon_RemoveDiagonals$1B () {
    var pos4 = new ($T05())();
    var list = $S00().Construct();

    for (var i = 1; i < 20; i = ((i + 1) | 0)) {

      for (var j = 1; j < 64; j = ((j + 1) | 0)) {
        if (!(($thisType.ConvertedChar(this.map.Get(i, j)).charCodeAt(0) !== ".".charCodeAt(0)) || 
            (($thisType.ConvertedChar(this.map.Get(i, ((j + 1) | 0)))).charCodeAt(0) !== "#".charCodeAt(0)) || 
            (($thisType.ConvertedChar(this.map.Get(((i + 1) | 0), j))).charCodeAt(0) !== "#".charCodeAt(0)) || (($thisType.ConvertedChar(this.map.Get(((i + 1) | 0), ((j + 1) | 0)))).charCodeAt(0) !== ".".charCodeAt(0)))) {
          list.Add(new ($T05())(i, ((j + 1) | 0)));
          list.Add(new ($T05())(((i + 1) | 0), j));
        }
        if (!(($thisType.ConvertedChar(this.map.Get(i, j)).charCodeAt(0) !== "#".charCodeAt(0)) || 
            (($thisType.ConvertedChar(this.map.Get(i, ((j + 1) | 0)))).charCodeAt(0) !== ".".charCodeAt(0)) || 
            (($thisType.ConvertedChar(this.map.Get(((i + 1) | 0), j))).charCodeAt(0) !== ".".charCodeAt(0)) || (($thisType.ConvertedChar(this.map.Get(((i + 1) | 0), ((j + 1) | 0)))).charCodeAt(0) !== "#".charCodeAt(0)))) {
          list.Add(new ($T05())(i, j));
          list.Add(new ($T05())(((i + 1) | 0), ((j + 1) | 0)));
        }
        if (list.get_Count() > 0) {
          var pos = list.get_Item(0).MemberwiseClone();
          var pos2 = list.get_Item(1).MemberwiseClone();

          while (list.get_Count() > 0) {
            var pos3 = list.get_Item((($T00().Roll(list.get_Count()) - 1) | 0)).MemberwiseClone();
            list.Remove(pos3.MemberwiseClone());
            var dir = 0;
            var array = JSIL.Array.New($T03(), 8);

            for (var k = 0; k < 8; k = ((k + 1) | 0)) {
              array[k] = this.Map($T00().PosInDir(pos3.MemberwiseClone(), $T00().RotateDir(8, true, k)));
              $T05().prototype._ctor.call(pos4, -1, -1);
              if (!((pos3.r !== pos.r) || (pos3.c !== pos.c))) {
                pos4 = pos2.MemberwiseClone();
              } else {
                pos4 = pos.MemberwiseClone();
              }
              if (!(($T00().PosInDir(pos3.MemberwiseClone(), $T00().RotateDir(8, true, k)).r !== pos4.r) || ($T00().PosInDir(pos3.MemberwiseClone(), $T00().RotateDir(8, true, k)).c !== pos4.c))) {
                dir = $T00().RotateDir(8, true, k);
              }
            }
            var num = 0;

            for (var l = 5; l < 8; l = ((l + 1) | 0)) {
              if ($thisType.ConvertedChar(array[l]).charCodeAt(0) === "#".charCodeAt(0)) {
                num = ((num + 1) | 0);
              } else {
                num = 0;
              }
            }

          $loop5: 
            for (var m = 0; m < 8; m = ((m + 1) | 0)) {
              if ($thisType.ConvertedChar(array[m]).charCodeAt(0) === "#".charCodeAt(0)) {
                num = ((num + 1) | 0);
              } else {
                num = 0;
              }
              if (!((num !== 4) && ((($thisType.ConvertedChar(this.Map($T00().PosInDir(pos3.MemberwiseClone(), $T00().RotateDir(dir, true, 3))))).charCodeAt(0) !== "#".charCodeAt(0)) || 
                    (($thisType.ConvertedChar(this.Map($T00().PosInDir(pos3.MemberwiseClone(), $T00().RotateDir(dir, true, 4))))).charCodeAt(0) !== "#".charCodeAt(0)) || 
                    (($thisType.ConvertedChar(this.Map($T00().PosInDir(pos3.MemberwiseClone(), $T00().RotateDir(dir, true, 5))))).charCodeAt(0) !== "#".charCodeAt(0))))) {
                this.map.Set(pos3.r, pos3.c, "i");
                if (this.IsLegal(pos3.r, pos3.c)) {
                  list.Clear();
                } else {
                  this.map.Set(pos3.r, pos3.c, "#");
                }
                break $loop5;
              }
            }
          }
        }
      }
    }
  };

  function StandardDungeon_RemoveDiagonals$1C (map) {
    var list = $S00().Construct();

    for (var i = 1; i < ((map.length0 - 2) | 0); i = ((i + 1) | 0)) {

      for (var j = 1; j < ((map.length1 - 2) | 0); j = ((j + 1) | 0)) {
        if (!(($thisType.ConvertedChar(map.Get(i, j)).charCodeAt(0) !== ".".charCodeAt(0)) || 
            (($thisType.ConvertedChar(map.Get(i, ((j + 1) | 0)))).charCodeAt(0) !== "#".charCodeAt(0)) || 
            (($thisType.ConvertedChar(map.Get(((i + 1) | 0), j))).charCodeAt(0) !== "#".charCodeAt(0)) || (($thisType.ConvertedChar(map.Get(((i + 1) | 0), ((j + 1) | 0)))).charCodeAt(0) !== ".".charCodeAt(0)))) {
          list.Add(new ($T05())(i, ((j + 1) | 0)));
          list.Add(new ($T05())(((i + 1) | 0), j));
        }
        if (!(($thisType.ConvertedChar(map.Get(i, j)).charCodeAt(0) !== "#".charCodeAt(0)) || 
            (($thisType.ConvertedChar(map.Get(i, ((j + 1) | 0)))).charCodeAt(0) !== ".".charCodeAt(0)) || 
            (($thisType.ConvertedChar(map.Get(((i + 1) | 0), j))).charCodeAt(0) !== ".".charCodeAt(0)) || (($thisType.ConvertedChar(map.Get(((i + 1) | 0), ((j + 1) | 0)))).charCodeAt(0) !== "#".charCodeAt(0)))) {
          list.Add(new ($T05())(i, j));
          list.Add(new ($T05())(((i + 1) | 0), ((j + 1) | 0)));
        }

        while (list.get_Count() > 0) {
          var item = list.get_Item((($T00().Roll(list.get_Count()) - 1) | 0)).MemberwiseClone();
          list.Remove(item.MemberwiseClone());
          var array = JSIL.Array.New($T03(), 8);

          for (var k = 0; k < 8; k = ((k + 1) | 0)) {
            var pos = $T00().PosInDir(item.r, item.c, $T00().RotateDir(8, true, k)).MemberwiseClone();
            array[k] = map.Get(pos.r, pos.c);
          }
          var num = 0;

          for (var l = 5; l < 8; l = ((l + 1) | 0)) {
            if ($thisType.ConvertedChar(array[l]).charCodeAt(0) === "#".charCodeAt(0)) {
              num = ((num + 1) | 0);
            } else {
              num = 0;
            }
          }

        $loop5: 
          for (var m = 0; m < 8; m = ((m + 1) | 0)) {
            if ($thisType.ConvertedChar(array[m]).charCodeAt(0) === "#".charCodeAt(0)) {
              num = ((num + 1) | 0);
            } else {
              num = 0;
            }
            if (num === 4) {
              map.Set(item.r, item.c, "i");
              if ($thisType.IsLegal(map, item.r, item.c)) {
                list.Clear();
              } else {
                map.Set(item.r, item.c, "#");
              }
              break $loop5;
            }
          }
        }
      }
    }
  };

  function StandardDungeon_RemoveUnconnected$1D () {
    var array = JSIL.MultidimensionalArray.New($T01(), 22, 66);

    for (var i = 0; i < 22; i = ((i + 1) | 0)) {

      for (var j = 0; j < 66; j = ((j + 1) | 0)) {
        if (!(($thisType.ConvertedChar(this.map.Get(i, j)).charCodeAt(0) !== ".".charCodeAt(0)) && 
            (this.map.Get(i, j).charCodeAt(0) !== "&".charCodeAt(0)) && 
            (this.map.Get(i, j).charCodeAt(0) !== ":".charCodeAt(0)) && 
            (this.map.Get(i, j).charCodeAt(0) !== "P".charCodeAt(0)) && (this.map.Get(i, j).charCodeAt(0) !== "+".charCodeAt(0)))) {
          array.Set(i, j, 0);
        } else {
          array.Set(i, j, -1);
        }
      }
    }
    var num = 0;

    for (var k = 0; k < 22; k = ((k + 1) | 0)) {

      for (var l = 0; l < 66; l = ((l + 1) | 0)) {
        if (array.Get(k, l) === 0) {
          num = ((num + 1) | 0);
          array.Set(k, l, num);

          for (var flag = true; flag; ) {
            flag = false;

            for (var m = 0; m < 22; m = ((m + 1) | 0)) {

              for (var n = 0; n < 66; n = ((n + 1) | 0)) {
                if (array.Get(m, n) === num) {

                  for (var num2 = -1; num2 <= 1; num2 = ((num2 + 1) | 0)) {

                    for (var num3 = -1; num3 <= 1; num3 = ((num3 + 1) | 0)) {
                      if (array.Get(((m + num2) | 0), ((n + num3) | 0)) === 0) {
                        array.Set(((m + num2) | 0), ((n + num3) | 0), num);
                        flag = true;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    var num4 = -1;
    var num5 = 0;

    for (var num6 = 1; num6 <= num; num6 = ((num6 + 1) | 0)) {
      var num7 = 0;

      for (var num8 = 0; num8 < 22; num8 = ((num8 + 1) | 0)) {

        for (var num9 = 0; num9 < 66; num9 = ((num9 + 1) | 0)) {
          if (array.Get(num8, num9) === num6) {
            num7 = ((num7 + 1) | 0);
          }
        }
      }
      if (num7 > num5) {
        num5 = num7;
        num4 = num6;
      }
    }

    for (var num10 = 0; num10 < 22; num10 = ((num10 + 1) | 0)) {

      for (var num11 = 0; num11 < 66; num11 = ((num11 + 1) | 0)) {
        if (array.Get(num10, num11) !== num4) {
          this.map.Set(num10, num11, "#");
        }
      }
    }
  };

  function StandardDungeon_RemoveUnconnected$1E (map) {
    var array = JSIL.MultidimensionalArray.New($T01(), map.length0, map.length1);

    for (var i = 0; i < map.length0; i = ((i + 1) | 0)) {

      for (var j = 0; j < map.length1; j = ((j + 1) | 0)) {
        if (!(($thisType.ConvertedChar(map.Get(i, j)).charCodeAt(0) !== ".".charCodeAt(0)) && 
            (map.Get(i, j).charCodeAt(0) !== "&".charCodeAt(0)) && (map.Get(i, j).charCodeAt(0) !== ":".charCodeAt(0)))) {
          array.Set(i, j, 0);
        } else {
          array.Set(i, j, -1);
        }
      }
    }
    var num = 0;

    for (var k = 0; k < map.length0; k = ((k + 1) | 0)) {

      for (var l = 0; l < map.length1; l = ((l + 1) | 0)) {
        if (array.Get(k, l) === 0) {
          num = ((num + 1) | 0);
          array.Set(k, l, num);

          for (var flag = true; flag; ) {
            flag = false;

            for (var m = 0; m < map.length0; m = ((m + 1) | 0)) {

              for (var n = 0; n < map.length1; n = ((n + 1) | 0)) {
                if (array.Get(m, n) === num) {

                  for (var num2 = -1; num2 <= 1; num2 = ((num2 + 1) | 0)) {

                    for (var num3 = -1; num3 <= 1; num3 = ((num3 + 1) | 0)) {
                      if (array.Get(((m + num2) | 0), ((n + num3) | 0)) === 0) {
                        array.Set(((m + num2) | 0), ((n + num3) | 0), num);
                        flag = true;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    var num4 = -1;
    var num5 = 0;

    for (var num6 = 1; num6 <= num; num6 = ((num6 + 1) | 0)) {
      var num7 = 0;

      for (var num8 = 0; num8 < map.length0; num8 = ((num8 + 1) | 0)) {

        for (var num9 = 0; num9 < map.length1; num9 = ((num9 + 1) | 0)) {
          if (array.Get(num8, num9) === num6) {
            num7 = ((num7 + 1) | 0);
          }
        }
      }
      if (num7 > num5) {
        num5 = num7;
        num4 = num6;
      }
    }

    for (var num10 = 0; num10 < map.length0; num10 = ((num10 + 1) | 0)) {

      for (var num11 = 0; num11 < map.length1; num11 = ((num11 + 1) | 0)) {
        if (array.Get(num10, num11) !== num4) {
          map.Set(num10, num11, "#");
        }
      }
    }
  };

  function StandardDungeon_ResetToDefaults () {
    this.allow_all_corner_connections = false;
    this.rooms_overwrite_corridors = true;
    this.rooms_over_rooms = false;
    this.room_height_min = 3;
    this.room_height_max = 8;
    this.room_width_min = 3;
    this.room_width_max = 10;
    this.corridor_length_min = 3;
    this.corridor_length_max = 7;
    this.corridor_length_addition = 8;
    this.corridor_chain_length_min = 1;
    this.corridor_chain_length_max = 4;
  };

  JSIL.MakeClass($asm00.TypeRef("DungeonGen.Dungeon"), "DungeonGen.StandardDungeon", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], []), 
      StandardDungeon__ctor
    );

    $.Method({Static:false, Public:false}, "$lApplyCaveModification$gm__1D", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32
        ], []), 
      StandardDungeon_$lApplyCaveModification$gm__1D
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "$lApplyCellularAutomataXYRule$gm__18", 
      new JSIL.MethodSignature($.Boolean, [$.Char], []), 
      StandardDungeon_$lApplyCellularAutomataXYRule$gm__18
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "$lApplyCellularAutomataXYRule$gm__1E", 
      new JSIL.MethodSignature($.Boolean, [$.Char], []), 
      StandardDungeon_$lApplyCellularAutomataXYRule$gm__1E
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "$lApplyRuin$gm__19", 
      new JSIL.MethodSignature($.Boolean, [$.Char], []), 
      StandardDungeon_$lApplyRuin$gm__19
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "$lApplyRuin$gm__1A", 
      new JSIL.MethodSignature($.Boolean, [$.Char], []), 
      StandardDungeon_$lApplyRuin$gm__1A
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "$lMarkInterestingLocations$gm__1B", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32
        ], []), 
      StandardDungeon_$lMarkInterestingLocations$gm__1B
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "$lMarkInterestingLocations$gm__1F", 
      new JSIL.MethodSignature($.Boolean, [$.Char], []), 
      StandardDungeon_$lMarkInterestingLocations$gm__1F
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "$lMarkInterestingLocations$gm__20", 
      new JSIL.MethodSignature($.Boolean, [$.Char], []), 
      StandardDungeon_$lMarkInterestingLocations$gm__20
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "AddDoors", 
      new JSIL.MethodSignature(null, [], []), 
      StandardDungeon_AddDoors
    );

    $.Method({Static:false, Public:true }, "AddFirePits", 
      new JSIL.MethodSignature(null, [], []), 
      StandardDungeon_AddFirePits
    );

    $.Method({Static:false, Public:true }, "AddPillars", 
      new JSIL.MethodSignature(null, [$.Int32], []), 
      StandardDungeon_AddPillars
    );

    $.Method({Static:false, Public:true }, "ApplyCaveModification", 
      new JSIL.MethodSignature($.Boolean, [], []), 
      StandardDungeon_ApplyCaveModification
    );

    $.Method({Static:false, Public:true }, "ApplyCellularAutomataFourFiveRule", 
      new JSIL.MethodSignature(null, [], []), 
      StandardDungeon_ApplyCellularAutomataFourFiveRule
    );

    $.Method({Static:false, Public:true }, "ApplyCellularAutomataXYRule", 
      new JSIL.MethodSignature(null, [$.Int32], []), 
      StandardDungeon_ApplyCellularAutomataXYRule$00
    );

    $.Method({Static:true , Public:true }, "ApplyCellularAutomataXYRule", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$.Char]), $.Int32], []), 
      StandardDungeon_ApplyCellularAutomataXYRule$01
    );

    $.Method({Static:false, Public:true }, "ApplyRuin", 
      new JSIL.MethodSignature(null, [], []), 
      StandardDungeon_ApplyRuin
    );

    $.Method({Static:false, Public:true }, "Clear", 
      new JSIL.MethodSignature(null, [], []), 
      StandardDungeon_Clear
    );

    $.Method({Static:false, Public:true }, "Convert", 
      new JSIL.MethodSignature(null, [], []), 
      StandardDungeon_Convert
    );

    $.Method({Static:true , Public:true }, "ConvertedChar", 
      new JSIL.MethodSignature($.Char, [$.Char], []), 
      StandardDungeon_ConvertedChar
    );

    $.Method({Static:false, Public:true }, "ConvertToShowFloorType", 
      new JSIL.MethodSignature(null, [], []), 
      StandardDungeon_ConvertToShowFloorType
    );

    $.Method({Static:false, Public:true }, "CreateBasicMap", 
      new JSIL.MethodSignature(null, [], []), 
      StandardDungeon_CreateBasicMap
    );

    $.Method({Static:false, Public:true }, "CreateCorridor", 
      new JSIL.MethodSignature($.Boolean, [], []), 
      StandardDungeon_CreateCorridor$02
    );

    $.Method({Static:false, Public:true }, "CreateCorridor", 
      new JSIL.MethodSignature($.Boolean, [$.Int32], []), 
      StandardDungeon_CreateCorridor$03
    );

    $.Method({Static:false, Public:true }, "CreateCorridor", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $.Int32], []), 
      StandardDungeon_CreateCorridor$04
    );

    $.Method({Static:false, Public:true }, "CreateCorridor", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $.Int32, 
          $.Int32
        ], []), 
      StandardDungeon_CreateCorridor$05
    );

    $.Method({Static:false, Public:true }, "CreateCorridor", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32
        ], []), 
      StandardDungeon_CreateCorridor$06
    );

    $.Method({Static:false, Public:true }, "CreateRandomWalls", 
      new JSIL.MethodSignature(null, [$.Int32], []), 
      StandardDungeon_CreateRandomWalls$07
    );

    $.Method({Static:true , Public:true }, "CreateRandomWalls", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$.Char]), $.Int32], []), 
      StandardDungeon_CreateRandomWalls$08
    );

    $.Method({Static:false, Public:true }, "CreateRoom", 
      new JSIL.MethodSignature($.Boolean, [], []), 
      StandardDungeon_CreateRoom$09
    );

    $.Method({Static:false, Public:true }, "CreateRoom", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $.Int32], []), 
      StandardDungeon_CreateRoom$0A
    );

    $.Method({Static:false, Public:true }, "CreateRoom", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $.Int32, 
          $.Int32
        ], []), 
      StandardDungeon_CreateRoom$0B
    );

    $.Method({Static:false, Public:true }, "Draw", 
      new JSIL.MethodSignature(null, [], []), 
      StandardDungeon_Draw
    );

    $.Method({Static:false, Public:true }, "DrawConverted", 
      new JSIL.MethodSignature(null, [], []), 
      StandardDungeon_DrawConverted
    );

    $.Method({Static:false, Public:true }, "FindFloorType", 
      new JSIL.MethodSignature($.Char, [$.Int32, $.Int32], []), 
      StandardDungeon_FindFloorType
    );

    $.Method({Static:false, Public:true }, "ForEachDirection", 
      new JSIL.MethodSignature($.Int32, [
          $.Int32, $.Int32, 
          $asm00.TypeRef("DungeonGen.StandardDungeon/BooleanDelegate"), $.Boolean
        ], []), 
      StandardDungeon_ForEachDirection$0C
    );

    $.Method({Static:true , Public:true }, "ForEachDirection", 
      new JSIL.MethodSignature($.Int32, [
          $jsilcore.TypeRef("System.Array", [$.Char]), $.Int32, 
          $.Int32, $asm00.TypeRef("DungeonGen.StandardDungeon/BooleanDelegate"), 
          $.Boolean
        ], []), 
      StandardDungeon_ForEachDirection$0D
    );

    $.Method({Static:false, Public:true }, "ForEachOrthDirection", 
      new JSIL.MethodSignature($.Int32, [
          $.Int32, $.Int32, 
          $asm00.TypeRef("DungeonGen.StandardDungeon/BooleanDelegate"), $.Boolean
        ], []), 
      StandardDungeon_ForEachOrthDirection
    );

    $.Method({Static:false, Public:true }, "ForEachRoom", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("DungeonGen.StandardDungeon/RoomDelegate")], []), 
      StandardDungeon_ForEachRoom
    );

    $.Method({Static:false, Public:true }, "GenerateCave", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Char]), [], []), 
      StandardDungeon_GenerateCave
    );

    $.Method({Static:false, Public:true }, "GenerateExtravagant", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Char]), [], []), 
      StandardDungeon_GenerateExtravagant
    );

    $.Method({Static:false, Public:true }, "GenerateFortress", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Char]), [], []), 
      StandardDungeon_GenerateFortress
    );

    $.Method({Static:false, Public:true }, "GenerateHive", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Char]), [], []), 
      StandardDungeon_GenerateHive
    );

    $.Method({Static:false, Public:true }, "GenerateMine", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Char]), [], []), 
      StandardDungeon_GenerateMine
    );

    $.Method({Static:false, Public:true }, "GenerateRuined", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Char]), [], []), 
      StandardDungeon_GenerateRuined
    );

    $.Method({Static:false, Public:true }, "GenerateStandard", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Char]), [], []), 
      StandardDungeon_GenerateStandard
    );

    $.Method({Static:false, Public:true }, "HasLargeUnusedSpaces", 
      new JSIL.MethodSignature($.Boolean, [], []), 
      StandardDungeon_HasLargeUnusedSpaces
    );

    $.Method({Static:false, Public:true }, "IsCorridor", 
      new JSIL.MethodSignature($.Boolean, [$.Char], []), 
      StandardDungeon_IsCorridor$0E
    );

    $.Method({Static:false, Public:true }, "IsCorridor", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $.Int32], []), 
      StandardDungeon_IsCorridor$0F
    );

    $.Method({Static:false, Public:true }, "IsCorridor", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("DungeonGen.pos")], []), 
      StandardDungeon_IsCorridor$10
    );

    $.Method({Static:false, Public:true }, "IsLegal", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $.Int32], []), 
      StandardDungeon_IsLegal$11
    );

    $.Method({Static:true , Public:true }, "IsLegal", 
      new JSIL.MethodSignature($.Boolean, [
          $jsilcore.TypeRef("System.Array", [$.Char]), $.Int32, 
          $.Int32
        ], []), 
      StandardDungeon_IsLegal$12
    );

    $.Method({Static:true , Public:true }, "IsLegal", 
      new JSIL.MethodSignature($.Boolean, [
          $jsilcore.TypeRef("System.Array", [$.Char]), $.Int32, 
          $.Int32, $.Boolean
        ], []), 
      StandardDungeon_IsLegal$13
    );

    $.Method({Static:false, Public:true }, "IsRoom", 
      new JSIL.MethodSignature($.Boolean, [$.Char], []), 
      StandardDungeon_IsRoom$14
    );

    $.Method({Static:false, Public:true }, "IsRoom", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $.Int32], []), 
      StandardDungeon_IsRoom$15
    );

    $.Method({Static:false, Public:true }, "IsRoom", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("DungeonGen.pos")], []), 
      StandardDungeon_IsRoom$16
    );

    $.Method({Static:false, Public:true }, "IsRoomOrGenericFloor", 
      new JSIL.MethodSignature($.Boolean, [$.Char], []), 
      StandardDungeon_IsRoomOrGenericFloor
    );

    $.Method({Static:false, Public:true }, "MarkInterestingLocations", 
      new JSIL.MethodSignature(null, [], []), 
      StandardDungeon_MarkInterestingLocations
    );

    $.Method({Static:false, Public:true }, "NumberOfFloors", 
      new JSIL.MethodSignature($.Int32, [], []), 
      StandardDungeon_NumberOfFloors$17
    );

    $.Method({Static:true , Public:true }, "NumberOfFloors", 
      new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("System.Array", [$.Char])], []), 
      StandardDungeon_NumberOfFloors$18
    );

    $.Method({Static:false, Public:true }, "Reflect", 
      new JSIL.MethodSignature(null, [$.Boolean, $.Boolean], []), 
      StandardDungeon_Reflect
    );

    $.Method({Static:false, Public:true }, "RemoveDeadEnds", 
      new JSIL.MethodSignature(null, [], []), 
      StandardDungeon_RemoveDeadEnds$19
    );

    $.Method({Static:true , Public:true }, "RemoveDeadEnds", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$.Char])], []), 
      StandardDungeon_RemoveDeadEnds$1A
    );

    $.Method({Static:false, Public:true }, "RemoveDiagonals", 
      new JSIL.MethodSignature(null, [], []), 
      StandardDungeon_RemoveDiagonals$1B
    );

    $.Method({Static:true , Public:true }, "RemoveDiagonals", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$.Char])], []), 
      StandardDungeon_RemoveDiagonals$1C
    );

    $.Method({Static:false, Public:true }, "RemoveUnconnected", 
      new JSIL.MethodSignature(null, [], []), 
      StandardDungeon_RemoveUnconnected$1D
    );

    $.Method({Static:true , Public:true }, "RemoveUnconnected", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$.Char])], []), 
      StandardDungeon_RemoveUnconnected$1E
    );

    $.Method({Static:false, Public:true }, "ResetToDefaults", 
      new JSIL.MethodSignature(null, [], []), 
      StandardDungeon_ResetToDefaults
    );

    $.Field({Static:false, Public:true }, "allow_all_corner_connections", $.Boolean); 
    $.Field({Static:false, Public:true }, "rooms_overwrite_corridors", $.Boolean); 
    $.Field({Static:false, Public:true }, "rooms_over_rooms", $.Boolean); 
    $.Field({Static:false, Public:true }, "room_height_min", $.Int32); 
    $.Field({Static:false, Public:true }, "room_height_max", $.Int32); 
    $.Field({Static:false, Public:true }, "room_width_min", $.Int32); 
    $.Field({Static:false, Public:true }, "room_width_max", $.Int32); 
    $.Field({Static:false, Public:true }, "corridor_length_min", $.Int32); 
    $.Field({Static:false, Public:true }, "corridor_length_max", $.Int32); 
    $.Field({Static:false, Public:true }, "corridor_length_addition", $.Int32); 
    $.Field({Static:false, Public:true }, "corridor_chain_length_min", $.Int32); 
    $.Field({Static:false, Public:true }, "corridor_chain_length_max", $.Int32); 
    $.Field({Static:true , Public:false}, "$am", $asm00.TypeRef("DungeonGen.StandardDungeon/BooleanDelegate"))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "$am", $asm00.TypeRef("DungeonGen.StandardDungeon/BooleanDelegate"))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "$am", $asm00.TypeRef("DungeonGen.StandardDungeon/BooleanDelegate"))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "$am", $asm00.TypeRef("DungeonGen.StandardDungeon/BooleanDelegate"))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "$am", $asm00.TypeRef("DungeonGen.StandardDungeon/BooleanDelegate"))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "$am", $asm00.TypeRef("DungeonGen.StandardDungeon/BooleanDelegate"))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.MakeDelegate("DungeonGen.StandardDungeon/BooleanDelegate", false, []);

JSIL.MakeDelegate("DungeonGen.StandardDungeon/RoomDelegate", false, []);

JSIL.MakeEnum(
  "DungeonGen.StandardDungeon/PillarArrangement", false, {
    Single: 0, 
    Full: 1, 
    Corners: 2, 
    Row: 3, 
    StatueCorners: 4, 
    StatueEdges: 5
  }, false
);

(function $lAddPillars$gc__AnonStorey1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.DungeonGen.Dungeon)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.DungeonGen.StandardDungeon_PillarArrangement))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.DungeonGen.StandardDungeon_PillarArrangement)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm01.System.Char)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize(System.Array.Of($asm01.System.Char))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm01.System.Boolean)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.DungeonGen.StandardDungeon)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("DungeonGen.StandardDungeon/PillarArrangement")]), []))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Boolean"), [$asm01.TypeRef("System.Char")], []))) ();
  };

  function $lAddPillars$gc__AnonStorey1__ctor () {
  };

  function $lAddPillars$gc__AnonStorey1_$l$gm__1C (start_r, start_c, end_r, end_c) {
    if ($T01().Roll(100) <= this.percent_chance_per_room) {
      var num = ((((end_r - start_r) | 0) + 1) | 0);
      var num2 = ((((end_c - start_c) | 0) + 1) | 0);
      if (!((num <= 3) && (num2 <= 3))) {
        var list = $S00().Construct();
        if (!((((num % 2) | 0) !== 1) || (((num2 % 2) | 0) !== 1))) {
          list.Add($T03().Single);
        }
        if (!(((((num % 2) | 0) !== 1) && 
              (((num2 % 2) | 0) !== 1)) || 
            (num === 4) || (num2 === 4))) {
          list.Add($T03().Row);
        }
        if (!((num < 5) || (num2 < 5))) {
          list.Add($T03().Corners);
        }
        if (!((num <= 2) || 
            (num2 <= 2) || 
            (num === 4) || (num2 === 4))) {
          list.Add($T03().Full);
        }
        if (!(!((((num2 % 2) | 0) === 1) && 
              (num2 >= 5)) && ((((num % 2) | 0) !== 1) || 
              (num < 5)))) {
          list.Add($T03().StatueEdges);
        }
        if (!((list.get_Count() !== 0) && !$T01().CoinFlip())) {
          list.Add($T03().StatueCorners);
        }
        if (list.get_Count() > 0) {
          var c = " ";
          switch ($T01().Roll(4)) {
            case 1: 
            case 2: 
              c = "P";
              break;

            case 3: 
              c = "&";
              break;

            case 4: 
              c = "0";
              break;

          }
          switch ((list.get_Item((($T01().Roll(list.get_Count()) - 1) | 0))).valueOf()) {
            case 0: 
              this.$this.map.Set(((((start_r + end_r) | 0) / 2) | 0), ((((start_c + end_c) | 0) / 2) | 0), "P");
              break;

            case 1: 
              var num3 = 0;
              var num4 = 0;
              if (((num % 4) | 0) === 0) {
                num3 = (($T01().Roll(2) - 1) | 0);
              }
              if (((num2 % 4) | 0) === 0) {
                num4 = (($T01().Roll(2) - 1) | 0);
              }
              var num5 = ((((start_r + end_r) | 0) / 2) | 0);
              var num6 = ((((start_c + end_c) | 0) / 2) | 0);
              var num7 = ((((((start_r + end_r) | 0) + 1) | 0) / 2) | 0);
              var num8 = ((((((start_c + end_c) | 0) + 1) | 0) / 2) | 0);

              for (var i = ((((start_r + 1) | 0) + num3) | 0); i < num5; i = ((i + 2) | 0)) {

                for (var j = ((((start_c + 1) | 0) + num4) | 0); j < num6; j = ((j + 2) | 0)) {
                  this.$this.map.Set(i, j, c);
                }
              }

              for (var k = ((((start_r + 1) | 0) + num3) | 0); k < num5; k = ((k + 2) | 0)) {

                for (var l = ((((end_c - 1) | 0) - num4) | 0); l > num8; l = ((l - 2) | 0)) {
                  this.$this.map.Set(k, l, c);
                }
              }

              for (var m = ((((end_r - 1) | 0) - num3) | 0); m > num7; m = ((m - 2) | 0)) {

                for (var n = ((((start_c + 1) | 0) + num4) | 0); n < num6; n = ((n + 2) | 0)) {
                  this.$this.map.Set(m, n, c);
                }
              }

              for (var num9 = ((((end_r - 1) | 0) - num3) | 0); num9 > num7; num9 = ((num9 - 2) | 0)) {

                for (var num10 = ((((end_c - 1) | 0) - num4) | 0); num10 > num8; num10 = ((num10 - 2) | 0)) {
                  this.$this.map.Set(num9, num10, c);
                }
              }
              if (((((num2 + 1) | 0) % 4) | 0) === 0) {
                if (((num % 2) | 0) === 1) {

                  for (var num11 = ((start_r + 1) | 0); num11 <= ((end_r - 1) | 0); num11 = ((num11 + 2) | 0)) {
                    this.$this.map.Set(num11, num6, c);
                  }
                } else {
                  var num12 = 0;
                  if (((num % 4) | 0) === 0) {
                    num12 = (($T01().Roll(2) - 1) | 0);
                  }

                  for (var num13 = ((((start_r + 1) | 0) + num12) | 0); num13 < num5; num13 = ((num13 + 2) | 0)) {
                    this.$this.map.Set(num13, num6, c);
                  }

                  for (var num14 = ((((end_r - 1) | 0) - num12) | 0); num14 > num7; num14 = ((num14 - 2) | 0)) {
                    this.$this.map.Set(num14, num6, c);
                  }
                }
              }
              if (((((num + 1) | 0) % 4) | 0) === 0) {
                if (((num2 % 2) | 0) === 1) {

                  for (var num15 = ((start_c + 1) | 0); num15 <= ((end_c - 1) | 0); num15 = ((num15 + 2) | 0)) {
                    this.$this.map.Set(num5, num15, c);
                  }
                } else {
                  var num16 = 0;
                  if (((num2 % 4) | 0) === 0) {
                    num16 = (($T01().Roll(2) - 1) | 0);
                  }

                  for (var num17 = ((((start_c + 1) | 0) + num16) | 0); num17 < num6; num17 = ((num17 + 2) | 0)) {
                    this.$this.map.Set(num5, num17, c);
                  }

                  for (var num18 = ((((end_c - 1) | 0) - num16) | 0); num18 > num8; num18 = ((num18 - 2) | 0)) {
                    this.$this.map.Set(num5, num18, c);
                  }
                }
              }
              break;

            case 2: 
              var num19 = 0;
              var num20 = 0;
              if (((num % 4) | 0) === 0) {
                num19 = (($T01().Roll(2) - 1) | 0);
              }
              if (((num2 % 4) | 0) === 0) {
                num20 = (($T01().Roll(2) - 1) | 0);
              }
              this.$this.map.Set(((((start_r + 1) | 0) + num19) | 0), ((((start_c + 1) | 0) + num20) | 0), c);
              this.$this.map.Set(((((start_r + 1) | 0) + num19) | 0), ((((end_c - 1) | 0) - num20) | 0), c);
              this.$this.map.Set(((((end_r - 1) | 0) - num19) | 0), ((((start_c + 1) | 0) + num20) | 0), c);
              this.$this.map.Set(((((end_r - 1) | 0) - num19) | 0), ((((end_c - 1) | 0) - num20) | 0), c);
              break;

            case 3: 
              var flag = (!((((num2 % 2) | 0) !== 1) || 
                  (((num % 2) | 0) !== 0)) || 
                (((((num % 2) | 0) !== 1) || 
                    (((num2 % 2) | 0) !== 0)) && 
                  $T01().CoinFlip()));
              if (flag) {
                if (((num % 2) | 0) === 1) {

                  for (var num21 = ((start_r + 1) | 0); num21 <= ((end_r - 1) | 0); num21 = ((num21 + 2) | 0)) {
                    this.$this.map.Set(num21, ((((start_c + end_c) | 0) / 2) | 0), c);
                  }
                } else {
                  var num22 = 0;
                  if (((num % 4) | 0) === 0) {
                    num22 = (($T01().Roll(2) - 1) | 0);
                  }

                  for (var num23 = ((((start_r + 1) | 0) + num22) | 0); num23 < ((((start_r + end_r) | 0) / 2) | 0); num23 = ((num23 + 2) | 0)) {
                    this.$this.map.Set(num23, ((((start_c + end_c) | 0) / 2) | 0), c);
                  }

                  for (var num24 = ((((end_r - 1) | 0) - num22) | 0); num24 > ((((((start_r + end_r) | 0) / 2) | 0) + 1) | 0); num24 = ((num24 - 2) | 0)) {
                    this.$this.map.Set(num24, ((((start_c + end_c) | 0) / 2) | 0), c);
                  }
                }
              } else if (((num2 % 2) | 0) === 1) {

                for (var num25 = ((start_c + 1) | 0); num25 <= ((end_c - 1) | 0); num25 = ((num25 + 2) | 0)) {
                  this.$this.map.Set(((((start_r + end_r) | 0) / 2) | 0), num25, c);
                }
              } else {
                var num26 = 0;
                if (((num2 % 4) | 0) === 0) {
                  num26 = (($T01().Roll(2) - 1) | 0);
                }

                for (var num27 = ((((start_c + 1) | 0) + num26) | 0); num27 < ((((start_c + end_c) | 0) / 2) | 0); num27 = ((num27 + 2) | 0)) {
                  this.$this.map.Set(((((start_r + end_r) | 0) / 2) | 0), num27, c);
                }

                for (var num28 = ((((end_c - 1) | 0) - num26) | 0); num28 > ((((((start_c + end_c) | 0) / 2) | 0) + 1) | 0); num28 = ((num28 - 2) | 0)) {
                  this.$this.map.Set(((((start_r + end_r) | 0) / 2) | 0), num28, c);
                }
              }
              break;

            case 4: 
              this.$this.map.Set(start_r, start_c, "&");
              this.$this.map.Set(start_r, end_c, "&");
              this.$this.map.Set(end_r, start_c, "&");
              this.$this.map.Set(end_r, end_c, "&");
              break;

            case 5: 
              this.$this.map.Set(start_r, start_c, "&");
              this.$this.map.Set(start_r, end_c, "&");
              this.$this.map.Set(end_r, start_c, "&");
              this.$this.map.Set(end_r, end_c, "&");
              if (!((((num2 % 2) | 0) !== 1) || (num2 <= 3))) {
                var num29 = ((((start_c + end_c) | 0) / 2) | 0);
                if (this.$this.ForEachOrthDirection(start_r, num29, function (ch) {
                      return $S01().CallVirtual("IsCorridor", null, this.$this, ch);
                    }.bind(this), false) === 0) {
                  this.$this.map.Set(start_r, num29, "&");
                }
                if (this.$this.ForEachOrthDirection(end_r, num29, function (ch) {
                      return $S01().CallVirtual("IsCorridor", null, this.$this, ch);
                    }.bind(this), false) === 0) {
                  this.$this.map.Set(end_r, num29, "&");
                }
              }
              if (!((((num % 2) | 0) !== 1) || (num <= 3))) {
                var num30 = ((((start_r + end_r) | 0) / 2) | 0);
                if (this.$this.ForEachOrthDirection(num30, start_c, function (ch) {
                      return $S01().CallVirtual("IsCorridor", null, this.$this, ch);
                    }.bind(this), false) === 0) {
                  this.$this.map.Set(num30, start_c, "&");
                }
                if (this.$this.ForEachOrthDirection(num30, end_c, function (ch) {
                      return $S01().CallVirtual("IsCorridor", null, this.$this, ch);
                    }.bind(this), false) === 0) {
                  this.$this.map.Set(num30, end_c, "&");
                }
              }
              break;

          }
        }
      }
    }
    return true;
  };

  function $lAddPillars$gc__AnonStorey1_$l$gm__21 (ch) {
    return $S01().CallVirtual("IsCorridor", null, this.$this, ch);
  };

  function $lAddPillars$gc__AnonStorey1_$l$gm__22 (ch) {
    return $S01().CallVirtual("IsCorridor", null, this.$this, ch);
  };

  function $lAddPillars$gc__AnonStorey1_$l$gm__23 (ch) {
    return $S01().CallVirtual("IsCorridor", null, this.$this, ch);
  };

  function $lAddPillars$gc__AnonStorey1_$l$gm__24 (ch) {
    return $S01().CallVirtual("IsCorridor", null, this.$this, ch);
  };

  JSIL.MakeClass($asm01.TypeRef("System.Object"), "DungeonGen.StandardDungeon/<AddPillars>c__AnonStorey1", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], []), 
      $lAddPillars$gc__AnonStorey1__ctor
    );

    $.Method({Static:false, Public:false}, "$l$gm__1C", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32
        ], []), 
      $lAddPillars$gc__AnonStorey1_$l$gm__1C
    );

    $.Method({Static:false, Public:false}, "$l$gm__21", 
      new JSIL.MethodSignature($.Boolean, [$.Char], []), 
      $lAddPillars$gc__AnonStorey1_$l$gm__21
    );

    $.Method({Static:false, Public:false}, "$l$gm__22", 
      new JSIL.MethodSignature($.Boolean, [$.Char], []), 
      $lAddPillars$gc__AnonStorey1_$l$gm__22
    );

    $.Method({Static:false, Public:false}, "$l$gm__23", 
      new JSIL.MethodSignature($.Boolean, [$.Char], []), 
      $lAddPillars$gc__AnonStorey1_$l$gm__23
    );

    $.Method({Static:false, Public:false}, "$l$gm__24", 
      new JSIL.MethodSignature($.Boolean, [$.Char], []), 
      $lAddPillars$gc__AnonStorey1_$l$gm__24
    );

    $.Field({Static:false, Public:false}, "percent_chance_per_room", $.Int32); 
    $.Field({Static:false, Public:false}, "$this", $asm00.TypeRef("DungeonGen.StandardDungeon")); 
    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

(function AttackInfo$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Forays.DamageType)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm01.System.String)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Forays.DamageClass)) ();
  };

  function AttackInfo__ctor$00 (cost_, dice_, type_, desc_) {
    this.cost = cost_;
    this.damage.dice = dice_;
    this.damage.type = type_;
    this.damage.damclass = $T03().PHYSICAL;
    this.desc = desc_;
  };

  function AttackInfo__ctor$01 (cost_, dice_, type_, damclass_, desc_) {
    this.cost = cost_;
    this.damage.dice = dice_;
    this.damage.type = type_;
    this.damage.damclass = damclass_;
    this.desc = desc_;
  };

  function AttackInfo__ctor$02 (a) {
    this.cost = a.cost;
    this.damage = a.damage.MemberwiseClone();
    this.desc = a.desc;
  };

  JSIL.MakeClass($asm01.TypeRef("System.Object"), "Forays.AttackInfo", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $asm00.TypeRef("Forays.DamageType"), $.String
        ], []), 
      AttackInfo__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $asm00.TypeRef("Forays.DamageType"), $asm00.TypeRef("Forays.DamageClass"), 
          $.String
        ], []), 
      AttackInfo__ctor$01
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Type], []), 
      AttackInfo__ctor$02
    );

    $.Field({Static:false, Public:true }, "cost", $.Int32); 
    $.Field({Static:false, Public:true }, "damage", $asm00.TypeRef("Forays.Damage")); 
    $.Field({Static:false, Public:true }, "desc", $.String); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function Damage$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Forays.DamageType)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Forays.DamageClass)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Forays.Actor)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Forays.Global)) ();
  };

  function Damage__ctor$00 (dice_, type_, damclass_, source_) {
    this.dice = dice_;
    this.num = null;
    this.type = type_;
    this.damclass = damclass_;
    this.source = source_;
  };

  function Damage__ctor$01 (type_, damclass_, source_, totaldamage) {
    this.dice = 0;
    this.num = totaldamage;
    this.type = type_;
    this.damclass = damclass_;
    this.source = source_;
  };

  function Damage_get_amount () {
    if (this.num === null) {
      this.num = $T04().Roll(this.dice, 6);
    }
    return this.num;
  };

  function Damage_set_amount (value) {
    this.num = value;
  };

  JSIL.MakeStruct($asm01.TypeRef("System.ValueType"), "Forays.Damage", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Int32, $asm00.TypeRef("Forays.DamageType"), 
          $asm00.TypeRef("Forays.DamageClass"), $asm00.TypeRef("Forays.Actor")
        ], []), 
      Damage__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.DamageType"), $asm00.TypeRef("Forays.DamageClass"), 
          $asm00.TypeRef("Forays.Actor"), $.Int32
        ], []), 
      Damage__ctor$01
    );

    $.Method({Static:false, Public:true }, "get_amount", 
      new JSIL.MethodSignature($.Int32, [], []), 
      Damage_get_amount
    );

    $.Method({Static:false, Public:true }, "set_amount", 
      new JSIL.MethodSignature(null, [$.Int32], []), 
      Damage_set_amount
    );

    $.Field({Static:false, Public:false}, "num", $asm01.TypeRef("System.Nullable`1", [$.Int32])); 
    $.Field({Static:false, Public:true }, "dice", $.Int32); 
    $.Field({Static:false, Public:true }, "type", $asm00.TypeRef("Forays.DamageType")); 
    $.Field({Static:false, Public:true }, "damclass", $asm00.TypeRef("Forays.DamageClass")); 
    $.Field({Static:false, Public:true }, "source", $asm00.TypeRef("Forays.Actor")); 
    $.Property({Static:false, Public:true }, "amount", $.Int32);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function Actor$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Forays.AttackInfo)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Forays.Dict$b2.Of($asm00.Forays.ActorType, $asm00.Forays.Actor))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Forays.ActorType)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Forays.Color)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Forays.AttrType)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Forays.SpellType)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Forays.Dict$b2.Of($asm00.Forays.SkillType, $asm01.System.Int32))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Forays.SkillType)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize(System.Array.Of($asm00.Forays.AttrType))) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.Forays.Dict$b2.Of($asm00.Forays.AttrType, $asm01.System.Int32))) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.Forays.Dict$b2.Of($asm00.Forays.FeatType, $asm01.System.Int32))) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.Forays.Dict$b2.Of($asm00.Forays.SpellType, $asm01.System.Int32))) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.pos))) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm02.System.Collections.Generic.LinkedList$b1.Of($asm00.Forays.WeaponType))) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm02.System.Collections.Generic.LinkedList$b1.Of($asm00.Forays.ArmorType))) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm02.System.Collections.Generic.LinkedList$b1.Of($asm00.Forays.MagicItemType))) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm00.Forays.PhysicalObject)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.Item))) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm01.System.Int32)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm01.System.String)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm01.System.Char)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm00.Forays.WeaponType)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm00.Forays.ArmorType)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm00.Forays.Tile)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm00.Forays.Item)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm00.Forays.FeatureType)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm00.Forays.TileType)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm00.Forays.pos)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm00.Forays.MagicItemType)) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm00.Forays.Buffer)) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize($asm01.System.Void)) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm00.Forays.Screen)) ();
  };
  var $T20 = function () {
    return ($T20 = JSIL.Memoize($asm00.Forays.Queue)) ();
  };
  var $T21 = function () {
    return ($T21 = JSIL.Memoize($asm00.Forays.Event)) ();
  };
  var $T22 = function () {
    return ($T22 = JSIL.Memoize($asm00.Forays.EventType)) ();
  };
  var $T23 = function () {
    return ($T23 = JSIL.Memoize($asm02.System.Collections.Generic.LinkedListNode$b1.Of($asm00.Forays.ArmorType))) ();
  };
  var $T24 = function () {
    return ($T24 = JSIL.Memoize($asm00.Forays.Global)) ();
  };
  var $T25 = function () {
    return ($T25 = JSIL.Memoize($asm00.Forays.Map)) ();
  };
  var $T26 = function () {
    return ($T26 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.PhysicalObject))) ();
  };
  var $T27 = function () {
    return ($T27 = JSIL.Memoize($asm00.Forays.Extensions)) ();
  };
  var $T28 = function () {
    return ($T28 = JSIL.Memoize($asm00.Forays.Help)) ();
  };
  var $T29 = function () {
    return ($T29 = JSIL.Memoize($asm00.Forays.TutorialTopic)) ();
  };
  var $T2A = function () {
    return ($T2A = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.Tile))) ();
  };
  var $T2B = function () {
    return ($T2B = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.Actor))) ();
  };
  var $T2C = function () {
    return ($T2C = JSIL.Memoize($asm00.Forays.Map_PosArray$b1.Of($asm00.Forays.Actor))) ();
  };
  var $T2D = function () {
    return ($T2D = JSIL.Memoize($asm01.System.Math)) ();
  };
  var $T2E = function () {
    return ($T2E = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.SpellType))) ();
  };
  var $T2F = function () {
    return ($T2F = JSIL.Memoize(System.Array.Of($asm00.Forays.SpellType))) ();
  };
  var $T30 = function () {
    return ($T30 = JSIL.Memoize($asm01.System.Boolean)) ();
  };
  var $T31 = function () {
    return ($T31 = JSIL.Memoize($asm00.Forays.DamageType)) ();
  };
  var $T32 = function () {
    return ($T32 = JSIL.Memoize($asm00.Forays.DamageClass)) ();
  };
  var $T33 = function () {
    return ($T33 = JSIL.Memoize(System.Array.Of($asm01.System.Boolean))) ();
  };
  var $T34 = function () {
    return ($T34 = JSIL.Memoize($asm00.Forays.Map_PosArray$b1.Of($asm00.Forays.Tile))) ();
  };
  var $T35 = function () {
    return ($T35 = JSIL.Memoize(System.Array.Of($asm01.System.String))) ();
  };
  var $T36 = function () {
    return ($T36 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.FeatureType))) ();
  };
  var $T37 = function () {
    return ($T37 = JSIL.Memoize($asm02.System.Collections.Generic.LinkedList$b1_Enumerator.Of($asm00.Forays.Event))) ();
  };
  var $T38 = function () {
    return ($T38 = JSIL.Memoize($asm02.System.Collections.Generic.LinkedList$b1.Of($asm00.Forays.Event))) ();
  };
  var $T39 = function () {
    return ($T39 = JSIL.Memoize($asm01.System.IDisposable)) ();
  };
  var $T3A = function () {
    return ($T3A = JSIL.Memoize($asm00.Forays.Weapon)) ();
  };
  var $T3B = function () {
    return ($T3B = JSIL.Memoize($asm02.System.Collections.Generic.LinkedListNode$b1.Of($asm00.Forays.WeaponType))) ();
  };
  var $T3C = function () {
    return ($T3C = JSIL.Memoize($asm00.Forays.Actor_$lActiveAI$gc__AnonStorey2)) ();
  };
  var $T3D = function () {
    return ($T3D = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm01.System.Int32))) ();
  };
  var $T3E = function () {
    return ($T3E = JSIL.Memoize($asm00.Forays.colorchar)) ();
  };
  var $T3F = function () {
    return ($T3F = JSIL.Memoize($asm00.Forays.Armor)) ();
  };
  var $T40 = function () {
    return ($T40 = JSIL.Memoize($asm00.Forays.AttackList)) ();
  };
  var $T41 = function () {
    return ($T41 = JSIL.Memoize($asm00.Forays.FeatType)) ();
  };
  var $T42 = function () {
    return ($T42 = JSIL.Memoize($asm00.Forays.Spell)) ();
  };
  var $T43 = function () {
    return ($T43 = JSIL.Memoize($asm00.Forays.Dict$b2.Of($asm00.Forays.PhysicalObject, $asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.PhysicalObject)))) ();
  };
  var $T44 = function () {
    return ($T44 = JSIL.Memoize($asm01.System.Collections.Generic.Dictionary$b2_ValueCollection_Enumerator.Of($asm00.Forays.PhysicalObject, $asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.PhysicalObject)))) ();
  };
  var $T45 = function () {
    return ($T45 = JSIL.Memoize($asm01.System.Collections.Generic.Dictionary$b2_ValueCollection.Of($asm00.Forays.PhysicalObject, $asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.PhysicalObject)))) ();
  };
  var $T46 = function () {
    return ($T46 = JSIL.Memoize($asm01.System.Collections.Generic.Dictionary$b2.Of($asm00.Forays.PhysicalObject, $asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.PhysicalObject)))) ();
  };
  var $T47 = function () {
    return ($T47 = JSIL.Memoize($asm00.Forays.Dict$b2.Of($asm01.System.Int32, $asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.pos)))) ();
  };
  var $T48 = function () {
    return ($T48 = JSIL.Memoize($asm00.Forays.Dict$b2.Of($asm00.Forays.PhysicalObject, $asm01.System.Int32))) ();
  };
  var $T49 = function () {
    return ($T49 = JSIL.Memoize($asm01.System.Threading.Thread)) ();
  };
  var $T4A = function () {
    return ($T4A = JSIL.Memoize($asm01.System.Console)) ();
  };
  var $T4B = function () {
    return ($T4B = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.colorchar))) ();
  };
  var $T4C = function () {
    return ($T4C = JSIL.Memoize($asm01.System.ConsoleKeyInfo)) ();
  };
  var $T4D = function () {
    return ($T4D = JSIL.Memoize($asm01.System.ConsoleKey)) ();
  };
  var $T4E = function () {
    return ($T4E = JSIL.Memoize($asm01.System.ConsoleModifiers)) ();
  };
  var $T4F = function () {
    return ($T4F = JSIL.Memoize($asm00.Forays.cstr)) ();
  };
  var $T50 = function () {
    return ($T50 = JSIL.Memoize($asm00.Forays.Skill)) ();
  };
  var $T51 = function () {
    return ($T51 = JSIL.Memoize($asm00.Forays.Feat)) ();
  };
  var $T52 = function () {
    return ($T52 = JSIL.Memoize($asm00.Forays.Dict$b2.Of($asm00.Forays.WeaponType, $asm00.Forays.WeaponType))) ();
  };
  var $T53 = function () {
    return ($T53 = JSIL.Memoize($asm00.Forays.Dict$b2.Of($asm00.Forays.ArmorType, $asm00.Forays.ArmorType))) ();
  };
  var $T54 = function () {
    return ($T54 = JSIL.Memoize($asm02.System.Collections.Generic.LinkedList$b1_Enumerator.Of($asm00.Forays.WeaponType))) ();
  };
  var $T55 = function () {
    return ($T55 = JSIL.Memoize($asm02.System.Collections.Generic.LinkedList$b1_Enumerator.Of($asm00.Forays.ArmorType))) ();
  };
  var $T56 = function () {
    return ($T56 = JSIL.Memoize($asm02.System.Collections.Generic.LinkedList$b1_Enumerator.Of($asm00.Forays.MagicItemType))) ();
  };
  var $T57 = function () {
    return ($T57 = JSIL.Memoize($asm00.Forays.MagicItem)) ();
  };
  var $T58 = function () {
    return ($T58 = JSIL.Memoize($asm00.Forays.OptionType)) ();
  };
  var $T59 = function () {
    return ($T59 = JSIL.Memoize($asm00.Forays.colorstring)) ();
  };
  var $T5A = function () {
    return ($T5A = JSIL.Memoize(System.Array.Of($asm01.System.Int32))) ();
  };
  var $T5B = function () {
    return ($T5B = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm01.System.String))) ();
  };
  var $T5C = function () {
    return ($T5C = JSIL.Memoize(System.Array.Of($asm00.Forays.PhysicalObject))) ();
  };
  var $T5D = function () {
    return ($T5D = JSIL.Memoize($asm01.System.Exception)) ();
  };
  var $T5E = function () {
    return ($T5E = JSIL.Memoize(System.Array.Of($asm00.Forays.colorchar))) ();
  };
  var $T5F = function () {
    return ($T5F = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.colorstring))) ();
  };
  var $T60 = function () {
    return ($T60 = JSIL.Memoize($asm01.System.Object)) ();
  };
  var $T61 = function () {
    return ($T61 = JSIL.Memoize(System.Array.Of($asm01.System.Object))) ();
  };
  var $T62 = function () {
    return ($T62 = JSIL.Memoize($asm00.Forays.Dict$b2.Of($asm00.Forays.TutorialTopic, $asm01.System.Boolean))) ();
  };
  var $T63 = function () {
    return ($T63 = JSIL.Memoize($asm00.Forays.HelpTopic)) ();
  };
  var $T64 = function () {
    return ($T64 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.FeatType))) ();
  };
  var $T65 = function () {
    return ($T65 = JSIL.Memoize($asm01.System.Collections.IEnumerator)) ();
  };
  var $T66 = function () {
    return ($T66 = JSIL.Memoize($asm01.System.Enum)) ();
  };
  var $T67 = function () {
    return ($T67 = JSIL.Memoize($asm01.System.Array)) ();
  };
  var $T68 = function () {
    return ($T68 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.cstr))) ();
  };
  var $T69 = function () {
    return ($T69 = JSIL.Memoize(System.Array.Of($asm01.System.Int32))) ();
  };
  var $T6A = function () {
    return ($T6A = JSIL.Memoize($asm01.System.Collections.Generic.Dictionary$b2.Of($asm00.Forays.OptionType, $asm01.System.Boolean))) ();
  };
  var $T6B = function () {
    return ($T6B = JSIL.Memoize($asm00.Forays.Damage)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Dict`2", [$asm00.TypeRef("Forays.ActorType"), $asm00.TypeRef("Forays.Actor")]), []))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Dict`2", [$asm00.TypeRef("Forays.AttrType"), $asm01.TypeRef("System.Int32")]), []))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Dict`2", [$asm00.TypeRef("Forays.SkillType"), $asm01.TypeRef("System.Int32")]), []))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Dict`2", [$asm00.TypeRef("Forays.FeatType"), $asm01.TypeRef("System.Int32")]), []))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Dict`2", [$asm00.TypeRef("Forays.SpellType"), $asm01.TypeRef("System.Int32")]), []))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.pos")]), []))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.ConstructorSignature($asm02.TypeRef("System.Collections.Generic.LinkedList`1", [$asm00.TypeRef("Forays.WeaponType")]), []))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.ConstructorSignature($asm02.TypeRef("System.Collections.Generic.LinkedList`1", [$asm00.TypeRef("Forays.ArmorType")]), []))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.ConstructorSignature($asm02.TypeRef("System.Collections.Generic.LinkedList`1", [$asm00.TypeRef("Forays.MagicItemType")]), []))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Item")]), []))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Boolean"), [$asm00.TypeRef("Forays.FeatureType")], []))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Boolean"), [$asm00.TypeRef("Forays.TileType")], []))) ();
  };
  var $S0C = function () {
    return ($S0C = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Int32"), [$asm00.TypeRef("Forays.PhysicalObject")], []))) ();
  };
  var $S0D = function () {
    return ($S0D = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Event"), [
        $asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.EventType")
      ]))) ();
  };
  var $S0E = function () {
    return ($S0E = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.ArmorType"), $asm00.TypeRef("Forays.ArmorType")], []))) ();
  };
  var $S0F = function () {
    return ($S0F = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Event"), [
        $asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.AttrType")
      ]))) ();
  };
  var $S10 = function () {
    return ($S10 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm00.TypeRef("Forays.PhysicalObject"), $asm00.TypeRef("Forays.Color"), 
        $asm01.TypeRef("System.Char")
      ], []))) ();
  };
  var $S11 = function () {
    return ($S11 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.PhysicalObject")]), []))) ();
  };
  var $S12 = function () {
    return ($S12 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), []))) ();
  };
  var $S13 = function () {
    return ($S13 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.Color"), $asm01.TypeRef("System.Char")
      ], []))) ();
  };
  var $S14 = function () {
    return ($S14 = JSIL.Memoize(new JSIL.MethodSignature($asm00.TypeRef("Forays.Actor"), [$asm00.TypeRef("Forays.PhysicalObject")], []))) ();
  };
  var $S15 = function () {
    return ($S15 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.PhysicalObject"), $asm00.TypeRef("Forays.Color")], []))) ();
  };
  var $S16 = function () {
    return ($S16 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Actor")]), []))) ();
  };
  var $S17 = function () {
    return ($S17 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.PhysicalObject")], []))) ();
  };
  var $S18 = function () {
    return ($S18 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.SpellType")]), []))) ();
  };
  var $S19 = function () {
    return ($S19 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm00.TypeRef("Forays.PhysicalObject"), $asm00.TypeRef("Forays.Color"), 
        $asm01.TypeRef("System.Char")
      ], []))) ();
  };
  var $S1A = function () {
    return ($S1A = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Event"), [
        $asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.AttrType"), $asm01.TypeRef("System.String"), 
        $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.PhysicalObject")])
      ]))) ();
  };
  var $S1B = function () {
    return ($S1B = JSIL.Memoize(new JSIL.MethodSignature($asm00.TypeRef("Forays.Actor"), [$asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Int32")], []))) ();
  };
  var $S1C = function () {
    return ($S1C = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Item"), [
        $asm00.TypeRef("Forays.Item"), $asm01.TypeRef("System.Int32"), 
        $asm01.TypeRef("System.Int32")
      ]))) ();
  };
  var $S1D = function () {
    return ($S1D = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Event"), [
        $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.EventType")
      ]))) ();
  };
  var $S1E = function () {
    return ($S1E = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Int32"), [$asm00.TypeRef("Forays.PhysicalObject")], []))) ();
  };
  var $S1F = function () {
    return ($S1F = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Char"), 
        $asm00.TypeRef("Forays.Color")
      ], []))) ();
  };
  var $S20 = function () {
    return ($S20 = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Int32"), [$asm00.TypeRef("Forays.pos")], []))) ();
  };
  var $S21 = function () {
    return ($S21 = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Boolean"), [$asm00.TypeRef("Forays.SpellType"), $asm00.TypeRef("Forays.PhysicalObject")], []))) ();
  };
  var $S22 = function () {
    return ($S22 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), $asm00.TypeRef("Forays.Color")], []))) ();
  };
  var $S23 = function () {
    return ($S23 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm01.TypeRef("System.Int32")]), []))) ();
  };
  var $S24 = function () {
    return ($S24 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.colorchar"), [$asm00.TypeRef("Forays.Color"), $asm01.TypeRef("System.Char")]))) ();
  };
  var $S25 = function () {
    return ($S25 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.colorchar"), [$asm01.TypeRef("System.Char"), $asm00.TypeRef("Forays.Color")]))) ();
  };
  var $S26 = function () {
    return ($S26 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Event"), [
        $asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.AttrType"), $asm01.TypeRef("System.String")
      ]))) ();
  };
  var $S27 = function () {
    return ($S27 = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Boolean"), [$asm00.TypeRef("Forays.PhysicalObject")], []))) ();
  };
  var $S28 = function () {
    return ($S28 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.PhysicalObject"), $asm00.TypeRef("Forays.EventType")], []))) ();
  };
  var $S29 = function () {
    return ($S29 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Event"), [$asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Int32")]))) ();
  };
  var $S2A = function () {
    return ($S2A = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Event"), [$asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.String")]))) ();
  };
  var $S2B = function () {
    return ($S2B = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), [$asm01.TypeRef("System.Int32")], []))) ();
  };
  var $S2C = function () {
    return ($S2C = JSIL.Memoize(new JSIL.MethodSignature($asm00.TypeRef("Forays.Actor"), [$asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")])], []))) ();
  };
  var $S2D = function () {
    return ($S2D = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), $asm01.TypeRef("System.Char"), 
        $asm00.TypeRef("Forays.Color")
      ], []))) ();
  };
  var $S2E = function () {
    return ($S2E = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), $asm01.TypeRef("System.Char"), 
        $asm00.TypeRef("Forays.Color")
      ], []))) ();
  };
  var $S2F = function () {
    return ($S2F = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Dict`2", [$asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.PhysicalObject")])]), []))) ();
  };
  var $S30 = function () {
    return ($S30 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Dict`2", [$asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.pos")])]), []))) ();
  };
  var $S31 = function () {
    return ($S31 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Dict`2", [$asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Int32")]), []))) ();
  };
  var $S32 = function () {
    return ($S32 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm01.TypeRef("System.Int32")], []))) ();
  };
  var $S33 = function () {
    return ($S33 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.Color"), $asm01.TypeRef("System.Char")], []))) ();
  };
  var $S34 = function () {
    return ($S34 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.colorchar")]), []))) ();
  };
  var $S35 = function () {
    return ($S35 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.colorchar")
      ], []))) ();
  };
  var $S36 = function () {
    return ($S36 = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), [$asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32")], []))) ();
  };
  var $S37 = function () {
    return ($S37 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), $asm00.TypeRef("Forays.Color")], []))) ();
  };
  var $S38 = function () {
    return ($S38 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Int32"), 
        $asm01.TypeRef("System.Char"), $asm00.TypeRef("Forays.Color")
      ], []))) ();
  };
  var $S39 = function () {
    return ($S39 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.pos")]), $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.colorchar")])], []))) ();
  };
  var $S3A = function () {
    return ($S3A = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Boolean"), [$asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")])], []))) ();
  };
  var $S3B = function () {
    return ($S3B = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Actor"), [
        $asm00.TypeRef("Forays.Actor"), $asm01.TypeRef("System.Int32"), 
        $asm01.TypeRef("System.Int32")
      ]))) ();
  };
  var $S3C = function () {
    return ($S3C = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Actor"), [
        $asm00.TypeRef("Forays.ActorType"), $asm01.TypeRef("System.String"), 
        $asm01.TypeRef("System.Char"), $asm00.TypeRef("Forays.Color"), 
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.AttrType")])
      ]))) ();
  };
  var $S3D = function () {
    return ($S3D = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $asm01.TypeRef("System.String")
      ], []))) ();
  };
  var $S3E = function () {
    return ($S3E = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.cstr")
      ], []))) ();
  };
  var $S3F = function () {
    return ($S3F = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.cstr"), [$asm00.TypeRef("Forays.Color"), $asm01.TypeRef("System.String")]))) ();
  };
  var $S40 = function () {
    return ($S40 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $asm01.TypeRef("System.Char")
      ], []))) ();
  };
  var $S41 = function () {
    return ($S41 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Dict`2", [$asm00.TypeRef("Forays.WeaponType"), $asm00.TypeRef("Forays.WeaponType")]), []))) ();
  };
  var $S42 = function () {
    return ($S42 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Dict`2", [$asm00.TypeRef("Forays.ArmorType"), $asm00.TypeRef("Forays.ArmorType")]), []))) ();
  };
  var $S43 = function () {
    return ($S43 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $asm01.TypeRef("System.String")
      ], []))) ();
  };
  var $S44 = function () {
    return ($S44 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.cstr")
      ], []))) ();
  };
  var $S45 = function () {
    return ($S45 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm01.TypeRef("System.String"), $asm00.TypeRef("Forays.Color")], []))) ();
  };
  var $S46 = function () {
    return ($S46 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.colorstring")
      ], []))) ();
  };
  var $S47 = function () {
    return ($S47 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.colorstring"), [$jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.cstr")])]))) ();
  };
  var $S48 = function () {
    return ($S48 = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Int32"), [$asm00.TypeRef("Forays.pos")], []))) ();
  };
  var $S49 = function () {
    return ($S49 = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.pos")]), [$asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Int32")], []))) ();
  };
  var $S4A = function () {
    return ($S4A = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.pos")]), [
        $asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Int32"), 
        $asm01.TypeRef("System.Boolean")
      ], []))) ();
  };
  var $S4B = function () {
    return ($S4B = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.pos")]), [$asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32")], []))) ();
  };
  var $S4C = function () {
    return ($S4C = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.pos")]), [
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $asm01.TypeRef("System.Int32")
      ], []))) ();
  };
  var $S4D = function () {
    return ($S4D = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")])], []))) ();
  };
  var $S4E = function () {
    return ($S4E = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm01.TypeRef("System.String")]), []))) ();
  };
  var $S4F = function () {
    return ($S4F = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Event"), [
        $asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.AttrType"), $asm01.TypeRef("System.Int32")
      ]))) ();
  };
  var $S50 = function () {
    return ($S50 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Event"), [
        $asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.AttrType"), $asm01.TypeRef("System.Int32"), 
        $asm01.TypeRef("System.String"), $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.PhysicalObject")])
      ]))) ();
  };
  var $S51 = function () {
    return ($S51 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.PhysicalObject"), $asm00.TypeRef("Forays.AttrType")], []))) ();
  };
  var $S52 = function () {
    return ($S52 = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Int32"), [$asm00.TypeRef("Forays.pos")], []))) ();
  };
  var $S53 = function () {
    return ($S53 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Exception"), [$asm01.TypeRef("System.String")]))) ();
  };
  var $S54 = function () {
    return ($S54 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.colorstring")
      ], []))) ();
  };
  var $S55 = function () {
    return ($S55 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Int32")], []))) ();
  };
  var $S56 = function () {
    return ($S56 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.colorstring")]), []))) ();
  };
  var $S57 = function () {
    return ($S57 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.cstr"), [$asm01.TypeRef("System.String"), $asm00.TypeRef("Forays.Color")]))) ();
  };
  var $S58 = function () {
    return ($S58 = JSIL.Memoize(new JSIL.MethodSignature($asm00.TypeRef("Forays.Color"), [$asm01.TypeRef("System.Int32")], []))) ();
  };
  var $S59 = function () {
    return ($S59 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.colorstring"), [$asm01.TypeRef("System.String"), $asm00.TypeRef("Forays.Color")]))) ();
  };
  var $S5A = function () {
    return ($S5A = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.colorstring"), [
        $asm01.TypeRef("System.String"), $asm00.TypeRef("Forays.Color"), 
        $asm01.TypeRef("System.String"), $asm00.TypeRef("Forays.Color"), 
        $asm01.TypeRef("System.String"), $asm00.TypeRef("Forays.Color")
      ]))) ();
  };
  var $S5B = function () {
    return ($S5B = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Event"), [
        $asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), 
        $asm01.TypeRef("System.Int32"), $asm00.TypeRef("Forays.EventType"), 
        $asm00.TypeRef("Forays.AttrType"), $asm01.TypeRef("System.Int32"), 
        $asm01.TypeRef("System.String"), $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.PhysicalObject")])
      ]))) ();
  };
  var $S5C = function () {
    return ($S5C = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Int32"), [$asm00.TypeRef("Forays.pos")], []))) ();
  };
  var $S5D = function () {
    return ($S5D = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.WeaponType"), $asm00.TypeRef("Forays.WeaponType")], []))) ();
  };
  var $S5E = function () {
    return ($S5E = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.FeatType")]), []))) ();
  };
  var $S5F = function () {
    return ($S5F = JSIL.Memoize(new JSIL.MethodSignature($asm00.TypeRef("Forays.Color"), [$asm00.TypeRef("Forays.SpellType")], []))) ();
  };
  var $S60 = function () {
    return ($S60 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.colorstring"), [
        $asm01.TypeRef("System.String"), $asm00.TypeRef("Forays.Color"), 
        $asm01.TypeRef("System.String"), $asm00.TypeRef("Forays.Color"), 
        $asm01.TypeRef("System.String"), $asm00.TypeRef("Forays.Color"), 
        $asm01.TypeRef("System.String"), $asm00.TypeRef("Forays.Color"), 
        $asm01.TypeRef("System.String"), $asm00.TypeRef("Forays.Color")
      ]))) ();
  };
  var $S61 = function () {
    return ($S61 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Int32"), 
        $asm01.TypeRef("System.Boolean")
      ], []))) ();
  };
  var $S62 = function () {
    return ($S62 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Damage"), [
        $asm00.TypeRef("Forays.DamageType"), $asm00.TypeRef("Forays.DamageClass"), 
        $asm00.TypeRef("Forays.Actor"), $asm01.TypeRef("System.Int32")
      ]))) ();
  };
  var $S63 = function () {
    return ($S63 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Event"), [
        $asm00.TypeRef("Forays.PhysicalObject"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.AttrType"), $asm01.TypeRef("System.Int32"), 
        $asm01.TypeRef("System.String")
      ]))) ();
  };
  var $S64 = function () {
    return ($S64 = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Boolean"), [$asm00.TypeRef("Forays.SpellType"), $asm01.TypeRef("System.Boolean")], []))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm01.System.IDisposable.Dispose)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm01.System.Collections.IEnumerator.MoveNext)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm01.System.Collections.IEnumerator.get_Current)) ();
  };

  function Actor__ctor$00 () {
    this.attrs = $S01().Construct();
    this.skills = $S02().Construct();
    this.feats = $S03().Construct();
    this.spells = $S04().Construct();
    this.path = $S05().Construct();
    this.group = null;
    this.weapons = $S06().Construct();
    this.armors = $S07().Construct();
    this.magic_items = $S08().Construct();
    $T10().prototype._ctor.call(this);
    this.Actor$F$value = JSIL.Array.New($T05(), 13);
    this.Actor$inv$value = $S09().Construct();
    this.weapons = $S06().Construct();
    this.armors = $S07().Construct();
    this.magic_items = $S08().Construct();
    this.attrs = $S01().Construct();
    this.skills = $S02().Construct();
    this.feats = $S03().Construct();
    this.spells = $S04().Construct();
  };

  function Actor__ctor$01 (a, r, c) {
    var $s00 = new JSIL.ConstructorSignature($asm02.TypeRef("System.Collections.Generic.LinkedList`1", [$asm00.TypeRef("Forays.WeaponType")]), [$asm01.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm00.TypeRef("Forays.WeaponType")])]);
    var $s01 = new JSIL.ConstructorSignature($asm02.TypeRef("System.Collections.Generic.LinkedList`1", [$asm00.TypeRef("Forays.ArmorType")]), [$asm01.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm00.TypeRef("Forays.ArmorType")])]);
    var $s02 = new JSIL.ConstructorSignature($asm02.TypeRef("System.Collections.Generic.LinkedList`1", [$asm00.TypeRef("Forays.MagicItemType")]), [$asm01.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm00.TypeRef("Forays.MagicItemType")])]);
    var $s03 = new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Dict`2", [$asm00.TypeRef("Forays.AttrType"), $.Int32]), [$asm00.TypeRef("Forays.Dict`2", [$asm00.TypeRef("Forays.AttrType"), $.Int32])]);
    var $s04 = new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Dict`2", [$asm00.TypeRef("Forays.SkillType"), $.Int32]), [$asm00.TypeRef("Forays.Dict`2", [$asm00.TypeRef("Forays.SkillType"), $.Int32])]);
    var $s05 = new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Dict`2", [$asm00.TypeRef("Forays.FeatType"), $.Int32]), [$asm00.TypeRef("Forays.Dict`2", [$asm00.TypeRef("Forays.FeatType"), $.Int32])]);
    var $s06 = new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Dict`2", [$asm00.TypeRef("Forays.SpellType"), $.Int32]), [$asm00.TypeRef("Forays.Dict`2", [$asm00.TypeRef("Forays.SpellType"), $.Int32])]);
    this.attrs = $S01().Construct();
    this.skills = $S02().Construct();
    this.feats = $S03().Construct();
    this.spells = $S04().Construct();
    this.path = $S05().Construct();
    this.group = null;
    this.weapons = $S06().Construct();
    this.armors = $S07().Construct();
    this.magic_items = $S08().Construct();
    $T10().prototype._ctor.call(this);
    this.Actor$type$value = a.Actor$type$value;
    this.PhysicalObject$$name$value = a.PhysicalObject$$name$value;
    this.PhysicalObject$the_name$value = a.PhysicalObject$the_name$value;
    this.PhysicalObject$a_name$value = a.PhysicalObject$a_name$value;
    this.PhysicalObject$symbol$value = a.PhysicalObject$symbol$value;
    this.PhysicalObject$color$value = a.PhysicalObject$color$value;
    this.Actor$maxhp$value = a.Actor$maxhp$value;
    this.Actor$curhp$value = this.Actor$maxhp$value;
    this.Actor$speed$value = a.Actor$speed$value;
    this.Actor$level$value = a.Actor$level$value;
    this.PhysicalObject$light_radius$value = a.PhysicalObject$light_radius$value;
    this.Actor$target$value = null;
    this.Actor$F$value = JSIL.Array.New($T05(), 13);

    for (var i = 0; i < 13; i = ((i + 1) | 0)) {
      this.Actor$F$value[i] = $T05().NO_SPELL;
    }
    this.Actor$inv$value = $S09().Construct();
    this.set_row(r);
    this.set_col(c);
    this.target_location = null;
    this.time_of_last_action = 0;
    this.recover_time = 0;
    this.player_visibility_duration = 0;
    this.weapons = $s00.Construct(a.weapons);
    this.armors = $s01.Construct(a.armors);
    this.magic_items = $s02.Construct(a.magic_items);
    this.attrs = $s03.Construct(a.attrs);
    this.skills = $s04.Construct(a.skills);
    this.feats = $s05.Construct(a.feats);
    this.spells = $s06.Construct(a.spells);
    this.magic_penalty = 0;
  };

  function Actor__ctor$02 (type_, name_, symbol_, color_, maxhp_, speed_, level_, light_radius_, attrlist) {
    var $s00 = new JSIL.MethodSignature($asm02.TypeRef("System.Collections.Generic.LinkedListNode`1", [$asm00.TypeRef("Forays.WeaponType")]), [$asm00.TypeRef("Forays.WeaponType")], []);
    var $s01 = new JSIL.MethodSignature($asm02.TypeRef("System.Collections.Generic.LinkedListNode`1", [$asm00.TypeRef("Forays.ArmorType")]), [$asm00.TypeRef("Forays.ArmorType")], []);
    var dict = null, key = $asm00.Forays.AttrType.STEALTHY;
    this.attrs = $S01().Construct();
    this.skills = $S02().Construct();
    this.feats = $S03().Construct();
    this.spells = $S04().Construct();
    this.path = $S05().Construct();
    this.group = null;
    this.weapons = $S06().Construct();
    this.armors = $S07().Construct();
    this.magic_items = $S08().Construct();
    $T10().prototype._ctor.call(this);
    this.Actor$type$value = type_;
    this.SetName(name_);
    this.PhysicalObject$symbol$value = symbol_;
    this.PhysicalObject$color$value = color_;
    this.Actor$maxhp$value = maxhp_;
    this.Actor$curhp$value = this.Actor$maxhp$value;
    this.Actor$speed$value = speed_;
    this.Actor$level$value = level_;
    this.PhysicalObject$light_radius$value = light_radius_;
    this.Actor$target$value = null;
    this.Actor$inv$value = null;
    this.target_location = null;
    this.time_of_last_action = 0;
    this.recover_time = 0;
    this.player_visibility_duration = 0;
    $s00.Call($T0D().prototype, "AddFirst", null, this.weapons, $T15().NO_WEAPON);
    $s01.Call($T0E().prototype, "AddFirst", null, this.armors, $T16().NO_ARMOR);
    this.Actor$F$value = JSIL.Array.New($T05(), 13);

    for (var i = 0; i < 13; i = ((i + 1) | 0)) {
      this.Actor$F$value[i] = $T05().NO_SPELL;
    }
    this.magic_penalty = 0;

    for (var j = 0; j < attrlist.length; j = ((j + 1) | 0)) {
      var attrType = attrlist[j];
      var expr_13C = (key = attrType);
      var num = $T09().prototype.get_Item.call(dict, key);
      $T09().prototype.set_Item.call((dict = this.attrs), expr_13C, ((num + 1) | 0));
    }
  };

  function Actor_$lActiveAI$gm__29 (t) {
    return !t.Tile$passable$value;
  };

  function Actor_$lActiveAI$gm__2A (i) {
    return !i.Item$do_not_stack$value;
  };

  function Actor_$lActiveAI$gm__2B (i) {
    return !i.Item$do_not_stack$value;
  };

  function Actor_$lActiveAI$gm__34 (t) {
    return (t.Tile$passable$value && (t.actor() === null));
  };

  function Actor_$lIdleAI$gm__39 (t) {
    return !t.Tile$passable$value;
  };

  function Actor_$lInputAI$gm__28 (a) {
    return (a.Actor$curhp$value < a.Actor$maxhp$value);
  };

  function Actor_$lInputHuman$gm__25 (a) {
    return ((a !== this) && this.CanSee(a));
  };

  function Actor_$lPlayerWalk$gm__26 (a) {
    return ((a !== this) && this.CanSee(a));
  };

  function Actor_$lPlayerWalk$gm__27 (t) {
    return ($S0A().CallVirtual("Is", null, t, $T19().FUNGUS_ACTIVE) || 
      $S0A().CallVirtual("Is", null, t, $T19().FUNGUS_PRIMED) || 
      $S0A().CallVirtual("Is", null, t, $T19().GRENADE) || 
      $S0A().CallVirtual("Is", null, t, $T19().POISON_GAS) || 
      $S0A().CallVirtual("Is", null, t, $T19().QUICKFIRE) || $S0B().CallVirtual("Is", null, t, $T1A().FIRE_GEYSER));
  };

  function Actor_$lSeekAI$gm__38 (t) {
    return !t.Tile$passable$value;
  };

  function Actor_ActiveAI () {
    var $temp00, $temp01, $temp02, $temp03, $temp04, $temp05, $temp06, $temp07, $temp08, $temp09, $temp0A, $temp0B, $temp0C, $temp0D, $temp0E, $temp0F, $temp10, $temp11, $temp12, $temp13, $temp14, $temp15, $temp16, $temp17, $temp18, $temp19, $temp1A, $temp1B, $temp1C, $temp1D;
    var $s00 = new JSIL.MethodSignature($asm01.System.Boolean, [$asm00.TypeRef("Forays.MagicItemType")], []);
    var dict = null, dict2 = null, dict3 = null, dict4 = null, dict5 = null, dict6 = null, dict7 = null, dict8 = null, dict9 = null, dict10 = null, dict11 = null, dict12 = null, dict13 = null, dict14 = null, dict15 = null, p2 = new ($T1B())(), dict16 = null;
    if (this.path.get_Count() > 0) {
      this.path.Clear();
    }
    switch (this.Actor$type$value.valueOf()) {
      case 2: 
        if (!(!$thisType.Actor$player$value.magic_items.Contains($T1C().RING_OF_RESISTANCE) || 
            ($S0C().CallVirtual("DistanceFrom", null, this, $thisType.Actor$player$value) > 12) || !this.CanSee($thisType.Actor$player$value))) {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " exhales an orange mist toward you. "), JSIL.Array.New($T10(), 0));

          for (var a$0 = this.GetBestLine($thisType.Actor$player$value)._items, i$0 = 0, l$0 = this.GetBestLine($thisType.Actor$player$value)._size; i$0 < l$0; ($temp02 = i$0, 
              i$0 = ((i$0 + 1) | 0), 
              $temp02)) {
            var current = a$0[i$0];
            $T1F().AnimateStorm(
              current.p, 
              1, 
              2, 
              3, 
              "*", 
              $T03().Red
            );
          }
          $thisType.Actor$B$value.Add("Your ring of resistance melts and drips onto the floor! ", JSIL.Array.New($T10(), 0));
          $s00.CallVirtual("Remove", null, $thisType.Actor$player$value.magic_items, $T1C().RING_OF_RESISTANCE);
          $thisType.Actor$Q$value.Add($S0D().Construct(this, 100, $T22().MOVE));
        } else if (!(($thisType.Actor$player$value.armors.get_First().get_Value() !== $T16().FULL_PLATE_OF_RESISTANCE) || 
            ($S0C().CallVirtual("DistanceFrom", null, this, $thisType.Actor$player$value) > 12) || !this.CanSee($thisType.Actor$player$value))) {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " exhales an orange mist toward you. "), JSIL.Array.New($T10(), 0));

          for (var a$1 = this.GetBestLine($thisType.Actor$player$value)._items, i$1 = 0, l$1 = this.GetBestLine($thisType.Actor$player$value)._size; i$1 < l$1; ($temp03 = i$1, 
              i$1 = ((i$1 + 1) | 0), 
              $temp03)) {
            var current2 = a$1[i$1];
            $T1F().AnimateStorm(
              current2.p, 
              1, 
              2, 
              3, 
              "*", 
              $T03().Red
            );
          }
          $thisType.Actor$B$value.Add("The runes drip from your full plate of resistance! ", JSIL.Array.New($T10(), 0));
          $thisType.Actor$player$value.armors.get_First().set_Value($T16().FULL_PLATE);
          $S0E().CallVirtual("UpdateOnEquip", null, $thisType.Actor$player$value, $T16().FULL_PLATE_OF_RESISTANCE, $T16().FULL_PLATE);
          $thisType.Actor$Q$value.Add($S0D().Construct(this, 100, $T22().MOVE));
        } else if (!this.HasAttr($T04().COOLDOWN_1)) {
          if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) <= 12) {
            var num = $T09().prototype.get_Item.call(dict, $T04().COOLDOWN_1);
            $T09().prototype.set_Item.call((dict = this.attrs), $T04().COOLDOWN_1, ((num + 1) | 0));
            var delay_ = (((($T24().Roll(1, 4) + 1) | 0) * 100) | 0);
            $thisType.Actor$Q$value.Add($S0F().Construct(this, delay_, $T04().COOLDOWN_1));
            $S10().CallVirtual("AnimateBeam", null, this, this.Actor$target$value, $T03().RandomFire, "*");
            this.Attack(2, this.Actor$target$value);
            if (!((this.Actor$target$value === null) || 
                this.Actor$target$value.HasAttr($T04().ON_FIRE) || this.Actor$target$value.HasAttr($T04().CATCHING_FIRE))) {
              $T09().prototype.set_Item.call(this.Actor$target$value.attrs, $T04().CATCHING_FIRE, 1);
              $thisType.Actor$B$value.Add(JSIL.ConcatString(this.Actor$target$value.You("start"), " catching fire! "), JSIL.Array.New($T10(), [this.Actor$target$value]));
            }
          } else {
            this.AI_Step(this.Actor$target$value);
            this.QS();
          }
        } else if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
          this.Attack((($T24().Roll(1, 2) - 1) | 0), this.Actor$target$value);
        } else {
          this.AI_Step(this.Actor$target$value);
          this.QS();
        }
        return;

      case 4: 
      case 62: 
        if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
          var attack_idx = (($T24().Roll(1, 2) - 1) | 0);
          this.Attack(attack_idx, this.Actor$target$value);
          if ($T24().CoinFlip()) {
            this.AI_Step(this.Actor$target$value, true);
          }
        } else if ($T24().CoinFlip()) {
          this.AI_Step(this.Actor$target$value);
          this.QS();
        } else {
          this.AI_Step(this.TileInDirection($T24().RandomDirection()));
          this.QS();
        }
        return;

      case 7: 
        var physicalObject = null;
        if (!($T10().PhysicalObject$M$value.get_wiz_lite() || $T10().PhysicalObject$M$value.Map$wiz_dark$value)) {
          var list = $S11().Construct();

          for (var a$2 = $T10().PhysicalObject$M$value.AllTiles()._items, i$2 = 0, l$2 = $T10().PhysicalObject$M$value.AllTiles()._size; i$2 < l$2; ($temp04 = i$2, 
              i$2 = ((i$2 + 1) | 0), 
              $temp04)) {
            var current3 = a$2[i$2];
            var num2 = current3.PhysicalObject$light_radius$value;
            var physicalObject2 = current3;
            if (!((current3.Tile$inv$value === null) || (current3.Tile$inv$value.PhysicalObject$light_radius$value <= num2))) {
              num2 = current3.Tile$inv$value.PhysicalObject$light_radius$value;
              physicalObject2 = current3.Tile$inv$value;
            }
            if (!((current3.actor() === null) || (current3.actor().LightRadius() <= num2))) {
              num2 = current3.actor().LightRadius();
              physicalObject2 = current3.actor();
            }
            if (num2 > 0) {
              if (!((list.get_Count() !== 0) || !this.CanSee(current3))) {
                list.Add(physicalObject2);
              } else {

              $loop3: 
                for (var a$3 = list._items, i$3 = 0, l$3 = list._size; i$3 < l$3; ($temp05 = i$3, 
                    i$3 = ((i$3 + 1) | 0), 
                    $temp05)) {
                  var current4 = a$3[i$3];
                  if (num2 > current4.PhysicalObject$light_radius$value) {
                    if (this.CanSee(current3)) {
                      list.Clear();
                      list.Add(physicalObject2);
                      break $loop3;
                    }
                  } else if (!((num2 !== current4.PhysicalObject$light_radius$value) || ($S0C().CallVirtual("DistanceFrom", null, this, current3) >= $S0C().CallVirtual("DistanceFrom", null, this, current4)))) {
                    if (this.CanSee(current3)) {
                      list.Clear();
                      list.Add(physicalObject2);
                      break $loop3;
                    }
                  } else if (!((num2 !== current4.PhysicalObject$light_radius$value) || 
                      ($S0C().CallVirtual("DistanceFrom", null, this, current3) !== $S0C().CallVirtual("DistanceFrom", null, this, current4)) || 
                      (physicalObject2 !== $thisType.Actor$player$value) || !this.CanSee(current3))) {
                    list.Clear();
                    list.Add(physicalObject2);
                    break $loop3;
                  }
                }
              }
            }
          }
          if (list.get_Count() > 0) {
            physicalObject = $T27().Random$b1($T10())(list);
          }
        }
        if (physicalObject !== null) {
          if ($S0C().CallVirtual("DistanceFrom", null, this, physicalObject) <= 1) {
            if (physicalObject === this.Actor$target$value) {
              this.Attack(0, this.Actor$target$value);
              if (!((this.Actor$target$value !== $thisType.Actor$player$value) || ($thisType.Actor$player$value.Actor$curhp$value <= 0))) {
                $T28().TutorialTip($T29().Torch);
              }
            } else {
              var list2 = $S12().Construct();

              for (var a$4 = this.TilesAtDistance(1)._items, i$4 = 0, l$4 = this.TilesAtDistance(1)._size; i$4 < l$4; ($temp06 = i$4, 
                  i$4 = ((i$4 + 1) | 0), 
                  $temp06)) {
                var current5 = a$4[i$4];
                if (!(($S0C().CallVirtual("DistanceFrom", null, current5, physicalObject) > 1) || 
                    !current5.Tile$passable$value || (current5.actor() !== null))) {
                  list2.Add(current5);
                }
              }
              if (list2.get_Count() > 0) {
                this.AI_Step($T27().Random$b1($T17())(list2));
              }
              this.QS();
            }
          } else {
            this.AI_Step(physicalObject);
            this.QS();
          }
        } else {
          var dir = $T24().RandomDirection();
          if (!((($T27().Where$b1($T17())(this.TilesAtDistance(1), function Actor_$lActiveAI$gm__29 (t) {
                      return !t.Tile$passable$value;
                    })).get_Count() <= 4) || this.TileInDirection(dir).Tile$passable$value)) {
            dir = $T24().RandomDirection();
          }
          if (!(!this.TileInDirection(dir).Tile$passable$value || (this.ActorInDirection(dir) !== null))) {
            this.AI_Step(this.TileInDirection(dir));
            this.QS();
          } else if (!((this.Actor$curhp$value >= this.Actor$maxhp$value) || (this.ActorInDirection(dir) !== this.Actor$target$value))) {
            this.Attack(0, this.Actor$target$value);
          } else {
            if ($thisType.Actor$player$value.HasLOS(this.TileInDirection(dir))) {
              if (!this.TileInDirection(dir).Tile$passable$value) {
                $thisType.Actor$B$value.Add((this.PhysicalObject$the_name$value + " brushes up against " + this.TileInDirection(dir).PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [this]));
              } else if (this.ActorInDirection(dir) !== null) {
                $thisType.Actor$B$value.Add((this.PhysicalObject$the_name$value + " brushes up against " + this.ActorInDirection(dir).TheVisible() + ". "), JSIL.Array.New($T10(), [this]));
              }
            }
            this.QS();
          }
        }
        return;

      case 8: 
      case 63: 
        if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
          this.Attack(0, this.Actor$target$value);
          if (!this.HasAttr($T04().COOLDOWN_1)) {
            $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("adopt"), " a more aggressive stance. "), JSIL.Array.New($T10(), [this]));
            var expr_6A2 = (dict2 = this.attrs);
            num = $T09().prototype.get_Item.call(dict2, $T04().BONUS_COMBAT);
            $T09().prototype.set_Item.call(expr_6A2, $T04().BONUS_COMBAT, ((num + 5) | 0));
          }
        } else {
          this.AI_Step(this.Actor$target$value);
          this.QS();
        }
        return;

      case 9: 
        if (this.HasAttr($T04().COOLDOWN_1)) {
          var dir2 = $T24().RandomDirection();
          if (!this.TileInDirection(dir2).Tile$passable$value) {
            $thisType.Actor$B$value.Add((this.You("stagger") + " into " + this.TileInDirection(dir2).PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [this]));
          } else if (this.ActorInDirection(dir2) !== null) {
            $thisType.Actor$B$value.Add(
              (this.YouVisible("stagger") + " into " + this.ActorInDirection(dir2).TheVisible() + ". "), 
              JSIL.Array.New($T10(), [this, this.ActorInDirection(dir2)])
            );
          } else if (this.GrabPreventsMovement(this.TileInDirection(dir2))) {
            $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " staggers and almost falls over. "), JSIL.Array.New($T10(), [this]));
          } else {
            $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("stagger"), ". "), JSIL.Array.New($T10(), [this]));
            this.Move(
              this.TileInDirection(dir2).get_row(), 
              this.TileInDirection(dir2).get_col()
            );
          }
          this.QS();
        } else if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
          this.Attack(0, this.Actor$target$value);
        } else {
          this.AI_Step(this.Actor$target$value);
          this.QS();
        }
        return;

      case 10: 
      case 54: 
        if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
          this.Attack(0, this.Actor$target$value);
          if (!((this.Actor$target$value !== $thisType.Actor$player$value) || ($thisType.Actor$player$value.Actor$curhp$value <= 0))) {
            $T28().TutorialTip($T29().RangedAttacks);
          }
        } else {
          this.QS();
        }
        return;

      case 11: 
        if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
          if (!this.HasAttr($T04().COOLDOWN_2)) {
            var expr_8DE = (dict3 = this.attrs);
            num = $T09().prototype.get_Item.call(dict3, $T04().COOLDOWN_2);
            $T09().prototype.set_Item.call(expr_8DE, $T04().COOLDOWN_2, ((num + 1) | 0));
            var delay_2 = ((100 * (($T24().Roll(1, 3) + 8) | 0)) | 0);
            $thisType.Actor$Q$value.Add($S0F().Construct(this, delay_2, $T04().COOLDOWN_2));
            $S13().CallVirtual("AnimateExplosion", null, this, this, 1, $T03().RandomIce, "*");
            this.Attack(2, this.Actor$target$value);
          } else if ($T24().CoinFlip()) {
            this.Attack(0, this.Actor$target$value);
          } else if (this.AI_Step(this.Actor$target$value, true)) {
            this.QS();
          } else {
            this.Attack(0, this.Actor$target$value);
          }
        } else if (!(($S14().CallVirtual("FirstActorInLine", null, this, this.Actor$target$value) !== this.Actor$target$value) || 
            this.HasAttr($T04().COOLDOWN_1) || ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) > 6))) {
          var num3 = $T24().Roll(1, 4);
          if (num3 !== 1) {
            var expr_9D2 = (dict4 = this.attrs);
            num = $T09().prototype.get_Item.call(dict4, $T04().COOLDOWN_1);
            $T09().prototype.set_Item.call(expr_9D2, $T04().COOLDOWN_1, ((num + 1) | 0));
            num3 = ((num3 * 100) | 0);
            $thisType.Actor$Q$value.Add($S0F().Construct(this, num3, $T04().COOLDOWN_1));
          }
          $S15().CallVirtual("AnimateBoltProjectile", null, this, this.Actor$target$value, $T03().RandomIce);
          this.Attack(1, this.Actor$target$value);
        } else {
          if (!this.HasAttr($T04().COOLDOWN_2)) {
            this.AI_Step(this.Actor$target$value);
          } else {
            this.AI_Sidestep(this.Actor$target$value);
          }
          this.QS();
        }
        return;

      case 12: 
        if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
          if (!((this.Actor$curhp$value > 18) || this.HasAttr($T04().COOLDOWN_1))) {
            var expr_A90 = (dict5 = this.attrs);
            num = $T09().prototype.get_Item.call(dict5, $T04().COOLDOWN_1);
            $T09().prototype.set_Item.call(expr_A90, $T04().COOLDOWN_1, ((num + 1) | 0));
            var list3 = $S12().Construct();

            for (var a$5 = this.Actor$target$value.TilesAtDistance(1)._items, i$5 = 0, l$5 = this.Actor$target$value.TilesAtDistance(1)._size; i$5 < l$5; ($temp07 = i$5, 
                i$5 = ((i$5 + 1) | 0), 
                $temp07)) {
              var current6 = a$5[i$5];
              if (!(!current6.Tile$passable$value || (current6.actor() !== null))) {
                list3.Add(current6);
              }
            }

            for (var a$6 = list3._items, i$6 = 0, l$6 = list3._size; i$6 < l$6; ($temp08 = i$6, 
                i$6 = ((i$6 + 1) | 0), 
                $temp08)) {
              var current7 = a$6[i$6];
              if (this.group === null) {
                this.group = ($S16().Construct()).__Initialize__([[this]]);
              }
              $thisType.Create(
                $T02().DREAM_CLONE, 
                current7.get_row(), 
                current7.get_col(), 
                true, 
                true
              );
              current7.actor().player_visibility_duration = -1;
              this.group.Add($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, 
                  current7.get_row(), 
                  current7.get_col()
                ));
              $T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, current7.row, current7.col).group = this.group;
              $T27().Randomize$b1($thisType)(this.group);
            }
            list3.Add(this.tile());
            var tile = list3.get_Item((($T24().Roll(list3.get_Count()) - 1) | 0));
            if (tile !== this.tile()) {
              this.Move(
                tile.get_row(), 
                tile.get_col(), 
                false
              );
            }
            if (list3.get_Count() > 1) {
              $thisType.Actor$B$value.Add((this.PhysicalObject$the_name$value + " is suddenly standing all around " + this.Actor$target$value.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), 0));
              this.Q1();
            } else {
              this.Attack(0, this.Actor$target$value);
            }
          } else {
            this.Attack(0, this.Actor$target$value);
          }
        } else {
          this.AI_Step(this.Actor$target$value);
          this.QS();
        }
        return;

      case 13: 
        if (!((this.Actor$curhp$value > 10) || this.HasAttr($T04().COOLDOWN_1))) {
          var expr_CD5 = (dict6 = this.attrs);
          num = $T09().prototype.get_Item.call(dict6, $T04().COOLDOWN_1);
          $T09().prototype.set_Item.call(expr_CD5, $T04().COOLDOWN_1, ((num + 1) | 0));
          switch ($T24().Roll(4)) {
            case 1: 
              var text = "ae vatra kersai";
              break;

            case 2: 
              text = "kersai dzaggath";
              break;

            case 3: 
              text = "od fir od bahgal";
              break;

            case 4: 
              text = "denei kersai nammat";
              break;

            default: 
              text = "gubed gubed gubed";
              break;

          }
          if ($T24().CoinFlip()) {
            $thisType.Actor$B$value.Add((this.You("whisper") + " '" + text + "'. "), JSIL.Array.New($T10(), [this]));
          } else {
            $thisType.Actor$B$value.Add((this.You("scream") + " '" + text.toUpperCase() + "'. "), JSIL.Array.New($T10(), [this]));
          }
          $thisType.Actor$B$value.Add(("Flames erupt from " + this.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [this]));
          if (this.LightRadius() < 2) {
            this.UpdateRadius(this.LightRadius(), 2);
          }
          $T09().prototype.set_Item.call(this.attrs, $T04().ON_FIRE, $T2D().Max($T09().prototype.get_Item.call(this.attrs, $T04().ON_FIRE), 2));

          for (var a$7 = this.ActorsAtDistance(1)._items, i$7 = 0, l$7 = this.ActorsAtDistance(1)._size; i$7 < l$7; ($temp09 = i$7, 
              i$7 = ((i$7 + 1) | 0), 
              $temp09)) {
            var current8 = a$7[i$7];
            if (!(current8.HasAttr($T04().RESIST_FIRE) || 
                current8.HasAttr($T04().IMMUNE_FIRE) || 
                current8.HasAttr($T04().ON_FIRE) || 
                current8.HasAttr($T04().CATCHING_FIRE) || current8.HasAttr($T04().STARTED_CATCHING_FIRE_THIS_TURN))) {
              if (current8.PhysicalObject$$name$value == "you") {
                $thisType.Actor$B$value.Add("You start to catch fire! ", JSIL.Array.New($T10(), 0));
              } else {
                $thisType.Actor$B$value.Add(JSIL.ConcatString(current8.PhysicalObject$the_name$value, " starts to catch fire. "), JSIL.Array.New($T10(), [current8]));
              }
              $T09().prototype.set_Item.call(current8.attrs, $T04().CATCHING_FIRE, 1);
            }
          }
          this.Q1();
        } else if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
          this.Attack(0, this.Actor$target$value);
        } else {
          this.AI_Step(this.Actor$target$value);
          this.QS();
        }
        return;

      case 14: 
      case 64: 
        switch ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value)) {
          case 1: 
            if (this.Actor$target$value.EnemiesAdjacent() > 1) {
              this.Attack(0, this.Actor$target$value);
            } else if (this.AI_Step(this.Actor$target$value, true)) {
              this.QS();
            } else {
              this.Attack(0, this.Actor$target$value);
            }
            break;

          case 2: 
            if ($S14().CallVirtual("FirstActorInLine", null, this, this.Actor$target$value) === this.Actor$target$value) {
              $S17().CallVirtual("FireArrow", null, this, this.Actor$target$value);
            } else if (this.AI_Step(this.Actor$target$value, true)) {
              this.QS();
            } else {
              if (this.AI_Sidestep(this.Actor$target$value)) {
                $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " tries to line up a shot. "), JSIL.Array.New($T10(), [this]));
              }
              this.QS();
            }
            break;

          case 3: 
          case 4: 
          case 5: 
          case 6: 
          case 7: 
          case 8: 
            if ($S14().CallVirtual("FirstActorInLine", null, this, this.Actor$target$value) === this.Actor$target$value) {
              $S17().CallVirtual("FireArrow", null, this, this.Actor$target$value);
            } else {
              if (this.AI_Sidestep(this.Actor$target$value)) {
                $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " tries to line up a shot. "), JSIL.Array.New($T10(), [this]));
              }
              this.QS();
            }
            break;

          default: 
            this.AI_Step(this.Actor$target$value);
            this.QS();
            break;

        }
        return;

      case 15: 

        for (var a$8 = this.ActorsWithinDistance(2)._items, i$8 = 0, l$8 = this.ActorsWithinDistance(2)._size; i$8 < l$8; ($temp0A = i$8, 
            i$8 = ((i$8 + 1) | 0), 
            $temp0A)) {
          var current9 = a$8[i$8];
          if (!(!current9.HasAttr($T04().SPELL_DISRUPTION) || !current9.HasLOE(this))) {
            if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
              this.Attack(0, this.Actor$target$value);
            } else {
              this.AI_Step(this.Actor$target$value);
              this.QS();
            }
            return;
          }
        }
        var list4 = $S18().Construct();
        list4.Add($T05().FORCE_PALM);
        list4.Add($T05().IMMOLATE);
        if (!(!this.Actor$target$value.HasAttr($T04().ON_FIRE) && !this.Actor$target$value.HasAttr($T04().CATCHING_FIRE))) {
          list4.Remove($T05().IMMOLATE);
        }
        var array = $T2E().prototype.ToArray.call(list4);
        list4.Add($T05().SCORCH);
        list4.Remove($T05().FORCE_PALM);
        var array2 = $T2E().prototype.ToArray.call(list4);
        switch ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value)) {
          case 1: 
            if (!((this.Actor$target$value.EnemiesAdjacent() <= 1) && !$T24().CoinFlip())) {
              this.CastRandomSpell(this.Actor$target$value, array);
            } else if (this.AI_Step(this.Actor$target$value, true)) {
              this.QS();
            } else {
              this.CastRandomSpell(this.Actor$target$value, array);
            }
            break;

          case 2: 
            if ($T24().CoinFlip()) {
              if (this.AI_Step(this.Actor$target$value, true)) {
                this.QS();
              } else if ($S14().CallVirtual("FirstActorInLine", null, this, this.Actor$target$value) === this.Actor$target$value) {
                this.CastRandomSpell(this.Actor$target$value, array2);
              } else {
                this.AI_Sidestep(this.Actor$target$value);
                this.QS();
              }
            } else if ($S14().CallVirtual("FirstActorInLine", null, this, this.Actor$target$value) === this.Actor$target$value) {
              this.CastRandomSpell(this.Actor$target$value, array2);
            } else if (this.AI_Step(this.Actor$target$value, true)) {
              this.QS();
            } else {
              this.AI_Sidestep(this.Actor$target$value);
              this.QS();
            }
            break;

          case 3: 
          case 4: 
          case 5: 
          case 6: 
          case 7: 
          case 8: 
          case 9: 
          case 10: 
          case 11: 
          case 12: 
            if ($S14().CallVirtual("FirstActorInLine", null, this, this.Actor$target$value) === this.Actor$target$value) {
              this.CastRandomSpell(this.Actor$target$value, array2);
            } else {
              this.AI_Sidestep(this.Actor$target$value);
              this.QS();
            }
            break;

          default: 
            this.AI_Step(this.Actor$target$value);
            this.QS();
            break;

        }
        return;

      case 17: 
        if (!(this.HasAttr($T04().COOLDOWN_1) || ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) > 3))) {
          var expr_13E3 = (dict7 = this.attrs);
          num = $T09().prototype.get_Item.call(dict7, $T04().COOLDOWN_1);
          $T09().prototype.set_Item.call(expr_13E3, $T04().COOLDOWN_1, ((num + 1) | 0));
          $S19().CallVirtual("AnimateProjectile", null, this, this.Actor$target$value, $T03().DarkYellow, "%");
          if (this.Actor$target$value.CanSee(this)) {
            $thisType.Actor$B$value.Add((this.PhysicalObject$the_name$value + " throws a bola at " + this.Actor$target$value.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [this, this.Actor$target$value]));
          } else {
            $thisType.Actor$B$value.Add(("A bola whirls toward " + this.Actor$target$value.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [this, this.Actor$target$value]));
          }
          $T09().prototype.set_Item.call(this.attrs, $T04().TURNS_VISIBLE, -1);
          var expr_14AF = (dict8 = this.Actor$target$value.attrs);
          num = $T09().prototype.get_Item.call(dict8, $T04().SLOWED);
          $T09().prototype.set_Item.call(expr_14AF, $T04().SLOWED, ((num + 1) | 0));
          ($temp00 = ((this.Actor$target$value.Actor$speed$value + 100) | 0), 
            this.Actor$target$value.Actor$speed$value = $temp00, 
            $temp00);
          $thisType.Actor$Q$value.Add($S1A().Construct(this.Actor$target$value, (((($T24().Roll(3) + 5) | 0) * 100) | 0), $T04().SLOWED, JSIL.ConcatString(this.Actor$target$value.YouAre(), " no longer slowed. "), JSIL.Array.New($T10(), [this.Actor$target$value])));
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.Actor$target$value.YouAre(), " slowed by the bola. "), JSIL.Array.New($T10(), [this.Actor$target$value]));
          this.Q1();
        } else if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
          this.Attack(0, this.Actor$target$value);
        } else {
          this.AI_Step(this.Actor$target$value);
          this.QS();
        }
        return;

      case 18: 
      case 57: 
        if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
          this.Attack(1, this.Actor$target$value);
        } else {
          this.AI_Step(this.Actor$target$value);
          if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
            this.Attack(0, this.Actor$target$value);
          } else {
            this.QS();
          }
        }
        return;

      case 20: 

        for (var a$9 = this.ActorsWithinDistance(2)._items, i$9 = 0, l$9 = this.ActorsWithinDistance(2)._size; i$9 < l$9; ($temp0B = i$9, 
            i$9 = ((i$9 + 1) | 0), 
            $temp0B)) {
          var current10 = a$9[i$9];
          if (!(!current10.HasAttr($T04().SPELL_DISRUPTION) || !current10.HasLOE(this))) {
            if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
              this.Attack(0, this.Actor$target$value);
            } else {
              this.AI_Step(this.Actor$target$value);
              this.QS();
            }
            return;
          }
        }
        num = $S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value);
        if (num !== 1) {
          if (num !== 2) {
            if (this.Actor$curhp$value <= 26) {
              this.CastSpell($T05().MINOR_HEAL);
            } else if (this.Actor$curhp$value < this.Actor$maxhp$value) {
              if (this.HasAttr($T04().HOLY_SHIELDED)) {
                if (this.AI_Step(this.Actor$target$value)) {
                  this.QS();
                } else if (this.AI_Sidestep(this.Actor$target$value)) {
                  this.QS();
                } else {
                  this.CastSpell($T05().BLESS);
                }
              } else if ($T24().CoinFlip()) {
                this.CastSpell($T05().HOLY_SHIELD);
              } else if (this.AI_Step(this.Actor$target$value)) {
                this.QS();
              } else if (this.AI_Sidestep(this.Actor$target$value)) {
                this.QS();
              } else {
                this.CastSpell($T05().BLESS);
              }
            } else if (this.AI_Step(this.Actor$target$value)) {
              this.QS();
            } else if (this.AI_Sidestep(this.Actor$target$value)) {
              this.QS();
            } else {
              this.CastSpell($T05().BLESS);
            }
          } else if (this.Actor$curhp$value <= 20) {
            this.CastSpell($T05().MINOR_HEAL);
          } else if (this.HasAttr($T04().BLESSED)) {
            if (this.AI_Step(this.Actor$target$value)) {
              this.QS();
            } else {
              this.AI_Sidestep(this.Actor$target$value);
              this.QS();
            }
          } else if ($T24().Roll(1, 3) === 3) {
            this.CastSpell($T05().BLESS);
          } else if (this.AI_Step(this.Actor$target$value)) {
            this.QS();
          } else if (this.AI_Sidestep(this.Actor$target$value)) {
            this.QS();
          } else {
            this.CastSpell($T05().BLESS);
          }
        } else if (this.HasAttr($T04().BLESSED)) {
          this.Attack(0, this.Actor$target$value);
        } else if (this.Actor$curhp$value <= 13) {
          this.CastSpell($T05().MINOR_HEAL);
        } else if (this.Actor$curhp$value < this.Actor$maxhp$value) {
          if (this.HasAttr($T04().HOLY_SHIELDED)) {
            this.CastSpell($T05().BLESS);
          } else {
            this.CastRandomSpell(null, JSIL.Array.New($T05(), [$T05().HOLY_SHIELD, $T05().BLESS]));
          }
        } else {
          this.CastSpell($T05().BLESS);
        }
        return;

      case 22: 
        if (!this.HasAttr($T04().COOLDOWN_1)) {
          var expr_193A = (dict9 = this.attrs);
          num = $T09().prototype.get_Item.call(dict9, $T04().COOLDOWN_1);
          $T09().prototype.set_Item.call(expr_193A, $T04().COOLDOWN_1, ((num + 1) | 0));
          $thisType.Actor$Q$value.Add($S0F().Construct(this, (((($T24().Roll(5) + 5) | 0) * 100) | 0), $T04().COOLDOWN_1));
          if ($thisType.Actor$player$value.CanSee(this)) {
            $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("scream"), ". "), JSIL.Array.New($T10(), [this]));
          } else if ($S0C().CallVirtual("DistanceFrom", null, this, $thisType.Actor$player$value) <= 12) {
            $thisType.Actor$B$value.Add("You hear a scream! ", JSIL.Array.New($T10(), 0));
          } else {
            $thisType.Actor$B$value.Add("You hear a distant scream! ", JSIL.Array.New($T10(), 0));
          }
          var num4 = 1;
          var list5 = $S16().Construct();
          var flag = false;

          while (!flag) {
            var actor = $S1B().CallVirtual("FirstActorInLine", null, this, this.Actor$target$value, num4);
            if (!((actor === null) || 
                actor.HasAttr($T04().UNDEAD) || 
                actor.HasAttr($T04().CONSTRUCT) || actor.HasAttr($T04().PLANTLIKE))) {
              list5.Add(actor);
            }
            if (actor === this.Actor$target$value) {
              flag = true;
            }
            if (num4 > 100) {
              $thisType.Actor$B$value.Add(JSIL.ConcatString(this.Actor$target$value.You("resist"), " the scream. "), JSIL.Array.New($T10(), [this.Actor$target$value]));
              this.Q1();
              return;
            }
            num4 = ((num4 + 1) | 0);
          }

          for (var a$a = list5._items, i$a = 0, l$a = list5._size; i$a < l$a; ($temp0C = i$a, 
              i$a = ((i$a + 1) | 0), 
              $temp0C)) {
            var current11 = a$a[i$a];
            if (current11.TakeDamage(
                $T31().MAGIC, 
                $T32().MAGICAL, 
                $T24().Roll(6), 
                this, 
                "a banshee's scream"
              )) {
              var expr_1AE1 = (dict10 = current11.attrs);
              num = $T09().prototype.get_Item.call(dict10, $T04().AFRAID);
              $T09().prototype.set_Item.call(expr_1AE1, $T04().AFRAID, ((num + 1) | 0));
              $thisType.Actor$Q$value.Add($S0F().Construct(current11, ((current11.DurationOfMagicalEffect((($T24().Roll(3) + 2) | 0)) * 100) | 0), $T04().AFRAID));
            }
          }
          this.Q1();
        } else if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
          this.Attack(0, this.Actor$target$value);
        } else {
          this.AI_Step(this.Actor$target$value);
          this.QS();
        }
        return;

      case 24: 
        var num5 = 0;
        if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
          if ($T24().CoinFlip()) {
            num5 = 2;
          } else if ($T24().CoinFlip()) {
            this.Attack(0, this.Actor$target$value);
          } else {
            num5 = 1;
          }
        } else if ($T24().CoinFlip()) {
          var list6 = $S12().Construct();

          for (var i = 1; i <= 9; i = ((i + 1) | 0)) {
            if (!((i === 5) || 
                !this.Actor$target$value.TileInDirection(i).Tile$passable$value || (this.Actor$target$value.ActorInDirection(i) !== null))) {
              list6.Add(this.Actor$target$value.TileInDirection(i));
            }
          }
          if (list6.get_Count() > 0) {
            var tile2 = list6.get_Item((($T24().Roll(1, list6.get_Count()) - 1) | 0));
            this.Move(
              tile2.get_row(), 
              tile2.get_col()
            );
            this.Attack(0, this.Actor$target$value);
          } else {
            num5 = 2;
          }
        } else if ($T24().CoinFlip()) {
          num5 = 1;
        } else {
          num5 = 2;
        }
        num = num5;
        if (num !== 1) {
          if (num === 2) {
            var array3 = JSIL.MultidimensionalArray.New($T30(), 22, 66);

            for (var j = 0; j < 22; j = ((j + 1) | 0)) {

              for (var k = 0; k < 66; k = ((k + 1) | 0)) {
                if (!(!$T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, j, k).Tile$passable$value || 
                    ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, j, k) !== null) || this.Actor$target$value.CanSee(j, k))) {
                  array3.Set(j, k, true);
                } else {
                  array3.Set(j, k, false);
                }
              }
            }
            var list7 = $S12().Construct();
            var flag2 = false;

            for (var num6 = 1; (num6 < 66) && !flag2; num6 = ((num6 + 1) | 0)) {

              for (var l = ((this.get_row() - num6) | 0); l <= ((this.get_row() + num6) | 0); l = ((l + 1) | 0)) {

                for (var m = ((this.get_col() - num6) | 0); m <= ((this.get_col() + num6) | 0); m = ((m + 1) | 0)) {
                  if (!(!$T10().PhysicalObject$M$value.BoundsCheck(l, m) || 
                      !array3.Get(l, m) || (this.DistanceFrom(l, m) !== num6))) {
                    flag2 = true;
                    list7.Add($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, l, m));
                  }
                }
              }
            }
            if (flag2) {
              var tile3 = list7.get_Item((($T24().Roll(1, list7.get_Count()) - 1) | 0));
              this.Move(
                tile3.get_row(), 
                tile3.get_col()
              );
            }
            this.QS();
          }
        } else {

        $loop13: 
          for (var n = 0; n < 9999; n = ((n + 1) | 0)) {
            var num7 = (($T24().Roll(1, 17) - 9) | 0);
            var num8 = (($T24().Roll(1, 17) - 9) | 0);
            if ((((Math.abs(num7)) + (Math.abs(num8))) | 0) >= 6) {
              num7 = ((num7 + this.get_row()) | 0);
              num8 = ((num8 + this.get_col()) | 0);
              if (!(!$T10().PhysicalObject$M$value.BoundsCheck(num7, num8) || 
                  !$T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num7, num8).Tile$passable$value || ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, num7, num8) !== null))) {
                this.Move(num7, num8);
                break $loop13;
              }
            }
          }
          this.QS();
        }
        return;

      case 25: 
        if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
          this.Attack((($T24().Roll(3) - 1) | 0), this.Actor$target$value);
        } else {
          this.AI_Step(this.Actor$target$value);
          this.QS();
        }
        return;

      case 26: 
        if (this.Actor$inv$value.get_Count() === 0) {
          if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
            var row = this.Actor$target$value.get_row();
            var col = this.Actor$target$value.get_col();
            if (!(!this.Attack(0, this.Actor$target$value) || ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, row, col) === null))) {
              if ($T27().Any$b1($T18())(this.Actor$target$value.Actor$inv$value, function Actor_$lActiveAI$gm__2A (i) {
                    return !i.Item$do_not_stack$value;
                  })) {
                var item = $T27().Random$b1($T18())($T27().Where$b1($T18())(this.Actor$target$value.Actor$inv$value, function Actor_$lActiveAI$gm__2B (i) {
                      return !i.Item$do_not_stack$value;
                    }));
                if (item.Item$quantity$value > 1) {
                  this.Actor$inv$value.Add($S1C().Construct(item, -1, -1));
                  ($temp01 = ((item.Item$quantity$value - 1) | 0), 
                    item.Item$quantity$value = $temp01, 
                    $temp01);
                } else {
                  this.Actor$inv$value.Add(item);
                  this.Actor$target$value.Actor$inv$value.Remove(item);
                }
                $thisType.Actor$B$value.Add(JSIL.ConcatString.apply(null, JSIL.Array.New($T13(), [this.YouVisible("steal"), " ", this.Actor$target$value.YourVisible(), " ", item.Name(), "! "])), JSIL.Array.New($T10(), [this, this.Actor$target$value]));
              }
            }
          } else {
            this.AI_Step(this.Actor$target$value);
            this.QS();
          }
        } else {
          var bestExtendedLineOfEffect = this.Actor$target$value.GetBestExtendedLineOfEffect(this);
          var tile4 = null;
          var flag3 = false;

        $loop19: 
          for (var a$b = bestExtendedLineOfEffect._items, i$b = 0, l$b = bestExtendedLineOfEffect._size; i$b < l$b; ($temp0D = i$b, 
              i$b = ((i$b + 1) | 0), 
              $temp0D)) {
            var current12 = a$b[i$b];
            if (flag3) {
              tile4 = current12;
              break $loop19;
            }
            if (current12.actor() === this) {
              flag3 = true;
            }
          }
          if (tile4 !== null) {
            if (!(!tile4.Tile$passable$value || 
                (tile4.actor() !== null) || !this.AI_Step(tile4))) {
              this.QS();
            } else if (!tile4.Tile$passable$value) {
              $thisType.Actor$B$value.Add((this.PhysicalObject$the_name$value + " disappears into " + tile4.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [this]));

              for (var a$c = this.TilesWithinDistance(1)._items, i$c = 0, l$c = this.TilesWithinDistance(1)._size; i$c < l$c; ($temp0E = i$c, 
                  i$c = ((i$c + 1) | 0), 
                  $temp0E)) {
                var current13 = a$c[i$c];
                if (!(($S0C().CallVirtual("DistanceFrom", null, current13, tile4) !== 1) || !(current13.PhysicalObject$$name$value == "floor"))) {
                  current13.features.Add($T19().SLIME);
                }
              }
              var event = null;
              var enumerator14 = $T38().prototype.GetEnumerator.call($thisType.Actor$Q$value.list).MemberwiseClone();
              try {

              $loop21: 
                while (enumerator14.MoveNext()) {
                  var current14 = enumerator14.get_Current();
                  if (!((current14.Event$target$value !== this) || (current14.Event$type$value !== $T22().POLTERGEIST))) {
                    event = current14;
                    break $loop21;
                  }
                }
              } finally {
                $IM00().Call(enumerator14, null);
              }
              event.Event$target$value = this.Actor$inv$value.get_Item(0);
              $thisType.tiebreakers.set_Item(event.Event$tiebreaker$value, null);
              this.Actor$inv$value.Clear();
              this.TakeDamage($T31().NORMAL, $T32().NO_TYPE, 9999, null);
            } else if (tile4.actor() !== null) {
              if (!tile4.actor().HasAttr($T04().NEVER_MOVES)) {
                this.Move(
                  tile4.get_row(), 
                  tile4.get_col()
                );
                this.QS();
              } else if (tile4.actor().HasAttr($T04().NEVER_MOVES)) {
                if (this.AI_Step(tile4)) {
                  this.QS();
                } else if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
                  this.Attack(1, this.Actor$target$value);
                } else {
                  this.QS();
                }
              }
            } else {
              this.QS();
            }
          }
        }
        return;

      case 27: 
        if (!((this.Actor$curhp$value >= this.Actor$maxhp$value) || 
            this.HasAttr($T04().COOLDOWN_1) || ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) > 12))) {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " curses you! "), JSIL.Array.New($T10(), 0));
          switch ($T24().Roll(4)) {
            case 1: 
              $thisType.Actor$B$value.Add("You become allergic to light! ", JSIL.Array.New($T10(), 0));
              this.Actor$target$value.GainAttrRefreshDuration($T04().LIGHT_ALLERGY, 10000, "You are no longer allergic to light. ", JSIL.Array.New($T10(), 0));
              break;

            case 2: 
              $thisType.Actor$B$value.Add("The floor suddenly looks like a wonderful spot for a nap. ", JSIL.Array.New($T10(), 0));
              this.Actor$target$value.GainAttrRefreshDuration($T04().MAGICAL_DROWSINESS, 10000, "You are no longer quite so drowsy. ", JSIL.Array.New($T10(), 0));
              break;

            case 3: 
              $thisType.Actor$B$value.Add("Every sound you make becomes amplified and echoes across the dungeon. ", JSIL.Array.New($T10(), 0));
              this.Actor$target$value.GainAttrRefreshDuration($T04().AGGRAVATING, 10000, "Your sounds are no longer amplified. ", JSIL.Array.New($T10(), 0));
              break;

            case 4: 
              $thisType.Actor$B$value.Add(("Your " + $T3A().Name(this.Actor$target$value.weapons.get_First().get_Value()) + " becomes stuck to your hand! "), JSIL.Array.New($T10(), 0));
              this.Actor$target$value.GainAttrRefreshDuration($T04().CURSED_WEAPON, 10000, ("Your " + $T3A().Name(this.Actor$target$value.weapons.get_First().get_Value()) + " is no longer stuck to your hand. "), JSIL.Array.New($T10(), 0));
              break;

          }
          var expr_254D = (dict11 = this.attrs);
          num = $T09().prototype.get_Item.call(dict11, $T04().COOLDOWN_1);
          $T09().prototype.set_Item.call(expr_254D, $T04().COOLDOWN_1, ((num + 1) | 0));
          this.Q1();
        } else if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
          this.Attack(0, this.Actor$target$value);
        } else {
          this.AI_Step(this.Actor$target$value);
          this.QS();
        }
        return;

      case 28: 
        if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
          var p = this.Actor$target$value.p.MemberwiseClone();
          if (!(!this.Attack(0, this.Actor$target$value) || 
              ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, p) === null) || 
              (this.Actor$target$value !== $thisType.Actor$player$value) || 
              this.Actor$target$value.HasAttr($T04().INVULNERABLE) || 
              this.Actor$target$value.HasAttr($T04().ARCANE_SHIELDED) || this.Actor$target$value.HasAttr($T04().IMMUNE_TOXINS))) {
            var flag4 = !this.Actor$target$value.HasAttr($T04().COMPY_POISON_COUNTER);
            this.Actor$target$value.GainAttrRefreshDuration($T04().COMPY_POISON_COUNTER, 5000, "You no longer feel the effects of the poison. ", JSIL.Array.New($T10(), 0));
            if ($T09().prototype.get_Item.call(this.Actor$target$value.attrs, $T04().COMPY_POISON_COUNTER) >= this.Actor$target$value.Actor$curhp$value) {
              if (!this.Actor$target$value.HasAttr($T04().COMPY_POISON_LETHAL)) {
                $thisType.Actor$B$value.Add("The poison is overwhelming you! ", JSIL.Array.New($T10(), 0));
                $thisType.Actor$B$value.Add("You're falling asleep. ", JSIL.Array.New($T10(), 0));
                $thisType.Actor$B$value.Add("You'll surely be eaten... ", JSIL.Array.New($T10(), 0));
                $thisType.Actor$B$value.PrintAll();
                var expr_26F2 = (dict12 = this.Actor$target$value.attrs);
                num = $T09().prototype.get_Item.call(dict12, $T04().COMPY_POISON_LETHAL);
                $T09().prototype.set_Item.call(expr_26F2, $T04().COMPY_POISON_LETHAL, ((num + 1) | 0));
              }
            } else if (!(($T09().prototype.get_Item.call(this.Actor$target$value.attrs, $T04().COMPY_POISON_COUNTER) < ((this.Actor$target$value.Actor$curhp$value / 2) | 0)) || this.Actor$target$value.HasAttr($T04().COMPY_POISON_WARNING))) {
              this.Actor$target$value.GainAttrRefreshDuration($T04().COMPY_POISON_WARNING, 5000);
              $thisType.Actor$B$value.Add("You feel the subtle poison starting to take effect. ", JSIL.Array.New($T10(), 0));
              $thisType.Actor$B$value.Add("Your injuries make it hard to stay awake. ", JSIL.Array.New($T10(), 0));
              $thisType.Actor$B$value.PrintAll();
            } else if (flag4) {
              $thisType.Actor$B$value.Add("The compy's bite makes you momentarily fatigued. ", JSIL.Array.New($T10(), 0));
              $thisType.Actor$B$value.Add("You shake off the effects. ", JSIL.Array.New($T10(), 0));
            }
          }
        } else {
          this.AI_Step(this.Actor$target$value);
          this.QS();
        }
        return;

      case 29: 
        if (!(this.HasAttr($T04().COOLDOWN_1) || ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) > 12))) {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.TheVisible(), " breathes poisonous gas. "), JSIL.Array.New($T10(), 0));
          var list8 = $S12().Construct();

          for (var a$d = this.Actor$target$value.TilesWithinDistance(1)._items, i$d = 0, l$d = this.Actor$target$value.TilesWithinDistance(1)._size; i$d < l$d; ($temp0F = i$d, 
              i$d = ((i$d + 1) | 0), 
              $temp0F)) {
            var current15 = a$d[i$d];
            if (!(!current15.Tile$passable$value || 
                !this.Actor$target$value.HasLOE(current15) || $S0A().CallVirtual("Is", null, current15, $T19().POISON_GAS))) {
              current15.features.Add($T19().POISON_GAS);
              list8.Add(current15);
            }
          }
          var tile5 = this.Actor$target$value.tile();
          var num9 = 8;

          for (var num10 = 0; num10 < num9; num10 = ((num10 + 1) | 0)) {
            if (!$S0A().CallVirtual("Is", null, tile5, $T19().POISON_GAS)) {
              tile5.features.Add($T19().POISON_GAS);
              list8.Add(tile5);
            } else {

            $loop24: 
              for (var num11 = 0; num11 < 50; num11 = ((num11 + 1) | 0)) {
                var list9 = $S12().Construct();

                for (var a$e = tile5.TilesAtDistance(1)._items, i$e = 0, l$e = tile5.TilesAtDistance(1)._size; i$e < l$e; ($temp10 = i$e, 
                    i$e = ((i$e + 1) | 0), 
                    $temp10)) {
                  var current16 = a$e[i$e];
                  if (current16.Tile$passable$value) {
                    list9.Add(current16);
                  }
                }
                if (list9.get_Count() <= 0) {
                  break $loop24;
                }
                var tile6 = $T27().Random$b1($T17())(list9);
                if (!$S0A().CallVirtual("Is", null, tile6, $T19().POISON_GAS)) {
                  tile6.features.Add($T19().POISON_GAS);
                  list8.Add(tile6);
                  break $loop24;
                }
                tile5 = tile6;
              }
            }
          }
          $thisType.Actor$Q$value.Add($S1D().Construct(list8, 600, $T22().POISON_GAS));
          this.GainAttr($T04().COOLDOWN_1, (((($T24().Roll(6) + 18) | 0) * 100) | 0));
          this.Q1();
        } else if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
          this.Attack(0, this.Actor$target$value);
        } else {
          this.AI_Step(this.Actor$target$value);
          this.QS();
        }
        return;

      case 30: 
        if (this.HasAttr($T04().COOLDOWN_2)) {
          var dir3 = $T09().prototype.get_Item.call(this.attrs, $T04().COOLDOWN_2);
          var flag5 = $T24().CoinFlip();
          if (!(!this.TileInDirection(dir3).Tile$passable$value || 
              (this.ActorInDirection(dir3) !== null) || this.GrabPreventsMovement(this.TileInDirection(dir3)))) {
            $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " leaps forward swinging his axe! "), JSIL.Array.New($T10(), [this]));
            this.Move(
              this.TileInDirection(dir3).get_row(), 
              this.TileInDirection(dir3).get_col()
            );
            var actor2 = this.ActorInDirection(this.RotateDirection(dir3, flag5));
            if (actor2 !== null) {
              $thisType.Actor$B$value.Add((this.Your() + " axe hits " + actor2.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [this, actor2]));
              actor2.TakeDamage(
                $T31().NORMAL, 
                $T32().PHYSICAL, 
                $T24().Roll(3, 6), 
                this, 
                "a berserker's axe"
              );
            }
            actor2 = this.ActorInDirection(dir3);
            if (actor2 !== null) {
              $thisType.Actor$B$value.Add((this.Your() + " axe hits " + actor2.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [this, actor2]));
              actor2.TakeDamage(
                $T31().NORMAL, 
                $T32().PHYSICAL, 
                $T24().Roll(3, 6), 
                this, 
                "a berserker's axe"
              );
            }
            actor2 = this.ActorInDirection(this.RotateDirection(dir3, !flag5));
            if (actor2 !== null) {
              $thisType.Actor$B$value.Add((this.Your() + " axe hits " + actor2.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [this, actor2]));
              actor2.TakeDamage(
                $T31().NORMAL, 
                $T32().PHYSICAL, 
                $T24().Roll(3, 6), 
                this, 
                "a berserker's axe"
              );
            }
            this.Q1();
          } else if (!((this.ActorInDirection(dir3) === null) && !this.GrabPreventsMovement(this.TileInDirection(dir3)))) {
            $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " swings his axe furiously! "), JSIL.Array.New($T10(), [this]));
            var actor3 = this.ActorInDirection(this.RotateDirection(dir3, flag5));
            if (actor3 !== null) {
              $thisType.Actor$B$value.Add((this.Your() + " axe hits " + actor3.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [this, actor3]));
              actor3.TakeDamage(
                $T31().NORMAL, 
                $T32().PHYSICAL, 
                $T24().Roll(3, 6), 
                this, 
                "a berserker's axe"
              );
            }
            actor3 = this.ActorInDirection(dir3);
            if (actor3 !== null) {
              $thisType.Actor$B$value.Add((this.Your() + " axe hits " + actor3.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [this, actor3]));
              actor3.TakeDamage(
                $T31().NORMAL, 
                $T32().PHYSICAL, 
                $T24().Roll(3, 6), 
                this, 
                "a berserker's axe"
              );
            }
            actor3 = this.ActorInDirection(this.RotateDirection(dir3, !flag5));
            if (actor3 !== null) {
              $thisType.Actor$B$value.Add((this.Your() + " axe hits " + actor3.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [this, actor3]));
              actor3.TakeDamage(
                $T31().NORMAL, 
                $T32().PHYSICAL, 
                $T24().Roll(3, 6), 
                this, 
                "a berserker's axe"
              );
            }
            this.Q1();
          } else {
            $thisType.Actor$B$value.Add((this.PhysicalObject$the_name$value + " turns to face " + this.Actor$target$value.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [this, this.Actor$target$value]));
            $T09().prototype.set_Item.call(this.attrs, $T04().COOLDOWN_2, $S1E().CallVirtual("DirectionOf", null, this, this.Actor$target$value));
            this.Q1();
          }
        } else if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
          this.Attack(0, this.Actor$target$value);
          if (!((this.Actor$target$value === null) || ($T24().Roll(3) !== 3))) {
            $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " screams with fury! "), JSIL.Array.New($T10(), [this]));
            $T09().prototype.set_Item.call(this.attrs, $T04().COOLDOWN_2, $S1E().CallVirtual("DirectionOf", null, this, this.Actor$target$value));
            $thisType.Actor$Q$value.Add($S1A().Construct(this, 350, $T04().COOLDOWN_2, JSIL.ConcatString(this.Your(), " rage diminishes. "), JSIL.Array.New($T10(), [this])));
          }
        } else {
          this.AI_Step(this.Actor$target$value);
          this.QS();
        }
        return;

      case 32: 
        if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
          this.Attack(0, this.Actor$target$value);
        } else if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) <= 12) {
          if (!(!this.tile().IsLit() || this.HasAttr($T04().COOLDOWN_1))) {
            var expr_2EEA = (dict13 = this.attrs);
            num = $T09().prototype.get_Item.call(dict13, $T04().COOLDOWN_1);
            $T09().prototype.set_Item.call(expr_2EEA, $T04().COOLDOWN_1, ((num + 1) | 0));
            $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " gestures. "), JSIL.Array.New($T10(), [this]));
            var list10 = $S12().Construct();

            for (var a$f = this.Actor$target$value.TilesWithinDistance(6)._items, i$f = 0, l$f = this.Actor$target$value.TilesWithinDistance(6)._size; i$f < l$f; ($temp11 = i$f, 
                i$f = ((i$f + 1) | 0), 
                $temp11)) {
              var current17 = a$f[i$f];
              if (!(!current17.Tile$passable$value || 
                  (current17.actor() !== null) || 
                  ($S0C().CallVirtual("DistanceFrom", null, this, current17) < $S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value)) || 
                  !this.Actor$target$value.HasLOS(current17) || !this.Actor$target$value.HasLOE(current17))) {
                list10.Add(current17);
              }
            }
            if (list10.get_Count() === 0) {

              for (var a$10 = this.Actor$target$value.TilesWithinDistance(6)._items, i$10 = 0, l$10 = this.Actor$target$value.TilesWithinDistance(6)._size; i$10 < l$10; ($temp12 = i$10, 
                  i$10 = ((i$10 + 1) | 0), 
                  $temp12)) {
                var current18 = a$10[i$10];
                if (!(!current18.Tile$passable$value || 
                    (current18.actor() !== null) || 
                    !this.Actor$target$value.HasLOS(current18) || !this.Actor$target$value.HasLOE(current18))) {
                  list10.Add(current18);
                }
              }
            }
            if (list10.get_Count() === 0) {
              $thisType.Actor$B$value.Add("Nothing happens. ", JSIL.Array.New($T10(), [this]));
            } else {
              if (list10.get_Count() === 1) {
                $thisType.Actor$B$value.Add("A blood moth appears! ", JSIL.Array.New($T10(), 0));
              } else {
                $thisType.Actor$B$value.Add("Blood moths appear! ", JSIL.Array.New($T10(), 0));
              }

              for (var num12 = 0; num12 < 2; num12 = ((num12 + 1) | 0)) {
                if (list10.get_Count() > 0) {
                  var tile7 = $T27().RemoveRandom$b1($T17())(list10);
                  $thisType.Create(
                    $T02().BLOOD_MOTH, 
                    tile7.get_row(), 
                    tile7.get_col(), 
                    true, 
                    true
                  );
                  $T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, tile7.row, tile7.col).player_visibility_duration = -1;
                }
              }
            }
            this.Q1();
          } else {
            this.AI_Step(this.Actor$target$value);
            this.QS();
          }
        } else {
          this.AI_Step(this.Actor$target$value);
          this.QS();
        }
        return;

      case 35: 
        var num13 = 0;
        var num14 = 0;

        for (var a$11 = this.Actor$target$value.TilesAtDistance(1)._items, i$11 = 0, l$11 = this.Actor$target$value.TilesAtDistance(1)._size; i$11 < l$11; ($temp13 = i$11, 
            i$11 = ((i$11 + 1) | 0), 
            $temp13)) {
          var current19 = a$11[i$11];
          if (current19.Tile$type$value.valueOf() === 0) {
            num14 = ((num14 + 1) | 0);
            if (current19.actor() === null) {
              num13 = ((num13 + 1) | 0);
            }
          }
        }
        if (!(!(($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) <= 12) && 
              (num13 >= 2)) && ((num13 !== 1) || 
              (num14 !== 1)))) {

          for (var a$12 = this.Actor$target$value.TilesAtDistance(1)._items, i$12 = 0, l$12 = this.Actor$target$value.TilesAtDistance(1)._size; i$12 < l$12; ($temp14 = i$12, 
              i$12 = ((i$12 + 1) | 0), 
              $temp14)) {
            var current20 = a$12[i$12];
            if (!((current20.Tile$type$value.valueOf() !== 0) || (current20.actor() !== null))) {
              $thisType.Create(
                $T02().MUD_TENTACLE, 
                current20.get_row(), 
                current20.get_col(), 
                true, 
                true
              );
              $T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, current20.p).player_visibility_duration = -1;
              $T09().prototype.set_Item.call($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, current20.p).attrs, $T04().COOLDOWN_1, 20);
            }
          }
          if (num13 >= 2) {
            $thisType.Actor$B$value.Add("Mud tentacles emerge from the walls! ", JSIL.Array.New($T10(), 0));
          } else {
            $thisType.Actor$B$value.Add("A mud tentacle emerges from the wall! ", JSIL.Array.New($T10(), 0));
          }
          this.Q1();
        } else if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
          this.Attack(0, this.Actor$target$value);
        } else {
          this.AI_Step(this.Actor$target$value);
          this.QS();
        }
        return;

      case 36: 
        if (this.group === null) {
          if (this.AI_Step(this.Actor$target$value, true)) {
            this.QS();
          } else if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
            this.Attack(0, this.Actor$target$value);
          } else {
            this.QS();
          }
        } else {
          var $lActiveAI$gc__AnonStorey = new ($T3C())();
          $lActiveAI$gc__AnonStorey.$this = this;
          $lActiveAI$gc__AnonStorey.thrall = this.group.get_Item(1);
          if (this.CanSee($lActiveAI$gc__AnonStorey.thrall)) {
            if (!(($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) >= $S0C().CallVirtual("DistanceFrom", null, $lActiveAI$gc__AnonStorey.thrall, this.Actor$target$value)) || ($S0C().CallVirtual("DistanceFrom", null, this, $lActiveAI$gc__AnonStorey.thrall) !== 1))) {
              this.Move(
                $lActiveAI$gc__AnonStorey.thrall.get_row(), 
                $lActiveAI$gc__AnonStorey.thrall.get_col()
              );
              this.QS();
            } else if (!(($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) !== 1) || (this.Actor$curhp$value >= this.Actor$maxhp$value))) {
              var list11 = $T27().Where$b1($T17())(
                this.TilesAtDistance(1), 
                function (t) {
                  return (!(!t.Tile$passable$value || 
                      (t.actor() !== null)) && 
                    this.$this.Actor$target$value.GetBestExtendedLineOfEffect(this.thrall).Contains(t));
                }.bind($lActiveAI$gc__AnonStorey)
              );
              if (!(($S0C().CallVirtual("DistanceFrom", null, this, $lActiveAI$gc__AnonStorey.thrall) !== 1) || (list11.get_Count() <= 0))) {
                this.AI_Step($T27().Random$b1($T17())(list11));
                this.QS();
              } else if (this.AI_Step(this.Actor$target$value, true)) {
                this.QS();
              } else {
                this.Attack(0, this.Actor$target$value);
              }
            } else if (!(this.HasAttr($T04().COOLDOWN_1) || (($S0C().CallVirtual("DistanceFrom", null, $lActiveAI$gc__AnonStorey.thrall, this.Actor$target$value) <= 1) && 
                  $T27().Any$b1($T17())(
                    this.Actor$target$value.GetBestExtendedLineOfEffect($lActiveAI$gc__AnonStorey.thrall), 
                    function (t) {
                      return (t.actor() === this.$this);
                    }.bind($lActiveAI$gc__AnonStorey)
                  )))) {
              var list12 = $S12().Construct();
              var num15 = 99;

              for (var a$13 = $T27().Where$b1($T17())(
                  $lActiveAI$gc__AnonStorey.thrall.TilesWithinDistance(2), 
                  function (x) {
                    return (x.Tile$passable$value && 
                      ((x.actor() === null) || 
                        (x.actor() === this.thrall)))}.bind($lActiveAI$gc__AnonStorey)
                )._items, i$13 = 0, l$13 = $T27().Where$b1($T17())(
                  $lActiveAI$gc__AnonStorey.thrall.TilesWithinDistance(2), 
                  function (x) {
                    return (x.Tile$passable$value && 
                      ((x.actor() === null) || 
                        (x.actor() === this.thrall)))}.bind($lActiveAI$gc__AnonStorey)
                )._size; i$13 < l$13; ($temp15 = i$13, 
                  i$13 = ((i$13 + 1) | 0), 
                  $temp15)) {
                var current21 = a$13[i$13];
                if ($S0C().CallVirtual("DistanceFrom", null, current21, this.Actor$target$value) < num15) {
                  list12.Clear();
                  list12.Add(current21);
                  num15 = $S0C().CallVirtual("DistanceFrom", null, current21, this.Actor$target$value);
                } else if ($S0C().CallVirtual("DistanceFrom", null, current21, this.Actor$target$value) === num15) {
                  list12.Add(current21);
                }
              }
              var list13 = $S12().Construct();

              for (var a$14 = list12._items, i$14 = 0, l$14 = list12._size; i$14 < l$14; ($temp16 = i$14, 
                  i$14 = ((i$14 + 1) | 0), 
                  $temp16)) {
                var current22 = a$14[i$14];
                if ($T27().Any$b1($T17())(
                    this.Actor$target$value.GetBestExtendedLineOfEffect(current22), 
                    function (x) {
                      return (x.actor() === this.$this);
                    }.bind($lActiveAI$gc__AnonStorey)
                  )) {
                  list13.Add(current22);
                }
              }
              var tile8 = null;
              if (list13.get_Count() > 0) {
                tile8 = $T27().Random$b1($T17())(list13);
              } else if (list12.get_Count() > 0) {
                tile8 = $T27().Random$b1($T17())(list12);
              }
              if (!((tile8 === null) || (tile8.actor() === $lActiveAI$gc__AnonStorey.thrall))) {
                this.GainAttr($T04().COOLDOWN_1, 400);
                $thisType.Actor$B$value.Add((this.TheVisible() + " teleports " + $lActiveAI$gc__AnonStorey.thrall.TheVisible() + ". "), JSIL.Array.New($T10(), [this, $lActiveAI$gc__AnonStorey.thrall]));
                $T10().PhysicalObject$M$value.Draw();
                $lActiveAI$gc__AnonStorey.thrall.Move(
                  tile8.get_row(), 
                  tile8.get_col()
                );
                $thisType.Actor$B$value.DisplayNow();
                $T1F().AnimateStorm(
                  tile8.p, 
                  1, 
                  1, 
                  4, 
                  $lActiveAI$gc__AnonStorey.thrall.PhysicalObject$symbol$value, 
                  $lActiveAI$gc__AnonStorey.thrall.PhysicalObject$color$value
                );

                for (var a$15 = $lActiveAI$gc__AnonStorey.thrall.GetBestLineOfEffect(tile8)._items, i$15 = 0, l$15 = $lActiveAI$gc__AnonStorey.thrall.GetBestLineOfEffect(tile8)._size; i$15 < l$15; ($temp17 = i$15, 
                    i$15 = ((i$15 + 1) | 0), 
                    $temp17)) {
                  var current23 = a$15[i$15];
                  $T1F().AnimateStorm(
                    current23.p, 
                    1, 
                    1, 
                    4, 
                    $lActiveAI$gc__AnonStorey.thrall.PhysicalObject$symbol$value, 
                    $lActiveAI$gc__AnonStorey.thrall.PhysicalObject$color$value
                  );
                }
                this.Q1();
              } else {
                var l2 = $T27().WhereLeast$b1($T17())(
                  $T27().Where$b1($T17())(
                    this.Actor$target$value.GetBestExtendedLineOfEffect($lActiveAI$gc__AnonStorey.thrall), 
                    function (t) {
                      return (!(!t.Tile$passable$value || 
                          (t.actor() !== null)) && 
                        ($S0C().CallVirtual("DistanceFrom", null, t, this.$this.Actor$target$value) > $S0C().CallVirtual("DistanceFrom", null, this.thrall, this.$this.Actor$target$value)));
                    }.bind($lActiveAI$gc__AnonStorey)
                  ), 
                  function (t) {
                    return $S0C().CallVirtual("DistanceFrom", null, this.$this, t);
                  }.bind($lActiveAI$gc__AnonStorey)
                );
                if ($T27().Any$b1($T17())(l2, function (t) {
                      return ($S0C().CallVirtual("DistanceFrom", null, t, this.$this.Actor$target$value) > 2);
                    }.bind($lActiveAI$gc__AnonStorey))) {
                  this.AI_Step($T27().Random$b1($T17())($T27().Where$b1($T17())(l2, function (t) {
                          return ($S0C().CallVirtual("DistanceFrom", null, t, this.$this.Actor$target$value) > 2);
                        }.bind($lActiveAI$gc__AnonStorey))));
                } else {
                  this.AI_Step($T27().Random$b1($T17())(l2));
                }
                this.QS();
              }
            } else if (!(this.HasAttr($T04().COOLDOWN_2) || $lActiveAI$gc__AnonStorey.thrall.HasAttr($T04().ARCANE_SHIELDED))) {
              this.GainAttr($T04().COOLDOWN_2, 1500);
              $thisType.Actor$B$value.Add((this.TheVisible() + " shields " + $lActiveAI$gc__AnonStorey.thrall.TheVisible() + ". "), JSIL.Array.New($T10(), [this, $lActiveAI$gc__AnonStorey.thrall]));
              $thisType.Actor$B$value.DisplayNow();
              $T1F().AnimateStorm(
                $lActiveAI$gc__AnonStorey.thrall.p, 
                1, 
                2, 
                5, 
                "*", 
                $T03().White
              );
              $T09().prototype.set_Item.call($lActiveAI$gc__AnonStorey.thrall.attrs, $T04().ARCANE_SHIELDED, 25);
              $thisType.Actor$Q$value.Add($S1A().Construct($lActiveAI$gc__AnonStorey.thrall, 2000, $T04().ARCANE_SHIELDED, JSIL.ConcatString($lActiveAI$gc__AnonStorey.thrall.Your(), " arcane shield dissolves. "), JSIL.Array.New($T10(), [$lActiveAI$gc__AnonStorey.thrall])));
              this.Q1();
            } else {
              var l3 = $T27().WhereLeast$b1($T17())(
                $T27().Where$b1($T17())(
                  this.Actor$target$value.GetBestExtendedLineOfEffect($lActiveAI$gc__AnonStorey.thrall), 
                  function Actor_$lActiveAI$gm__34 (t) {
                    return (t.Tile$passable$value && 
                      (t.actor() === null));
                  }
                ), 
                function (t) {
                  return $S0C().CallVirtual("DistanceFrom", null, this.$this, t);
                }.bind($lActiveAI$gc__AnonStorey)
              );
              if ($T27().Any$b1($T17())(l3, function (t) {
                    return ($S0C().CallVirtual("DistanceFrom", null, t, this.$this.Actor$target$value) > 2);
                  }.bind($lActiveAI$gc__AnonStorey))) {
                this.AI_Step($T27().Random$b1($T17())($T27().Where$b1($T17())(l3, function (t) {
                        return ($S0C().CallVirtual("DistanceFrom", null, t, this.$this.Actor$target$value) > 2);
                      }.bind($lActiveAI$gc__AnonStorey))));
              } else {
                this.AI_Step($T27().Random$b1($T17())(l3));
              }
              this.QS();
            }
          } else {
            (this.group.get_Item(1)).FindPath(this);
            if (this.AI_Step(this.Actor$target$value, true)) {
              this.QS();
            } else if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
              this.Attack(0, this.Actor$target$value);
            } else {
              this.QS();
            }
          }
        }
        return;

      case 39: 
        if (!(this.HasAttr($T04().COOLDOWN_1) || ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) > 8))) {
          var expr_3A35 = (dict14 = this.attrs);
          num = $T09().prototype.get_Item.call(dict14, $T04().COOLDOWN_1);
          $T09().prototype.set_Item.call(expr_3A35, $T04().COOLDOWN_1, ((num + 1) | 0));
          $thisType.Actor$Q$value.Add($S0F().Construct(this, (((($T24().Roll(2) * 100) | 0) + 150) | 0), $T04().COOLDOWN_1));
          $thisType.Actor$B$value.Add((this.PhysicalObject$the_name$value + " tosses a grenade toward " + this.Actor$target$value.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [this, this.Actor$target$value]));
          var list14 = $S12().Construct();

          for (var a$16 = this.Actor$target$value.TilesWithinDistance(1)._items, i$16 = 0, l$16 = this.Actor$target$value.TilesWithinDistance(1)._size; i$16 < l$16; ($temp18 = i$16, 
              i$16 = ((i$16 + 1) | 0), 
              $temp18)) {
            var current24 = a$16[i$16];
            if (current24.Tile$passable$value) {
              list14.Add(current24);
            }
          }
          var tile9 = list14.get_Item((($T24().Roll(list14.get_Count()) - 1) | 0));
          if (tile9.actor() !== null) {
            if (tile9.actor() === $thisType.Actor$player$value) {
              $thisType.Actor$B$value.Add("It lands under you! ", JSIL.Array.New($T10(), 0));
            } else {
              $thisType.Actor$B$value.Add(
                ("It lands under " + tile9.actor().PhysicalObject$the_name$value + ". "), 
                JSIL.Array.New($T10(), [tile9.actor()])
              );
            }
          } else if (tile9.Tile$inv$value !== null) {
            $thisType.Actor$B$value.Add(("It lands under " + tile9.Tile$inv$value.TheName() + ". "), JSIL.Array.New($T10(), [tile9]));
          }
          tile9.features.Add($T19().GRENADE);
          $thisType.Actor$Q$value.Add($S0D().Construct(tile9, 100, $T22().GRENADE));
          this.Q1();
        } else if (this.Actor$curhp$value <= 18) {
          if (this.AI_Step(this.Actor$target$value, true)) {
            $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " backs away. "), JSIL.Array.New($T10(), [this]));
            this.QS();
          } else if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
            this.Attack(0, this.Actor$target$value);
          } else {
            this.QS();
          }
        } else if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
          this.Attack(0, this.Actor$target$value);
        } else {
          this.AI_Step(this.Actor$target$value);
          this.QS();
        }
        return;

      case 40: 
        if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
          this.Attack(0, this.Actor$target$value);
          if (this.Actor$target$value !== null) {
            var list15 = $S12().Construct();

            for (var a$17 = this.Actor$target$value.TilesAtDistance(1)._items, i$17 = 0, l$17 = this.Actor$target$value.TilesAtDistance(1)._size; i$17 < l$17; ($temp19 = i$17, 
                i$17 = ((i$17 + 1) | 0), 
                $temp19)) {
              var current25 = a$17[i$17];
              if (!(!current25.Tile$passable$value || 
                  (current25.actor() !== null) || ($S0C().CallVirtual("DistanceFrom", null, this, current25) !== 1))) {
                list15.Add(current25);
              }
            }
            if (list15.get_Count() > 0) {
              this.AI_Step($T27().Random$b1($T17())(list15));
            }
          }
        } else {
          this.AI_Step(this.Actor$target$value);
          this.QS();
        }
        return;

      case 41: 
        if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
          if (this.Actor$target$value.HasAttr($T04().PARALYZED)) {
            this.Attack(0, this.Actor$target$value);
          } else {
            this.Attack((($T24().Roll(1, 2) - 1) | 0), this.Actor$target$value);
          }
        } else {
          this.AI_Step(this.Actor$target$value);
          this.QS();
        }
        return;

      case 42: 
        if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
          this.Attack(0, this.Actor$target$value);
          if ($T24().CoinFlip()) {
            this.AI_Step(this.Actor$target$value, true);
          }
        } else {
          this.AI_Step(this.Actor$target$value);
          this.QS();
        }
        return;

      case 44: 
        switch ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value)) {
          case 1: 
            if (this.Actor$target$value.EnemiesAdjacent() > 1) {
              this.Attack(0, this.Actor$target$value);
            } else if (this.AI_Step(this.Actor$target$value, true)) {
              this.QS();
            } else {
              this.Attack(0, this.Actor$target$value);
            }
            break;

          case 2: 
            if ($S14().CallVirtual("FirstActorInLine", null, this, this.Actor$target$value) === this.Actor$target$value) {
              $S17().CallVirtual("FireArrow", null, this, this.Actor$target$value);
            } else if (this.AI_Step(this.Actor$target$value, true)) {
              this.QS();
            } else {
              if (this.AI_Sidestep(this.Actor$target$value)) {
                $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " tries to line up a shot. "), JSIL.Array.New($T10(), [this]));
              }
              this.QS();
            }
            break;

          case 3: 
          case 4: 
          case 5: 
          case 6: 
          case 7: 
          case 8: 
          case 9: 
          case 10: 
          case 11: 
          case 12: 
            if ($S14().CallVirtual("FirstActorInLine", null, this, this.Actor$target$value) === this.Actor$target$value) {
              $S17().CallVirtual("FireArrow", null, this, this.Actor$target$value);
            } else {
              if (this.AI_Sidestep(this.Actor$target$value)) {
                $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " tries to line up a shot. "), JSIL.Array.New($T10(), [this]));
              }
              this.QS();
            }
            break;

          default: 
            this.AI_Step(this.Actor$target$value);
            this.QS();
            break;

        }
        return;

      case 46: 
        if (!((this.Actor$curhp$value > 10) || this.HasAttr($T04().COOLDOWN_1))) {

        $loop37: 
          for (var num16 = 0; num16 < 9999; num16 = ((num16 + 1) | 0)) {
            var num17 = $T24().Roll(1, 20);
            var num18 = $T24().Roll(1, 64);
            if (!((((Math.abs(((num17 - this.get_row()) | 0))) < 10) && 
                  ((Math.abs(((num18 - this.get_col()) | 0))) < 10) && 
                  (((Math.abs(((num17 - this.get_row()) | 0))) < 7) || 
                    ((Math.abs(((num18 - this.get_col()) | 0))) < 7))) || 
                !$T10().PhysicalObject$M$value.BoundsCheck(num17, num18) || 
                !$T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num17, num18).Tile$passable$value || 
                ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, num17, num18) !== null) || this.HasLOS(num17, num18))) {
              $thisType.Actor$B$value.Add((this.TheVisible() + " slashes at the air, sending a swirling vortex toward " + this.Actor$target$value.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [this.Actor$target$value]));
              $S1F().CallVirtual("AnimateBeam", null, this, this.Actor$target$value, "*", $T03().Green);
              this.Actor$target$value.AnimateStorm(
                3, 
                3, 
                10, 
                "*", 
                $T03().Green
              );
              this.Actor$target$value.Move(num17, num18);
              $T10().PhysicalObject$M$value.Draw();
              this.Actor$target$value.AnimateStorm(
                3, 
                3, 
                10, 
                "*", 
                $T03().Green
              );
              $thisType.Actor$B$value.Add(JSIL.ConcatString(this.Actor$target$value.YouAre(), " transported elsewhere. "), JSIL.Array.New($T10(), 0));
              var expr_4184 = (dict15 = this.attrs);
              num = $T09().prototype.get_Item.call(dict15, $T04().COOLDOWN_1);
              $T09().prototype.set_Item.call(expr_4184, $T04().COOLDOWN_1, ((num + 1) | 0));
              break $loop37;
            }
          }
          this.QS();
        } else {

          for (var a$18 = this.ActorsWithinDistance(2)._items, i$18 = 0, l$18 = this.ActorsWithinDistance(2)._size; i$18 < l$18; ($temp1A = i$18, 
              i$18 = ((i$18 + 1) | 0), 
              $temp1A)) {
            var current26 = a$18[i$18];
            if (!(!current26.HasAttr($T04().SPELL_DISRUPTION) || !current26.HasLOE(this))) {
              if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
                this.Attack(0, this.Actor$target$value);
              } else {
                this.AI_Step(this.Actor$target$value);
                this.QS();
              }
              return;
            }
          }
          if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
            this.Attack(0, this.Actor$target$value);
          } else if (!(($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) > 12) || ($S14().CallVirtual("FirstActorInLine", null, this, this.Actor$target$value) !== this.Actor$target$value))) {
            this.CastRandomSpell(this.Actor$target$value, JSIL.Array.New($T05(), [$T05().GLACIAL_BLAST, $T05().SONIC_BOOM]));
          } else {
            this.AI_Step(this.Actor$target$value);
            this.QS();
          }
        }
        return;

      case 47: 
        if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
          if (this.HasAttr($T04().COOLDOWN_1)) {
            this.Attack(1, this.Actor$target$value);
          } else if (!this.Attack(0, this.Actor$target$value)) {
            $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " is off balance! "), JSIL.Array.New($T10(), [this]));
            $T09().prototype.set_Item.call(this.attrs, $T04().MECHANICAL_SHIELD, 0);
          }
        } else {
          if (!this.HasAttr($T04().COOLDOWN_2)) {
            this.AI_Step(this.Actor$target$value);
          }
          this.QS();
        }
        return;

      case 48: 

        for (var a$19 = this.ActorsWithinDistance(2)._items, i$19 = 0, l$19 = this.ActorsWithinDistance(2)._size; i$19 < l$19; ($temp1B = i$19, 
            i$19 = ((i$19 + 1) | 0), 
            $temp1B)) {
          var current27 = a$19[i$19];
          if (!(!current27.HasAttr($T04().SPELL_DISRUPTION) || !current27.HasLOE(this))) {
            if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
              this.Attack(0, this.Actor$target$value);
            } else {
              this.AI_Step(this.Actor$target$value);
              this.QS();
            }
            return;
          }
        }
        if (!((this.Actor$curhp$value > 15) || !this.HasLOS(this.Actor$target$value))) {
          var tile10 = null;
          var num19 = 9999;
          $T1B().prototype._ctor.call(p2, 11, 33);

          for (var num20 = 2; num20 <= 8; num20 = ((num20 + 2) | 0)) {
            if (!((this.TileInDirection(num20).Tile$type$value.valueOf() !== 0) || ($S20().CallVirtual("EstimatedEuclideanDistanceFromX10", null, this.TileInDirection(num20), p2.MemberwiseClone()) >= num19))) {
              tile10 = this.TileInDirection(num20);
              num19 = $S20().CallVirtual("EstimatedEuclideanDistanceFromX10", null, this.TileInDirection(num20), p2.MemberwiseClone());
            }
          }
          if (tile10 !== null) {
            $S21().CallVirtual("CastSpell", null, this, $T05().PASSAGE, tile10);
            return;
          }
        }
        var list16 = $S18().Construct();
        list16.Add($T05().FORCE_BEAM);
        list16.Add($T05().IMMOLATE);
        list16.Add($T05().GLACIAL_BLAST);
        list16.Add($T05().GLACIAL_BLAST);
        if (!(!this.Actor$target$value.HasAttr($T04().ON_FIRE) && !this.Actor$target$value.HasAttr($T04().CATCHING_FIRE))) {
          list16.Remove($T05().IMMOLATE);
        }
        var array4 = $T2E().prototype.ToArray.call(list16);
        switch ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value)) {
          case 1: 
            if (!((this.Actor$target$value.EnemiesAdjacent() <= 1) && !$T24().CoinFlip())) {
              this.CastRandomSpell(this.Actor$target$value, JSIL.Array.New($T05(), [$T05().MAGIC_HAMMER, $T05().MAGIC_HAMMER, $T05().FORCE_BEAM]));
            } else if (this.AI_Step(this.Actor$target$value, true)) {
              this.QS();
            } else {
              this.CastRandomSpell(this.Actor$target$value, JSIL.Array.New($T05(), [$T05().MAGIC_HAMMER, $T05().MAGIC_HAMMER, $T05().FORCE_BEAM]));
            }
            break;

          case 2: 
            if (!(!this.HasLOE(this.Actor$target$value) || ($S14().CallVirtual("FirstActorInLine", null, this, this.Actor$target$value) === this.Actor$target$value))) {
              this.CastSpell($T05().VOLTAIC_SURGE);
            } else if ($T24().CoinFlip()) {
              if (this.AI_Step(this.Actor$target$value, true)) {
                this.QS();
              } else if ($S14().CallVirtual("FirstActorInLine", null, this, this.Actor$target$value) === this.Actor$target$value) {
                this.CastRandomSpell(this.Actor$target$value, JSIL.Array.New($T05(), [$T05().IMMOLATE, $T05().FORCE_BEAM, $T05().GLACIAL_BLAST]));
              } else {
                this.AI_Sidestep(this.Actor$target$value);
                this.QS();
              }
            } else if ($S14().CallVirtual("FirstActorInLine", null, this, this.Actor$target$value) === this.Actor$target$value) {
              this.CastRandomSpell(this.Actor$target$value, JSIL.Array.New($T05(), [$T05().IMMOLATE, $T05().FORCE_BEAM, $T05().GLACIAL_BLAST]));
            } else if (this.AI_Step(this.Actor$target$value, true)) {
              this.QS();
            } else {
              this.AI_Sidestep(this.Actor$target$value);
              this.QS();
            }
            break;

          case 3: 
          case 4: 
          case 5: 
          case 6: 
          case 7: 
          case 8: 
          case 9: 
          case 10: 
          case 11: 
          case 12: 
            if ($S14().CallVirtual("FirstActorInLine", null, this, this.Actor$target$value) === this.Actor$target$value) {
              this.CastRandomSpell(this.Actor$target$value, array4);
            } else {
              this.AI_Sidestep(this.Actor$target$value);
              this.QS();
            }
            break;

          default: 
            this.AI_Step(this.Actor$target$value);
            this.QS();
            break;

        }
        return;

      case 49: 
        if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) <= 12) {
          if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
            this.Attack(0, this.Actor$target$value);
          } else if ($S14().CallVirtual("FirstActorInLine", null, this, this.Actor$target$value) === this.Actor$target$value) {
            var bestLine = this.GetBestLine(
              this.Actor$target$value.get_row(), 
              this.Actor$target$value.get_col()
            );
            bestLine.Remove(bestLine.get_Item(((bestLine.get_Count() - 1) | 0)));
            $S22().CallVirtual("AnimateBoltBeam", null, this, bestLine, $T03().DarkGreen);
            if ($T24().Roll(1, 4) === 4) {
              this.Attack(0, this.Actor$target$value);
            } else {
              var row2 = this.Actor$target$value.get_row();
              var col2 = this.Actor$target$value.get_col();
              if (!(!this.Attack(1, this.Actor$target$value) || ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, row2, col2) === null))) {
                if (this.Actor$target$value.HasAttr($T04().FROZEN)) {
                  if (this.Actor$target$value.PhysicalObject$$name$value == "you") {
                    $thisType.Actor$B$value.Add("You don't move far. ", JSIL.Array.New($T10(), 0));
                  } else {
                    $thisType.Actor$B$value.Add(JSIL.ConcatString(this.Actor$target$value.PhysicalObject$the_name$value, " doesn't move far. "), JSIL.Array.New($T10(), [this.Actor$target$value]));
                  }
                } else {
                  var num21 = 0;
                  var num22 = 0;
                  if (this.Actor$target$value.get_row() < this.get_row()) {
                    num21 = 1;
                  }
                  if (this.Actor$target$value.get_row() > this.get_row()) {
                    num21 = -1;
                  }
                  if (this.Actor$target$value.get_col() < this.get_col()) {
                    num22 = 1;
                  }
                  if (this.Actor$target$value.get_col() > this.get_col()) {
                    num22 = -1;
                  }
                  if (!this.Actor$target$value.AI_MoveOrOpen(
                      ((this.Actor$target$value.get_row() + num21) | 0), 
                      ((this.Actor$target$value.get_col() + num22) | 0)
                    )) {
                    if ((Math.abs(((this.Actor$target$value.get_row() - this.get_row()) | 0))) > (Math.abs(((this.Actor$target$value.get_col() - this.get_col()) | 0)))) {
                      this.Actor$target$value.AI_Step($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, 
                          this.get_row(), 
                          this.Actor$target$value.get_col()
                        ));
                    } else if ((Math.abs(((this.Actor$target$value.get_row() - this.get_row()) | 0))) < (Math.abs(((this.Actor$target$value.get_col() - this.get_col()) | 0)))) {
                      this.Actor$target$value.AI_Step($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, 
                          this.Actor$target$value.get_row(), 
                          this.get_col()
                        ));
                    } else {
                      this.Actor$target$value.AI_Step(this);
                    }
                  }
                }
              }
            }
          } else {
            this.Q1();
          }
        } else {
          this.Q1();
        }
        return;

      case 50: 
        if (!(this.HasAttr($T04().COOLDOWN_1) || ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) > 12))) {
          var expr_4A71 = (dict16 = this.attrs);
          num = $T09().prototype.get_Item.call(dict16, $T04().COOLDOWN_1);
          $T09().prototype.set_Item.call(expr_4A71, $T04().COOLDOWN_1, ((num + 1) | 0));
          $thisType.Actor$Q$value.Add($S0F().Construct(this, (((($T24().Roll(4) + 8) | 0) * 100) | 0), $T04().COOLDOWN_1));
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " calls out to the dead. "), JSIL.Array.New($T10(), [this]));
          var type = (!$T24().CoinFlip() ? $T02().ZOMBIE : $T02().SKELETON);
          var list17 = $S12().Construct();

          for (var a$1a = this.TilesWithinDistance(2)._items, i$1a = 0, l$1a = this.TilesWithinDistance(2)._size; i$1a < l$1a; ($temp1C = i$1a, 
              i$1a = ((i$1a + 1) | 0), 
              $temp1C)) {
            var current28 = a$1a[i$1a];
            if (!(!current28.Tile$passable$value || 
                (current28.actor() !== null) || ($S1E().CallVirtual("DirectionOf", null, this, current28) !== $S1E().CallVirtual("DirectionOf", null, this, this.Actor$target$value)))) {
              list17.Add(current28);
            }
          }
          if (list17.get_Count() === 0) {

            for (var a$1b = this.TilesWithinDistance(2)._items, i$1b = 0, l$1b = this.TilesWithinDistance(2)._size; i$1b < l$1b; ($temp1D = i$1b, 
                i$1b = ((i$1b + 1) | 0), 
                $temp1D)) {
              var current29 = a$1b[i$1b];
              if (!(!current29.Tile$passable$value || (current29.actor() !== null))) {
                list17.Add(current29);
              }
            }
          }
          if (!((list17.get_Count() !== 0) && ((this.group === null) || 
                (this.group.get_Count() <= 3)))) {
            $thisType.Actor$B$value.Add("Nothing happens. ", JSIL.Array.New($T10(), [this]));
          } else {
            var tile11 = $T27().Random$b1($T17())(list17);
            $thisType.Actor$B$value.Add(JSIL.ConcatString($thisType.Prototype(type).PhysicalObject$a_name$value, " digs through the floor! "), JSIL.Array.New($T10(), 0));
            $thisType.Create(
              type, 
              tile11.get_row(), 
              tile11.get_col(), 
              true, 
              true
            );
            $T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, tile11.row, tile11.col).player_visibility_duration = -1;
            if (this.group === null) {
              this.group = ($S16().Construct()).__Initialize__([[this]]);
            }
            this.group.Add($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, 
                tile11.get_row(), 
                tile11.get_col()
              ));
            $T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, tile11.row, tile11.col).group = this.group;
          }
          this.Q1();
        } else {
          var flag6 = false;
          switch ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value)) {
            case 1: 
              if (this.AI_Step(this.Actor$target$value, true)) {
                this.QS();
              } else {
                this.Attack(0, this.Actor$target$value);
              }
              break;

            case 2: 
              if (!(!$T24().CoinFlip() || ($S14().CallVirtual("FirstActorInLine", null, this, this.Actor$target$value) !== this.Actor$target$value))) {
                flag6 = true;
              } else if (this.AI_Step(this.Actor$target$value, true)) {
                this.QS();
              } else {
                flag6 = true;
              }
              break;

            case 3: 
            case 4: 
            case 5: 
            case 6: 
              if ($S14().CallVirtual("FirstActorInLine", null, this, this.Actor$target$value) === this.Actor$target$value) {
                flag6 = true;
              } else {
                this.AI_Sidestep(this.Actor$target$value);
                this.QS();
              }
              break;

            default: 
              this.AI_Step(this.Actor$target$value);
              this.QS();
              break;

          }
          if (flag6) {
            $thisType.Actor$B$value.Add((this.PhysicalObject$the_name$value + " fires dark energy at " + this.Actor$target$value.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [this, this.Actor$target$value]));
            $S15().CallVirtual("AnimateBoltProjectile", null, this, this.Actor$target$value, $T03().DarkBlue);
            this.Actor$target$value.TakeDamage(
              $T31().MAGIC, 
              $T32().MAGICAL, 
              $T24().Roll(6), 
              this, 
              "*blasted by a necromancer"
            );
            this.Q1();
          }
        }
        return;

      case 51: 
        if (!((this.Actor$curhp$value > 10) || $T10().PhysicalObject$M$value.Map$wiz_dark$value)) {
          if ($thisType.Actor$player$value.CanSee(this)) {
            $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " absorbs the light from the air. "), JSIL.Array.New($T10(), 0));
          } else {
            $thisType.Actor$B$value.Add("Something drains the light from the air. ", JSIL.Array.New($T10(), 0));
          }
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " is restored. "), JSIL.Array.New($T10(), [this]));
          this.Actor$curhp$value = this.Actor$maxhp$value;
          $T10().PhysicalObject$M$value.Map$wiz_dark$value = true;
          $T10().PhysicalObject$M$value.set_wiz_lite(false);
          this.Q1();
        } else if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
          this.Attack(0, this.Actor$target$value);
        } else {
          this.AI_Step(this.Actor$target$value);
          this.QS();
        }
        return;

      case 55: 
        this.QS();
        return;

    }
    if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) === 1) {
      this.Attack(0, this.Actor$target$value);
    } else {
      this.AI_Step(this.Actor$target$value);
      this.QS();
    }
  };

  function Actor_AI_MoveOrOpen$03 (dir) {
    return this.AI_MoveOrOpen(
      this.TileInDirection(dir).get_row(), 
      this.TileInDirection(dir).get_col()
    );
  };

  function Actor_AI_MoveOrOpen$04 (r, c) {
    if (!(!$T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, r, c).Tile$passable$value || 
        ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, r, c) !== null) || 
        this.GrabPreventsMovement($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, r, c)) || ($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, r, c).Tile$type$value === $T1A().CHASM))) {
      this.Move(r, c);
      return true;
    }
    if (!(($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, r, c).Tile$type$value !== $T1A().DOOR_C) || !this.HasAttr($T04().HUMANOID_INTELLIGENCE))) {
      $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, r, c).Toggle(this);
      return true;
    }
    if ($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, r, c).Tile$type$value === $T1A().RUBBLE) {
      if (this.HasAttr($T04().SMALL)) {
        if (($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, r, c) !== null) || this.GrabPreventsMovement($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, r, c))) {
          return false;
        }
        this.Move(r, c);
      } else {
        $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, r, c).Toggle(this);
      }
      return true;
    }
    if (!(($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, r, c).Tile$type$value !== $T1A().HIDDEN_DOOR) || !this.HasAttr($T04().BOSS_MONSTER))) {
      $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, r, c).Toggle(this);
      $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, r, c).Toggle(this);
      return true;
    }
    return false;
  };

  function Actor_AI_Sidestep (obj) {
    var num = $S0C().CallVirtual("DistanceFrom", null, this, obj);
    var list = $S12().Construct();

    for (var i = ((this.get_row() - 1) | 0); i <= ((this.get_row() + 1) | 0); i = ((i + 1) | 0)) {

      for (var j = ((this.get_col() - 1) | 0); j <= ((this.get_col() + 1) | 0); j = ((j + 1) | 0)) {
        if (!(($S0C().CallVirtual("DistanceFrom", null, $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, i, j), obj) !== num) || 
            !$T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, i, j).Tile$passable$value || ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, i, j) !== null))) {
          list.Add($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, i, j));
        }
      }
    }

    while (list.get_Count() > 0) {
      var index = (($T24().Roll(1, list.get_Count()) - 1) | 0);
      if (this.AI_Step(list.get_Item(index))) {
        return true;
      }
      list.RemoveAt(index);
    }
    return false;
  };

  function Actor_AI_Step$05 (obj) {
    return this.AI_Step(obj, false);
  };

  function Actor_AI_Step$06 (obj, flee) {
    var $temp00;
    var dict = null, dict2 = null;
    var num = 0;
    var num2 = 0;
    if (obj.get_row() < this.get_row()) {
      num = -1;
    }
    if (obj.get_row() > this.get_row()) {
      num = 1;
    }
    if (obj.get_col() < this.get_col()) {
      num2 = -1;
    }
    if (obj.get_col() > this.get_col()) {
      num2 = 1;
    }
    if (flee) {
      num = (-num | 0);
      num2 = (-num2 | 0);
    }
    var list = $S23().Construct();
    if (num === -1) {
      if (num2 === -1) {
        list.Add(7);
      }
      if (num2 === 0) {
        list.Add(8);
      }
      if (num2 === 1) {
        list.Add(9);
      }
    }
    if (num === 0) {
      if (num2 === -1) {
        list.Add(4);
      }
      if (num2 === 1) {
        list.Add(6);
      }
    }
    if (num === 1) {
      if (num2 === -1) {
        list.Add(1);
      }
      if (num2 === 0) {
        list.Add(2);
      }
      if (num2 === 1) {
        list.Add(3);
      }
    }
    if (list.get_Count() === 0) {
      return true;
    }
    var flag = $T24().CoinFlip();
    list.Add(this.RotateDirection(list.get_Item(0), flag));
    list.Add(this.RotateDirection(list.get_Item(0), !flag));
    flag = $T24().CoinFlip();
    list.Add(this.RotateDirection(this.RotateDirection(list.get_Item(0), flag), flag));
    list.Add(this.RotateDirection(this.RotateDirection(list.get_Item(0), !flag), !flag));

    for (var a$0 = list._items, i$0 = 0, l$0 = list._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      if (!((this.ActorInDirection(current) === null) || !this.ActorInDirection(current).IsHiddenFrom(this))) {
        this.player_visibility_duration = -1;
        if (this.ActorInDirection(current) === $thisType.Actor$player$value) {
          var num3 = $T09().prototype.get_Item.call(dict, $T04().PLAYER_NOTICED);
          $T09().prototype.set_Item.call((dict = this.attrs), $T04().PLAYER_NOTICED, ((num3 + 1) | 0));
        }
        this.Actor$target$value = $thisType.Actor$player$value;
        this.target_location = $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, 
          $thisType.Actor$player$value.get_row(), 
          $thisType.Actor$player$value.get_col()
        );
        var str = " walks straight into you! ";
        if (this.HasAttr($T04().FLYING)) {
          str = " flies straight into you! ";
        }
        if (!this.IsHiddenFrom($thisType.Actor$player$value)) {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.TheVisible(), str), JSIL.Array.New($T10(), 0));
          if ($thisType.Actor$player$value.CanSee(this)) {
            $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " looks startled. "), JSIL.Array.New($T10(), 0));
          }
        } else {
          $T09().prototype.set_Item.call(this.attrs, $T04().TURNS_VISIBLE, -1);
          var expr_298 = (dict2 = this.attrs);
          num3 = $T09().prototype.get_Item.call(dict2, $T04().NOTICED);
          $T09().prototype.set_Item.call(expr_298, $T04().NOTICED, ((num3 + 1) | 0));
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.AVisible(), str), JSIL.Array.New($T10(), 0));
          if ($thisType.Actor$player$value.CanSee(this)) {
            $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " looks just as surprised as you. "), JSIL.Array.New($T10(), 0));
          }
        }
        var result = true;
        return result;
      }
      if (this.AI_MoveOrOpen(current)) {
        result = true;
        return result;
      }
    }
    return false;
  };

  function Actor_AlwaysWanders () {
    var type = this.Actor$type$value;
    return ((type === $T02().SKULKING_KILLER) || 
      (type === $T02().COMPY) || 
      (type === $T02().ENTRANCER) || 
      (type === $T02().SHADOWVEIL_DUELIST) || (type === $T02().ORC_ASSASSIN));
  };

  function Actor_AnimateBeam$07 (o, color, c) {
    $thisType.Actor$B$value.DisplayNow();
    $T1F().AnimateBeam(this.GetBestLine(
        o.get_row(), 
        o.get_col()
      ), $S24().Construct(color, c));
  };

  function Actor_AnimateBeam$08 (o, c, color) {
    $thisType.Actor$B$value.DisplayNow();
    $T1F().AnimateBeam(this.GetBestLine(
        o.get_row(), 
        o.get_col()
      ), $S24().Construct(color, c));
  };

  function Actor_AnimateBeam$09 (line, c, color) {
    $thisType.Actor$B$value.DisplayNow();
    $T1F().AnimateBeam(line, $S24().Construct(color, c));
  };

  function Actor_AnimateBoltBeam$0A (o, color) {
    $thisType.Actor$B$value.DisplayNow();
    $T1F().AnimateBoltBeam(this.GetBestLine(
        o.get_row(), 
        o.get_col()
      ), color);
  };

  function Actor_AnimateBoltBeam$0B (line, color) {
    $thisType.Actor$B$value.DisplayNow();
    $T1F().AnimateBoltBeam(line, color);
  };

  function Actor_AnimateBoltProjectile$0C (o, color) {
    $thisType.Actor$B$value.DisplayNow();
    $T1F().AnimateBoltProjectile(this.GetBestLine(
        o.get_row(), 
        o.get_col()
      ), color);
  };

  function Actor_AnimateBoltProjectile$0D (line, color) {
    $thisType.Actor$B$value.DisplayNow();
    $T1F().AnimateBoltProjectile(line, color);
  };

  function Actor_AnimateExplosion$0E (o, radius, color, c) {
    $thisType.Actor$B$value.DisplayNow();
    $T1F().AnimateExplosion(o, radius, $S24().Construct(color, c));
  };

  function Actor_AnimateExplosion$0F (o, radius, c, color) {
    $thisType.Actor$B$value.DisplayNow();
    $T1F().AnimateExplosion(o, radius, $S24().Construct(color, c));
  };

  function Actor_AnimateMapCell$10 (o, color, c) {
    $thisType.Actor$B$value.DisplayNow();
    $T1F().AnimateMapCell(
      o.get_row(), 
      o.get_col(), 
      $S24().Construct(color, c)
    );
  };

  function Actor_AnimateMapCell$11 (o, c, color) {
    $thisType.Actor$B$value.DisplayNow();
    $T1F().AnimateMapCell(
      o.get_row(), 
      o.get_col(), 
      $S24().Construct(color, c)
    );
  };

  function Actor_AnimateProjectile$12 (o, color, c) {
    $thisType.Actor$B$value.DisplayNow();
    $T1F().AnimateProjectile(this.GetBestLine(
        o.get_row(), 
        o.get_col()
      ), $S24().Construct(color, c));
  };

  function Actor_AnimateProjectile$13 (o, c, color) {
    $thisType.Actor$B$value.DisplayNow();
    $T1F().AnimateProjectile(this.GetBestLine(
        o.get_row(), 
        o.get_col()
      ), $S24().Construct(color, c));
  };

  function Actor_AnimateProjectile$14 (line, c, color) {
    $thisType.Actor$B$value.DisplayNow();
    $T1F().AnimateProjectile(line, $S24().Construct(color, c));
  };

  function Actor_AnimateStorm (radius, num_frames, num_per_frame, c, color) {
    $thisType.Actor$B$value.DisplayNow();
    $T1F().AnimateStorm(
      this.p.MemberwiseClone(), 
      radius, 
      num_frames, 
      num_per_frame, 
      $S25().Construct(c, color)
    );
  };

  function Actor_ArmorClass () {
    var num = this.TotalSkill($T07().DEFENSE);
    if (!((this.weapons.get_First().get_Value() !== $T15().STAFF) && (this.weapons.get_First().get_Value() !== $T15().STAFF_OF_MAGIC))) {
      num = ((num + 1) | 0);
    }
    if (this.magic_items.Contains($T1C().RING_OF_PROTECTION)) {
      num = ((num + 1) | 0);
    }
    return ((num + $T3F().Protection(this.armors.get_First().get_Value())) | 0);
  };

  function Actor_Attack (attack_idx, a) {
    var $temp00, $temp01, $temp02;
    var dict = null, dict2 = null, dict3 = null, dict4 = null, dict5 = null, dict6 = null, dict7 = null, dict8 = null, dict9 = null, dict10 = null;
    if (this.StunnedThisTurn()) {
      return false;
    }
    var attackInfo = $T40().Attack(this.Actor$type$value, attack_idx);
    if (this.weapons.get_First().get_Value() !== $T15().NO_WEAPON) {
      attackInfo.damage = $T3A().Damage(this.weapons.get_First().get_Value());
    }
    attackInfo.damage.source = this;
    var num = this.TotalSkill($T07().COMBAT);
    var flag = false;
    if (!(!this.IsHiddenFrom(a) && 
        a.CanSee(this) && ((this !== $thisType.Actor$player$value) || 
          !this.HasAttr($T04().SHADOW_CLOAK) || 
          this.tile().IsLit() || 
          a.HasAttr($T04().BLINDSIGHT)))) {
      flag = true;
    }
    if (flag) {
      num = ((num + 25) | 0);
    }
    if (this.HasAttr($T04().BLESSED)) {
      num = ((num + 10) | 0);
    }
    num = ((num - ((a.ArmorClass() * 2) | 0)) | 0);
    var flag2 = a.IsHit(num);
    if (this.HasFeat($T41().DRIVE_BACK)) {
      var flag3 = true;
      var dir = $S1E().CallVirtual("DirectionOf", null, this, a);
      if (!(!a.TileInDirection(dir).Tile$passable$value || (a.ActorInDirection(dir) !== null))) {
        flag3 = false;
      }
      if (!(!a.TileInDirection(this.RotateDirection(dir, true)).Tile$passable$value || (a.ActorInDirection(this.RotateDirection(dir, true)) !== null))) {
        flag3 = false;
      }
      if (!(!a.TileInDirection(this.RotateDirection(dir, false)).Tile$passable$value || (a.ActorInDirection(this.RotateDirection(dir, false)) !== null))) {
        flag3 = false;
      }
      if (!(!a.HasAttr($T04().FROZEN) && !a.HasAttr($T04().NEVER_MOVES))) {
        flag3 = true;
      }
      if (flag3) {
        flag2 = true;
      }
    }
    var flag4 = false;
    if (!(!a.HasAttr($T04().DEFENSIVE_STANCE) || !$T24().CoinFlip())) {
      flag2 = false;
      flag4 = true;
    }
    if (!((!$S0A().CallVirtual("Is", null, this.tile(), $T19().FOG) && 
          !$S0A().CallVirtual("Is", null, a.tile(), $T19().FOG)) || !$T24().CoinFlip())) {
      flag2 = false;
      flag4 = true;
    }
    if (!((!a.IsHiddenFrom(this) && 
          this.CanSee(a) && 
          ((a !== $thisType.Actor$player$value) || 
            !a.HasAttr($T04().SHADOW_CLOAK) || 
            a.tile().IsLit() || 
            this.HasAttr($T04().BLINDSIGHT))) || !$T24().CoinFlip())) {
      flag2 = false;
      flag4 = true;
    }
    var flag5 = false;
    if (!((this !== $thisType.Actor$player$value) && (a !== $thisType.Actor$player$value))) {
      flag5 = true;
    }
    if (!((attack_idx !== 2) || ((this.Actor$type$value !== $T02().FROSTLING) && 
          (this.Actor$type$value !== $T02().FIRE_DRAKE)))) {
      flag2 = true;
      flag5 = false;
    }
    if (!((a !== $thisType.Actor$player$value) || (this.Actor$type$value !== $T02().DREAM_CLONE))) {
      flag5 = false;
    }
    if (flag5) {
      var expr_2B8 = (dict = $thisType.Actor$player$value.attrs);
      var num2 = $T09().prototype.get_Item.call(dict, $T04().IN_COMBAT);
      $T09().prototype.set_Item.call(expr_2B8, $T04().IN_COMBAT, ((num2 + 1) | 0));
    }
    var text = (JSIL.ConcatString(attackInfo.desc, ". "));
    if (flag2) {
      if (!(!this.HasFeat($T41().NECK_SNAP) || 
          !a.HasAttr($T04().MEDIUM_HUMANOID) || !this.IsHiddenFrom(a))) {
        if (!this.HasAttr($T04().RESIST_NECK_SNAP)) {
          $thisType.Actor$B$value.Add((this.You("silently snap") + " " + a.Your() + " neck. "), JSIL.Array.New($T10(), 0));
          a.TakeDamage($T31().NORMAL, $T32().NO_TYPE, 9001, this);
          this.Q1();
          return true;
        }
        $thisType.Actor$B$value.Add((this.You("silently snap") + " " + a.Your() + " neck. "), JSIL.Array.New($T10(), 0));
        $thisType.Actor$B$value.Add(("It doesn't seem to affect " + a.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), 0));
      }
      var dice = attackInfo.damage.dice;
      var flag6 = false;
      var num3 = (text.indexOf("&"));
      if (num3 !== -1) {
        text = ((text.substr(0, num3) + this.TheVisible() + text.substr(((num3 + 1) | 0))));
      }
      num3 = (text.indexOf("^"));
      if (num3 !== -1) {
        var str = "";
        var num4 = 20;
        if (this.weapons.get_First().get_Value() === $T15().DAGGER) {
          num4 = ((num4 - 2) | 0);
        }
        if (this.HasFeat($T41().LETHALITY)) {
          num4 = ((num4 - 2) | 0);
          var num5 = ((a.Actor$maxhp$value / 5) | 0);
          var num6 = ((a.Actor$maxhp$value - a.Actor$curhp$value) | 0);
          if (num5 > 0) {
            var num7 = ((num6 / num5) | 0);
            num4 = ((num4 - num7) | 0);
          }
        }
        if (!(((attackInfo.damage.type.valueOf() !== 0) && 
              (attackInfo.damage.type !== $T31().PIERCING) && 
              (attackInfo.damage.type !== $T31().BASHING) && 
              (attackInfo.damage.type !== $T31().SLASHING)) || ($T24().Roll(1, 20) < num4))) {
          flag6 = true;
          str = "critically ";
        }
        text = ((text.substr(0, num3) + str + text.substr(((num3 + 1) | 0))));
      }
      num3 = (text.indexOf("*"));
      if (num3 !== -1) {
        text = ((text.substr(0, num3) + a.TheVisible() + text.substr(((num3 + 1) | 0))));
      }
      if (!(!flag || 
          !flag6 || 
          a.HasAttr($T04().UNDEAD) || 
          a.HasAttr($T04().CONSTRUCT) || 
          a.HasAttr($T04().PLANTLIKE) || a.HasAttr($T04().BOSS_MONSTER))) {
        if (a.Actor$type$value.valueOf() !== 0) {
          switch (this.weapons.get_First().get_Value().valueOf()) {
            case 0: 
            case 5: 
              $thisType.Actor$B$value.Add(("You run " + a.TheVisible() + " through! "), JSIL.Array.New($T10(), 0));
              break;

            case 1: 
            case 6: 
              $thisType.Actor$B$value.Add(("You bash " + a.YourVisible() + " head in! "), JSIL.Array.New($T10(), 0));
              break;

            case 2: 
            case 7: 
              $thisType.Actor$B$value.Add(("You pierce one of " + a.YourVisible() + " vital organs! "), JSIL.Array.New($T10(), 0));
              break;

            case 3: 
            case 8: 
              $thisType.Actor$B$value.Add(("You bring your staff down on " + a.YourVisible() + " head with a loud crack! "), JSIL.Array.New($T10(), 0));
              break;

            case 4: 
            case 9: 
              $thisType.Actor$B$value.Add(("You choke " + a.TheVisible() + " with your bowstring! "), JSIL.Array.New($T10(), 0));
              break;

          }
          this.MakeNoise();
          a.TakeDamage($T31().NORMAL, $T32().NO_TYPE, 1337, this);
          this.Q1();
          return true;
        }
        $thisType.Actor$B$value.Add(JSIL.ConcatString(this.AVisible(), " strikes from hiding! "), JSIL.Array.New($T10(), 0));
        $thisType.Actor$B$value.Add("The deadly attack leaves you stunned! ", JSIL.Array.New($T10(), 0));
        var dmg = $T2D().Max(((dice * 6) | 0), ((a.Actor$curhp$value / 2) | 0));
        var expr_6F7 = (dict2 = a.attrs);
        num2 = $T09().prototype.get_Item.call(dict2, $T04().STUNNED);
        $T09().prototype.set_Item.call(expr_6F7, $T04().STUNNED, ((num2 + 1) | 0));
        $thisType.Actor$Q$value.Add($S26().Construct(a, (($T24().Roll(2, 5) * 100) | 0), $T04().STUNNED, "You are no longer stunned. "));
        a.TakeDamage(
          $T31().NORMAL, 
          $T32().PHYSICAL, 
          dmg, 
          this, 
          this.PhysicalObject$a_name$value
        );
      }
      if (flag) {
        $thisType.Actor$B$value.Add(JSIL.ConcatString(this.YouVisible("strike"), " from hiding! "), JSIL.Array.New($T10(), 0));
        if (this.Actor$type$value.valueOf() !== 0) {
          $T09().prototype.set_Item.call(this.attrs, $T04().TURNS_VISIBLE, -1);
          var expr_78D = (dict3 = this.attrs);
          num2 = $T09().prototype.get_Item.call(dict3, $T04().NOTICED);
          $T09().prototype.set_Item.call(expr_78D, $T04().NOTICED, ((num2 + 1) | 0));
        } else {
          a.player_visibility_duration = -1;
          var expr_7B8 = (dict4 = a.attrs);
          num2 = $T09().prototype.get_Item.call(dict4, $T04().PLAYER_NOTICED);
          $T09().prototype.set_Item.call(expr_7B8, $T04().PLAYER_NOTICED, ((num2 + 1) | 0));
        }
      }
      $thisType.Actor$B$value.Add(text, JSIL.Array.New($T10(), [this, a]));
      if (flag6) {
        var num8 = ((dice * 6) | 0);
      } else {
        num8 = $T24().Roll(dice, 6);
      }
      num8 = ((num8 + this.TotalSkill($T07().COMBAT)) | 0);
      var row = a.get_row();
      var col = a.get_col();
      var flag7 = ((a.Actor$type$value === $T02().TROLL) || 
        (a.Actor$type$value === $T02().TROLL_SEER));
      var flag8 = a.HasAttr($T04().MECHANICAL_SHIELD);
      if (!(!flag6 || !flag8)) {
        $T09().prototype.set_Item.call(a.attrs, $T04().MECHANICAL_SHIELD, 0);
      }
      a.TakeDamage(
        attackInfo.damage.type, 
        attackInfo.damage.damclass, 
        num8, 
        this, 
        this.PhysicalObject$a_name$value
      );
      if (!(!flag6 || !flag8)) {
        var expr_89F = (dict5 = a.attrs);
        num2 = $T09().prototype.get_Item.call(dict5, $T04().MECHANICAL_SHIELD);
        $T09().prototype.set_Item.call(expr_89F, $T04().MECHANICAL_SHIELD, ((num2 + 1) | 0));
      }
      if (!(($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, row, col) === null) || 
          (!this.HasAttr($T04().FIRE_HIT) && 
            ($T09().prototype.get_Item.call(this.attrs, $T04().ON_FIRE) < 3)) || a.HasAttr($T04().INVULNERABLE))) {
        var num9 = $T24().Roll(6);
        if (!(a.HasAttr($T04().RESIST_FIRE) && (((num9 / $T09().prototype.get_Item.call(a.attrs, $T04().RESIST_FIRE)) | 0) <= 0))) {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(a.YouAre(), " burned. "), JSIL.Array.New($T10(), [a]));
        }
        a.TakeDamage(
          $T31().FIRE, 
          $T32().PHYSICAL, 
          num9, 
          this, 
          this.PhysicalObject$a_name$value
        );
      }
      if (!(!flag7 || 
          !this.HasAttr($T04().FIRE_HIT) || !$S0A().CallVirtual("Is", null, $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, row, col), $T19().TROLL_CORPSE))) {
        $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, row, col).features.Remove($T19().TROLL_CORPSE);
        $thisType.Actor$B$value.Add("The troll corpse burns to ashes! ", JSIL.Array.New($T10(), [$T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, row, col)]));
      }
      if (!(!flag7 || 
          !this.HasAttr($T04().FIRE_HIT) || !$S0A().CallVirtual("Is", null, $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, row, col), $T19().TROLL_SEER_CORPSE))) {
        $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, row, col).features.Remove($T19().TROLL_SEER_CORPSE);
        $thisType.Actor$B$value.Add("The troll seer corpse burns to ashes! ", JSIL.Array.New($T10(), [$T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, row, col)]));
      }
      if (!(!this.HasAttr($T04().COLD_HIT) || 
          (attack_idx !== 0) || 
          ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, row, col) === null) || a.HasAttr($T04().INVULNERABLE))) {
        $thisType.Actor$B$value.Add(JSIL.ConcatString(a.YouAre(), " chilled. "), JSIL.Array.New($T10(), [a]));
        a.TakeDamage(
          $T31().COLD, 
          $T32().PHYSICAL, 
          $T24().Roll(1, 6), 
          this, 
          this.PhysicalObject$a_name$value
        );
      }
      if (!(!this.HasAttr($T04().POISON_HIT) || 
          ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, row, col) === null) || 
          a.HasAttr($T04().UNDEAD) || 
          a.HasAttr($T04().CONSTRUCT) || 
          a.HasAttr($T04().POISON_HIT) || a.HasAttr($T04().IMMUNE_TOXINS))) {
        if (a.HasAttr($T04().POISONED)) {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(a.YouAre(), " more poisoned. "), JSIL.Array.New($T10(), [a]));
        } else {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(a.YouAre(), " poisoned. "), JSIL.Array.New($T10(), [a]));
        }
        var expr_B80 = (dict6 = a.attrs);
        num2 = $T09().prototype.get_Item.call(dict6, $T04().POISONED);
        $T09().prototype.set_Item.call(expr_B80, $T04().POISONED, ((num2 + 1) | 0));
        $thisType.Actor$Q$value.Add($S0F().Construct(a, (((($T24().Roll(6) + 6) | 0) * 100) | 0), $T04().POISONED));
      }
      if (!(!this.HasAttr($T04().PARALYSIS_HIT) || 
          (attack_idx !== 1) || 
          (this.Actor$type$value !== $T02().CARRION_CRAWLER) || 
          ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, row, col) === null) || a.HasAttr($T04().IMMUNE_TOXINS))) {
        $thisType.Actor$B$value.Add(JSIL.ConcatString(a.YouAre(), " paralyzed. "), JSIL.Array.New($T10(), [a]));
        $T09().prototype.set_Item.call(a.attrs, $T04().PARALYZED, (($T24().Roll(1, 3) + 3) | 0));
      }
      if (!(!this.HasAttr($T04().FORCE_HIT) || 
          ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, row, col) === null) || !$T24().OneIn(3))) {
        if ($T24().CoinFlip()) {
          $S27().CallVirtual("GetKnockedBack", null, a, this);
        } else if (!a.HasAttr($T04().STUNNED)) {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(a.YouAre(), " stunned. "), JSIL.Array.New($T10(), [a]));
          var expr_CB4 = (dict7 = a.attrs);
          num2 = $T09().prototype.get_Item.call(dict7, $T04().STUNNED);
          $T09().prototype.set_Item.call(expr_CB4, $T04().STUNNED, ((num2 + 1) | 0));
          var num10 = (((($T24().Roll(4) + 3) | 0) * 100) | 0);
          if (flag6) {
            num10 = ((num10 + 250) | 0);
            flag6 = false;
          }
          $thisType.Actor$Q$value.Add($S1A().Construct(a, num10, $T04().STUNNED, JSIL.ConcatString(a.YouAre(), " no longer stunned. "), JSIL.Array.New($T10(), [a])));
        }
      }
      if (!(!this.HasAttr($T04().DIM_VISION_HIT) || ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, row, col) === null))) {
        var msg = "";
        if (a.Actor$type$value.valueOf() === 0) {
          $thisType.Actor$B$value.Add("Your vision grows weak. ", JSIL.Array.New($T10(), 0));
          msg = "Your vision returns to normal. ";
        }
        a.GainAttrRefreshDuration($T04().DIM_VISION, ((a.DurationOfMagicalEffect((($T24().Roll(2, 20) + 20) | 0)) * 100) | 0), msg, JSIL.Array.New($T10(), 0));
      }
      if (this.HasAttr($T04().STALAGMITE_HIT)) {
        var list = $S12().Construct();

        for (var a$0 = $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, row, col).TilesWithinDistance(1)._items, i$0 = 0, l$0 = $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, row, col).TilesWithinDistance(1)._size; i$0 < l$0; ($temp01 = i$0, 
            i$0 = ((i$0 + 1) | 0), 
            $temp01)) {
          var current = a$0[i$0];
          if (!((current.actor() !== null) || 
              ((current.Tile$type$value !== $T1A().FLOOR) && 
                (current.Tile$type$value !== $T1A().STALAGMITE)) || !$T24().CoinFlip())) {
            list.Add(current);
          }
        }

        for (var a$1 = list._items, i$1 = 0, l$1 = list._size; i$1 < l$1; ($temp02 = i$1, 
            i$1 = ((i$1 + 1) | 0), 
            $temp02)) {
          var current2 = a$1[i$1];
          if (current2.Tile$type$value === $T1A().STALAGMITE) {
            $S28().CallVirtual("KillEvents", null, $thisType.Actor$Q$value, current2, $T22().STALAGMITE);
          } else {
            current2.Toggle(this, $T1A().STALAGMITE);
          }
        }
        $thisType.Actor$Q$value.Add($S1D().Construct(list, 150, $T22().STALAGMITE));
      }
      if (!(!this.HasAttr($T04().GRAB_HIT) || 
          ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, row, col) === null) || 
          this.HasAttr($T04().GRABBING) || ($S0C().CallVirtual("DistanceFrom", null, this, a) !== 1))) {
        var expr_EE9 = (dict8 = a.attrs);
        num2 = $T09().prototype.get_Item.call(dict8, $T04().GRABBED);
        $T09().prototype.set_Item.call(expr_EE9, $T04().GRABBED, ((num2 + 1) | 0));
        $T09().prototype.set_Item.call(this.attrs, $T04().GRABBING, $S1E().CallVirtual("DirectionOf", null, this, a));
        $thisType.Actor$B$value.Add((this.PhysicalObject$the_name$value + " grabs " + a.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [this, a]));
      }
      if (!(!this.HasAttr($T04().LIFE_DRAIN_HIT) || (this.Actor$curhp$value >= this.Actor$maxhp$value))) {
        ($temp00 = ((this.Actor$curhp$value + 10) | 0), 
          this.Actor$curhp$value = $temp00, 
          $temp00);
        if (this.Actor$curhp$value > this.Actor$maxhp$value) {
          this.Actor$curhp$value = this.Actor$maxhp$value;
        }
        $thisType.Actor$B$value.Add(JSIL.ConcatString(this.YouFeel(), " restored. "), JSIL.Array.New($T10(), [this]));
      }
      if (!(!this.HasAttr($T04().STUN_HIT) || ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, row, col) === null))) {
        $thisType.Actor$B$value.Add(JSIL.ConcatString(a.YouAre(), " stunned. "), JSIL.Array.New($T10(), [a]));
        var num11 = 550;
        if (flag6) {
          num11 = ((num11 + 250) | 0);
          flag6 = false;
        }
        a.GainAttrRefreshDuration($T04().STUNNED, num11, JSIL.ConcatString(a.YouAre(), " no longer stunned. "), JSIL.Array.New($T10(), [a]));
      }
      if (!(!flag6 || ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, row, col) === null))) {
        $thisType.Actor$B$value.Add(JSIL.ConcatString(a.YouAre(), " stunned. "), JSIL.Array.New($T10(), [a]));
        a.GainAttrRefreshDuration($T04().STUNNED, 250, JSIL.ConcatString(a.YouAre(), " no longer stunned. "), JSIL.Array.New($T10(), [a]));
      }
      if (!(($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, row, col) === null) || (a.Actor$type$value !== $T02().SWORDSMAN))) {
        if ($T09().prototype.get_Item.call(a.attrs, $T04().BONUS_COMBAT) > 0) {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(a.PhysicalObject$the_name$value, " returns to a defensive stance. "), JSIL.Array.New($T10(), [a]));
          $T09().prototype.set_Item.call(a.attrs, $T04().BONUS_COMBAT, 0);
        }
        var expr_1118 = (dict9 = a.attrs);
        num2 = $T09().prototype.get_Item.call(dict9, $T04().COOLDOWN_1);
        $T09().prototype.set_Item.call(expr_1118, $T04().COOLDOWN_1, ((num2 + 1) | 0));
        $thisType.Actor$Q$value.Add($S0F().Construct(a, 100, $T04().COOLDOWN_1));
      }
    } else {
      if (!(!a.HasAttr($T04().DEFENSIVE_STANCE) && (!a.HasFeat($T41().FULL_DEFENSE) || 
            !$T24().CoinFlip()))) {
        var list2 = a.ActorsWithinDistance(1, true);
        list2.Remove(this);
        if (list2.get_Count() > 0) {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(a.You("deflect"), " the attack. "), JSIL.Array.New($T10(), [this, a]));
          return this.Attack(attack_idx, list2.get_Item((($T24().Roll(1, list2.get_Count()) - 1) | 0)));
        }
      }
      if (!((this !== $thisType.Actor$player$value) && 
          (a !== $thisType.Actor$player$value) && 
          !$thisType.Actor$player$value.CanSee(this) && !$thisType.Actor$player$value.CanSee(a))) {
        if (text == "& lunges forward and ^hits *. ") {
          $thisType.Actor$B$value.Add((this.PhysicalObject$the_name$value + " lunges forward and misses " + a.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), 0));
        } else if (text == "& hits * with a blast of cold. ") {
          $thisType.Actor$B$value.Add((this.PhysicalObject$the_name$value + " nearly hits " + a.PhysicalObject$the_name$value + " with a blast of cold. "), JSIL.Array.New($T10(), 0));
        } else if (!((text.length < 20) || !(text.substr(0, 20) == "& extends a tentacle"))) {
          $thisType.Actor$B$value.Add((this.PhysicalObject$the_name$value + " misses " + a.PhysicalObject$the_name$value + " with a tentacle. "), JSIL.Array.New($T10(), 0));
        } else if (this.HasFeat($T41().DRIVE_BACK)) {
          $thisType.Actor$B$value.Add((this.You("drive") + " " + a.TheVisible() + " back. "), JSIL.Array.New($T10(), 0));
        } else if (!((a.ArmorClass() <= 0) || flag4)) {
          if (a.Actor$type$value.valueOf() !== 0) {
            $thisType.Actor$B$value.Add((a.YourVisible() + " armor blocks " + this.YourVisible() + " attack. "), JSIL.Array.New($T10(), 0));
          } else {
            var sides = ((25 - num) | 0);
            if ($T24().Roll(sides) <= (($T3F().Protection(a.armors.get_First().get_Value()) * 2) | 0)) {
              $thisType.Actor$B$value.Add((a.YourVisible() + " armor blocks " + this.YourVisible() + " attack. "), JSIL.Array.New($T10(), 0));
            } else {
              $thisType.Actor$B$value.Add((this.YouVisible("miss", true) + " " + a.TheVisible() + ". "), JSIL.Array.New($T10(), 0));
            }
          }
        } else {
          $thisType.Actor$B$value.Add((this.YouVisible("miss", true) + " " + a.TheVisible() + ". "), JSIL.Array.New($T10(), 0));
        }
      }
      if (!(!this.HasFeat($T41().DRIVE_BACK) || 
          a.HasAttr($T04().FROZEN) || this.HasAttr($T04().FROZEN))) {
        a.AI_Step(this, true);
        this.AI_Step(a);
      }
      if (a.Actor$type$value === $T02().SWORDSMAN) {
        if ($T09().prototype.get_Item.call(a.attrs, $T04().BONUS_COMBAT) > 0) {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(a.PhysicalObject$the_name$value, " returns to a defensive stance. "), JSIL.Array.New($T10(), [a]));
          $T09().prototype.set_Item.call(a.attrs, $T04().BONUS_COMBAT, 0);
        }
        var expr_14C4 = (dict10 = a.attrs);
        num2 = $T09().prototype.get_Item.call(dict10, $T04().COOLDOWN_1);
        $T09().prototype.set_Item.call(expr_14C4, $T04().COOLDOWN_1, ((num2 + 1) | 0));
        $thisType.Actor$Q$value.Add($S0F().Construct(a, 100, $T04().COOLDOWN_1));
      }
    }
    this.MakeNoise();
    $thisType.Actor$Q$value.Add($S29().Construct(this, attackInfo.cost));
    return flag2;
  };

  function Actor_AVisible () {
    if ($thisType.Actor$player$value.CanSee(this)) {
      return this.PhysicalObject$a_name$value;
    }
    return "something";
  };

  function Actor_CalculateDimming () {
    var $temp00, $temp01, $temp02;
    if (!(!$T10().PhysicalObject$M$value.get_wiz_lite() && !$T10().PhysicalObject$M$value.Map$wiz_dark$value)) {
      return;
    }
    var list = $S16().Construct();

    for (var a$0 = $T10().PhysicalObject$M$value.AllActors()._items, i$0 = 0, l$0 = $T10().PhysicalObject$M$value.AllActors()._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      if (current.PhysicalObject$light_radius$value > 0) {
        list.Add(current);
      }
    }

    for (var a$1 = list._items, i$1 = 0, l$1 = list._size; i$1 < l$1; ($temp01 = i$1, 
        i$1 = ((i$1 + 1) | 0), 
        $temp01)) {
      var current2 = a$1[i$1];
      var num = 100;
      var actor = null;

      for (var a$2 = current2.ActorsWithinDistance(10, true)._items, i$2 = 0, l$2 = current2.ActorsWithinDistance(10, true)._size; i$2 < l$2; ($temp02 = i$2, 
          i$2 = ((i$2 + 1) | 0), 
          $temp02)) {
        var current3 = a$2[i$2];
        if (!((current3.Actor$type$value !== $T02().SHADOW) || ($S0C().CallVirtual("DistanceFrom", null, current3, current2) >= num))) {
          num = $S0C().CallVirtual("DistanceFrom", null, current3, current2);
          actor = current3;
        }
      }
      if (actor === null) {
        if (current2.HasAttr($T04().DIM_LIGHT)) {
          $T09().prototype.set_Item.call(current2.attrs, $T04().DIM_LIGHT, 0);
          if (current2.PhysicalObject$light_radius$value > 0) {
            $thisType.Actor$B$value.Add(JSIL.ConcatString(current2.Your(), " light grows brighter. "), JSIL.Array.New($T10(), [current2]));
            if (current2.HasAttr($T04().ENHANCED_TORCH)) {
              current2.UpdateRadius(current2.LightRadius(), 12, true);
            } else {
              current2.UpdateRadius(current2.LightRadius(), 6, true);
            }
          }
        }
      } else {
        var actor2 = actor;
        var num2 = 0;
        if ($S0C().CallVirtual("DistanceFrom", null, actor2, current2) <= 2) {
          num2 = 5;
        } else if ($S0C().CallVirtual("DistanceFrom", null, actor2, current2) <= 3) {
          num2 = 4;
        } else if ($S0C().CallVirtual("DistanceFrom", null, actor2, current2) <= 5) {
          num2 = 3;
        } else if ($S0C().CallVirtual("DistanceFrom", null, actor2, current2) <= 7) {
          num2 = 2;
        } else if ($S0C().CallVirtual("DistanceFrom", null, actor2, current2) <= 10) {
          num2 = 1;
        }
        if (num2 > $T09().prototype.get_Item.call(current2.attrs, $T04().DIM_LIGHT)) {
          var num3 = ((num2 - $T09().prototype.get_Item.call(current2.attrs, $T04().DIM_LIGHT)) | 0);
          $T09().prototype.set_Item.call(current2.attrs, $T04().DIM_LIGHT, num2);
          if (!((current2.PhysicalObject$light_radius$value <= 0) || ($T09().prototype.get_Item.call(current2.attrs, $T04().ON_FIRE) >= current2.PhysicalObject$light_radius$value))) {
            $thisType.Actor$B$value.Add(JSIL.ConcatString(current2.Your(), " light grows dimmer. "), JSIL.Array.New($T10(), [current2]));
            current2.UpdateRadius(current2.PhysicalObject$light_radius$value, ((current2.PhysicalObject$light_radius$value - num3) | 0), true);
            if ($T09().prototype.get_Item.call(current2.attrs, $T04().ON_FIRE) > current2.PhysicalObject$light_radius$value) {
              current2.UpdateRadius(current2.PhysicalObject$light_radius$value, $T09().prototype.get_Item.call(current2.attrs, $T04().ON_FIRE));
            }
          }
        } else if (num2 < $T09().prototype.get_Item.call(current2.attrs, $T04().DIM_LIGHT)) {
          var num4 = ((num2 - $T09().prototype.get_Item.call(current2.attrs, $T04().DIM_LIGHT)) | 0);
          $T09().prototype.set_Item.call(current2.attrs, $T04().DIM_LIGHT, num2);
          if (!((current2.PhysicalObject$light_radius$value <= 0) || ($T09().prototype.get_Item.call(current2.attrs, $T04().ON_FIRE) >= ((current2.PhysicalObject$light_radius$value - num4) | 0)))) {
            $thisType.Actor$B$value.Add(JSIL.ConcatString(current2.Your(), " light grows brighter. "), JSIL.Array.New($T10(), [current2]));
            current2.UpdateRadius(current2.LightRadius(), ((current2.PhysicalObject$light_radius$value - num4) | 0), true);
          }
        }
      }
    }
  };

  function Actor_CanSee$15 (r, c) {
    return this.CanSee($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, r, c));
  };

  function Actor_CanSee$16 (o) {
    var $temp00;
    if (o === this) {
      return true;
    }
    if (this.HasAttr($T04().ASLEEP)) {
      return false;
    }
    var actor = $thisType.$As(o);
    if (actor !== null) {
      if (!(!this.HasAttr($T04().BLOODSCENT) || 
          actor.HasAttr($T04().UNDEAD) || actor.HasAttr($T04().CONSTRUCT))) {
        var num = 99;

        for (var a$0 = this.ActorsWithinDistance(12, true)._items, i$0 = 0, l$0 = this.ActorsWithinDistance(12, true)._size; i$0 < l$0; ($temp00 = i$0, 
            i$0 = ((i$0 + 1) | 0), 
            $temp00)) {
          var current = a$0[i$0];
          if (!(current.HasAttr($T04().UNDEAD) || 
              current.HasAttr($T04().CONSTRUCT) || ($S0C().CallVirtual("DistanceFrom", null, this, current) >= num))) {
            num = $S0C().CallVirtual("DistanceFrom", null, this, current);
          }
        }
        if (num === $S0C().CallVirtual("DistanceFrom", null, this, actor)) {
          return true;
        }
      }
      if (this.HasAttr($T04().DETECTING_MONSTERS)) {
        return true;
      }
      if (!(!actor.HasAttr($T04().SHADOW_CLOAK) || 
          actor.tile().IsLit() || 
          this.HasAttr($T04().BLINDSIGHT) || ((actor === $thisType.Actor$player$value) && 
            this.HasAttr($T04().PLAYER_NOTICED)))) {
        return false;
      }
    }
    var tile = $T17().$As(o);
    return (((tile === null) || 
        !tile.Tile$solid_rock$value) && 
      !((!this.IsWithinSightRangeOf(
            o.get_row(), 
            o.get_col()
          ) && 
          !$T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, 
            o.get_row(), 
            o.get_col()
          ).IsLit()) || 
        !this.HasLOS(
          o.get_row(), 
          o.get_col()
        )) && (($thisType.$As(o) === null) || 
        !$thisType.$As(o).IsHiddenFrom(this)));
  };

  function Actor_CanWander () {
    var type = this.Actor$type$value;
    switch (type.valueOf()) {
      default: 
      case 1: 
      case 3: 
      case 5: 
      case 8: 
      case 9: 
        switch (type.valueOf()) {
          default: 
          case 33: 
          case 35: 
          case 36: 
            switch (type.valueOf()) {
              default: 
              case 25: 
                if (!((type === $T02().MIMIC) || 
                    (type === $T02().STONE_GOLEM) || (type === $T02().LASHER_FUNGUS))) {
                  return true;
                }
                break;

            }
            break;

        }
        break;

    }
    return false;
  };

  function Actor_CastRandomSpell (obj, spells) {
    return ((spells.length !== 0) && $S21().CallVirtual("CastSpell", null, this, spells[(($T24().Roll(1, spells.length) - 1) | 0)], obj));
  };

  function Actor_CastSpell$17 (spell) {
    return this.CastSpell(spell, null, false);
  };

  function Actor_CastSpell$18 (spell, force_of_will) {
    return this.CastSpell(spell, null, force_of_will);
  };

  function Actor_CastSpell$19 (spell, obj) {
    return this.CastSpell(spell, obj, false);
  };

  function Actor_CastSpell$1A (spell, obj, force_of_will) {
    var $temp00, $temp01, $temp02, $temp03, $temp04, $temp05, $temp06, $temp07, $temp08, $temp09, $temp0A, $temp0B, $temp0C, $temp0D, $temp0E, $temp0F, $temp10, $temp11, $temp12, $temp13, $temp14, $temp15, $temp16, $temp17, $temp18;
    var $s00 = new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), [$asm01.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm00.TypeRef("Forays.Tile")])]);
    var dict = null, dict2 = null, dict3 = null, ch = new ($T3E())(), dict7 = null, item = new ($T1B())(), dict8 = null, dict9 = null, dict10 = null;
    if (!(!this.StunnedThisTurn() || force_of_will)) {
      return true;
    }
    if (!this.HasSpell(spell)) {
      return false;
    }

    for (var a$0 = this.ActorsWithinDistance(2)._items, i$0 = 0, l$0 = this.ActorsWithinDistance(2)._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      if (!(!current.HasAttr($T04().SPELL_DISRUPTION) || !current.HasLOE(this))) {
        if (this === $thisType.Actor$player$value) {
          if (this.CanSee(current)) {
            $thisType.Actor$B$value.Add(JSIL.ConcatString(current.Your(), " presence disrupts your spell! "), JSIL.Array.New($T10(), 0));
          } else {
            $thisType.Actor$B$value.Add("Something disrupts your spell! ", JSIL.Array.New($T10(), 0));
          }
        }
        return false;
      }
    }
    var tile = null;
    var list = null;
    if (obj !== null) {
      tile = $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, 
        obj.get_row(), 
        obj.get_col()
      );
      if (spell === $T05().FORCE_BEAM) {
        list = this.GetBestExtendedLine(tile);
      } else {
        list = this.GetBestLine(tile);
      }
    }
    var num = 0;
    if (this.FailRate(spell) > 0) {
      var num2 = this.FailRate(spell);
      if (force_of_will) {
        num2 = ((this.magic_penalty * 5) | 0);
        num2 = ((num2 - (($T06().prototype.get_Item.call(this.skills, $T07().SPIRIT) * 2) | 0)) | 0);
        if (num2 < 0) {
          num2 = 0;
        }
      }
      if ((($T24().Roll(1, 100) - num2) | 0) <= 0) {
        if ($thisType.Actor$player$value.CanSee(this)) {
          $thisType.Actor$B$value.Add(("Sparks fly from " + this.Your() + " fingers. "), JSIL.Array.New($T10(), [this]));
        } else if (!(($S0C().CallVirtual("DistanceFrom", null, $thisType.Actor$player$value, this) > 4) && (($S0C().CallVirtual("DistanceFrom", null, $thisType.Actor$player$value, this) > 12) || 
              !$thisType.Actor$player$value.HasLOS(
                this.get_row(), 
                this.get_col()
              )))) {
          $thisType.Actor$B$value.Add("You hear words of magic, but nothing happens. ", JSIL.Array.New($T10(), 0));
        }
        this.Q1();
        return true;
      }
    }
    if (this.HasFeat($T41().MASTERS_EDGE)) {

    $loop1: 
      for (var a$1 = $thisType.spells_in_order._items, i$1 = 0, l$1 = $thisType.spells_in_order._size; i$1 < l$1; ($temp01 = i$1, 
          i$1 = ((i$1 + 1) | 0), 
          $temp01)) {
        var current2 = a$1[i$1];
        if ($T42().IsDamaging(current2)) {
          if (current2 === spell) {
            num = 1;
          }
          break $loop1;
        }
      }
    }
    switch (spell.valueOf()) {
      case 0: 
        if (this.HasAttr($T04().ENHANCED_TORCH)) {
          $thisType.Actor$B$value.Add("Your torch is already shining brightly! ", JSIL.Array.New($T10(), 0));
          return false;
        }
        $thisType.Actor$B$value.Add("You cast shine. ", JSIL.Array.New($T10(), 0));
        if (!$T10().PhysicalObject$M$value.Map$wiz_dark$value) {
          $thisType.Actor$B$value.Add("Your torch begins to shine brightly. ", JSIL.Array.New($T10(), 0));
        }
        var num3 = $T09().prototype.get_Item.call(dict, $T04().ENHANCED_TORCH);
        $T09().prototype.set_Item.call((dict = this.attrs), $T04().ENHANCED_TORCH, ((num3 + 1) | 0));
        if (this.PhysicalObject$light_radius$value > 0) {
          this.UpdateRadius(
            this.LightRadius(), 
            ((12 - (($T09().prototype.get_Item.call(this.attrs, $T04().DIM_LIGHT) * 2) | 0)) | 0), 
            true
          );
        }
        $thisType.Actor$Q$value.Add($S2A().Construct(9500, "Your torch begins to flicker a bit. "));
        $thisType.Actor$Q$value.Add($S26().Construct(this, 10000, $T04().ENHANCED_TORCH, "Your torch no longer shines as brightly. "));
        break;

      case 1: 
        if (tile === null) {
          list = $S2B().CallVirtual("GetTarget", null, this, 12);
          if (list !== null) {
            tile = $T27().Last$b1($T17())(list);
          }
        }
        if (tile === null) {
          return false;
        }
        $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("cast"), " immolate. "), JSIL.Array.New($T10(), [this]));
        var actor = $S2C().CallVirtual("FirstActorInLine", null, this, list);
        if (actor !== null) {
          $S2D().CallVirtual("AnimateBeam", null, this, $T27().ToFirstObstruction(list), "*", $T03().RandomFire);
          if (!(actor.HasAttr($T04().RESIST_FIRE) || 
              actor.HasAttr($T04().CATCHING_FIRE) || actor.HasAttr($T04().ON_FIRE))) {
            if (actor.PhysicalObject$$name$value == "you") {
              $thisType.Actor$B$value.Add("You start to catch fire! ", JSIL.Array.New($T10(), 0));
            } else {
              $thisType.Actor$B$value.Add(JSIL.ConcatString(actor.PhysicalObject$the_name$value, " starts to catch fire. "), JSIL.Array.New($T10(), [actor]));
            }
            var expr_4AB = (dict2 = actor.attrs);
            num3 = $T09().prototype.get_Item.call(dict2, $T04().CATCHING_FIRE);
            $T09().prototype.set_Item.call(expr_4AB, $T04().CATCHING_FIRE, ((num3 + 1) | 0));
          } else {
            $thisType.Actor$B$value.Add(JSIL.ConcatString(actor.You("shrug"), " off the flames. "), JSIL.Array.New($T10(), [actor]));
          }
        } else {

          for (var a$2 = list._items, i$2 = 0, l$2 = list._size; i$2 < l$2; ($temp02 = i$2, 
              i$2 = ((i$2 + 1) | 0), 
              $temp02)) {
            var current3 = a$2[i$2];
            if (!(!$S0A().CallVirtual("Is", null, current3, $T19().TROLL_CORPSE) && !$S0A().CallVirtual("Is", null, current3, $T19().TROLL_SEER_CORPSE))) {
              list = $T27().To(list, current3);
            }
          }
          $S2D().CallVirtual("AnimateBeam", null, this, list, "*", $T03().RandomFire);
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("throw"), " flames. "), JSIL.Array.New($T10(), [this]));
          if ($S0A().CallVirtual("Is", null, $T27().Last$b1($T17())(list), $T19().TROLL_CORPSE)) {
            $T27().Last$b1($T17())(list).features.Remove($T19().TROLL_CORPSE);
            $thisType.Actor$B$value.Add("The troll corpse burns to ashes! ", JSIL.Array.New($T10(), [$T27().Last$b1($T17())(list)]));
          }
          if ($S0A().CallVirtual("Is", null, $T27().Last$b1($T17())(list), $T19().TROLL_SEER_CORPSE)) {
            $T27().Last$b1($T17())(list).features.Remove($T19().TROLL_SEER_CORPSE);
            $thisType.Actor$B$value.Add("The troll seer corpse burns to ashes! ", JSIL.Array.New($T10(), [$T27().Last$b1($T17())(list)]));
          }
        }
        break;

      case 2: 
        if (tile === null) {
          tile = this.TileInDirection(this.GetDirection());
        }
        if (tile === null) {
          return false;
        }
        var actor2 = $T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, 
          tile.get_row(), 
          tile.get_col()
        );
        $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("cast"), " force palm. "), JSIL.Array.New($T10(), [this]));
        $thisType.Actor$B$value.DisplayNow();
        $T1F().AnimateMapCell(
          tile.get_row(), 
          tile.get_col(), 
          $S25().Construct("*", $T03().Blue), 
          100
        );
        if (actor2 !== null) {
          $thisType.Actor$B$value.Add((this.You("strike") + " " + actor2.TheVisible() + ". "), JSIL.Array.New($T10(), [this, actor2]));
          var the_name = actor2.PhysicalObject$the_name$value;
          var a_name = actor2.PhysicalObject$a_name$value;
          var bestExtendedLine = this.GetBestExtendedLine(
            actor2.get_row(), 
            actor2.get_col()
          );
          var num4 = bestExtendedLine.IndexOf($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, 
              actor2.get_row(), 
              actor2.get_col()
            ));
          var tile2 = bestExtendedLine.get_Item(((num4 + 1) | 0));
          actor2.TakeDamage(
            $T31().MAGIC, 
            $T32().MAGICAL, 
            $T24().Roll(((1 + num) | 0), 6), 
            this, 
            this.PhysicalObject$a_name$value
          );
          if ($T24().Roll(1, 10) <= 7) {
            if ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, 
                tile.get_row(), 
                tile.get_col()
              ) !== null) {
              $S27().CallVirtual("GetKnockedBack", null, actor2, this);
            } else if (!tile2.Tile$passable$value) {
              $thisType.Actor$B$value.Add((the_name + "'s corpse is knocked into " + tile2.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [tile, tile2]));
            } else if ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, 
                tile2.get_row(), 
                tile2.get_col()
              ) !== null) {
              $thisType.Actor$B$value.Add(
                (the_name + "'s corpse is knocked into " + $T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, 
                  tile2.get_row(), 
                  tile2.get_col()
                ).PhysicalObject$the_name$value + ". "), 
                JSIL.Array.New($T10(), [tile, $T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, 
                    tile2.get_row(), 
                    tile2.get_col()
                  )])
              );
              $T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, 
                tile2.get_row(), 
                tile2.get_col()
              ).TakeDamage(
                $T31().NORMAL, 
                $T32().PHYSICAL, 
                $T24().Roll(1, 6), 
                this, 
                JSIL.ConcatString(a_name, "'s falling corpse")
              );
            }
          }
        } else if (tile.Tile$passable$value) {
          $thisType.Actor$B$value.Add("You strike at empty space. ", JSIL.Array.New($T10(), 0));
        } else {
          $thisType.Actor$B$value.Add(("You strike " + tile.PhysicalObject$the_name$value + " with your palm. "), JSIL.Array.New($T10(), 0));
          if (tile.Tile$type$value === $T1A().DOOR_C) {
            $thisType.Actor$B$value.Add("It flies open! ", JSIL.Array.New($T10(), 0));
            tile.Toggle(this);
          }
          if (tile.Tile$type$value === $T1A().HIDDEN_DOOR) {
            $thisType.Actor$B$value.Add("A hidden door flies open! ", JSIL.Array.New($T10(), 0));
            tile.Toggle(this);
            tile.Toggle(this);
          }
        }
        break;

      case 3: 
        if (tile === null) {
          list = $S2B().CallVirtual("GetTarget", null, this, 12);
          if (list !== null) {
            tile = $T27().Last$b1($T17())(list);
          }
        }
        if (tile === null) {
          return false;
        }
        $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("cast"), " freeze. "), JSIL.Array.New($T10(), [this]));
        var actor3 = $S2C().CallVirtual("FirstActorInLine", null, this, list);
        if (actor3 !== null) {
          $S22().CallVirtual("AnimateBoltBeam", null, this, $T27().ToFirstObstruction(list), $T03().Cyan);
          if (!(actor3.HasAttr($T04().FROZEN) || actor3.HasAttr($T04().UNFROZEN))) {
            $thisType.Actor$B$value.Add(JSIL.ConcatString(actor3.YouAre(), " encased in ice. "), JSIL.Array.New($T10(), [actor3]));
            $T09().prototype.set_Item.call(actor3.attrs, $T04().FROZEN, 25);
          } else {
            $thisType.Actor$B$value.Add("The beam dissipates on the remaining ice. ", JSIL.Array.New($T10(), [actor3]));
          }
        } else {
          $S22().CallVirtual("AnimateBoltBeam", null, this, list, $T03().Cyan);
          $thisType.Actor$B$value.Add(("A bit of ice forms on " + tile.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [tile]));
        }
        break;

      case 4: 

      $loop3: 
        for (var i = 0; i < 9999; i = ((i + 1) | 0)) {
          var num5 = (($T24().Roll(1, 17) - 9) | 0);
          var num6 = (($T24().Roll(1, 17) - 9) | 0);
          if ((((Math.abs(num5)) + (Math.abs(num6))) | 0) >= 6) {
            num5 = ((num5 + this.get_row()) | 0);
            num6 = ((num6 + this.get_col()) | 0);
            if (!(!$T10().PhysicalObject$M$value.BoundsCheck(num5, num6) || 
                !$T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num5, num6).Tile$passable$value || ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, num5, num6) !== null))) {
              $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("cast"), " blink. "), JSIL.Array.New($T10(), [this]));
              $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("step"), " through a rip in reality. "), JSIL.Array.New($T10(), [this]));
              this.AnimateStorm(
                2, 
                3, 
                4, 
                "*", 
                $T03().DarkMagenta
              );
              this.Move(num5, num6);
              $T10().PhysicalObject$M$value.Draw();
              this.AnimateStorm(
                2, 
                3, 
                4, 
                "*", 
                $T03().DarkMagenta
              );
              break $loop3;
            }
          }
        }
        break;

      case 5: 
        if (tile === null) {
          list = $S2B().CallVirtual("GetTarget", null, this, 12);
          if (list !== null) {
            tile = $T27().Last$b1($T17())(list);
          }
        }
        if (tile === null) {
          return false;
        }
        $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("cast"), " scorch. "), JSIL.Array.New($T10(), [this]));
        var actor4 = $S2C().CallVirtual("FirstActorInLine", null, this, list);
        if (actor4 !== null) {
          $S2E().CallVirtual("AnimateProjectile", null, this, $T27().ToFirstObstruction(list), "*", $T03().RandomFire);
          $thisType.Actor$B$value.Add(("The scorching bolt hits " + actor4.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [actor4]));
          actor4.TakeDamage(
            $T31().FIRE, 
            $T32().MAGICAL, 
            $T24().Roll(((2 + num) | 0), 6), 
            this, 
            this.PhysicalObject$a_name$value
          );
        } else {

          for (var a$3 = list._items, i$3 = 0, l$3 = list._size; i$3 < l$3; ($temp03 = i$3, 
              i$3 = ((i$3 + 1) | 0), 
              $temp03)) {
            var current4 = a$3[i$3];
            if (!(!$S0A().CallVirtual("Is", null, current4, $T19().TROLL_CORPSE) && !$S0A().CallVirtual("Is", null, current4, $T19().TROLL_SEER_CORPSE))) {
              list = $T27().To(list, current4);
            }
          }
          $S2E().CallVirtual("AnimateProjectile", null, this, list, "*", $T03().RandomFire);
          $thisType.Actor$B$value.Add(("The scorching bolt hits " + tile.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [tile]));
          if ($S0A().CallVirtual("Is", null, $T27().Last$b1($T17())(list), $T19().TROLL_CORPSE)) {
            $T27().Last$b1($T17())(list).features.Remove($T19().TROLL_CORPSE);
            $thisType.Actor$B$value.Add("The troll corpse burns to ashes! ", JSIL.Array.New($T10(), [$T27().Last$b1($T17())(list)]));
          }
          if ($S0A().CallVirtual("Is", null, $T27().Last$b1($T17())(list), $T19().TROLL_SEER_CORPSE)) {
            $T27().Last$b1($T17())(list).features.Remove($T19().TROLL_SEER_CORPSE);
            $thisType.Actor$B$value.Add("The troll seer corpse burns to ashes! ", JSIL.Array.New($T10(), [$T27().Last$b1($T17())(list)]));
          }
        }
        break;

      case 6: 
        if (this.HasAttr($T04().BLOODSCENT)) {
          $thisType.Actor$B$value.Add("You can already smell the blood of your enemies. ", JSIL.Array.New($T10(), 0));
          return false;
        }
        $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("cast"), " bloodscent. "), JSIL.Array.New($T10(), [this]));
        var expr_DB9 = (dict3 = this.attrs);
        num3 = $T09().prototype.get_Item.call(dict3, $T04().BLOODSCENT);
        $T09().prototype.set_Item.call(expr_DB9, $T04().BLOODSCENT, ((num3 + 1) | 0));
        if (this.Actor$type$value.valueOf() === 0) {
          $thisType.Actor$B$value.Add("You smell fear. ", JSIL.Array.New($T10(), 0));
          $thisType.Actor$Q$value.Add($S26().Construct(this, 10000, $T04().BLOODSCENT, "You lose the scent. "));
        } else {
          $thisType.Actor$Q$value.Add($S0F().Construct(this, 10000, $T04().BLOODSCENT));
        }
        break;

      case 7: 
        if (tile === null) {
          list = $S2B().CallVirtual("GetTarget", null, this, 12);
          if (list !== null) {
            tile = $T27().Last$b1($T17())(list);
          }
        }
        if (tile === null) {
          return false;
        }
        $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("cast"), " lightning bolt. "), JSIL.Array.New($T10(), [this]));
        var physicalObject = null;
        var list2 = $S16().Construct();

      $loop5: 
        for (var a$4 = list._items, i$4 = 0, l$4 = list._size; i$4 < l$4; ($temp04 = i$4, 
            i$4 = ((i$4 + 1) | 0), 
            $temp04)) {
          var current5 = a$4[i$4];
          if (!((current5.actor() === null) || (current5.actor() === this))) {
            physicalObject = current5.actor();
            list2.Add(current5.actor());
            break $loop5;
          }
          if (current5.ConductsElectricity()) {
            physicalObject = current5;
            break $loop5;
          }
        }
        if (physicalObject !== null) {
          var dict4 = $S2F().Construct();
          $T43().prototype.set_Item.call(dict4, this, ($S11().Construct()).__Initialize__([[physicalObject]]));
          var list3 = ($S11().Construct()).__Initialize__([[physicalObject]]);

          for (var flag = false; !flag; ) {
            flag = true;
            var list4 = $S11().Construct();

            for (var a$5 = list3._items, i$5 = 0, l$5 = list3._size; i$5 < l$5; ($temp05 = i$5, 
                i$5 = ((i$5 + 1) | 0), 
                $temp05)) {
              var current6 = a$5[i$5];
              var list5 = $S11().Construct();

              for (var a$6 = current6.TilesWithinDistance(3, true)._items, i$6 = 0, l$6 = current6.TilesWithinDistance(3, true)._size; i$6 < l$6; ($temp06 = i$6, 
                  i$6 = ((i$6 + 1) | 0), 
                  $temp06)) {
                var current7 = a$6[i$6];
                if (!(((current7.actor() === null) && 
                      !current7.ConductsElectricity()) || !current6.HasLOE(current7))) {
                  if (current7.actor() !== null) {
                    physicalObject = current7.actor();
                  } else {
                    physicalObject = current7;
                  }
                  var flag2 = false;
                  var enumerator8 = dict4.d.get_Values().GetEnumerator();

                $loop9: 
                  while (enumerator8.MoveNext()) {
                    var current8 = enumerator8.get_Current();

                  $loop10: 
                    for (var a$7 = current8._items, i$7 = 0, l$7 = current8._size; i$7 < l$7; ($temp07 = i$7, 
                        i$7 = ((i$7 + 1) | 0), 
                        $temp07)) {
                      var current9 = a$7[i$7];
                      if (current9 === physicalObject) {
                        flag2 = true;
                        break $loop10;
                      }
                    }
                    if (flag2) {
                      break $loop9;
                    }
                  }
                  if (!(dict4.d.ContainsKey(physicalObject) || flag2)) {
                    if ($thisType.$As(physicalObject) !== null) {
                      $T27().AddUnique$b1($thisType)(list2, $thisType.$As(physicalObject));
                    }
                    flag = false;
                    if (list5.get_Count() === 0) {
                      list5.Add(physicalObject);
                    } else {
                      var num7 = 0;

                    $loop11: 
                      for (var a$8 = list5._items, i$8 = 0, l$8 = list5._size; i$8 < l$8; ($temp08 = i$8, 
                          i$8 = ((i$8 + 1) | 0), 
                          $temp08)) {
                        var current10 = a$8[i$8];
                        if ($S0C().CallVirtual("DistanceFrom", null, physicalObject, current6) < $S0C().CallVirtual("DistanceFrom", null, current10, current6)) {
                          list5.Insert(num7, physicalObject);
                          break $loop11;
                        }
                        num7 = ((num7 + 1) | 0);
                      }
                      if (num7 === list5.get_Count()) {
                        list5.Add(physicalObject);
                      }
                    }
                    if ($T43().prototype.get_Item.call(dict4, current6) === null) {
                      $T43().prototype.set_Item.call(dict4, current6, ($S11().Construct()).__Initialize__([[physicalObject]]));
                    } else {
                      $T43().prototype.get_Item.call(dict4, current6).Add(physicalObject);
                    }
                  }
                }
              }

              for (var a$9 = list5._items, i$9 = 0, l$9 = list5._size; i$9 < l$9; ($temp09 = i$9, 
                  i$9 = ((i$9 + 1) | 0), 
                  $temp09)) {
                var current11 = a$9[i$9];
                list4.Add(current11);
              }
            }
            if (!flag) {
              list3 = list4;
            }
          }
          var dict5 = $S30().Construct();
          var dict6 = $S31().Construct();
          $T48().prototype.set_Item.call(dict6, this, 0);
          var list6 = ($S11().Construct()).__Initialize__([[this]]);
          var list7 = $S11().Construct();

          while (list6.get_Count() > 0) {

            for (var a$a = list6._items, i$a = 0, l$a = list6._size; i$a < l$a; ($temp0A = i$a, 
                i$a = ((i$a + 1) | 0), 
                $temp0A)) {
              var current12 = a$a[i$a];
              if ($T43().prototype.get_Item.call(dict4, current12) !== null) {

                for (var a$b = $T43().prototype.get_Item.call(dict4, current12)._items, i$b = 0, l$b = $T43().prototype.get_Item.call(dict4, current12)._size; i$b < l$b; ($temp0B = i$b, 
                    i$b = ((i$b + 1) | 0), 
                    $temp0B)) {
                  var current13 = a$b[i$b];
                  var bestLine = current12.GetBestLine(current13);
                  bestLine.RemoveAt(0);
                  $T48().prototype.set_Item.call(dict6, current13, ((bestLine.get_Count() + $T48().prototype.get_Item.call(dict6, current12)) | 0));
                  var num8 = 0;

                  for (var a$c = bestLine._items, i$c = 0, l$c = bestLine._size; i$c < l$c; ($temp0C = i$c, 
                      i$c = ((i$c + 1) | 0), 
                      $temp0C)) {
                    var current14 = a$c[i$c];
                    if ($T47().prototype.get_Item.call(dict5, ((num8 + $T48().prototype.get_Item.call(dict6, current12)) | 0)) !== null) {
                      $T47().prototype.get_Item.call(dict5, ((num8 + $T48().prototype.get_Item.call(dict6, current12)) | 0)).Add(new ($T1B())(current14.get_row(), current14.get_col()));
                    } else {
                      $T47().prototype.set_Item.call(dict5, 
                        ((num8 + $T48().prototype.get_Item.call(dict6, current12)) | 0), 
                        ($S05().Construct()).__Initialize__([[new ($T1B())(current14.get_row(), current14.get_col())]])
                      );
                    }
                    num8 = ((num8 + 1) | 0);
                  }
                  list7.Add(current13);
                }
              }
            }
            list6 = list7;
            list7 = $S11().Construct();
          }
          var list8 = $T47().prototype.get_Item.call(dict5, 0);
          var num9 = 0;

          while (list8 !== null) {

            for (var a$d = list8._items, i$d = 0, l$d = list8._size; i$d < l$d; ($temp0D = i$d, 
                i$d = ((i$d + 1) | 0), 
                $temp0D)) {
              var current15 = a$d[i$d].MemberwiseClone();
              $T1F().WriteMapChar(current15.row, current15.col, "*", $T03().RandomLightning);
            }
            $S32().CallStatic($T49(), "Sleep", null, 50);
            list8 = $T47().prototype.get_Item.call(dict5, num9);
            num9 = ((num9 + 1) | 0);
          }

          for (var a$e = list2._items, i$e = 0, l$e = list2._size; i$e < l$e; ($temp0E = i$e, 
              i$e = ((i$e + 1) | 0), 
              $temp0E)) {
            var current16 = a$e[i$e];
            $thisType.Actor$B$value.Add(("The bolt hits " + current16.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [current16]));
            current16.TakeDamage(
              $T31().ELECTRIC, 
              $T32().MAGICAL, 
              $T24().Roll(((2 + num) | 0), 6), 
              this, 
              this.PhysicalObject$a_name$value
            );
          }
        } else {
          $S2D().CallVirtual("AnimateBeam", null, this, list, "*", $T03().RandomLightning);
          $thisType.Actor$B$value.Add(("The bolt hits " + tile.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [tile]));
        }
        break;

      case 8: 
        if (this.HasAttr($T04().SHADOWSIGHT)) {
          $thisType.Actor$B$value.Add("Your eyes are already attuned to darkness. ", JSIL.Array.New($T10(), 0));
          return false;
        }
        $thisType.Actor$B$value.Add("You cast shadowsight. ", JSIL.Array.New($T10(), 0));
        $thisType.Actor$B$value.Add("Your eyes pierce the darkness. ", JSIL.Array.New($T10(), 0));
        var duration = 10001;
        this.GainAttr($T04().SHADOWSIGHT, duration, "You no longer see as well in darkness. ", JSIL.Array.New($T10(), 0));
        this.GainAttr($T04().LOW_LIGHT_VISION, duration);
        break;

      case 9: 
        var list9 = $S16().Construct();

        for (var a$f = this.ActorsWithinDistance(2, true)._items, i$f = 0, l$f = this.ActorsWithinDistance(2, true)._size; i$f < l$f; ($temp0F = i$f, 
            i$f = ((i$f + 1) | 0), 
            $temp0F)) {
          var current17 = a$f[i$f];
          if (this.HasLOE(current17)) {
            list9.Add(current17);
          }
        }
        $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("cast"), " voltaic surge. "), JSIL.Array.New($T10(), [this]));
        $S13().CallVirtual("AnimateExplosion", null, this, this, 2, $T03().RandomLightning, "*");
        if (list9.get_Count() === 0) {
          $thisType.Actor$B$value.Add(("The air around " + this.PhysicalObject$the_name$value + " crackles. "), JSIL.Array.New($T10(), [this]));
        } else {

          while (list9.get_Count() > 0) {
            var actor5 = $T27().Random$b1($thisType)(list9);
            list9.Remove(actor5);
            $thisType.Actor$B$value.Add(("Electricity blasts " + actor5.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [actor5]));
            actor5.TakeDamage(
              $T31().ELECTRIC, 
              $T32().MAGICAL, 
              $T24().Roll(((3 + num) | 0), 6), 
              this, 
              this.PhysicalObject$a_name$value
            );
          }
        }
        break;

      case 10: 
        if (tile === null) {
          tile = this.TileInDirection(this.GetDirection());
        }
        if (tile === null) {
          return false;
        }
        var actor6 = tile.actor();
        $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("cast"), " magic hammer. "), JSIL.Array.New($T10(), [this]));
        $thisType.Actor$B$value.DisplayNow();
        $T1F().AnimateMapCell(
          tile.get_row(), 
          tile.get_col(), 
          $S25().Construct("*", $T03().Magenta), 
          100
        );
        if (actor6 !== null) {
          $thisType.Actor$B$value.Add((this.You("smash", true) + " " + actor6.TheVisible() + ". "), JSIL.Array.New($T10(), [this, actor6]));
          if (actor6.TakeDamage(
              $T31().MAGIC, 
              $T32().MAGICAL, 
              $T24().Roll(((4 + num) | 0), 6), 
              this, 
              this.PhysicalObject$a_name$value
            )) {
            actor6.GainAttrRefreshDuration($T04().STUNNED, 201, JSIL.ConcatString(actor6.YouAre(), " no longer stunned. "), JSIL.Array.New($T10(), [actor6]));
            $thisType.Actor$B$value.Add(JSIL.ConcatString(actor6.YouAre(), " stunned. "), JSIL.Array.New($T10(), [actor6]));
          }
        } else {
          $thisType.Actor$B$value.Add(("You smash " + tile.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), 0));
        }
        break;

      case 11: 
        $thisType.Actor$B$value.Add("You cast retreat. ", JSIL.Array.New($T10(), 0));
        if (this.target_location === null) {
          this.target_location = $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, 
            this.get_row(), 
            this.get_col()
          );
          $thisType.Actor$B$value.Add(("You create a rune of transport on " + $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, 
              this.get_row(), 
              this.get_col()
            ).PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), 0));
          this.target_location.features.Add($T19().RUNE_OF_RETREAT);
        } else if (!(($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, 
                this.target_location.get_row(), 
                this.target_location.get_col()
              ) !== null) || !this.target_location.Tile$passable$value)) {
          $thisType.Actor$B$value.Add("You activate your rune of transport. ", JSIL.Array.New($T10(), 0));
          this.Move(
            this.target_location.get_row(), 
            this.target_location.get_col()
          );
          this.target_location.features.Remove($T19().RUNE_OF_RETREAT);
          this.target_location = null;
        } else {
          $thisType.Actor$B$value.Add("Something blocks your transport. ", JSIL.Array.New($T10(), 0));
        }
        break;

      case 12: 
        if (tile === null) {
          list = $S2B().CallVirtual("GetTarget", null, this, 12);
          if (list !== null) {
            tile = $T27().Last$b1($T17())(list);
          }
        }
        if (tile === null) {
          return false;
        }
        $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("cast"), " glacial blast. "), JSIL.Array.New($T10(), [this]));
        var actor7 = $S2C().CallVirtual("FirstActorInLine", null, this, list);
        if (actor7 !== null) {
          $S2E().CallVirtual("AnimateProjectile", null, this, $T27().ToFirstObstruction(list), "*", $T03().RandomIce);
          $thisType.Actor$B$value.Add(("The glacial blast hits " + actor7.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [actor7]));
          actor7.TakeDamage(
            $T31().COLD, 
            $T32().MAGICAL, 
            $T24().Roll(((3 + num) | 0), 6), 
            this, 
            this.PhysicalObject$a_name$value
          );
        } else {
          $S2E().CallVirtual("AnimateProjectile", null, this, list, "*", $T03().RandomIce);
          $thisType.Actor$B$value.Add(("The glacial blast hits " + tile.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [tile]));
        }
        break;

      case 13: 
        if (this.DirectionOfOnlyUnblocked($T1A().WALL, true) === 0) {
          $thisType.Actor$B$value.Add("There's no wall here. ", JSIL.Array.New($T10(), [this]));
          return false;
        }
        if (tile === null) {
          var dir = this.GetDirection(true, false);
          tile = this.TileInDirection(dir);
        } else {
          dir = $S1E().CallVirtual("DirectionOf", null, this, tile);
        }
        if (tile === null) {
          return false;
        }
        if (tile.Tile$type$value.valueOf() !== 0) {
          if (this === $thisType.Actor$player$value) {
            $thisType.Actor$B$value.Add("There's no wall here. ", JSIL.Array.New($T10(), [this]));
          }
          return false;
        }
        $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("cast"), " passage. "), JSIL.Array.New($T10(), [this]));
        $S33().Call($T3E().prototype, "_ctor", null, ch, $T03().Cyan, "!");
        if (this === $thisType.Actor$player$value) {
          $T4A().set_CursorVisible(false);
          switch ($S1E().CallVirtual("DirectionOf", null, this, tile)) {
            case 2: 
            case 8: 
              ch.c = "|";
              break;

            case 4: 
            case 6: 
              ch.c = "-";
              break;

          }
        }
        var list10 = $S12().Construct();
        var list11 = $S34().Construct();

      $loop22: 
        while (!tile.Tile$passable$value) {
          if (!((tile.get_row() !== 0) && 
              (tile.get_row() !== 21) && 
              (tile.get_col() !== 0) && (tile.get_col() !== 65))) {
            break $loop22;
          }
          if (this === $thisType.Actor$player$value) {
            list10.Add(tile);
            list11.Add($T1F().MapChar(
                tile.get_row(), 
                tile.get_col()
              ).MemberwiseClone());
            $S35().CallStatic($T1F(), "WriteMapChar", null, 
              tile.get_row(), 
              tile.get_col(), 
              ch.MemberwiseClone()
            );
            $S32().CallStatic($T49(), "Sleep", null, 35);
          }
          tile = tile.TileInDirection(dir);
        }
        if (!(!tile.Tile$passable$value || ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, 
                tile.get_row(), 
                tile.get_col()
              ) !== null))) {
          if (this === $thisType.Actor$player$value) {
            if ($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, 
                this.get_row(), 
                this.get_col()
              ).Tile$inv$value !== null) {
              $S35().CallStatic($T1F(), "WriteMapChar", null, 
                this.get_row(), 
                this.get_col(), 
                $S24().Construct(this.tile().Tile$inv$value.PhysicalObject$color$value, this.tile().Tile$inv$value.PhysicalObject$symbol$value)
              );
            } else {
              $S35().CallStatic($T1F(), "WriteMapChar", null, 
                this.get_row(), 
                this.get_col(), 
                $S24().Construct(this.tile().PhysicalObject$color$value, this.tile().PhysicalObject$symbol$value)
              );
            }
            $S35().CallStatic($T1F(), "WriteMapChar", null, 
              tile.get_row(), 
              tile.get_col(), 
              $S24().Construct(this.PhysicalObject$color$value, this.PhysicalObject$symbol$value)
            );
            var num10 = 0;

            for (var a$10 = list10._items, i$10 = 0, l$10 = list10._size; i$10 < l$10; ($temp10 = i$10, 
                i$10 = ((i$10 + 1) | 0), 
                $temp10)) {
              var current18 = a$10[i$10];
              $S35().CallStatic($T1F(), "WriteMapChar", null, 
                current18.get_row(), 
                current18.get_col(), 
                list11.get_Item(($temp11 = num10, 
                    num10 = ((num10 + 1) | 0), 
                    $temp11)).MemberwiseClone()
              );
              $S32().CallStatic($T49(), "Sleep", null, 35);
            }
          }
          this.Move(
            tile.get_row(), 
            tile.get_col()
          );
          $T10().PhysicalObject$M$value.Draw();
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("travel"), " through the passage. "), JSIL.Array.New($T10(), [this]));
        } else if (this === $thisType.Actor$player$value) {
          var num11 = 0;

          for (var a$11 = list10._items, i$11 = 0, l$11 = list10._size; i$11 < l$11; ($temp12 = i$11, 
              i$11 = ((i$11 + 1) | 0), 
              $temp12)) {
            var current19 = a$11[i$11];
            $S35().CallStatic($T1F(), "WriteMapChar", null, 
              current19.get_row(), 
              current19.get_col(), 
              list11.get_Item(($temp13 = num11, 
                  num11 = ((num11 + 1) | 0), 
                  $temp13)).MemberwiseClone()
            );
            $S32().CallStatic($T49(), "Sleep", null, 35);
          }
          $thisType.Actor$B$value.Add("The passage is blocked. ", JSIL.Array.New($T10(), 0));
        }
        break;

      case 14: 
        if (tile === null) {
          list = $S36().CallVirtual("GetTarget", null, this, 12, 2);
          if (list !== null) {
            tile = $T27().Last$b1($T17())(list);
          }
        }
        if (tile === null) {
          return false;
        }
        var actor8 = $S2C().CallVirtual("FirstActorInLine", null, this, list);
        if (actor8 !== null) {
          tile = actor8.tile();
        }
        $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("cast"), " flashfire. "), JSIL.Array.New($T10(), [this]));
        $S37().CallVirtual("AnimateBoltProjectile", null, this, $T27().ToFirstObstruction(list), $T03().Red);
        $S38().CallVirtual("AnimateExplosion", null, this, tile, 2, "*", $T03().RandomFire);
        $thisType.Actor$B$value.Add("Fwoosh! ", JSIL.Array.New($T10(), [this, tile]));
        var list12 = $S16().Construct();
        var tile3 = $T27().ToFirstObstruction(list).get_Item((($T27().ToFirstObstruction(list).get_Count() - 2) | 0));

        for (var a$12 = tile.ActorsWithinDistance(2)._items, i$12 = 0, l$12 = tile.ActorsWithinDistance(2)._size; i$12 < l$12; ($temp14 = i$12, 
            i$12 = ((i$12 + 1) | 0), 
            $temp14)) {
          var current20 = a$12[i$12];
          if (tile.Tile$passable$value) {
            if (tile.HasBresenhamLine(
                current20.get_row(), 
                current20.get_col()
              )) {
              list12.Add(current20);
            }
          } else if (tile3.HasBresenhamLine(
              current20.get_row(), 
              current20.get_col()
            )) {
            list12.Add(current20);
          }
        }

        for (var a$13 = tile.TilesWithinDistance(2)._items, i$13 = 0, l$13 = tile.TilesWithinDistance(2)._size; i$13 < l$13; ($temp15 = i$13, 
            i$13 = ((i$13 + 1) | 0), 
            $temp15)) {
          var current21 = a$13[i$13];
          if (tile.Tile$passable$value) {
            if (tile.HasBresenhamLine(
                current21.get_row(), 
                current21.get_col()
              )) {
              if (current21.actor() !== null) {
                list12.Add(current21.actor());
              }
              if ($S0A().CallVirtual("Is", null, current21, $T19().TROLL_CORPSE)) {
                current21.features.Remove($T19().TROLL_CORPSE);
                $thisType.Actor$B$value.Add("The troll corpse burns to ashes! ", JSIL.Array.New($T10(), [current21]));
              }
              if ($S0A().CallVirtual("Is", null, current21, $T19().TROLL_SEER_CORPSE)) {
                current21.features.Remove($T19().TROLL_SEER_CORPSE);
                $thisType.Actor$B$value.Add("The troll seer corpse burns to ashes! ", JSIL.Array.New($T10(), [current21]));
              }
            }
          } else if (tile3.HasBresenhamLine(
              current21.get_row(), 
              current21.get_col()
            )) {
            if (current21.actor() !== null) {
              list12.Add(current21.actor());
            }
            if ($S0A().CallVirtual("Is", null, current21, $T19().TROLL_CORPSE)) {
              current21.features.Remove($T19().TROLL_CORPSE);
              $thisType.Actor$B$value.Add("The troll corpse burns to ashes! ", JSIL.Array.New($T10(), [current21]));
            }
            if ($S0A().CallVirtual("Is", null, current21, $T19().TROLL_SEER_CORPSE)) {
              current21.features.Remove($T19().TROLL_SEER_CORPSE);
              $thisType.Actor$B$value.Add("The troll seer corpse burns to ashes! ", JSIL.Array.New($T10(), [current21]));
            }
          }
        }

        while (list12.get_Count() > 0) {
          var actor9 = $T27().RemoveRandom$b1($thisType)(list12);
          $thisType.Actor$B$value.Add(("The explosion hits " + actor9.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [actor9]));
          actor9.TakeDamage(
            $T31().FIRE, 
            $T32().MAGICAL, 
            $T24().Roll(((3 + num) | 0), 6), 
            this, 
            this.PhysicalObject$a_name$value
          );
        }
        break;

      case 15: 
        if (tile === null) {
          list = $S2B().CallVirtual("GetTarget", null, this, 12);
          if (list !== null) {
            tile = $T27().Last$b1($T17())(list);
          }
        }
        if (tile === null) {
          return false;
        }
        $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("cast"), " sonic boom. "), JSIL.Array.New($T10(), [this]));
        var actor10 = $S2C().CallVirtual("FirstActorInLine", null, this, list);
        if (actor10 !== null) {
          $S2E().CallVirtual("AnimateProjectile", null, this, $T27().ToFirstObstruction(list), "~", $T03().Yellow);
          $thisType.Actor$B$value.Add(("A wave of sound hits " + actor10.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [actor10]));
          var row = actor10.get_row();
          var col = actor10.get_col();
          actor10.TakeDamage(
            $T31().MAGIC, 
            $T32().MAGICAL, 
            $T24().Roll(((3 + num) | 0), 6), 
            this, 
            this.PhysicalObject$a_name$value
          );
          if (!(($T24().Roll(1, 10) > 5) || 
              ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, row, col) === null) || $T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, row, col).HasAttr($T04().STUNNED))) {
            $thisType.Actor$B$value.Add(JSIL.ConcatString(actor10.YouAre(), " stunned. "), JSIL.Array.New($T10(), [actor10]));
            var expr_22C4 = (dict7 = actor10.attrs);
            num3 = $T09().prototype.get_Item.call(dict7, $T04().STUNNED);
            $T09().prototype.set_Item.call(expr_22C4, $T04().STUNNED, ((num3 + 1) | 0));
            var delay_ = ((this.DurationOfMagicalEffect((($T24().Roll(1, 4) + 2) | 0)) * 100) | 0);
            $thisType.Actor$Q$value.Add($S1A().Construct(actor10, delay_, $T04().STUNNED, JSIL.ConcatString(actor10.YouAre(), " no longer stunned. "), JSIL.Array.New($T10(), [actor10])));
          }
        } else {
          $S2E().CallVirtual("AnimateProjectile", null, this, list, "~", $T03().Yellow);
          $thisType.Actor$B$value.Add("Sonic boom! ", JSIL.Array.New($T10(), 0));
        }
        break;

      case 16: 
        if (tile === null) {
          list = $S36().CallVirtual("GetTarget", null, this, 12, -1);
          if (list !== null) {
            tile = $T27().Last$b1($T17())(list);
          }
        }
        if (tile === null) {
          return false;
        }
        $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("cast"), " collapse. "), JSIL.Array.New($T10(), [this]));
        $thisType.Actor$B$value.DisplayNow();

        for (var j = 2; j > 0; j = ((j - 1) | 0)) {
          var list13 = $S05().Construct();
          var list14 = $S34().Construct();
          $T1B().prototype._ctor.call(item, 
            ((tile.get_row() - j) | 0), 
            ((tile.get_col() - j) | 0)
          );
          if (item.BoundsCheck()) {
            list13.Add(item.MemberwiseClone());
            list14.Add($S25().Construct("\\", $T03().DarkGreen));
          }
          $T1B().prototype._ctor.call(item, 
            ((tile.get_row() - j) | 0), 
            ((tile.get_col() + j) | 0)
          );
          if (item.BoundsCheck()) {
            list13.Add(item.MemberwiseClone());
            list14.Add($S25().Construct("/", $T03().DarkGreen));
          }
          $T1B().prototype._ctor.call(item, 
            ((tile.get_row() + j) | 0), 
            ((tile.get_col() - j) | 0)
          );
          if (item.BoundsCheck()) {
            list13.Add(item.MemberwiseClone());
            list14.Add($S25().Construct("/", $T03().DarkGreen));
          }
          $T1B().prototype._ctor.call(item, 
            ((tile.get_row() + j) | 0), 
            ((tile.get_col() + j) | 0)
          );
          if (item.BoundsCheck()) {
            list13.Add(item.MemberwiseClone());
            list14.Add($S25().Construct("\\", $T03().DarkGreen));
          }
          $S39().CallStatic($T1F(), "AnimateMapCells", null, list13, list14);
        }
        $T1F().AnimateMapCell(
          tile.get_row(), 
          tile.get_col(), 
          $S25().Construct("X", $T03().DarkGreen)
        );
        var actor11 = tile.actor();
        if (actor11 !== null) {
          $thisType.Actor$B$value.Add(("Part of the ceiling falls onto " + actor11.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [actor11]));
          actor11.TakeDamage(
            $T31().BASHING, 
            $T32().PHYSICAL, 
            $T24().Roll(((4 + num) | 0), 6), 
            this, 
            this.PhysicalObject$a_name$value
          );
        } else if (!((tile.get_row() !== 0) && 
            (tile.get_col() !== 0) && 
            (tile.get_row() !== 21) && (tile.get_col() !== 65))) {
          $thisType.Actor$B$value.Add("The wall resists. ", JSIL.Array.New($T10(), 0));
        } else if (!((tile.Tile$type$value.valueOf() !== 0) && (tile.Tile$type$value !== $T1A().HIDDEN_DOOR))) {
          $thisType.Actor$B$value.Add("The wall crashes down! ", JSIL.Array.New($T10(), 0));
          tile.TurnToFloor();

          for (var a$14 = tile.TilesAtDistance(1)._items, i$14 = 0, l$14 = tile.TilesAtDistance(1)._size; i$14 < l$14; ($temp16 = i$14, 
              i$14 = ((i$14 + 1) | 0), 
              $temp16)) {
            var current22 = a$14[i$14];
            if (current22.Tile$solid_rock$value) {
              current22.Tile$solid_rock$value = false;
            }
          }
        }
        var list15 = $S12().Construct();

        for (var a$15 = tile.TilesWithinDistance(1)._items, i$15 = 0, l$15 = tile.TilesWithinDistance(1)._size; i$15 < l$15; ($temp17 = i$15, 
            i$15 = ((i$15 + 1) | 0), 
            $temp17)) {
          var current23 = a$15[i$15];
          if (!(!current23.Tile$passable$value || ((actor11 !== null) && 
                (current23 === tile)))) {
            list15.Add(current23);
          }
        }
        var k = 4;
        if (list15.get_Count() < 4) {
          k = list15.get_Count();
        }

        for (; k > 0; k = ((k - 1) | 0)) {
          var tile4 = $T27().Random$b1($T17())(list15);
          list15.Remove(tile4);
          if (tile4.actor() !== null) {
            $thisType.Actor$B$value.Add(
              ("A rock falls onto " + tile4.actor().PhysicalObject$the_name$value + ". "), 
              JSIL.Array.New($T10(), [tile4.actor()])
            );
            tile4.actor().TakeDamage(
              $T31().BASHING, 
              $T32().PHYSICAL, 
              $T24().Roll(2, 6), 
              this, 
              this.PhysicalObject$a_name$value
            );
          } else {
            var type = tile4.Tile$type$value;
            tile4.TransformTo($T1A().RUBBLE);
            tile4.toggles_into = type;
          }
        }
        break;

      case 17: 
        if (tile === null) {
          list = this.GetTarget();
          if (list !== null) {
            tile = $T27().Last$b1($T17())(list);
          }
        }
        if (tile === null) {
          return false;
        }
        $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("cast"), " force beam. "), JSIL.Array.New($T10(), [this]));
        $thisType.Actor$B$value.DisplayNow();
        var list16 = $s00.Construct(list);
        list = $T2A().prototype.GetRange.call(list, 0, $T2D().Min(13, list.get_Count()));

        for (var l = 0; l < 3; l = ((l + 1) | 0)) {
          var actor12 = null;
          var actor13 = null;
          var tile5 = null;
          var tile6 = null;

        $loop33: 
          for (var a$16 = list._items, i$16 = 0, l$16 = list._size; i$16 < l$16; ($temp18 = i$16, 
              i$16 = ((i$16 + 1) | 0), 
              $temp18)) {
            var current24 = a$16[i$16];
            if (!current24.Tile$passable$value) {
              tile5 = current24;
              break $loop33;
            }
            if (!(($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, 
                    current24.get_row(), 
                    current24.get_col()
                  ) === null) || ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, 
                    current24.get_row(), 
                    current24.get_col()
                  ) === this))) {
              var num12 = list16.IndexOf(current24);
              tile5 = current24;
              actor12 = $T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, 
                current24.get_row(), 
                current24.get_col()
              );
              tile6 = list16.get_Item(((num12 + 1) | 0));
              actor13 = $T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, 
                tile6.get_row(), 
                tile6.get_col()
              );
              break $loop33;
            }
          }
          $S22().CallVirtual("AnimateBoltBeam", null, this, $T27().ToFirstObstruction(list), $T03().Cyan);
          if (actor12 !== null) {
            var str = actor12.TheVisible();
            var a_name2 = actor12.PhysicalObject$a_name$value;
            actor12.TakeDamage(
              $T31().MAGIC, 
              $T32().MAGICAL, 
              $T24().Roll(((1 + num) | 0), 6), 
              this, 
              this.PhysicalObject$a_name$value
            );
            if ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, 
                tile5.get_row(), 
                tile5.get_col()
              ) !== null) {
              $S3A().CallVirtual("GetKnockedBack", null, actor12, list16);
            } else if (!tile6.Tile$passable$value) {
              $thisType.Actor$B$value.Add((str + "'s corpse is knocked into " + tile6.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [tile5, tile6]));
            } else if (actor13 !== null) {
              $thisType.Actor$B$value.Add((str + "'s corpse is knocked into " + actor13.TheVisible() + ". "), JSIL.Array.New($T10(), [tile5, actor13]));
              actor13.TakeDamage(
                $T31().NORMAL, 
                $T32().PHYSICAL, 
                $T24().Roll(1, 6), 
                this, 
                JSIL.ConcatString(a_name2, "'s falling corpse")
              );
            }
          }
        }
        break;

      case 18: 
        if (tile === null) {
          tile = this.TileInDirection(this.GetDirection());
        }
        if (tile === null) {
          return false;
        }
        var actor14 = tile.actor();
        if (actor14 === null) {
          $thisType.Actor$B$value.Add("There's nothing to target there. ", JSIL.Array.New($T10(), 0));
          return false;
        }
        $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("cast"), " amnesia. "), JSIL.Array.New($T10(), [this]));
        actor14.AnimateStorm(
          2, 
          4, 
          4, 
          "*", 
          $T03().RandomPrismatic
        );
        $thisType.Actor$B$value.Add(("You fade from " + actor14.TheVisible() + "'s awareness. "), JSIL.Array.New($T10(), 0));
        actor14.player_visibility_duration = 0;
        actor14.Actor$target$value = null;
        actor14.target_location = null;
        var expr_2A8B = (dict8 = actor14.attrs);
        num3 = $T09().prototype.get_Item.call(dict8, $T04().AMNESIA_STUN);
        $T09().prototype.set_Item.call(expr_2A8B, $T04().AMNESIA_STUN, ((num3 + 1) | 0));
        break;

      case 19: 
        var list17 = this.ActorsWithinDistance(5, true);
        $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("cast"), " blizzard. "), JSIL.Array.New($T10(), [this]));
        this.AnimateStorm(
          5, 
          8, 
          24, 
          "*", 
          $T03().RandomIce
        );
        $thisType.Actor$B$value.Add(("A massive ice storm surrounds " + this.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [this]));

        while (list17.get_Count() > 0) {
          var index = (($T24().Roll(1, list17.get_Count()) - 1) | 0);
          var actor15 = list17.get_Item(index);
          list17.Remove(actor15);
          $thisType.Actor$B$value.Add(("The blizzard hits " + actor15.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [actor15]));
          var row2 = actor15.get_row();
          var col2 = actor15.get_col();
          actor15.TakeDamage(
            $T31().COLD, 
            $T32().MAGICAL, 
            $T24().Roll(((5 + num) | 0), 6), 
            this, 
            this.PhysicalObject$a_name$value
          );
          if (!(($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, row2, col2) === null) || ($T24().Roll(1, 10) > 8))) {
            $thisType.Actor$B$value.Add(JSIL.ConcatString(actor15.PhysicalObject$the_name$value, " is encased in ice. "), JSIL.Array.New($T10(), [actor15]));
            $T09().prototype.set_Item.call(actor15.attrs, $T04().FROZEN, 25);
          }
        }
        break;

      case 20: 
        if (this.HasAttr($T04().BLESSED)) {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.YouAre(), " already blessed! "), JSIL.Array.New($T10(), [this]));
          return false;
        }
        $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("cast"), " bless. "), JSIL.Array.New($T10(), [this]));
        $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("shine"), " briefly with inner light. "), JSIL.Array.New($T10(), [this]));
        var expr_2C8C = (dict9 = this.attrs);
        num3 = $T09().prototype.get_Item.call(dict9, $T04().BLESSED);
        $T09().prototype.set_Item.call(expr_2C8C, $T04().BLESSED, ((num3 + 1) | 0));
        $thisType.Actor$Q$value.Add($S0F().Construct(this, 400, $T04().BLESSED));
        break;

      case 21: 
        $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("cast"), " minor heal. "), JSIL.Array.New($T10(), [this]));
        $thisType.Actor$B$value.Add(("A bluish glow surrounds " + this.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [this]));
        this.TakeDamage($T31().HEAL, $T32().NO_TYPE, $T24().Roll(4, 6), null);
        break;

      case 22: 
        if (this.HasAttr($T04().HOLY_SHIELDED)) {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.Your(), " holy shield is already active. "), JSIL.Array.New($T10(), [this]));
          return false;
        }
        $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("cast"), " holy shield. "), JSIL.Array.New($T10(), [this]));
        $thisType.Actor$B$value.Add(("A fiery halo appears above " + this.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [this]));
        var expr_2DB9 = (dict10 = this.attrs);
        num3 = $T09().prototype.get_Item.call(dict10, $T04().HOLY_SHIELDED);
        $T09().prototype.set_Item.call(expr_2DB9, $T04().HOLY_SHIELDED, ((num3 + 1) | 0));
        var delay_2 = (((($T24().Roll(3, 2) + 1) | 0) * 100) | 0);
        $thisType.Actor$Q$value.Add($S1A().Construct(this, delay_2, $T04().HOLY_SHIELDED, JSIL.ConcatString(this.PhysicalObject$the_name$value, "'s halo fades. "), JSIL.Array.New($T10(), [this])));
        break;

    }
    if (!((this.Actor$type$value.valueOf() !== 0) || (spell === $T05().AMNESIA))) {
      this.MakeNoise();
    }
    if (!force_of_will) {
      if ((($T42().Level(spell) - this.TotalSkill($T07().MAGIC)) | 0) > 0) {
        if (this.HasFeat($T41().STUDENTS_LUCK)) {
          if ($T24().CoinFlip()) {
            this.magic_penalty = ((this.magic_penalty + 1) | 0);
            $thisType.Actor$B$value.Add(JSIL.ConcatString(this.YouFeel(), " drained. "), JSIL.Array.New($T10(), [this]));
          } else if (this.Actor$type$value.valueOf() === 0) {
            $thisType.Actor$B$value.Add("You feel lucky. ", JSIL.Array.New($T10(), 0));
          }
        } else {
          this.magic_penalty = ((this.magic_penalty + 1) | 0);
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.YouFeel(), " drained. "), JSIL.Array.New($T10(), [this]));
        }
      }
    } else {
      this.magic_penalty = ((this.magic_penalty + 5) | 0);
      if (this.magic_penalty > 20) {
        this.magic_penalty = 20;
      }
      $thisType.Actor$B$value.Add("You drain your magic reserves. ", JSIL.Array.New($T10(), 0));
    }
    this.Q1();
    return true;
  };

  function Actor_ConvertInput (k) {
    var key = k.get_Key();
    switch (key.valueOf()) {
      case 27: 
        return "\x1b";

      default: 
      case 28: 
      case 29: 
      case 30: 
      case 31: 
      case 32: 
      case 41: 
      case 42: 
      case 43: 
      case 44: 
      case 45: 
      case 46: 
      case 47: 
        switch (key.valueOf()) {
          case 97: 
            return "1";

          case 98: 
            return "2";

          case 99: 
            return "3";

          case 100: 
            return "4";

          case 101: 
            break;

          case 102: 
            return "6";

          case 103: 
            return "7";

          case 104: 
            return "8";

          case 105: 
            return "9";

          default: 
            switch (key.valueOf()) {
              case 9: 
                return "\t";

              case 12: 
                return "5";

              case 13: 
                return "\r";

            }
            if ($T4E().$Cast((k.get_Modifiers() & $T4E().Shift)) === $T4E().Shift) {
              return $T14().ToUpper(k.get_KeyChar());
            }
            return k.get_KeyChar();

        }
        return "5";

      case 33: 
        return "9";

      case 34: 
        return "3";

      case 35: 
        return "1";

      case 36: 
        return "7";

      case 37: 
        return "4";

      case 39: 
        return "6";

      case 40: 
        return "2";

      case 48: 
        return ")";

      case 49: 
        return "!";

      case 50: 
        return "@";

      case 51: 
        return "#";

      case 52: 
        return "$";

      case 53: 
        return "%";

      case 54: 
        return "^";

      case 55: 
        return "&";

      case 56: 
        return "*";

      case 57: 
        return "(";

    }
    return "8";
  };

  function Actor_ConvertVIKeys (ch) {
    switch (ch) {
      default: 
      case "I": 
      case "M": 
        switch (ch) {
          default: 
          case "i": 
          case "m": 
            if (ch.charCodeAt(0) !== "B".charCodeAt(0)) {
              if (ch.charCodeAt(0) !== "U".charCodeAt(0)) {
                if (ch.charCodeAt(0) !== "Y".charCodeAt(0)) {
                  if (ch.charCodeAt(0) === "b".charCodeAt(0)) {
                    return "1";
                  }
                  if (ch.charCodeAt(0) === "u".charCodeAt(0)) {
                    return "9";
                  }
                  if (ch.charCodeAt(0) !== "y".charCodeAt(0)) {
                    return ch;
                  }
                }
                return "7";
              }
              return "9";
            }
            return "1";

          case "j": 
            return "2";

          case "k": 
            return "8";

          case "l": 
            return "6";

          case "n": 
            return "3";

        }
        break;

      case "J": 
        return "2";

      case "K": 
        return "8";

      case "L": 
        return "6";

      case "N": 
        return "3";

    }
    return "4";
  };

  function Actor_Create$1B (type, r, c) {
    return $thisType.Create(
      type, 
      r, 
      c, 
      false, 
      false
    );
  };

  function Actor_Create$1C (type, r, c, add_to_tiebreaker_list, insert_after_current) {
    var actor = null;
    if ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, r, c) === null) {
      actor = $S3B().Construct($T01().prototype.get_Item.call($thisType.proto, type), r, c);
      $T2C().prototype.set_Item.call($T10().PhysicalObject$M$value.actor, r, c, actor);
      if (add_to_tiebreaker_list) {
        if (insert_after_current) {
          $thisType.tiebreakers.Insert((($thisType.Actor$Q$value.get_Tiebreaker() + 1) | 0), actor);
          $thisType.Actor$Q$value.UpdateTiebreaker((($thisType.Actor$Q$value.get_Tiebreaker() + 1) | 0));
          var event = $S0D().Construct(actor, actor.Actor$speed$value, $T22().MOVE);
          event.Event$tiebreaker$value = (($thisType.Actor$Q$value.get_Tiebreaker() + 1) | 0);
          $thisType.Actor$Q$value.Add(event);
        } else {
          $thisType.tiebreakers.Add(actor);
          var event2 = $S0D().Construct(actor, actor.Actor$speed$value, $T22().MOVE);
          event2.Event$tiebreaker$value = (($thisType.tiebreakers.get_Count() - 1) | 0);
          $thisType.Actor$Q$value.Add(event2);
        }
      } else {
        actor.QS();
      }
      if (actor.PhysicalObject$light_radius$value > 0) {
        actor.UpdateRadius(0, actor.PhysicalObject$light_radius$value);
      }
    }
    return actor;
  };

  function Actor_CreatePhantom (r, c) {
    var dict = null, dict2 = null;
    var actor = $thisType.Create(
      $T02().PHANTOM, 
      r, 
      c, 
      true, 
      true
    );
    if (actor === null) {
      return null;
    }
    var type = $asm00.Forays.ActorType.$Cast($T24().Roll(9) + $T02().PHANTOM);
    actor.Actor$type$value = type;
    switch (type.valueOf()) {
      case 57: 
        actor.SetName("phantom zombie");
        actor.PhysicalObject$symbol$value = "z";
        actor.Actor$speed$value = 150;
        break;

      case 58: 
        actor.SetName("phantom crusader");
        actor.PhysicalObject$symbol$value = "p";
        actor.UpdateRadius(0, 6, true);
        break;

      case 59: 
        actor.SetName("phantom tiger");
        actor.PhysicalObject$symbol$value = "f";
        actor.Actor$speed$value = 50;
        break;

      case 60: 
        actor.SetName("phantom ogre");
        actor.PhysicalObject$symbol$value = "O";
        break;

      case 61: 
        actor.SetName("phantom behemoth");
        actor.PhysicalObject$symbol$value = "H";
        actor.Actor$speed$value = 120;
        var num = $T09().prototype.get_Item.call(dict, $T04().STUN_HIT);
        $T09().prototype.set_Item.call((dict = actor.attrs), $T04().STUN_HIT, ((num + 1) | 0));
        break;

      case 62: 
        actor.SetName("phantom blightwing");
        actor.PhysicalObject$symbol$value = "b";
        actor.Actor$speed$value = 60;
        break;

      case 63: 
        actor.SetName("phantom swordmaster");
        actor.PhysicalObject$symbol$value = "h";
        break;

      case 64: 
        actor.SetName("phantom archer");
        actor.PhysicalObject$symbol$value = "g";
        break;

      case 65: 
        actor.SetName("phantom constrictor");
        actor.PhysicalObject$symbol$value = "S";
        var expr_E8 = (dict2 = actor.attrs);
        num = $T09().prototype.get_Item.call(dict2, $T04().GRAB_HIT);
        $T09().prototype.set_Item.call(expr_E8, $T04().GRAB_HIT, ((num + 1) | 0));
        break;

    }
    return actor;
  };

  function Actor_Define (type_, name_, symbol_, color_, maxhp_, speed_, level_, light_radius_, attrlist) {
    $T01().prototype.set_Item.call($thisType.proto, type_, $S3C().Construct(type_, name_, symbol_, color_, maxhp_, speed_, level_, light_radius_, attrlist));
  };

  function Actor_DisplayCharacterInfo$1D () {
    this.DisplayCharacterInfo(true);
  };

  function Actor_DisplayCharacterInfo$1E (readkey) {
    this.DisplayStats();

    for (var i = 1; i < 21; i = ((i + 1) | 0)) {
      $S3D().CallStatic($T1F(), "WriteMapString", null, i, 0, System.String.PadRight("", 66, ' '));
    }
    $S3D().CallStatic($T1F(), "WriteMapString", null, 0, 0, System.String.PadRight("", 66, "-"));
    $S3D().CallStatic($T1F(), "WriteMapString", null, 21, 0, System.String.PadRight("", 66, "-"));
    var color_ = $T03().Green;
    var text = (JSIL.ConcatString(System.String.PadRight(JSIL.ConcatString("Name: ", $thisType.player_name), 33, ' '), "Turns played: ", (($thisType.Actor$Q$value.Queue$turn$value / 100) | 0)));
    $S3D().CallStatic($T1F(), "WriteMapString", null, 2, 0, text);
    $S3E().CallStatic($T1F(), "WriteMapString", null, 2, 0, $S3F().Construct(color_, "Name"));
    $S3E().CallStatic($T1F(), "WriteMapString", null, 2, 33, $S3F().Construct(color_, "Turns played"));
    text = "Trait: ";
    if (this.HasAttr($T04().MAGICAL_BLOOD)) {
      text = (JSIL.ConcatString(text, "Magical blood"));
    }
    if (this.HasAttr($T04().TOUGH)) {
      text = (JSIL.ConcatString(text, "Tough"));
    }
    if (this.HasAttr($T04().KEEN_EYES)) {
      text = (JSIL.ConcatString(text, "Keen eyes"));
    }
    if (this.HasAttr($T04().LOW_LIGHT_VISION)) {
      text = (JSIL.ConcatString(text, "Low light vision"));
    }
    if (this.HasAttr($T04().LONG_STRIDE)) {
      text = (JSIL.ConcatString(text, "Long stride"));
    }
    if (this.HasAttr($T04().RUNIC_BIRTHMARK)) {
      text = (JSIL.ConcatString(text, "Runic birthmark"));
    }
    $S3D().CallStatic($T1F(), "WriteMapString", null, 5, 0, text);
    $S3E().CallStatic($T1F(), "WriteMapString", null, 5, 0, $S3F().Construct(color_, "Trait"));
    $S3D().CallStatic($T1F(), "WriteMapString", null, 8, 0, "Skills:");
    $S3E().CallStatic($T1F(), "WriteMapString", null, 8, 0, $S3F().Construct(color_, "Skills"));
    var num = 7;

    for (var skillType = $T07().COMBAT; skillType < $T07().NUM_SKILLS; skillType = $T07().$Cast((skillType + 1))) {
      if (!((skillType !== $T07().STEALTH) || (num <= 50))) {
        $S3D().CallStatic($T1F(), "WriteMapString", null, 9, 8, JSIL.ConcatString("Stealth(", ($T06().prototype.get_Item.call(this.skills, $T07().STEALTH)).toString()));
        num = ((16 + ($T06().prototype.get_Item.call(this.skills, $T07().STEALTH)).toString().length) | 0);
        if (this.HasAttr($T04().BONUS_STEALTH)) {
          $S3E().CallStatic($T1F(), "WriteMapString", null, 9, num, $S3F().Construct($T03().Yellow, JSIL.ConcatString("+", ($T09().prototype.get_Item.call(this.attrs, $T04().BONUS_STEALTH)).toString())));
          num = ((num + ((($T09().prototype.get_Item.call(this.attrs, $T04().BONUS_STEALTH)).toString().length + 1) | 0)) | 0);
        }
        $S40().CallStatic($T1F(), "WriteMapChar", null, 9, num, ")");
      } else {
        $S3D().CallStatic($T1F(), "WriteMapString", null, 8, num, JSIL.ConcatString(" ", $T50().Name(skillType)));
        num = ((num + (($T50().Name(skillType).length + 1) | 0)) | 0);
        var text2 = (($T06().prototype.get_Item.call(this.skills, skillType)).toString());
        switch (skillType.valueOf()) {
          case 0: 
            var text3 = (($T09().prototype.get_Item.call(this.attrs, $T04().BONUS_COMBAT)).toString());
            break;

          case 1: 
            text3 = (($T09().prototype.get_Item.call(this.attrs, $T04().BONUS_DEFENSE)).toString());
            break;

          case 2: 
            text3 = (($T09().prototype.get_Item.call(this.attrs, $T04().BONUS_MAGIC)).toString());
            break;

          case 3: 
            text3 = (($T09().prototype.get_Item.call(this.attrs, $T04().BONUS_SPIRIT)).toString());
            break;

          case 4: 
            text3 = (($T09().prototype.get_Item.call(this.attrs, $T04().BONUS_STEALTH)).toString());
            break;

          default: 
            text3 = "error";
            break;

        }
        $S3D().CallStatic($T1F(), "WriteMapString", null, 8, num, JSIL.ConcatString("(", text2));
        num = ((num + ((text2.length + 1) | 0)) | 0);
        if (text3 != "0") {
          $S3E().CallStatic($T1F(), "WriteMapString", null, 8, num, $S3F().Construct($T03().Yellow, JSIL.ConcatString("+", text3)));
          num = ((num + ((text3.length + 1) | 0)) | 0);
        }
        $S40().CallStatic($T1F(), "WriteMapChar", null, 8, num, ")");
        num = ((num + 1) | 0);
      }
    }
    $S3D().CallStatic($T1F(), "WriteMapString", null, 11, 0, "Feats: ");
    $S3E().CallStatic($T1F(), "WriteMapString", null, 11, 0, $S3F().Construct(color_, "Feats"));
    var text4 = "";

    for (var featType = $T41().QUICK_DRAW; featType < $T41().NUM_FEATS; featType = $T41().$Cast((featType + 1))) {
      if (this.HasFeat(featType)) {
        if (text4.length === 0) {
          text4 = (JSIL.ConcatString(text4, $T51().Name(featType)));
        } else {
          text4 = ((text4 + ", " + $T51().Name(featType)));
        }
      }
    }
    var num2 = 11;

    while (text4.length > 59) {

      for (var num3 = 58; text4[num3].charCodeAt(0) !== ",".charCodeAt(0); num3 = ((num3 - 1) | 0)) {
      }
      $S3D().CallStatic($T1F(), "WriteMapString", null, num2, 7, text4.substr(0, ((num3 + 1) | 0)));
      text4 = (text4.substr(((num3 + 2) | 0)));
      num2 = ((num2 + 1) | 0);
    }
    $S3D().CallStatic($T1F(), "WriteMapString", null, num2, 7, text4);
    $S3D().CallStatic($T1F(), "WriteMapString", null, 14, 0, "Spells: ");
    $S3E().CallStatic($T1F(), "WriteMapString", null, 14, 0, $S3F().Construct(color_, "Spells"));
    var text5 = "";

    for (var spellType = $T05().SHINE; spellType < $T05().NUM_SPELLS; spellType = $T05().$Cast((spellType + 1))) {
      if (this.HasSpell(spellType)) {
        if (text5.length === 0) {
          text5 = (JSIL.ConcatString(text5, $T42().Name(spellType)));
        } else {
          text5 = ((text5 + ", " + $T42().Name(spellType)));
        }
      }
    }
    num2 = 14;

    while (text5.length > 58) {

      for (var num4 = 57; text5[num4].charCodeAt(0) !== ",".charCodeAt(0); num4 = ((num4 - 1) | 0)) {
      }
      $S3D().CallStatic($T1F(), "WriteMapString", null, num2, 8, text5.substr(0, ((num4 + 1) | 0)));
      text5 = (text5.substr(((num4 + 2) | 0)));
      num2 = ((num2 + 1) | 0);
    }
    $S3D().CallStatic($T1F(), "WriteMapString", null, num2, 8, text5);
    $T1F().ResetColors();
    $thisType.Actor$B$value.DisplayNow("Character information: ");
    $T4A().set_CursorVisible(true);
    if (readkey) {
      $T4A().ReadKey(true);
    }
  };

  function Actor_DisplayEquipment () {
    var weaponType = this.weapons.get_First().get_Value();
    var armorType = this.armors.get_First().get_Value();
    var dict = $S41().Construct();
    var dict2 = $S42().Construct();

    for (var weaponType2 = $T15().SWORD; weaponType2 <= $T15().BOW; weaponType2 = $T15().$Cast((weaponType2 + 1))) {
      var enumerator = $T0D().prototype.GetEnumerator.call(this.weapons).MemberwiseClone();
      try {

        while (enumerator.MoveNext()) {
          var current = enumerator.get_Current();
          if ($T3A().BaseWeapon(current) === weaponType2) {
            $T52().prototype.set_Item.call(dict, weaponType2, current);
          }
        }
      } finally {
        $IM00().Call(enumerator, null);
      }
    }

    for (var armorType2 = $T16().LEATHER; armorType2 <= $T16().FULL_PLATE; armorType2 = $T16().$Cast((armorType2 + 1))) {
      var enumerator2 = $T0E().prototype.GetEnumerator.call(this.armors).MemberwiseClone();
      try {

        while (enumerator2.MoveNext()) {
          var current2 = enumerator2.get_Current();
          if ($T3F().BaseArmor(current2) === armorType2) {
            $T53().prototype.set_Item.call(dict2, armorType2, current2);
          }
        }
      } finally {
        $IM00().Call(enumerator2, null);
      }
    }
    $S3D().CallStatic($T1F(), "WriteMapString", null, 0, 0, System.String.PadRight("", 66, "-"));

    for (var i = 1; i < 21; i = ((i + 1) | 0)) {
      $S3D().CallStatic($T1F(), "WriteMapString", null, i, 0, System.String.PadRight("", 66, ' '));
    }
    var num = 2;

    for (var weaponType3 = $T15().SWORD; weaponType3 <= $T15().BOW; weaponType3 = $T15().$Cast((weaponType3 + 1))) {
      $S3E().CallStatic($T1F(), "WriteMapString", null, num, 11, $T3A().EquipmentScreenName($T52().prototype.get_Item.call(dict, weaponType3)).MemberwiseClone());
      num = ((num + 1) | 0);
    }
    num = 2;

    for (var armorType3 = $T16().LEATHER; armorType3 <= $T16().FULL_PLATE; armorType3 = $T16().$Cast((armorType3 + 1))) {
      $S3E().CallStatic($T1F(), "WriteMapString", null, num, 42, $T3F().EquipmentScreenName($T53().prototype.get_Item.call(dict2, armorType3)).MemberwiseClone());
      num = ((num + 1) | 0);
    }
    $S3E().CallStatic($T1F(), "WriteMapString", null, 9, 1, $S3F().Construct($T03().DarkRed, "Weapon: "));
    $S40().CallStatic($T1F(), "WriteMapChar", null, 9, 7, ":");
    $S3E().CallStatic($T1F(), "WriteMapString", null, 11, 1, $S3F().Construct($T03().DarkCyan, "Armor: "));
    $S40().CallStatic($T1F(), "WriteMapChar", null, 11, 6, ":");
    $S3E().CallStatic($T1F(), "WriteMapString", null, 13, 1, $S3F().Construct($T03().DarkGreen, "Magic items: "));
    $S40().CallStatic($T1F(), "WriteMapChar", null, 13, 12, ":");
    num = 13;
    var enumerator3 = $T0F().prototype.GetEnumerator.call(this.magic_items).MemberwiseClone();
    try {

      while (enumerator3.MoveNext()) {
        var current3 = enumerator3.get_Current();
        var array = $T57().Description(current3);
        $S3D().CallStatic($T1F(), "WriteMapString", null, num, 14, array[0]);
        $S3D().CallStatic($T1F(), "WriteMapString", null, ((num + 1) | 0), 14, array[1]);
        num = ((num + 2) | 0);
      }
    } finally {
      $IM00().Call(enumerator3, null);
    }
    var flag = false;

  $loop8: 
    while (!flag) {

      var $label0 = 0;
    $labelgroup0: 
      while (true) {
        switch ($label0) {
          case 0: /* $entry0 */ 
            num = 2;

            for (var weaponType4 = $T15().SWORD; weaponType4 <= $T15().BOW; weaponType4 = $T15().$Cast((weaponType4 + 1))) {
              if (weaponType === $T52().prototype.get_Item.call(dict, weaponType4)) {
                $S40().CallStatic($T1F(), "WriteMapChar", null, num, 5, ">");
                $S3E().CallStatic($T1F(), "WriteMapString", null, num, 7, $S3F().Construct($T03().Red, JSIL.ConcatString("[", String.fromCharCode($asm00.Forays.WeaponType.$Cast(weaponType4 + 97)), "]")));
              } else {
                $S40().CallStatic($T1F(), "WriteMapChar", null, num, 5, " ");
                $S3E().CallStatic($T1F(), "WriteMapString", null, num, 7, $S3F().Construct($T03().Cyan, JSIL.ConcatString("[", String.fromCharCode($asm00.Forays.WeaponType.$Cast(weaponType4 + 97)), "]")));
              }
              num = ((num + 1) | 0);
            }
            num = 2;

            for (var armorType4 = $T16().LEATHER; armorType4 <= $T16().FULL_PLATE; armorType4 = $T16().$Cast((armorType4 + 1))) {
              if (armorType === $T53().prototype.get_Item.call(dict2, armorType4)) {
                $S40().CallStatic($T1F(), "WriteMapChar", null, num, 36, ">");
                $S3E().CallStatic($T1F(), "WriteMapString", null, num, 38, $S3F().Construct($T03().Red, JSIL.ConcatString("[", String.fromCharCode($asm00.Forays.ArmorType.$Cast(armorType4 + 102)), "]")));
              } else {
                $S40().CallStatic($T1F(), "WriteMapChar", null, num, 36, " ");
                $S3E().CallStatic($T1F(), "WriteMapString", null, num, 38, $S3F().Construct($T03().Cyan, JSIL.ConcatString("[", String.fromCharCode($asm00.Forays.ArmorType.$Cast(armorType4 + 102)), "]")));
              }
              num = ((num + 1) | 0);
            }
            $S3D().CallStatic($T1F(), "WriteMapString", null, 9, 9, System.String.PadRight($T3A().Description($T3A().BaseWeapon(weaponType)), 66, ' '));
            if (weaponType !== $T3A().BaseWeapon(weaponType)) {
              $S3D().CallStatic($T1F(), "WriteMapString", null, 10, 9, System.String.PadRight($T3A().Description(weaponType), 66, ' '));
            } else {
              $S3D().CallStatic($T1F(), "WriteMapString", null, 10, 9, System.String.PadRight("", 66, ' '));
            }
            $S3D().CallStatic($T1F(), "WriteMapString", null, 11, 8, System.String.PadRight($T3F().Description($T3F().BaseArmor(armorType)), 66, ' '));
            if (armorType !== $T3F().BaseArmor(armorType)) {
              $S3D().CallStatic($T1F(), "WriteMapString", null, 12, 8, System.String.PadRight($T3F().Description(armorType), 66, ' '));
            } else {
              $S3D().CallStatic($T1F(), "WriteMapString", null, 12, 8, System.String.PadRight("", 66, ' '));
            }
            if (!((weaponType !== this.weapons.get_First().get_Value()) || (armorType !== this.armors.get_First().get_Value()))) {
              $S3D().CallStatic($T1F(), "WriteMapString", null, 21, 0, System.String.PadRight("", 66, "-"));
            } else {
              $S3D().CallStatic($T1F(), "WriteMapString", null, 21, 0, System.String.PadLeft("[Enter] to confirm-----", 43, "-"));
              $S3E().CallStatic($T1F(), "WriteMapString", null, 21, 21, $S3F().Construct($T03().Magenta, "Enter"));
            }
            $T1F().ResetColors();
            $thisType.Actor$B$value.DisplayNow("Your equipment: ");
            $T4A().set_CursorVisible(true);
            var k = $T4A().ReadKey(true);
            var c = $thisType.ConvertInput(k.MemberwiseClone());
            var c2 = c;
            switch (c2) {
              case "\x1b": 
              case " ": 
                weaponType = this.weapons.get_First().get_Value();
                armorType = this.armors.get_First().get_Value();
                flag = true;
                continue $labelgroup0;

              default: 
              case "\x1c": 
              case "\x1d": 
              case "\x1e": 
              case "\x1f": 
              case "\"": 
              case "&": 
              case "'": 
                switch (c2) {
                  case "a": 
                  case "b": 
                  case "c": 
                  case "d": 
                  case "e": 
                    break;

                  case "f": 
                  case "g": 
                  case "h": 
                    $label0 = 1 /* goto IL_5F8 */ ;
                    continue $labelgroup0;

                  default: 
                    if (c2.charCodeAt(0) === "\r".charCodeAt(0)) {
                      flag = true;
                      continue $labelgroup0;
                    }
                    if (c2.charCodeAt(0) !== "@".charCodeAt(0)) {
                      continue $labelgroup0;
                    }
                    break;

                }
                break;

              case "(": 
              case ")": 
              case "*": 
                $label0 = 1 /* goto IL_5F8 */ ;
                continue $labelgroup0;

            }
            var c3 = c;
            switch (c3) {
              case "!": 
                c = "a";
                break;

              default: 
              case "\"": 
                if (c3.charCodeAt(0) === "@".charCodeAt(0)) {
                  c = "b";
                }
                break;

              case "#": 
                c = "c";
                break;

              case "$": 
                c = "d";
                break;

              case "%": 
                c = "e";
                break;

            }
            if ($T15().$Cast(String.fromCharCode((c.charCodeAt(0) - "a".charCodeAt(0)))) !== $T3A().BaseWeapon(weaponType)) {
              weaponType = $T52().prototype.get_Item.call(dict, $T15().$Cast(String.fromCharCode((c.charCodeAt(0) - "a".charCodeAt(0)))));
            }
            continue $loop8;

          case 1: /* IL_5F8 */ 
            switch (c) {
              case "(": 
                c = "g";
                break;

              case ")": 
                c = "h";
                break;

              case "*": 
                c = "f";
                break;

            }
            if ($T16().$Cast(String.fromCharCode((c.charCodeAt(0) - "f".charCodeAt(0)))) !== $T3F().BaseArmor(armorType)) {
              armorType = $T53().prototype.get_Item.call(dict2, $T16().$Cast(String.fromCharCode((c.charCodeAt(0) - "f".charCodeAt(0)))));
            }

            break $labelgroup0;
        }
      }
    }
    return JSIL.Array.New($T12(), [$T3A().BaseWeapon(weaponType).valueOf(), $T3F().BaseArmor(armorType).valueOf()]);
  };

  function Actor_DisplayStats$1F () {
    this.DisplayStats(false);
  };

  function Actor_DisplayStats$20 (cyan_letters) {
    var cstr = new ($T4F())(), cstr2 = new ($T4F())(), cstr3 = new ($T4F())();
    $T4A().set_CursorVisible(false);
    $S43().CallStatic($T1F(), "WriteStatsString", null, 2, 0, "HP: ");
    if (this.Actor$curhp$value < 50) {
      if (this.Actor$curhp$value < 20) {
        $S44().CallStatic($T1F(), "WriteStatsString", null, 2, 4, $S3F().Construct($T03().DarkRed, JSIL.ConcatString((this.Actor$curhp$value).toString(), "  ")));
      } else {
        $S44().CallStatic($T1F(), "WriteStatsString", null, 2, 4, $S3F().Construct($T03().Red, JSIL.ConcatString((this.Actor$curhp$value).toString(), "  ")));
      }
    } else {
      $S43().CallStatic($T1F(), "WriteStatsString", null, 2, 4, JSIL.ConcatString((this.Actor$curhp$value).toString(), "  "));
    }
    $S43().CallStatic($T1F(), "WriteStatsString", null, 3, 0, JSIL.ConcatString("Depth: ", $T10().PhysicalObject$M$value.Map$current_level$value, "  "));
    $S43().CallStatic($T1F(), "WriteStatsString", null, 4, 0, JSIL.ConcatString("AC: ", this.ArmorClass(), "  "));
    var count = this.magic_items.get_Count();
    var s = $T3A().StatsName(this.weapons.get_First().get_Value()).MemberwiseClone();
    s.s = (System.String.PadRight(s.s, 12, ' '));
    $S44().CallStatic($T1F(), "WriteStatsString", null, 5, 0, s.MemberwiseClone());
    s = $T3F().StatsName(this.armors.get_First().get_Value()).MemberwiseClone();
    s.s = (System.String.PadRight(s.s, 12, ' '));
    $S44().CallStatic($T1F(), "WriteStatsString", null, 6, 0, s.MemberwiseClone());
    var num = 7;
    var enumerator = $T0F().prototype.GetEnumerator.call(this.magic_items).MemberwiseClone();
    try {

      while (enumerator.MoveNext()) {
        var current = enumerator.get_Current();
        s = $T57().StatsName(current).MemberwiseClone();
        s.s = (System.String.PadRight(s.s, 12, ' '));
        $S44().CallStatic($T1F(), "WriteStatsString", null, num, 0, s.MemberwiseClone());
        num = ((num + 1) | 0);
      }
    } finally {
      $IM00().Call(enumerator, null);
    }
    if (!$T24().Option($T58().HIDE_COMMANDS)) {

      for (var i = ((7 + count) | 0); i < 11; i = ((i + 1) | 0)) {
        $S43().CallStatic($T1F(), "WriteStatsString", null, i, 0, System.String.PadRight("", 12, ' '));
      }
      var array = JSIL.Array.New($T13(), ["[i]nventory ", "[e]quipment ", "[c]haracter ", "SPECIAL", "Use [f]eat  ", "Cast [z]    ", "[s]hoot     ", "[Tab] Look  ", "[a]pply item", "[g]et item  ", "[r]est      ", "[w]alk      ", "E[x]plore   ", "[o]perate   "]);
      if (this.PhysicalObject$light_radius$value > 0) {
        array[3] = "[t]orch off ";
      } else {
        array[3] = "[t]orch on  ";
      }
      var color_ = (!cyan_letters ? $T03().DarkCyan : $T03().Cyan);
      var color_2 = (!cyan_letters ? $T03().DarkGray : $T03().Gray);

      for (var j = 0; j < array.length; j = ((j + 1) | 0)) {
        var num2 = (array[j].lastIndexOf("["));
        $S45().Call($T4F().prototype, "_ctor", null, cstr, array[j].substr(0, ((num2 + 1) | 0)), color_2);
        var num3 = (array[j].lastIndexOf("]"));
        $S45().Call($T4F().prototype, "_ctor", null, cstr2, array[j].substr(((num2 + 1) | 0), ((((num3 - num2) | 0) - 1) | 0)), color_);
        $S45().Call($T4F().prototype, "_ctor", null, cstr3, array[j].substr(num3), color_2);
        $S46().CallStatic($T1F(), "WriteString", null, ((11 + j) | 0), 0, $S47().Construct(JSIL.Array.New($T4F(), [cstr, cstr2, cstr3])));
      }
    } else {

      for (var k = ((7 + count) | 0); k < 25; k = ((k + 1) | 0)) {
        $S43().CallStatic($T1F(), "WriteStatsString", null, k, 0, System.String.PadRight("", 12, ' '));
      }
    }
    $T1F().ResetColors();
  };

  function Actor_DurationOfMagicalEffect (original) {
    var num = ((((original * this.TotalSkill($T07().SPIRIT)) | 0) / 20) | 0);
    var num2 = ((original - num) | 0);
    if (num2 < 1) {
      num2 = 1;
    }
    return num2;
  };

  function Actor_EnemiesAdjacent () {
    var num = -1;

    for (var i = ((this.get_row() - 1) | 0); i <= ((this.get_row() + 1) | 0); i = ((i + 1) | 0)) {

      for (var j = ((this.get_col() - 1) | 0); j <= ((this.get_col() + 1) | 0); j = ((j + 1) | 0)) {
        if ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, i, j) !== null) {
          num = ((num + 1) | 0);
        }
      }
    }
    return num;
  };

  function Actor_FailColor$21 (spell) {
    var result = $T03().White;
    if (this.FailRate(spell) > 50) {
      result = $T03().DarkRed;
    } else if (this.FailRate(spell) > 20) {
      result = $T03().Red;
    } else if (this.FailRate(spell) > 0) {
      result = $T03().Yellow;
    }
    return result;
  };

  function Actor_FailColor$22 (failrate) {
    var result = $T03().White;
    if (failrate > 50) {
      result = $T03().DarkRed;
    } else if (failrate > 20) {
      result = $T03().Red;
    } else if (failrate > 0) {
      result = $T03().Yellow;
    }
    return result;
  };

  function Actor_FailRate (spell) {
    var num = (((($T42().Level(spell) - this.TotalSkill($T07().MAGIC)) | 0) * 5) | 0);
    if (num < 0) {
      num = 0;
    }
    num = ((num + ((this.magic_penalty * 5) | 0)) | 0);
    if (!this.HasFeat($T41().ARMORED_MAGE)) {
      num = ((num + $T3F().AddedFailRate(this.armors.get_First().get_Value())) | 0);
    }
    if (num > 100) {
      num = 100;
    }
    return num;
  };

  function Actor_FindAutoexplorePath () {
    var $temp00, $temp01, $temp02;
    var list = $S05().Construct();
    var array = JSIL.MultidimensionalArray.New($T12(), 22, 66);

    for (var i = 0; i < 22; i = ((i + 1) | 0)) {

      for (var j = 0; j < 66; j = ((j + 1) | 0)) {
        if (!($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, i, j).Tile$passable$value || ($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, i, j).Tile$type$value === $T1A().DOOR_C))) {
          array.Set(i, j, -1);
        }
        if ($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, i, j).IsKnownTrap()) {
          array.Set(i, j, -1);
        }
        if ($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, i, j).Tile$type$value === $T1A().CHASM) {
          array.Set(i, j, -1);
        }
      }
    }
    var num2 = 20;
    var num4 = 64;
    array.Set(
      this.get_row(), 
      this.get_col(), 
      1
    );
    var num5 = 1;
    var flag = false;

    for (var list2 = $S05().Construct(); list2.get_Count() === 0; ) {

      for (var k = 1; k <= num2; k = ((k + 1) | 0)) {

        for (var l = 1; l <= num4; l = ((l + 1) | 0)) {
          if (array.Get(k, l) === num5) {

            for (var m = ((k - 1) | 0); m <= ((k + 1) | 0); m = ((m + 1) | 0)) {

              for (var n = ((l - 1) | 0); n <= ((l + 1) | 0); n = ((n + 1) | 0)) {
                if (!(((m === k) && 
                      (n === l)) || (array.Get(m, n) !== 0))) {
                  array.Set(m, n, ((num5 + 1) | 0));
                  if (!($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, m, n).Tile$seen$value || (!$T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, m, n).Tile$passable$value && 
                        ($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, m, n).Tile$type$value !== $T1A().DOOR_C)))) {
                    $T27().AddUnique$b1($T1B())(list2, new ($T1B())(m, n));
                    flag = true;
                  }
                  if (!(($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, m, n).Tile$inv$value === null) || $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, m, n).Tile$inv$value.Item$ignored$value)) {
                    $T27().AddUnique$b1($T1B())(list2, new ($T1B())(m, n));
                    flag = true;
                  }
                }
              }
            }
          }
        }
      }
      num5 = ((num5 + 1) | 0);
      if (num5 > 1000) {
        this.path.Clear();
        return false;
      }
    }
    if (flag) {
      num5 = ((num5 + 1) | 0);
    }
    var pos = new ($T1B())(-1, -1);
    var num6 = 9;

    for (var a$0 = list2._items, i$0 = 0, l$0 = list2._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0].MemberwiseClone();
      var num7 = 0;

      for (var a$1 = current.PositionsAtDistance(1)._items, i$1 = 0, l$1 = current.PositionsAtDistance(1)._size; i$1 < l$1; ($temp01 = i$1, 
          i$1 = ((i$1 + 1) | 0), 
          $temp01)) {
        var current2 = a$1[i$1].MemberwiseClone();
        if (!($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, current2).Tile$seen$value || (!$T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, current2).Tile$passable$value && 
              ($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, current2).Tile$type$value !== $T1A().DOOR_C)))) {
          num7 = ((num7 + 1) | 0);
        }
      }
      if (num7 < num6) {
        num6 = num7;
        pos = current.MemberwiseClone();
      }
    }
    list.Add(pos.MemberwiseClone());
    var pos2 = pos.MemberwiseClone();

    for (var num8 = ((num5 - 2) | 0); num8 > 1; num8 = ((num8 - 1) | 0)) {
      var pos3 = null;

      for (var a$2 = pos2.PositionsAtDistance(1)._items, i$2 = 0, l$2 = pos2.PositionsAtDistance(1)._size; i$2 < l$2; ($temp02 = i$2, 
          i$2 = ((i$2 + 1) | 0), 
          $temp02)) {
        var current3 = a$2[i$2].MemberwiseClone();
        if (array.Get(current3.row, current3.col) === num8) {
          if (pos3 === null) {
            pos3 = current3.MemberwiseClone();
          } else if ($S48().CallVirtual("EstimatedEuclideanDistanceFromX10", null, current3, pos2.MemberwiseClone()) < $S48().CallVirtual("EstimatedEuclideanDistanceFromX10", null, pos3, pos2.MemberwiseClone())) {
            pos3 = current3.MemberwiseClone();
          }
        }
      }
      if (pos3 === null) {
        this.path.Clear();
        return false;
      }
      pos2 = pos3.MemberwiseClone();
      list.Add(pos2.MemberwiseClone());
    }
    $T0C().prototype.Reverse.call(list);
    this.path = list;
    return true;
  };

  function Actor_FindPath$23 (o) {
    this.path = this.GetPath(o);
  };

  function Actor_FindPath$24 (o, max_distance) {
    this.path = $S49().CallVirtual("GetPath", null, this, o, max_distance);
  };

  function Actor_FindPath$25 (o, max_distance, path_around_seen_traps) {
    this.path = $S4A().CallVirtual("GetPath", null, this, o, max_distance, path_around_seen_traps);
  };

  function Actor_FindPath$26 (r, c) {
    this.path = $S4B().CallVirtual("GetPath", null, this, r, c);
  };

  function Actor_FindPath$27 (r, c, max_distance) {
    this.path = $S4C().CallVirtual("GetPath", null, this, r, c, max_distance);
  };

  function Actor_FindPath$28 (r, c, max_distance, path_around_seen_traps) {
    this.path = this.GetPath(r, c, max_distance, path_around_seen_traps);
  };

  function Actor_FireArrow$29 (obj) {
    $S4D().CallVirtual("FireArrow", null, this, this.GetBestExtendedLine(obj));
  };

  function Actor_FireArrow$2A (line) {
    var $temp00;
    if (this.StunnedThisTurn()) {
      return;
    }
    var num = -30;
    if (this.HasAttr($T04().KEEN_EYES)) {
      num = -20;
    }
    num = ((num + this.TotalSkill($T07().COMBAT)) | 0);
    var tile = null;
    var actor = null;
    var flag = false;
    var list = $S4E().Construct();
    var list2 = $S16().Construct();
    line.RemoveAt(0);
    if (line.get_Count() > 12) {
      line = $T2A().prototype.GetRange.call(line, 0, $T2D().Min(12, line.get_Count()));
    }

  $loop0: 
    for (var i = 0; i < line.get_Count(); i = ((i + 1) | 0)) {
      actor = line.get_Item(i).actor();
      tile = line.get_Item(i);
      if (actor !== null) {
        flag = true;
        if (actor.IsHit(num)) {
          if (!actor.HasAttr($T04().TUMBLING)) {
            break $loop0;
          }
          $T09().prototype.set_Item.call(actor.attrs, $T04().TUMBLING, 0);
        } else {
          list.Add(("The arrow misses " + actor.PhysicalObject$the_name$value + ". "));
          list2.Add(actor);
        }
        actor = null;
      }
      if (!tile.Tile$passable$value) {
        actor = null;
        break $loop0;
      }
    }
    if (this.HasAttr($T04().FIERY_ARROWS)) {
      $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("fire"), " a flaming arrow. "), JSIL.Array.New($T10(), [this]));
    } else {
      $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("fire"), " an arrow. "), JSIL.Array.New($T10(), [this]));
    }
    $thisType.Actor$B$value.DisplayNow();
    if (actor !== null) {
      $T1F().AnimateBoltProjectile($T27().To(line, actor), $T03().DarkYellow, 20);
    } else {
      $T1F().AnimateBoltProjectile($T27().To(line, tile), $T03().DarkYellow, 20);
    }
    var num2 = 0;

    for (var a$0 = list._items, i$0 = 0, l$0 = list._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      $thisType.Actor$B$value.Add(current, JSIL.Array.New($T10(), [list2.get_Item(num2)]));
      num2 = ((num2 + 1) | 0);
    }
    if (actor !== null) {
      if (actor.HasAttr($T04().IMMUNE_ARROWS)) {
        $thisType.Actor$B$value.Add(("The arrow sticks out ineffectively from " + actor.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [actor]));
      } else {
        var flag2 = true;
        var num3 = 20;
        if (this.HasFeat($T41().LETHALITY)) {
          num3 = ((num3 - 2) | 0);
          var num4 = ((actor.Actor$maxhp$value / 5) | 0);
          var num5 = ((actor.Actor$maxhp$value - actor.Actor$curhp$value) | 0);
          num3 = ((num3 - ((num5 / num4) | 0)) | 0);
        }
        if ($T24().Roll(1, 20) >= num3) {
          $thisType.Actor$B$value.Add(("The arrow critically hits " + actor.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [actor]));
          if (!actor.TakeDamage(
              $T31().PIERCING, 
              $T32().PHYSICAL, 
              ((18 + this.TotalSkill($T07().COMBAT)) | 0), 
              this, 
              JSIL.ConcatString(this.Your(), " arrow")
            )) {
            flag2 = false;
          }
        } else {
          $thisType.Actor$B$value.Add(("The arrow hits " + actor.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [actor]));
          if (!actor.TakeDamage(
              $T31().PIERCING, 
              $T32().PHYSICAL, 
              (($T24().Roll(3, 6) + this.TotalSkill($T07().COMBAT)) | 0), 
              this, 
              JSIL.ConcatString(this.Your(), " arrow")
            )) {
            flag2 = false;
          }
        }
        if (!(!flag2 || (!actor.HasAttr($T04().DEMON) && 
              !actor.HasAttr($T04().UNDEAD)))) {
          var enumerator2 = $T0D().prototype.GetEnumerator.call(this.weapons).MemberwiseClone();
          try {

          $loop2: 
            while (enumerator2.MoveNext()) {
              var current2 = enumerator2.get_Current();
              if (current2 === $T15().HOLY_LONGBOW) {
                $thisType.Actor$B$value.Add(JSIL.ConcatString(actor.PhysicalObject$the_name$value, " is blasted with holy energy! "), JSIL.Array.New($T10(), [actor]));
                if (!actor.TakeDamage($T31().MAGIC, $T32().MAGICAL, $T24().Roll(3, 6), this)) {
                  flag2 = false;
                }
                break $loop2;
              }
            }
          } finally {
            $IM00().Call(enumerator2, null);
          }
        }
        if (!(!flag2 || 
            !this.HasAttr($T04().FIERY_ARROWS) || 
            actor.HasAttr($T04().IMMUNE_FIRE) || 
            actor.HasAttr($T04().INVULNERABLE) || actor.TakeDamage(
              $T31().FIRE, 
              $T32().PHYSICAL, 
              $T24().Roll(6), 
              this, 
              JSIL.ConcatString(this.Your(), " arrow")
            ))) {
          flag2 = false;
        }
      }
    } else if (!flag) {
      $thisType.Actor$B$value.Add(("The arrow hits " + tile.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [tile]));
    }
    this.Q1();
  };

  function Actor_GainAttr$2B (attr, duration) {
    var dict = null;
    var expr_06 = (dict = this.attrs);
    var num = $T09().prototype.get_Item.call(dict, attr);
    $T09().prototype.set_Item.call(expr_06, attr, ((num + 1) | 0));
    $thisType.Actor$Q$value.Add($S0F().Construct(this, duration, attr));
  };

  function Actor_GainAttr$2C (attr, duration, value) {
    var dict = null;
    var expr_06 = (dict = this.attrs);
    var num = $T09().prototype.get_Item.call(dict, attr);
    $T09().prototype.set_Item.call(expr_06, attr, ((num + value) | 0));
    $thisType.Actor$Q$value.Add($S4F().Construct(this, duration, attr, value));
  };

  function Actor_GainAttr$2D (attr, duration, msg, objs) {
    var dict = null;
    var expr_06 = (dict = this.attrs);
    var num = $T09().prototype.get_Item.call(dict, attr);
    $T09().prototype.set_Item.call(expr_06, attr, ((num + 1) | 0));
    $thisType.Actor$Q$value.Add($S1A().Construct(this, duration, attr, msg, objs));
  };

  function Actor_GainAttr$2E (attr, duration, value, msg, objs) {
    var dict = null;
    var expr_06 = (dict = this.attrs);
    var num = $T09().prototype.get_Item.call(dict, attr);
    $T09().prototype.set_Item.call(expr_06, attr, ((num + value) | 0));
    $thisType.Actor$Q$value.Add($S50().Construct(this, duration, attr, value, msg, objs));
  };

  function Actor_GainAttrRefreshDuration$2F (attr, duration) {
    var dict = null;
    $S51().CallVirtual("KillEvents", null, $thisType.Actor$Q$value, this, attr);
    var num = $T09().prototype.get_Item.call(dict, attr);
    $T09().prototype.set_Item.call((dict = this.attrs), attr, ((num + 1) | 0));
    $thisType.Actor$Q$value.Add($S4F().Construct(this, duration, attr, $T09().prototype.get_Item.call(this.attrs, attr)));
  };

  function Actor_GainAttrRefreshDuration$30 (attr, duration, msg, objs) {
    var dict = null;
    $S51().CallVirtual("KillEvents", null, $thisType.Actor$Q$value, this, attr);
    var num = $T09().prototype.get_Item.call(dict, attr);
    $T09().prototype.set_Item.call((dict = this.attrs), attr, ((num + 1) | 0));
    $thisType.Actor$Q$value.Add($S50().Construct(this, duration, attr, $T09().prototype.get_Item.call(this.attrs, attr), msg, objs));
  };

  function Actor_GainSpell (spell_list) {
    var dict = null, key = $asm00.Forays.SpellType.SHINE;

    for (var i = 0; i < spell_list.length; i = ((i + 1) | 0)) {
      var spellType = spell_list[i];
      var expr_16 = (key = spellType);
      var num = $T0B().prototype.get_Item.call(dict, key);
      $T0B().prototype.set_Item.call((dict = this.spells), expr_16, ((num + 1) | 0));
    }
  };

  function Actor_get_B () {
    return $thisType.Actor$B$value;
  };

  function Actor_get_curhp () {
    return this.Actor$curhp$value;
  };

  function Actor_get_F () {
    return this.Actor$F$value;
  };

  function Actor_get_inv () {
    return this.Actor$inv$value;
  };

  function Actor_get_level () {
    return this.Actor$level$value;
  };

  function Actor_get_maxhp () {
    return this.Actor$maxhp$value;
  };

  function Actor_get_player () {
    return $thisType.Actor$player$value;
  };

  function Actor_get_Q () {
    return $thisType.Actor$Q$value;
  };

  function Actor_get_speed () {
    return this.Actor$speed$value;
  };

  function Actor_get_target () {
    return this.Actor$target$value;
  };

  function Actor_get_type () {
    return this.Actor$type$value;
  };

  function Actor_GetDirection$31 () {
    return this.GetDirection("Which direction? ", false, false);
  };

  function Actor_GetDirection$32 (orth, allow_self_targeting) {
    return this.GetDirection("Which direction? ", orth, allow_self_targeting);
  };

  function Actor_GetDirection$33 (s) {
    return this.GetDirection(s, false, false);
  };

  function Actor_GetDirection$34 (s, orth, allow_self_targeting) {

    var $label0 = 0;
  $labelgroup0: 
    while (true) {
      switch ($label0) {
        case 0: /* $entry0 */ 
          $thisType.Actor$B$value.DisplayNow(s);
          $T4A().set_CursorVisible(true);

        $loop0: 
          while (true) {
            var k = $T4A().ReadKey(true);
            var c = $thisType.ConvertInput(k.MemberwiseClone());
            if (k.get_KeyChar().charCodeAt(0) === ".".charCodeAt(0)) {
              c = "5";
            }
            c = $thisType.ConvertVIKeys(c);
            var num = (($T14().GetNumericValue(c)) | 0);
            if (!((num < 1) || (num > 9))) {
              if (num !== 5) {
                if (!(orth && (((num % 2) | 0) !== 0))) {
                  break $loop0;
                }
              } else if (allow_self_targeting) {
                $label0 = 1 /* goto Block_6 */ ;
                continue $labelgroup0;
              }
            }
            if (c.charCodeAt(0) === "\x1b".charCodeAt(0)) {
              $label0 = 2 /* goto Block_7 */ ;
              continue $labelgroup0;
            }
            if (c.charCodeAt(0) === " ".charCodeAt(0)) {
              $label0 = 3 /* goto Block_8 */ ;
              continue $labelgroup0;
            }
          }
          $T4A().set_CursorVisible(false);
          return num;

          $label0 = 1 /* goto Block_6 */ ;
          continue $labelgroup0;
        case 1: /* Block_6 */ 
          $T4A().set_CursorVisible(false);
          return num;

          $label0 = 2 /* goto Block_7 */ ;
          continue $labelgroup0;
        case 2: /* Block_7 */ 
          $T4A().set_CursorVisible(false);
          return -1;

          $label0 = 3 /* goto Block_8 */ ;
          continue $labelgroup0;
        case 3: /* Block_8 */ 
          $T4A().set_CursorVisible(false);
          return -1;

          break $labelgroup0;
      }
    }
  };

  function Actor_GetKnockedBack$35 (obj) {
    return $S3A().CallVirtual("GetKnockedBack", null, this, obj.GetBestExtendedLine(
        this.get_row(), 
        this.get_col()
      ));
  };

  function Actor_GetKnockedBack$36 (line) {
    var $temp00;
    var num = line.IndexOf($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, 
        this.get_row(), 
        this.get_col()
      ));
    if (num === -1) {
      $thisType.Actor$B$value.Add(("DEBUG: Error - " + this.PhysicalObject$the_name$value + "'s position doesn't seem to be in the line. "), JSIL.Array.New($T10(), 0));
      return false;
    }
    var tile = line.get_Item(((num + 1) | 0));
    var source = $T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, 
      (line.get_Item(0)).get_row(), 
      (line.get_Item(0)).get_col()
    );
    var flag = (this.GrabPreventsMovement(tile) || 
      this.HasAttr($T04().NEVER_MOVES));
    if (!(!tile.Tile$passable$value || 
        ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, 
            tile.get_row(), 
            tile.get_col()
          ) !== null) || flag)) {
      if ($thisType.Actor$player$value.CanSee(this.tile())) {
        $thisType.Actor$B$value.Add(JSIL.ConcatString(this.YouAre(), " knocked back. "), JSIL.Array.New($T10(), [this]));
      }
      if (this.HasAttr($T04().FROZEN)) {
        $T09().prototype.set_Item.call(this.attrs, $T04().FROZEN, 0);
        if ($thisType.Actor$player$value.CanSee(this.tile())) {
          $thisType.Actor$B$value.Add("The ice breaks! ", JSIL.Array.New($T10(), [this]));
        }
      }
      this.Move(
        tile.get_row(), 
        tile.get_col()
      );
    } else {
      var row = this.get_row();
      var col = this.get_col();
      var flag2 = this.HasAttr($T04().FROZEN);
      if (!tile.Tile$passable$value) {
        if ($thisType.Actor$player$value.CanSee(this.tile())) {
          $thisType.Actor$B$value.Add((this.YouVisibleAre() + " knocked into " + tile.TheVisible() + ". "), JSIL.Array.New($T10(), [this, tile]));
        }
        this.TakeDamage(
          $T31().NORMAL, 
          $T32().PHYSICAL, 
          $T24().Roll(1, 6), 
          source, 
          JSIL.ConcatString("*smashed against ", tile.PhysicalObject$a_name$value)
        );
      } else if ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, tile.p) !== null) {
        if ($thisType.Actor$player$value.CanSee(this.tile())) {
          $thisType.Actor$B$value.Add(
            (this.YouVisibleAre() + " knocked into " + $T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, 
              tile.get_row(), 
              tile.get_col()
            ).TheVisible() + ". "), 
            JSIL.Array.New($T10(), [this, $T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, 
                tile.get_row(), 
                tile.get_col()
              )])
          );
        }
        var a_name = this.PhysicalObject$a_name$value;
        this.TakeDamage(
          $T31().NORMAL, 
          $T32().PHYSICAL, 
          $T24().Roll(1, 6), 
          source, 
          JSIL.ConcatString("*smashed against ", $T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, tile.p).PhysicalObject$a_name$value)
        );
        $T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, 
          tile.get_row(), 
          tile.get_col()
        ).TakeDamage(
          $T31().NORMAL, 
          $T32().PHYSICAL, 
          $T24().Roll(1, 6), 
          source, 
          JSIL.ConcatString("*smashed against ", a_name)
        );
      } else {
        if ($thisType.Actor$player$value.CanSee(this.tile())) {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.YouVisibleAre(), " knocked about. "), JSIL.Array.New($T10(), [this]));
        }
        var actor = null;

        for (var a$0 = this.ActorsAtDistance(1)._items, i$0 = 0, l$0 = this.ActorsAtDistance(1)._size; i$0 < l$0; ($temp00 = i$0, 
            i$0 = ((i$0 + 1) | 0), 
            $temp00)) {
          var current = a$0[i$0];
          if ($T09().prototype.get_Item.call(current.attrs, $T04().GRABBING) === $S1E().CallVirtual("DirectionOf", null, current, this)) {
            actor = current;
          }
        }
        var str = "";
        if (actor !== null) {
          str = actor.PhysicalObject$a_name$value;
        }
        this.TakeDamage(
          $T31().NORMAL, 
          $T32().PHYSICAL, 
          $T24().Roll(6), 
          source, 
          JSIL.ConcatString("*smashed against ", str)
        );
      }
      if (!(!flag2 || 
          ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, row, col) === null) || !$thisType.Actor$player$value.CanSee(this.tile()))) {
        $thisType.Actor$B$value.Add("The ice breaks! ", JSIL.Array.New($T10(), [this]));
      }
    }
    return true;
  };

  function Actor_GetPath$37 (o) {
    return this.GetPath(
      o.get_row(), 
      o.get_col(), 
      -1, 
      false
    );
  };

  function Actor_GetPath$38 (o, max_distance) {
    return this.GetPath(
      o.get_row(), 
      o.get_col(), 
      max_distance, 
      false
    );
  };

  function Actor_GetPath$39 (o, max_distance, path_around_seen_traps) {
    return this.GetPath(
      o.get_row(), 
      o.get_col(), 
      max_distance, 
      path_around_seen_traps
    );
  };

  function Actor_GetPath$3A (r, c) {
    return this.GetPath(r, c, -1, false);
  };

  function Actor_GetPath$3B (r, c, max_distance) {
    return this.GetPath(r, c, max_distance, false);
  };

  function Actor_GetPath$3C (r, c, max_distance, path_around_seen_traps) {
    var $temp00;
    var list = $S05().Construct();
    var array = JSIL.MultidimensionalArray.New($T12(), 22, 66);

    for (var i = 0; i < 22; i = ((i + 1) | 0)) {

      for (var j = 0; j < 66; j = ((j + 1) | 0)) {
        if (!(!($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, i, j).Tile$passable$value || 
              (this.HasAttr($T04().HUMANOID_INTELLIGENCE) && 
                $S0B().CallVirtual("Is", null, $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, i, j), $T1A().DOOR_C))) && (!this.HasAttr($T04().BOSS_MONSTER) || 
              !$S0B().CallVirtual("Is", null, $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, i, j), $T1A().HIDDEN_DOOR)))) {
          if (!(!path_around_seen_traps || !$T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, i, j).IsKnownTrap())) {
            array.Set(i, j, -1);
          } else {
            array.Set(i, j, 0);
          }
          if ($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, i, j).Tile$type$value === $T1A().CHASM) {
            array.Set(i, j, -1);
          }
        } else {
          array.Set(i, j, -1);
        }
      }
    }
    var num = $T2D().Max(1, ((this.get_row() - max_distance) | 0));
    var num2 = $T2D().Min(20, ((this.get_row() + max_distance) | 0));
    var num3 = $T2D().Max(1, ((this.get_col() - max_distance) | 0));
    var num4 = $T2D().Min(64, ((this.get_col() + max_distance) | 0));
    if (max_distance === -1) {
      num = 1;
      num2 = 20;
      num3 = 1;
      num4 = 64;
    }
    array.Set(
      this.get_row(), 
      this.get_col(), 
      1
    );
    var num5 = 1;

    for (var flag = false; !flag; ) {

      for (var num6 = num; !flag && (num6 <= num2); num6 = ((num6 + 1) | 0)) {

        for (var num7 = num3; !flag && (num7 <= num4); num7 = ((num7 + 1) | 0)) {
          if (array.Get(num6, num7) === num5) {

            for (var num8 = ((num6 - 1) | 0); !flag && (num8 <= ((num6 + 1) | 0)); num8 = ((num8 + 1) | 0)) {

              for (var num9 = ((num7 - 1) | 0); !flag && (num9 <= ((num7 + 1) | 0)); num9 = ((num9 + 1) | 0)) {
                if (!(((num8 === num6) && 
                      (num9 === num7)) || (array.Get(num8, num9) !== 0))) {
                  array.Set(num8, num9, ((num5 + 1) | 0));
                  if (!((num8 !== r) || (num9 !== c))) {
                    flag = true;
                    list.Add(new ($T1B())(num8, num9));
                  }
                }
              }
            }
          }
        }
      }
      num5 = ((num5 + 1) | 0);
      if (num5 > 1000) {
        list.Clear();
        return list;
      }
    }
    var pos = list.get_Item(0).MemberwiseClone();

    for (var k = ((num5 - 1) | 0); k > 1; k = ((k - 1) | 0)) {
      var pos2 = null;

      for (var a$0 = pos.PositionsAtDistance(1)._items, i$0 = 0, l$0 = pos.PositionsAtDistance(1)._size; i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current = a$0[i$0].MemberwiseClone();
        if (array.Get(current.row, current.col) === k) {
          if (pos2 === null) {
            pos2 = current.MemberwiseClone();
          } else if ($S48().CallVirtual("EstimatedEuclideanDistanceFromX10", null, current, pos.MemberwiseClone()) < $S48().CallVirtual("EstimatedEuclideanDistanceFromX10", null, pos2, pos.MemberwiseClone())) {
            pos2 = current.MemberwiseClone();
          }
        }
      }
      if (pos2 === null) {
        list.Clear();
        return list;
      }
      pos = pos2.MemberwiseClone();
      list.Add(pos.MemberwiseClone());
    }
    $T0C().prototype.Reverse.call(list);
    if ($S52().CallVirtual("DistanceFrom", null, this, list.get_Item(0).MemberwiseClone()) > 1) {
      throw $S53().Construct("too far away");
    }
    return list;
  };

  function Actor_GetSelection (s, count, no_cancel, easy_cancel, help_key) {
    if (count === 0) {
      return -1;
    }
    $thisType.Actor$B$value.DisplayNow(s);
    $T4A().set_CursorVisible(true);

  $loop0: 
    while (true) {
      var k = $T4A().ReadKey(true);
      var c = $thisType.ConvertInput(k.MemberwiseClone());
      var num = (String.fromCharCode((c.charCodeAt(0) - "a".charCodeAt(0)))).charCodeAt(0);
      if (!((num < 0) || (num >= count))) {
        break $loop0;
      }
      if (!(!help_key || (c.charCodeAt(0) !== "?".charCodeAt(0)))) {
        return -2;
      }
      if (!no_cancel) {
        if (easy_cancel) {
          return -1;
        }
        if (!((c.charCodeAt(0) !== "\x1b".charCodeAt(0)) && (c.charCodeAt(0) !== " ".charCodeAt(0)))) {
          return -1;
        }
      }
    }
    return num;
  };

  function Actor_GetTarget$3D () {
    return this.GetTarget(false, -1, true);
  };

  function Actor_GetTarget$3E (lookmode) {
    return this.GetTarget(lookmode, -1, !lookmode);
  };

  function Actor_GetTarget$3F (max_distance) {
    return this.GetTarget(false, max_distance, true);
  };

  function Actor_GetTarget$40 (max_distance, radius) {
    return this.GetTarget(false, max_distance, true, radius);
  };

  function Actor_GetTarget$41 (lookmode, max_distance) {
    return this.GetTarget(lookmode, max_distance, !lookmode);
  };

  function Actor_GetTarget$42 (lookmode, max_distance, start_at_interesting_target) {
    return this.GetTarget(lookmode, max_distance, start_at_interesting_target, 0);
  };

  function Actor_GetTarget$43 (lookmode, max_distance, start_at_interesting_target, radius) {
    var $temp00, $temp01, $temp02, $temp03, $temp04, $temp05, $temp06, $temp07, $temp08, $temp09, $temp0A, $temp0B;
    var $s00 = new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), [$asm01.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm00.TypeRef("Forays.Tile")])]);
    var list = null;
    var num = 0;
    var num2 = 21;
    var num3 = 0;
    var num4 = 65;
    if (max_distance > 0) {
      num = $T2D().Max(num, ((this.get_row() - max_distance) | 0));
      num2 = $T2D().Min(num2, ((this.get_row() + max_distance) | 0));
      num3 = $T2D().Max(num3, ((this.get_col() - max_distance) | 0));
      num4 = $T2D().Min(num4, ((this.get_col() + max_distance) | 0));
    }
    var flag = false;
    var flag2 = false;
    if (radius < 0) {
      if (radius !== -1) {
        radius = (-radius | 0);
      }
      flag = true;
    }
    var list2 = $S11().Construct();
    var num5 = 0;

    for (var num6 = 1; !((num6 > max_distance) && 
        (max_distance !== -1)) && (num6 <= 66); num6 = ((num6 + 1) | 0)) {

      for (var a$0 = this.ActorsAtDistance(num6)._items, i$0 = 0, l$0 = this.ActorsAtDistance(num6)._size; i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current = a$0[i$0];
        if (!(!this.CanSee(current) || (!lookmode && 
              ((!this.IsWithinSightRangeOf(current) && 
                  !current.tile().IsLit()) || 
                !this.HasLOS(current))))) {
          list2.Add(current);
        }
      }
    }
    if (lookmode) {

      for (var num7 = 1; !((num7 > max_distance) && 
          (max_distance !== -1)) && (num7 <= 66); num7 = ((num7 + 1) | 0)) {

        for (var a$1 = this.TilesAtDistance(num7)._items, i$1 = 0, l$1 = this.TilesAtDistance(num7)._size; i$1 < l$1; ($temp01 = i$1, 
            i$1 = ((i$1 + 1) | 0), 
            $temp01)) {
          var current2 = a$1[i$1];
          if (!(((current2.Tile$type$value !== $T1A().STAIRS) && 
                (current2.Tile$type$value !== $T1A().CHEST) && 
                !$S0A().CallVirtual("Is", null, current2, $T19().GRENADE) && 
                (current2.Tile$type$value !== $T1A().FIREPIT) && 
                !$S0A().CallVirtual("Is", null, current2, $T19().QUICKFIRE) && 
                (current2.Tile$type$value !== $T1A().STALAGMITE) && 
                !$S0A().CallVirtual("Is", null, current2, $T19().TROLL_CORPSE) && 
                !$S0A().CallVirtual("Is", null, current2, $T19().TROLL_SEER_CORPSE) && 
                !$S0A().CallVirtual("Is", null, current2, $T19().RUNE_OF_RETREAT) && 
                !$S0B().CallVirtual("Is", null, current2, $T1A().FIRE_GEYSER) && 
                !$S0A().CallVirtual("Is", null, current2, $T19().POISON_GAS) && 
                !$S0A().CallVirtual("Is", null, current2, $T19().FOG) && 
                !$S0A().CallVirtual("Is", null, current2, $T19().FUNGUS) && 
                !$S0A().CallVirtual("Is", null, current2, $T19().FUNGUS_ACTIVE) && 
                !$S0A().CallVirtual("Is", null, current2, $T19().FUNGUS_PRIMED) && 
                !$S0B().CallVirtual("Is", null, current2, $T1A().FOG_VENT) && 
                !$S0B().CallVirtual("Is", null, current2, $T1A().HEALING_POOL) && 
                !$S0B().CallVirtual("Is", null, current2, $T1A().POISON_GAS_VENT) && 
                !current2.IsShrine() && 
                (current2.Tile$inv$value === null)) || !this.CanSee(current2))) {
            list2.Add(current2);
          }
          if (!(!lookmode || 
              !current2.IsKnownTrap() || !this.CanSee(current2))) {
            $T27().AddUnique$b1($T10())(list2, current2);
          }
        }
      }
    }
    var array = JSIL.MultidimensionalArray.New($T3E(), 22, 66);
    var list3 = $S12().Construct();
    var list4 = $S12().Construct();
    var flag3 = false;
    var row = -1;
    var col = -1;
    var height = -1;
    var width = -1;

    for (var i = 0; i < 22; i = ((i + 1) | 0)) {

      for (var j = 0; j < 66; j = ((j + 1) | 0)) {
        array.GetReference(i, j).set($T1F().MapChar(i, j).MemberwiseClone());
      }
    }
    if (!(start_at_interesting_target && (list2.get_Count() !== 0))) {
      if (lookmode) {
        $thisType.Actor$B$value.DisplayNow("Move the cursor to look around. ");
      } else {
        $thisType.Actor$B$value.DisplayNow("Move cursor to choose target, then press Enter. ");
      }
    }
    if (lookmode) {
      if (!(start_at_interesting_target && (list2.get_Count() !== 0))) {
        var num8 = this.get_row();
        var num9 = this.get_col();
        num5 = -1;
      } else {
        num8 = (list2.get_Item(0)).get_row();
        num9 = (list2.get_Item(0)).get_col();
      }
    } else if (!((this.Actor$target$value !== null) && 
        this.CanSee(this.Actor$target$value) && ((max_distance <= 0) || 
          ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) <= max_distance)))) {
      if (!(start_at_interesting_target && (list2.get_Count() !== 0))) {
        num8 = this.get_row();
        num9 = this.get_col();
        num5 = -1;
      } else {
        num8 = (list2.get_Item(0)).get_row();
        num9 = (list2.get_Item(0)).get_col();
      }
    } else {
      num8 = this.Actor$target$value.get_row();
      num9 = this.Actor$target$value.get_col();
      if ($T24().Option($T58().LAST_TARGET)) {
        var list5 = this.GetBestExtendedLine(this.Actor$target$value);
        list5 = $T27().ToFirstSolidTile(list5);
        if (list5.get_Count() > ((max_distance + 1) | 0)) {
          $T2A().prototype.RemoveRange.call(list5, ((max_distance + 1) | 0), ((((list5.get_Count() - max_distance) | 0) - 1) | 0));
        }
        return list5;
      }
      num5 = list2.IndexOf(this.Actor$target$value);
    }
    var flag4 = true;

    for (var flag5 = false; !flag5; ) {
      if (!flag5) {
        $T1F().ResetColors();
        var text = "You see ";
        var list6 = $S4E().Construct();
        if (!(($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, num8, num9) === null) || 
            ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, num8, num9) === this) || !this.CanSee($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, num8, num9)))) {
          list6.Add(($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, num8, num9).PhysicalObject$a_name$value + " " + $T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, num8, num9).WoundStatus()));
        }
        if ($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num8, num9).Tile$inv$value !== null) {
          list6.Add($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num8, num9).Tile$inv$value.AName());
        }

        for (var a$2 = $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num8, num9).features._items, i$2 = 0, l$2 = $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num8, num9).features._size; i$2 < l$2; ($temp02 = i$2, 
            i$2 = ((i$2 + 1) | 0), 
            $temp02)) {
          var current3 = a$2[i$2];
          list6.Add($T17().Feature(current3).PhysicalObject$a_name$value);
        }
        if (list6.get_Count() === 0) {
          text = (JSIL.ConcatString(text, $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num8, num9).PhysicalObject$a_name$value));
        } else if (list6.get_Count() === 1) {
          text = ((text + list6.get_Item(0) + $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num8, num9).Preposition() + $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num8, num9).PhysicalObject$a_name$value));
        } else if (list6.get_Count() === 2) {
          if ($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num8, num9).Tile$type$value !== $T1A().FLOOR) {
            if ($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num8, num9).Preposition() == " and ") {
              var text2 = text;
              text = (JSIL.ConcatString.apply(null, JSIL.Array.New($T13(), [text2, list6.get_Item(0), ", ", list6.get_Item(1), ","])));
              text = ((text + $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num8, num9).Preposition() + $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num8, num9).PhysicalObject$a_name$value));
            } else {
              text = ((text + list6.get_Item(0) + " and " + list6.get_Item(1)));
              text = ((text + $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num8, num9).Preposition() + $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num8, num9).PhysicalObject$a_name$value));
            }
          } else {
            text = ((text + list6.get_Item(0) + " and " + list6.get_Item(1)));
          }
        } else {

          for (var a$3 = list6._items, i$3 = 0, l$3 = list6._size; i$3 < l$3; ($temp03 = i$3, 
              i$3 = ((i$3 + 1) | 0), 
              $temp03)) {
            var current4 = a$3[i$3];
            if (current4 != $T27().Last$b1($T13())(list6)) {
              text = ((text + current4 + ", "));
            } else if ($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num8, num9).Tile$type$value !== $T1A().FLOOR) {
              text = ((text + current4 + ","));
            } else {
              text = ((text + "and " + current4));
            }
          }
          if ($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num8, num9).Tile$type$value !== $T1A().FLOOR) {
            text = ((text + $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num8, num9).Preposition() + $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num8, num9).PhysicalObject$a_name$value));
          }
        }
        if (!((num8 !== this.get_row()) || (num9 !== this.get_col()))) {
          if (!flag4) {
            var text3 = "You're standing here. ";
            if (!((list6.get_Count() !== 0) || ($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num8, num9).Tile$type$value !== $T1A().FLOOR))) {
              $thisType.Actor$B$value.DisplayNow(text3);
            } else {
              $thisType.Actor$B$value.DisplayNow((text3 + text + " here. "));
            }
          }
        } else if (this.CanSee($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num8, num9))) {
          $thisType.Actor$B$value.DisplayNow(JSIL.ConcatString(text, ". "));
        } else if (!(($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, num8, num9) === null) || !this.CanSee($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, num8, num9)))) {
          $thisType.Actor$B$value.DisplayNow(JSIL.ConcatString.apply(null, JSIL.Array.New($T13(), ["You sense ", $T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, num8, num9).PhysicalObject$a_name$value, " ", $T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, num8, num9).WoundStatus(), ". "])));
        } else if ($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num8, num9).Tile$seen$value) {
          $thisType.Actor$B$value.DisplayNow(("You can no longer see this " + $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num8, num9).PhysicalObject$$name$value + ". "));
        } else if (lookmode) {
          $thisType.Actor$B$value.DisplayNow("");
        } else {
          $thisType.Actor$B$value.DisplayNow("Move cursor to choose target, then press Enter. ");
        }
        if (!lookmode) {
          var flag6 = false;
          $T4A().set_CursorVisible(false);
          list3 = this.GetBestLineOfEffect(num8, num9);

          for (var a$4 = list3._items, i$4 = 0, l$4 = list3._size; i$4 < l$4; ($temp04 = i$4, 
              i$4 = ((i$4 + 1) | 0), 
              $temp04)) {
            var current5 = a$4[i$4];
            if (!((current5.get_row() === this.get_row()) && (current5.get_col() === this.get_col()))) {
              var ch = array.Get(
                current5.get_row(), 
                current5.get_col()
              ).MemberwiseClone();
              if (!((current5.get_row() !== num8) || (current5.get_col() !== num9))) {
                if (!flag6) {
                  ch.bgcolor = $T03().Green;
                  if ($T24().LINUX) {
                    ch.bgcolor = $T03().DarkGreen;
                  }
                  if (ch.color === ch.bgcolor) {
                    ch.color = $T03().Black;
                  }
                  $S35().CallStatic($T1F(), "WriteMapChar", null, 
                    current5.get_row(), 
                    current5.get_col(), 
                    ch.MemberwiseClone()
                  );
                } else {
                  ch.bgcolor = $T03().Red;
                  if ($T24().LINUX) {
                    ch.bgcolor = $T03().DarkRed;
                  }
                  if (ch.color === ch.bgcolor) {
                    ch.color = $T03().Black;
                  }
                  $S35().CallStatic($T1F(), "WriteMapChar", null, 
                    current5.get_row(), 
                    current5.get_col(), 
                    ch.MemberwiseClone()
                  );
                }
              } else if (!flag6) {
                ch.bgcolor = $T03().DarkGreen;
                if (ch.color === ch.bgcolor) {
                  ch.color = $T03().Black;
                }
                $S35().CallStatic($T1F(), "WriteMapChar", null, 
                  current5.get_row(), 
                  current5.get_col(), 
                  ch.MemberwiseClone()
                );
              } else {
                ch.bgcolor = $T03().DarkRed;
                if (ch.color === ch.bgcolor) {
                  ch.color = $T03().Black;
                }
                $S35().CallStatic($T1F(), "WriteMapChar", null, 
                  current5.get_row(), 
                  current5.get_col(), 
                  ch.MemberwiseClone()
                );
              }
              if (!(!current5.Tile$seen$value || 
                  current5.Tile$passable$value || ((current5.get_row() === num8) && 
                    (current5.get_col() === num9)))) {
                flag6 = true;
              }
            }
            list4.Remove(current5);
          }
          if (radius > 0) {

            for (var a$5 = $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num8, num9).TilesWithinDistance(radius, true)._items, i$5 = 0, l$5 = $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num8, num9).TilesWithinDistance(radius, true)._size; i$5 < l$5; ($temp05 = i$5, 
                i$5 = ((i$5 + 1) | 0), 
                $temp05)) {
              var current6 = a$5[i$5];
              if (!list3.Contains(current6)) {
                var ch2 = array.Get(
                  current6.get_row(), 
                  current6.get_col()
                ).MemberwiseClone();
                if (flag6) {
                  ch2.bgcolor = $T03().DarkRed;
                } else {
                  ch2.bgcolor = $T03().DarkGreen;
                }
                if (ch2.color === ch2.bgcolor) {
                  ch2.color = $T03().Black;
                }
                $S35().CallStatic($T1F(), "WriteMapChar", null, 
                  current6.get_row(), 
                  current6.get_col(), 
                  ch2.MemberwiseClone()
                );
                list4.Remove(current6);
              }
            }
          }
        } else {
          var ch3 = array.Get(num8, num9).MemberwiseClone();
          ch3.bgcolor = $T03().Green;
          if ($T24().LINUX) {
            ch3.bgcolor = $T03().DarkGreen;
          }
          if (ch3.color === ch3.bgcolor) {
            ch3.color = $T03().Black;
          }
          $S35().CallStatic($T1F(), "WriteMapChar", null, num8, num9, ch3.MemberwiseClone());
          list3 = ($S12().Construct()).__Initialize__([[$T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num8, num9)]]);
          list4.Remove($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num8, num9));
          if (!(flag2 || 
              ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, num8, num9) === null) || 
              ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, num8, num9) === this) || !this.CanSee($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, num8, num9)))) {
            var flag7 = false;
            var num10 = 29;
            if (((num9 - 6) | 0) < num10) {
              num10 = ((num9 - 6) | 0);
            }
            if (num10 < 20) {
              flag7 = true;
              num10 = 29;
            }
            var list7 = $thisType.MonsterDescriptionBox($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, num8, num9).Actor$type$value, num10);
            if (flag7) {
              var num11 = ((66 - (list7.get_Item(0)).Length()) | 0);
              flag3 = true;
              row = 0;
              col = num11;
              height = list7.get_Count();
              width = (list7.get_Item(0)).Length();

              for (var k = 0; k < list7.get_Count(); k = ((k + 1) | 0)) {
                $S54().CallStatic($T1F(), "WriteMapString", null, k, num11, list7.get_Item(k));
              }
            } else {
              flag3 = true;
              row = 0;
              col = 0;
              height = list7.get_Count();
              width = (list7.get_Item(0)).Length();

              for (var l = 0; l < list7.get_Count(); l = ((l + 1) | 0)) {
                $S54().CallStatic($T1F(), "WriteMapString", null, l, 0, list7.get_Item(l));
              }
            }
          }
        }

        for (var a$6 = list4._items, i$6 = 0, l$6 = list4._size; i$6 < l$6; ($temp06 = i$6, 
            i$6 = ((i$6 + 1) | 0), 
            $temp06)) {
          var current7 = a$6[i$6];
          $S35().CallStatic($T1F(), "WriteMapChar", null, 
            current7.get_row(), 
            current7.get_col(), 
            array.Get(
              current7.get_row(), 
              current7.get_col()
            ).MemberwiseClone()
          );
        }
        list4 = $s00.Construct(list3);
        if (radius > 0) {

          for (var a$7 = $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num8, num9).TilesWithinDistance(radius, true)._items, i$7 = 0, l$7 = $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num8, num9).TilesWithinDistance(radius, true)._size; i$7 < l$7; ($temp07 = i$7, 
              i$7 = ((i$7 + 1) | 0), 
              $temp07)) {
            var current8 = a$7[i$7];
            $T27().AddUnique$b1($T17())(list4, current8);
          }
        }
        flag4 = false;
        $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num8, num9).Cursor();
      }
      $T4A().set_CursorVisible(true);
      var k2 = $T4A().ReadKey(true);
      var c = $thisType.ConvertInput(k2.MemberwiseClone());
      c = $thisType.ConvertVIKeys(c);
      var num12 = 1;
      if (!(($T4E().$Cast((k2.get_Modifiers() & $T4E().Alt)) !== $T4E().Alt) && 
          ($T4E().$Cast((k2.get_Modifiers() & $T4E().Control)) !== $T4E().Control) && ($T4E().$Cast((k2.get_Modifiers() & $T4E().Shift)) !== $T4E().Shift))) {
        num12 = 10;
      }
      var c2 = c;
      switch (c2) {
        case "1": 
          num8 = ((num8 + num12) | 0);
          num9 = ((num9 - num12) | 0);
          break;

        case "2": 
          num8 = ((num8 + num12) | 0);
          break;

        case "3": 
          num8 = ((num8 + num12) | 0);
          num9 = ((num9 + num12) | 0);
          break;

        case "4": 
          num9 = ((num9 - num12) | 0);
          break;

        default: 
        case "5": 
        case ":": 
        case ";": 
        case "<": 
          if (c2.charCodeAt(0) !== "\t".charCodeAt(0)) {
            if (c2.charCodeAt(0) !== "\r".charCodeAt(0)) {
              if ((c2.charCodeAt(0) === "\x1b".charCodeAt(0)) || (c2.charCodeAt(0) === " ".charCodeAt(0))) {
                flag5 = true;
                break;
              }
              if (c2.charCodeAt(0) !== "s".charCodeAt(0)) {
                break;
              }
            }
            if (!((num8 === this.get_row()) && (num9 === this.get_col()))) {
              if (this.HasBresenhamLineOfEffect(num8, num9)) {
                if (!(($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, num8, num9) === null) || !this.CanSee($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, num8, num9)))) {
                  this.Actor$target$value = $T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, num8, num9);
                }
                if (radius === 0) {
                  list = $T27().ToFirstSolidTile(this.GetBestExtendedLineOfEffect(num8, num9));
                  if (!((max_distance <= 0) || (list.get_Count() <= ((max_distance + 1) | 0)))) {
                    list = $T2A().prototype.GetRange.call(list, 0, ((max_distance + 1) | 0));
                  }
                } else {
                  var flag8 = false;

                $loop16: 
                  for (var a$8 = $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num8, num9).ActorsWithinDistance(radius)._items, i$8 = 0, l$8 = $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num8, num9).ActorsWithinDistance(radius)._size; i$8 < l$8; ($temp08 = i$8, 
                      i$8 = ((i$8 + 1) | 0), 
                      $temp08)) {
                    var current9 = a$8[i$8];
                    if (current9 !== this) {
                      flag8 = true;
                      break $loop16;
                    }
                  }
                  if (!(!flag8 && !flag)) {
                    list = this.GetBestLineOfEffect(num8, num9);
                    if (!((max_distance <= 0) || (list.get_Count() <= ((max_distance + 1) | 0)))) {
                      list = $T2A().prototype.GetRange.call(list, 0, ((max_distance + 1) | 0));
                    }
                  } else {
                    list = $T27().ToFirstSolidTile(this.GetBestExtendedLineOfEffect(num8, num9));
                    if (!((max_distance <= 0) || (list.get_Count() <= ((max_distance + 1) | 0)))) {
                      list = $T2A().prototype.GetRange.call(list, 0, ((max_distance + 1) | 0));
                    }
                  }
                }
              } else {
                list = $T27().ToFirstSolidTile(this.GetBestExtendedLineOfEffect(num8, num9));
                if (!((max_distance <= 0) || (list.get_Count() <= ((max_distance + 1) | 0)))) {
                  list = $T2A().prototype.GetRange.call(list, 0, ((max_distance + 1) | 0));
                }
              }
              flag5 = true;
            } else {
              var flag9 = false;

            $loop15: 
              for (var a$9 = this.ActorsWithinDistance(radius)._items, i$9 = 0, l$9 = this.ActorsWithinDistance(radius)._size; i$9 < l$9; ($temp09 = i$9, 
                  i$9 = ((i$9 + 1) | 0), 
                  $temp09)) {
                var current10 = a$9[i$9];
                if (current10 !== this) {
                  flag9 = true;
                  break $loop15;
                }
              }
              if (flag9) {
                list = this.GetBestLineOfEffect(this);
                flag5 = true;
              }
            }
          } else if (list2.get_Count() > 0) {
            num5 = ((num5 + 1) | 0);
            if (num5 === list2.get_Count()) {
              num5 = 0;
            }
            num8 = list2.get_Item(num5).get_row();
            num9 = list2.get_Item(num5).get_col();
          }
          break;

        case "6": 
          num9 = ((num9 + num12) | 0);
          break;

        case "7": 
          num8 = ((num8 - num12) | 0);
          num9 = ((num9 - num12) | 0);
          break;

        case "8": 
          num8 = ((num8 - num12) | 0);
          break;

        case "9": 
          num8 = ((num8 - num12) | 0);
          num9 = ((num9 + num12) | 0);
          break;

        case "=": 
          if (lookmode) {
            flag2 = !flag2;
          }
          break;

      }
      if (num8 < num) {
        num8 = num;
      }
      if (num8 > num2) {
        num8 = num2;
      }
      if (num9 < num3) {
        num9 = num3;
      }
      if (num9 > num4) {
        num9 = num4;
      }
      if (flag3) {
        $T1F().MapDrawWithStrings(
          array, 
          row, 
          col, 
          height, 
          width
        );
        flag3 = false;
      }
      if (flag5) {
        $T4A().set_CursorVisible(false);

        for (var a$a = list3._items, i$a = 0, l$a = list3._size; i$a < l$a; ($temp0A = i$a, 
            i$a = ((i$a + 1) | 0), 
            $temp0A)) {
          var current11 = a$a[i$a];
          $S35().CallStatic($T1F(), "WriteMapChar", null, 
            current11.get_row(), 
            current11.get_col(), 
            array.Get(
              current11.get_row(), 
              current11.get_col()
            ).MemberwiseClone()
          );
        }
        if (radius > 0) {

          for (var a$b = $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num8, num9).TilesWithinDistance(radius, true)._items, i$b = 0, l$b = $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num8, num9).TilesWithinDistance(radius, true)._size; i$b < l$b; ($temp0B = i$b, 
              i$b = ((i$b + 1) | 0), 
              $temp0B)) {
            var current12 = a$b[i$b];
            if (!list3.Contains(current12)) {
              $S35().CallStatic($T1F(), "WriteMapChar", null, 
                current12.get_row(), 
                current12.get_col(), 
                array.Get(
                  current12.get_row(), 
                  current12.get_col()
                ).MemberwiseClone()
              );
            }
          }
        }
        $T4A().set_CursorVisible(true);
      }
    }
    return list;
  };

  function Actor_GrabPreventsMovement (o) {
    var $temp00, $temp01;
    if (!(this.HasAttr($T04().GRABBED) && ($S0C().CallVirtual("DistanceFrom", null, this, o) <= 1))) {
      return false;
    }
    var list = $S16().Construct();

    for (var a$0 = this.ActorsAtDistance(1)._items, i$0 = 0, l$0 = this.ActorsAtDistance(1)._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      if ($T09().prototype.get_Item.call(current.attrs, $T04().GRABBING) === $S1E().CallVirtual("DirectionOf", null, current, this)) {
        list.Add(current);
      }
    }

    for (var a$1 = list._items, i$1 = 0, l$1 = list._size; i$1 < l$1; ($temp01 = i$1, 
        i$1 = ((i$1 + 1) | 0), 
        $temp01)) {
      var current2 = a$1[i$1];
      if ($S0C().CallVirtual("DistanceFrom", null, o, current2) > 1) {
        return true;
      }
    }
    return false;
  };

  function Actor_HasAttr (attr) {
    return ($T09().prototype.get_Item.call(this.attrs, attr) > 0);
  };

  function Actor_HasFeat (feat) {
    return ($T0A().prototype.get_Item.call(this.feats, feat) > 0);
  };

  function Actor_HasSpell (spell) {
    return ($T0B().prototype.get_Item.call(this.spells, spell) > 0);
  };

  function Actor_IdleAI () {
    var $temp00, $temp01, $temp02, $temp03, $temp04, $temp05, $temp06;

    var $label0 = 0;
  $labelgroup0: 
    while (true) {
      switch ($label0) {
        case 0: /* $entry0 */ 
          if (this.PathStep()) {
            return;
          }
          var type = this.Actor$type$value;
          switch (type.valueOf()) {
            case 2: 
              this.FindPath($thisType.Actor$player$value);
              this.QS();
              return;

            default: 
            case 3: 
            case 5: 
            case 6: 
              if (type !== $T02().PHANTOM_BLIGHTWING) {
                if (type === $T02().PHANTOM_SWORDMASTER) {
                  $label0 = 1 /* goto IL_4ED */ ;
                  continue $labelgroup0;
                }
                if (type !== $T02().ORC_WARMAGE) {
                  break $labelgroup0;
                }

                for (var a$0 = this.ActorsWithinDistance(2)._items, i$0 = 0, l$0 = this.ActorsWithinDistance(2)._size; i$0 < l$0; ($temp00 = i$0, 
                    i$0 = ((i$0 + 1) | 0), 
                    $temp00)) {
                  var current = a$0[i$0];
                  if (!(!current.HasAttr($T04().SPELL_DISRUPTION) || !current.HasLOE(this))) {
                    this.QS();
                    return;
                  }
                }
                if (!this.HasAttr($T04().BLOODSCENT)) {
                  this.CastSpell($T05().BLOODSCENT);
                  return;
                }
                break $labelgroup0;
              }
              break;

            case 7: 
              var physicalObject = null;
              if (!$T10().PhysicalObject$M$value.get_wiz_lite()) {
                var list = $S11().Construct();

                for (var a$1 = $T10().PhysicalObject$M$value.AllTiles()._items, i$1 = 0, l$1 = $T10().PhysicalObject$M$value.AllTiles()._size; i$1 < l$1; ($temp01 = i$1, 
                    i$1 = ((i$1 + 1) | 0), 
                    $temp01)) {
                  var current2 = a$1[i$1];
                  var num = current2.PhysicalObject$light_radius$value;
                  var physicalObject2 = current2;
                  if (!((current2.Tile$inv$value === null) || (current2.Tile$inv$value.PhysicalObject$light_radius$value <= num))) {
                    num = current2.Tile$inv$value.PhysicalObject$light_radius$value;
                    physicalObject2 = current2.Tile$inv$value;
                  }
                  if (!((current2.actor() === null) || (current2.actor().LightRadius() <= num))) {
                    num = current2.actor().LightRadius();
                    physicalObject2 = current2.actor();
                  }
                  if (num > 0) {
                    if (!((list.get_Count() !== 0) || !this.CanSee(current2))) {
                      list.Add(physicalObject2);
                    } else {

                    $loop2: 
                      for (var a$2 = list._items, i$2 = 0, l$2 = list._size; i$2 < l$2; ($temp02 = i$2, 
                          i$2 = ((i$2 + 1) | 0), 
                          $temp02)) {
                        var current3 = a$2[i$2];
                        if (num > current3.PhysicalObject$light_radius$value) {
                          if (this.CanSee(current2)) {
                            list.Clear();
                            list.Add(physicalObject2);
                            break $loop2;
                          }
                        } else if (!((num !== current3.PhysicalObject$light_radius$value) || ($S0C().CallVirtual("DistanceFrom", null, this, current2) >= $S0C().CallVirtual("DistanceFrom", null, this, current3)))) {
                          if (this.CanSee(current2)) {
                            list.Clear();
                            list.Add(physicalObject2);
                            break $loop2;
                          }
                        } else if (!((num !== current3.PhysicalObject$light_radius$value) || 
                            ($S0C().CallVirtual("DistanceFrom", null, this, current2) !== $S0C().CallVirtual("DistanceFrom", null, this, current3)) || 
                            (physicalObject2 !== $thisType.Actor$player$value) || !this.CanSee(current2))) {
                          list.Clear();
                          list.Add(physicalObject2);
                          break $loop2;
                        }
                      }
                    }
                  }
                }
                if (list.get_Count() > 0) {
                  physicalObject = $T27().Random$b1($T10())(list);
                }
              }
              if (physicalObject !== null) {
                if ($S0C().CallVirtual("DistanceFrom", null, this, physicalObject) <= 1) {
                  var list2 = $S12().Construct();

                  for (var a$3 = this.TilesAtDistance(1)._items, i$3 = 0, l$3 = this.TilesAtDistance(1)._size; i$3 < l$3; ($temp03 = i$3, 
                      i$3 = ((i$3 + 1) | 0), 
                      $temp03)) {
                    var current4 = a$3[i$3];
                    if (!(($S0C().CallVirtual("DistanceFrom", null, current4, physicalObject) > 1) || 
                        !current4.Tile$passable$value || (current4.actor() !== null))) {
                      list2.Add(current4);
                    }
                  }
                  if (list2.get_Count() > 0) {
                    this.AI_Step($T27().Random$b1($T17())(list2));
                  }
                  this.QS();
                } else {
                  this.AI_Step(physicalObject);
                  this.QS();
                }
              } else {
                var dir = $T24().RandomDirection();
                if (!((($T27().Where$b1($T17())(this.TilesAtDistance(1), function Actor_$lIdleAI$gm__39 (t) {
                            return !t.Tile$passable$value;
                          })).get_Count() <= 4) || this.TileInDirection(dir).Tile$passable$value)) {
                  dir = $T24().RandomDirection();
                }
                if (!(!this.TileInDirection(dir).Tile$passable$value || (this.ActorInDirection(dir) !== null))) {
                  this.AI_Step(this.TileInDirection(dir));
                  this.QS();
                } else {
                  if ($thisType.Actor$player$value.HasLOS(this.TileInDirection(dir))) {
                    if (!this.TileInDirection(dir).Tile$passable$value) {
                      $thisType.Actor$B$value.Add((this.PhysicalObject$the_name$value + " brushes up against " + this.TileInDirection(dir).PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [this]));
                    } else if (this.ActorInDirection(dir) !== null) {
                      $thisType.Actor$B$value.Add((this.PhysicalObject$the_name$value + " brushes up against " + this.ActorInDirection(dir).TheVisible() + ". "), JSIL.Array.New($T10(), [this]));
                    }
                  }
                  this.QS();
                }
              }
              return;

            case 8: 
              $label0 = 1 /* goto IL_4ED */ ;
              continue $labelgroup0;

          }
          this.AI_Step(this.TileInDirection($T24().RandomDirection()));
          this.QS();
          return;

          $label0 = 1 /* goto IL_4ED */ ;
          continue $labelgroup0;
        case 1: /* IL_4ED */ 
          if ($T09().prototype.get_Item.call(this.attrs, $T04().BONUS_COMBAT) > 0) {
            $T09().prototype.set_Item.call(this.attrs, $T04().BONUS_COMBAT, 0);
          }
          break $labelgroup0;

      }
    }
    /* Original label IL_52A */ 
    if (this.HasAttr($T04().WANDERING)) {
      if ($T24().Roll(10) <= 6) {
        var list3 = $S12().Construct();

        for (var a$4 = $T10().PhysicalObject$M$value.AllTiles()._items, i$4 = 0, l$4 = $T10().PhysicalObject$M$value.AllTiles()._size; i$4 < l$4; ($temp04 = i$4, 
            i$4 = ((i$4 + 1) | 0), 
            $temp04)) {
          var current5 = a$4[i$4];
          if (!(!current5.Tile$passable$value || !this.CanSee(current5))) {
            list3.Add(current5);
          }
        }
        if (list3.get_Count() > 0) {
          this.FindPath($T27().Random$b1($T17())(list3));
        } else {
          $T09().prototype.set_Item.call(this.attrs, $T04().WANDERING, 0);
        }
      } else if ($T24().OneIn(4)) {
        var list4 = $S12().Construct();

        for (var a$5 = $T10().PhysicalObject$M$value.AllTiles()._items, i$5 = 0, l$5 = $T10().PhysicalObject$M$value.AllTiles()._size; i$5 < l$5; ($temp05 = i$5, 
            i$5 = ((i$5 + 1) | 0), 
            $temp05)) {
          var current6 = a$5[i$5];
          if (current6.Tile$passable$value) {
            list4.Add(current6);
          }
        }
        if (list4.get_Count() > 0) {
          this.FindPath($T27().Random$b1($T17())(list4));
        } else {
          $T09().prototype.set_Item.call(this.attrs, $T04().WANDERING, 0);
        }
      } else {
        var list5 = $S12().Construct();

        for (var a$6 = $T10().PhysicalObject$M$value.AllTiles()._items, i$6 = 0, l$6 = $T10().PhysicalObject$M$value.AllTiles()._size; i$6 < l$6; ($temp06 = i$6, 
            i$6 = ((i$6 + 1) | 0), 
            $temp06)) {
          var current7 = a$6[i$6];
          if (!(!current7.Tile$passable$value || ($S0C().CallVirtual("DistanceFrom", null, this, current7) > 12))) {
            list5.Add(current7);
          }
        }
        if (list5.get_Count() > 0) {
          this.FindPath($T27().Random$b1($T17())(list5));
        } else {
          $T09().prototype.set_Item.call(this.attrs, $T04().WANDERING, 0);
        }
      }
      if (this.PathStep()) {
        return;
      }
      this.QS();
    } else {
      if (!((this.group === null) || 
          (this.group.get_Item(0) === this) || ($S0C().CallVirtual("DistanceFrom", null, this, this.group.get_Item(0)) <= 1))) {
        var dir2 = $S1E().CallVirtual("DirectionOf", null, this, this.group.get_Item(0));
        var flag = false;

      $loop4: 
        for (var i = -1; i <= 1; i = ((i + 1) | 0)) {
          var actor = this.ActorInDirection(this.RotateDirection(dir2, true, i));
          if (!((actor === null) || !this.group.Contains(actor))) {
            flag = true;
            break $loop4;
          }
        }
        if (!flag) {
          if (this.HasLOS(this.group.get_Item(0))) {
            this.AI_Step(this.group.get_Item(0));
          } else {
            $S55().CallVirtual("FindPath", null, this, this.group.get_Item(0), 8);
            if (this.PathStep()) {
              return;
            }
          }
        }
      }
      this.QS();
    }
  };

  function Actor_IncreaseSkill (skill) {
    var $temp00;
    var dict = null, dict2 = null, key = $asm00.Forays.FeatType.QUICK_DRAW, disposable = null;
    var list = $S4E().Construct();
    var num = $T06().prototype.get_Item.call(dict, skill);
    $T06().prototype.set_Item.call((dict = this.skills), skill, ((num + 1) | 0));
    $thisType.Actor$B$value.Add("You feel a rush of power. ", JSIL.Array.New($T10(), 0));
    $thisType.Actor$B$value.PrintAll();
    var featType = $T41().NO_FEAT;
    var flag = false;

    while (!flag) {
      $T1F().ResetColors();
      $S3D().CallStatic($T1F(), "WriteMapString", null, 0, 0, System.String.PadRight("", 66, "-"));

      for (var i = 0; i < 4; i = ((i + 1) | 0)) {
        var featType2 = $T51().OfSkill(skill, i);
        var color = ((featType !== featType2) ? $T03().Gray : $T03().Green);
        var color2 = $T03().Cyan;
        var num2 = ((featType !== featType2) ? (-$T0A().prototype.get_Item.call(this.feats, featType2) | 0) : (((-$T0A().prototype.get_Item.call(this.feats, featType2) | 0) + 1) | 0));
        if (this.HasFeat(featType2)) {
          color = $T03().Magenta;
          color2 = $T03().DarkRed;
          num2 = $T51().MaxRank(featType2);
        }
        $S3D().CallStatic($T1F(), "WriteMapString", null, ((1 + ((i * 5) | 0)) | 0), 0, JSIL.ConcatString("[", String.fromCharCode(((i + 97) | 0)), "] "));
        $T1F().WriteMapChar(((1 + ((i * 5) | 0)) | 0), 1, String.fromCharCode(((i + 97) | 0)), color2);
        $T1F().WriteMapString(((1 + ((i * 5) | 0)) | 0), 4, JSIL.ConcatString.apply(null, JSIL.Array.New($T60(), [System.String.PadRight($T51().Name(featType2), 21, ' '), "(", num2, "/", $T51().MaxRank(featType2), ")"])), color);
        if ($T51().IsActivated(featType2)) {
          $S3D().CallStatic($T1F(), "WriteMapString", null, ((1 + ((i * 5) | 0)) | 0), 30, $T27().PadToMapSize("        Active"));
        } else {
          $S3D().CallStatic($T1F(), "WriteMapString", null, ((1 + ((i * 5) | 0)) | 0), 30, $T27().PadToMapSize("        Passive"));
        }
        var list2 = $T51().Description(featType2);

        for (var j = 0; j < 4; j = ((j + 1) | 0)) {
          if (list2.get_Count() > j) {
            $S3D().CallStatic($T1F(), "WriteMapString", null, ((((2 + j) | 0) + ((i * 5) | 0)) | 0), 0, JSIL.ConcatString("    ", System.String.PadRight(list2.get_Item(j), 64, ' ')));
          } else {
            $S3D().CallStatic($T1F(), "WriteMapString", null, ((((2 + j) | 0) + ((i * 5) | 0)) | 0), 0, System.String.PadRight("", 66, ' '));
          }
        }
      }
      if (featType !== $T41().NO_FEAT) {
        $S3D().CallStatic($T1F(), "WriteMapString", null, 21, 0, "--Type [a-d] to choose a feat---[?] for help---[Enter] to accept--");
        $S35().CallStatic($T1F(), "WriteMapChar", null, 21, 8, $S24().Construct($T03().Cyan, "a"));
        $S35().CallStatic($T1F(), "WriteMapChar", null, 21, 10, $S24().Construct($T03().Cyan, "d"));
        $S35().CallStatic($T1F(), "WriteMapChar", null, 21, 33, $S24().Construct($T03().Cyan, "?"));
        $S3E().CallStatic($T1F(), "WriteMapString", null, 21, 48, $S3F().Construct($T03().Magenta, "Enter"));
      } else {
        $S3D().CallStatic($T1F(), "WriteMapString", null, 21, 0, "--Type [a-d] to choose a feat---[?] for help----------------------");
        $S35().CallStatic($T1F(), "WriteMapChar", null, 21, 8, $S24().Construct($T03().Cyan, "a"));
        $S35().CallStatic($T1F(), "WriteMapChar", null, 21, 10, $S24().Construct($T03().Cyan, "d"));
        $S35().CallStatic($T1F(), "WriteMapChar", null, 21, 33, $S24().Construct($T03().Cyan, "?"));
      }
      $thisType.Actor$B$value.DisplayNow(JSIL.ConcatString.apply(null, JSIL.Array.New($T60(), ["Your ", $T50().Name(skill), " skill increases to ", $T06().prototype.get_Item.call(this.skills, skill), ". Choose a feat: "])));
      if (!$T62().prototype.get_Item.call($T28().displayed, $T29().Feats)) {
        $T28().TutorialTip($T29().Feats);
        $thisType.Actor$B$value.DisplayNow(JSIL.ConcatString.apply(null, JSIL.Array.New($T60(), ["Your ", $T50().Name(skill), " skill increases to ", $T06().prototype.get_Item.call(this.skills, skill), ". Choose a feat: "])));
      }
      $T4A().set_CursorVisible(true);
      var k = $T4A().ReadKey(true);
      $T4A().set_CursorVisible(false);
      var c = $thisType.ConvertInput(k.MemberwiseClone());
      var c2 = c;
      switch (c2) {
        case "a": 
        case "b": 
        case "c": 
        case "d": 
          var featType3 = $T51().OfSkill(skill, (String.fromCharCode((c.charCodeAt(0) - "a".charCodeAt(0)))).charCodeAt(0));
          if (featType === featType3) {
            featType = $T41().NO_FEAT;
          } else if (!((featType !== $T41().NO_FEAT) || this.HasFeat(featType3))) {
            featType = featType3;
          }
          break;

        default: 
          if (c2.charCodeAt(0) !== "\r".charCodeAt(0)) {
            if (c2.charCodeAt(0) === "?".charCodeAt(0)) {
              $T28().DisplayHelp($T63().Feats);
              this.DisplayStats();
            }
          } else if (featType !== $T41().NO_FEAT) {
            flag = true;
          }
          break;

      }
    }
    var expr_43E = (dict2 = this.feats);
    var expr_443 = (key = featType);
    num = $T0A().prototype.get_Item.call(dict2, key);
    $T0A().prototype.set_Item.call(expr_43E, expr_443, ((num - 1) | 0));
    $T27().AddUnique$b1($T41())($thisType.partial_feats_in_order, featType);
    if ($T0A().prototype.get_Item.call(this.feats, featType) === (-$T51().MaxRank(featType) | 0)) {
      $T0A().prototype.set_Item.call(this.feats, featType, 1);
      $thisType.partial_feats_in_order.Remove(featType);
      $thisType.feats_in_order.Add(featType);
      list.Add(("You master the " + $T51().Name(featType) + " feat. "));
    } else {
      var text = "points";
      if ((($T51().MaxRank(featType) + $T0A().prototype.get_Item.call(this.feats, featType)) | 0) === 1) {
        text = "point";
      }
      if ($T0A().prototype.get_Item.call(this.feats, featType) === -1) {
        list.Add(JSIL.ConcatString.apply(null, JSIL.Array.New($T60(), ["You start learning the ", $T51().Name(featType), " feat (", (($T51().MaxRank(featType) + $T0A().prototype.get_Item.call(this.feats, featType)) | 0), " ", text, " left). "])));
      } else {
        list.Add(JSIL.ConcatString.apply(null, JSIL.Array.New($T60(), ["You continue learning the ", $T51().Name(featType), " feat (", (($T51().MaxRank(featType) + $T0A().prototype.get_Item.call(this.feats, featType)) | 0), " ", text, " left). "])));
      }
    }
    if (skill === $T07().MAGIC) {
      var list3 = $S18().Construct();
      var list4 = $S56().Construct();
      var enumerator = (JSIL.GetEnumerator($T66().GetValues($T05().__Type__)));
      try {

        while ($IM01().Call(enumerator, null)) {
          var spellType = $T05().$Cast($IM02().Call(enumerator, null));
          if (!(this.HasSpell(spellType) || 
              (spellType === $T05().BLESS) || 
              (spellType === $T05().MINOR_HEAL) || 
              (spellType === $T05().HOLY_SHIELD) || 
              (spellType === $T05().NO_SPELL) || (spellType === $T05().NUM_SPELLS))) {
            list3.Add(spellType);
            var colorstring = $S47().Construct(JSIL.Array.New($T4F(), 0));
            colorstring.strings.Add($S57().Construct(JSIL.ConcatString(System.String.PadRight($T42().Name(spellType), 15, ' '), System.String.PadLeft(($T42().Level(spellType)).toString(), 3, ' ')), $T03().Gray));
            var num3 = (((($T42().Level(spellType) - this.TotalSkill($T07().MAGIC)) | 0) * 5) | 0);
            if (num3 < 0) {
              num3 = 0;
            }
            colorstring.strings.Add($S57().Construct(JSIL.ConcatString(System.String.PadLeft((num3).toString(), 9, ' '), "%"), $S58().CallVirtual("FailColor", null, this, num3)));
            list4.Add($T59().op_Addition(colorstring, $T42().Description(spellType)));
          }
        }
      } finally {
        if ((disposable = $T39().$As(enumerator)) !== null) {
          $IM00().Call(disposable, null);
        }
      }

      for (var l = ((list3.get_Count() + 2) | 0); l < 22; l = ((l + 1) | 0)) {
        $S3D().CallStatic($T1F(), "WriteMapString", null, l, 0, System.String.PadRight("", 66, ' '));
      }
      var top_border = $S59().Construct("------------------Level---Fail rate--------Description------------", $T03().Gray);
      var index = this.Select(
        "Learn which spell? ", 
        top_border, 
        $S5A().Construct(JSIL.ConcatString(System.String.PadRight("", 25, "-"), "["), $T03().Gray, "?", $T03().Cyan, System.String.PadRight("] for help", 66, "-"), $T03().Gray), 
        list4, 
        false, 
        true, 
        false, 
        true, 
        $T63().Spells
      );
      $T0B().prototype.set_Item.call(this.spells, list3.get_Item(index), 1);
      list.Add(("You learn " + $T42().Name(list3.get_Item(index)) + ". "));
      $thisType.spells_in_order.Add(list3.get_Item(index));
    }
    if (list.get_Count() > 0) {

      for (var a$0 = list._items, i$0 = 0, l$0 = list._size; i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current = a$0[i$0];
        $thisType.Actor$B$value.Add(current, JSIL.Array.New($T10(), 0));
      }
    }
  };

  function Actor_Input () {
    var $temp00, $temp01, $temp02, $temp03;
    var dict = null, dict2 = null, dict3 = null, dict4 = null, dict5 = null, dict6 = null, dict7 = null, dict8 = null, dict9 = null, num9 = 0, dict10 = null, dict11 = null;
    var flag = false;
    if (!(!this.HasAttr($T04().DESTROYED_BY_SUNLIGHT) || (!$T10().PhysicalObject$M$value.get_wiz_lite() && 
          (!$thisType.Actor$player$value.HasAttr($T04().ENHANCED_TORCH) || 
            ($S0C().CallVirtual("DistanceFrom", null, this, $thisType.Actor$player$value) > $thisType.Actor$player$value.PhysicalObject$light_radius$value) || 
            !$thisType.Actor$player$value.HasBresenhamLine(
              this.get_row(), 
              this.get_col()
            ))))) {
      $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("turn"), " to dust! "), JSIL.Array.New($T10(), [this]));
      this.TakeDamage($T31().NORMAL, $T32().NO_TYPE, 9999, null);
      return;
    }
    if (this.Actor$type$value === $T02().MUD_TENTACLE) {
      var num = $T09().prototype.get_Item.call(dict, $T04().COOLDOWN_1);
      $T09().prototype.set_Item.call((dict = this.attrs), $T04().COOLDOWN_1, ((num - 1) | 0));
      if ($T09().prototype.get_Item.call(this.attrs, $T04().COOLDOWN_1) < 0) {
        this.TakeDamage($T31().NORMAL, $T32().NO_TYPE, 9999, null);
        return;
      }
    }
    if (!((this !== $thisType.Actor$player$value) || !$S0B().CallVirtual("Is", null, this.tile(), $T1A().CHASM))) {
      var boss_already_on_level = false;

    $loop0: 
      for (var a$0 = $T10().PhysicalObject$M$value.AllActors()._items, i$0 = 0, l$0 = $T10().PhysicalObject$M$value.AllActors()._size; i$0 < l$0; ($temp01 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp01)) {
        var current = a$0[i$0];
        if (!((current.Actor$type$value !== $T02().FIRE_DRAKE) || !$S0B().CallVirtual("Is", null, current.tile(), $T1A().CHASM))) {
          boss_already_on_level = true;
          break $loop0;
        }
      }
      var enumerator2 = $T38().prototype.GetEnumerator.call($thisType.Actor$Q$value.list).MemberwiseClone();
      try {

      $loop1: 
        while (enumerator2.MoveNext()) {
          var current2 = enumerator2.get_Current();
          if (current2.Event$type$value === $T22().BOSS_ARRIVE) {
            boss_already_on_level = (current2.Event$attr$value !== $T04().COOLDOWN_1);
            break $loop1;
          }
        }
      } finally {
        $IM00().Call(enumerator2, null);
      }
      $thisType.Actor$B$value.Add("You fall. ", JSIL.Array.New($T10(), 0));
      $thisType.Actor$B$value.PrintAll();
      var num2 = this.magic_penalty;
      var value = $T09().prototype.get_Item.call(this.attrs, $T04().RESTING);
      $T10().PhysicalObject$M$value.GenerateBossLevel(boss_already_on_level);
      this.magic_penalty = num2;
      $T09().prototype.set_Item.call(this.attrs, $T04().RESTING, value);
      this.Q0();
      return;
    }
    if ((this.Actor$type$value !== $T02().FIRE_DRAKE) || !$S0B().CallVirtual("Is", null, this.tile(), $T1A().CHASM)) {
      if (this.HasAttr($T04().AGGRAVATING)) {

        for (var a$1 = this.ActorsWithinDistance(12)._items, i$1 = 0, l$1 = this.ActorsWithinDistance(12)._size; i$1 < l$1; ($temp02 = i$1, 
            i$1 = ((i$1 + 1) | 0), 
            $temp02)) {
          var current3 = a$1[i$1];
          current3.player_visibility_duration = -1;
          $T09().prototype.set_Item.call(current3.attrs, $T04().PLAYER_NOTICED, 1);
          if (current3.HasLOS(this)) {
            current3.target_location = this.tile();
          } else {
            current3.FindPath(this);
          }
        }
      }
      if (this.HasAttr($T04().DEFENSIVE_STANCE)) {
        $T09().prototype.set_Item.call(this.attrs, $T04().DEFENSIVE_STANCE, 0);
      }
      if (this.HasAttr($T04().IN_COMBAT)) {
        $T09().prototype.set_Item.call(this.attrs, $T04().IN_COMBAT, 0);
        if (this.HasFeat($T41().CONVICTION)) {
          this.GainAttrRefreshDuration($T04().CONVICTION, $T2D().Max(this.Actor$speed$value, 100));
          var expr_460 = (dict2 = this.attrs);
          num = $T09().prototype.get_Item.call(dict2, $T04().BONUS_SPIRIT);
          $T09().prototype.set_Item.call(expr_460, $T04().BONUS_SPIRIT, ((num + 1) | 0));
          if ((($T09().prototype.get_Item.call(this.attrs, $T04().CONVICTION) % 2) | 0) === 0) {
            var expr_491 = (dict3 = this.attrs);
            num = $T09().prototype.get_Item.call(dict3, $T04().BONUS_COMBAT);
            $T09().prototype.set_Item.call(expr_491, $T04().BONUS_COMBAT, ((num + 1) | 0));
          }
        }
      } else if (!(!this.HasAttr($T04().MAGICAL_DROWSINESS) || 
          this.HasAttr($T04().ASLEEP) || 
          !$T24().OneIn(4) || (this.time_of_last_action >= $thisType.Actor$Q$value.Queue$turn$value))) {
        $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("fall"), " asleep. "), JSIL.Array.New($T10(), [this]));
        var original = ((4 + $T24().Roll(2)) | 0);
        $T09().prototype.set_Item.call(this.attrs, $T04().ASLEEP, this.DurationOfMagicalEffect(original));
      }
      if (!(!this.HasAttr($T04().TELEPORTING) || (this.time_of_last_action >= $thisType.Actor$Q$value.Queue$turn$value))) {
        var expr_557 = (dict4 = this.attrs);
        num = $T09().prototype.get_Item.call(dict4, $T04().TELEPORTING);
        $T09().prototype.set_Item.call(expr_557, $T04().TELEPORTING, ((num - 1) | 0));
        if (!this.HasAttr($T04().TELEPORTING)) {

        $loop3: 
          for (var i = 0; i < 9999; i = ((i + 1) | 0)) {
            var num3 = $T24().Roll(1, 20);
            var num4 = $T24().Roll(1, 64);
            if (!(!$T10().PhysicalObject$M$value.BoundsCheck(num3, num4) || 
                !$T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num3, num4).Tile$passable$value || ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, num3, num4) !== null))) {
              if (this.Actor$type$value.valueOf() === 0) {
                $thisType.Actor$B$value.Add("You are suddenly somewhere else. ", JSIL.Array.New($T10(), 0));
                this.Interrupt();
                this.Move(num3, num4);
              } else {
                var flag2 = false;
                if ($thisType.Actor$player$value.CanSee(this)) {
                  flag2 = true;
                }
                if ($thisType.Actor$player$value.CanSee(this.tile())) {
                  $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " suddenly disappears. "), JSIL.Array.New($T10(), [this]));
                }
                this.Move(num3, num4);
                if ($thisType.Actor$player$value.CanSee(this.tile())) {
                  if (flag2) {
                    $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " reappears. "), JSIL.Array.New($T10(), [this]));
                  } else {
                    $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$a_name$value, " suddenly appears! "), JSIL.Array.New($T10(), [this]));
                  }
                }
              }
              break $loop3;
            }
          }
          $T09().prototype.set_Item.call(this.attrs, $T04().TELEPORTING, (($T24().Roll(2, 10) + 5) | 0));
        }
      }
      if (this.HasAttr($T04().ASLEEP)) {
        var expr_717 = (dict5 = this.attrs);
        num = $T09().prototype.get_Item.call(dict5, $T04().ASLEEP);
        $T09().prototype.set_Item.call(expr_717, $T04().ASLEEP, ((num - 1) | 0));
        $T24().FlushInput();
        if (!this.HasAttr($T04().ASLEEP)) {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("wake"), " up. "), JSIL.Array.New($T10(), [this]));
        }
        if (this.Actor$type$value.valueOf() !== 0) {
          this.Q1();
          flag = true;
        }
      }
      if (this.HasAttr($T04().PARALYZED)) {
        var expr_78F = (dict6 = this.attrs);
        num = $T09().prototype.get_Item.call(dict6, $T04().PARALYZED);
        $T09().prototype.set_Item.call(expr_78F, $T04().PARALYZED, ((num - 1) | 0));
        if (this.Actor$type$value.valueOf() === 0) {
          $thisType.Actor$B$value.AddDependingOnLastPartialMessage("You can't move! ");
        } else {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " can't move! "), JSIL.Array.New($T10(), [this]));
          this.Q1();
          flag = true;
        }
      }
      if (this.HasAttr($T04().AMNESIA_STUN)) {
        $T09().prototype.set_Item.call(this.attrs, $T04().AMNESIA_STUN, 0);
        this.Q1();
        flag = true;
      }
      if (!(!this.HasAttr($T04().FROZEN) || (this.Actor$type$value.valueOf() === 0))) {
        var num5 = (($T24().Roll($T40().Attack(this.Actor$type$value, 0).damage.dice, 6) + this.TotalSkill($T07().COMBAT)) | 0);
        var expr_858 = (dict7 = this.attrs);
        num = $T09().prototype.get_Item.call(dict7, $T04().FROZEN);
        $T09().prototype.set_Item.call(expr_858, $T04().FROZEN, ((num - num5) | 0));
        if ($T09().prototype.get_Item.call(this.attrs, $T04().FROZEN) < 0) {
          $T09().prototype.set_Item.call(this.attrs, $T04().FROZEN, 0);
        }
        if (this.HasAttr($T04().FROZEN)) {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " attempts to break free. "), JSIL.Array.New($T10(), [this]));
        } else {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " breaks free! "), JSIL.Array.New($T10(), [this]));
        }
        this.Q1();
        flag = true;
      }
      if (!(!this.HasAttr($T04().AFRAID) || 
          this.HasAttr($T04().FROZEN) || this.HasAttr($T04().PARALYZED))) {
        var actor = null;
        var num6 = 100;

        for (var a$2 = $T10().PhysicalObject$M$value.AllActors()._items, i$2 = 0, l$2 = $T10().PhysicalObject$M$value.AllActors()._size; i$2 < l$2; ($temp03 = i$2, 
            i$2 = ((i$2 + 1) | 0), 
            $temp03)) {
          var current4 = a$2[i$2];
          if (!((current4.Actor$type$value !== $T02().BANSHEE) || 
              ($S0C().CallVirtual("DistanceFrom", null, this, current4) >= num6) || !this.HasLOS(
                current4.get_row(), 
                current4.get_col()
              ))) {
            actor = current4;
            num6 = $S0C().CallVirtual("DistanceFrom", null, this, current4);
          }
        }
        if (this.Actor$type$value.valueOf() === 0) {
          if (actor !== null) {
            $thisType.Actor$B$value.AddDependingOnLastPartialMessage("You flee. ");
            this.AI_Step(actor, true);
          } else {
            $thisType.Actor$B$value.AddDependingOnLastPartialMessage("You feel unsettled. ");
          }
        } else {
          if (actor !== null) {
            $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("flee"), ". "), JSIL.Array.New($T10(), [this]));
            this.AI_Step(actor, true);
          } else {
            $thisType.Actor$B$value.Add(JSIL.ConcatString(this.YouFeel(), " unsettled. "), JSIL.Array.New($T10(), [this]));
          }
          this.Q1();
          flag = true;
        }
      }
      if (this.Actor$curhp$value < this.Actor$maxhp$value) {
        if (!(!this.HasAttr($T04().REGENERATING) || (this.time_of_last_action >= $thisType.Actor$Q$value.Queue$turn$value))) {
          ($temp00 = ((this.Actor$curhp$value + $T09().prototype.get_Item.call(this.attrs, $T04().REGENERATING)) | 0), 
            this.Actor$curhp$value = $temp00, 
            $temp00);
          if (this.Actor$curhp$value > this.Actor$maxhp$value) {
            this.Actor$curhp$value = this.Actor$maxhp$value;
          }
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("regenerate"), ". "), JSIL.Array.New($T10(), [this]));
        } else {
          var num7 = 10;
          if (this.HasFeat($T41().ENDURING_SOUL)) {
            num7 = 20;
          }
          if (!((this.recover_time > $thisType.Actor$Q$value.Queue$turn$value) || (((this.Actor$curhp$value % num7) | 0) === 0))) {
            if (this.HasAttr($T04().MAGICAL_BLOOD)) {
              this.recover_time = (($thisType.Actor$Q$value.Queue$turn$value + 100) | 0);
            } else {
              this.recover_time = (($thisType.Actor$Q$value.Queue$turn$value + 500) | 0);
            }
            this.Actor$curhp$value = ((this.Actor$curhp$value + 1) | 0);
          }
        }
      }
      if (!((!this.HasAttr($T04().POISONED) && 
            !$S0A().CallVirtual("Is", null, this.tile(), $T19().POISON_GAS)) || (this.time_of_last_action >= $thisType.Actor$Q$value.Queue$turn$value))) {
        var num8 = $T09().prototype.get_Item.call(this.attrs, $T04().POISONED);
        if (!(!$S0A().CallVirtual("Is", null, this.tile(), $T19().POISON_GAS) || (num8 >= 3))) {
          num8 = 3;
        }
        if (!this.TakeDamage(
            $T31().POISON, 
            $T32().NO_TYPE, 
            (($T24().Roll(((num8 + 2) | 0)) - 1) | 0), 
            null, 
            "*succumbed to poison"
          )) {
          return;
        }
      }
      if (!(!this.HasAttr($T04().ON_FIRE) || (this.time_of_last_action >= $thisType.Actor$Q$value.Queue$turn$value))) {
        if (this.Actor$type$value === $T02().CORPSETOWER_BEHEMOTH) {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " burns slowly. "), JSIL.Array.New($T10(), [this]));
        } else {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.YouAre(), " on fire! "), JSIL.Array.New($T10(), [this]));
        }
        if (!this.TakeDamage(
            $T31().FIRE, 
            $T32().PHYSICAL, 
            $T24().Roll($T09().prototype.get_Item.call(this.attrs, $T04().ON_FIRE), 6), 
            null, 
            "*burned to death"
          )) {
          return;
        }
      }
      if (!(!this.HasAttr($T04().LIGHT_ALLERGY) || 
          !this.tile().IsLit() || (this.time_of_last_action >= $thisType.Actor$Q$value.Queue$turn$value))) {
        if (this.Actor$type$value.valueOf() === 0) {
          $thisType.Actor$B$value.Add("The light burns you! ", JSIL.Array.New($T10(), 0));
        } else {
          $thisType.Actor$B$value.Add(("The light burns " + this.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [this]));
        }
        if (!this.TakeDamage(
            $T31().NORMAL, 
            $T32().NO_TYPE, 
            $T24().Roll(6), 
            null, 
            "*shriveled in the light"
          )) {
          return;
        }
      }
      if (!(!this.HasAttr($T04().COMPY_POISON_LETHAL) || 
          (this !== $thisType.Actor$player$value) || (this.time_of_last_action >= $thisType.Actor$Q$value.Queue$turn$value))) {
        if ($T09().prototype.get_Item.call(this.attrs, $T04().COMPY_POISON_LETHAL) === 2) {
          if (!(($T09().prototype.get_Item.call(this.attrs, $T04().COMPY_POISON_COUNTER) < this.Actor$curhp$value) || this.HasAttr($T04().IMMUNE_TOXINS))) {
            $thisType.Actor$B$value.Add("You can't resist the poison any longer. ", JSIL.Array.New($T10(), 0));
            $thisType.Actor$B$value.Add("You lose consciousness. ", JSIL.Array.New($T10(), 0));
            if (!this.TakeDamage(
                $T31().NORMAL, 
                $T32().NO_TYPE, 
                this.Actor$curhp$value, 
                null, 
                "*eaten alive by a pack of compys"
              )) {
              return;
            }
          } else {
            $thisType.Actor$B$value.Add("You manage to stay awake! ", JSIL.Array.New($T10(), 0));
            $T09().prototype.set_Item.call(this.attrs, $T04().COMPY_POISON_LETHAL, 0);
          }
        }
        if (this.HasAttr($T04().COMPY_POISON_LETHAL)) {
          var expr_E09 = (dict8 = this.attrs);
          num = $T09().prototype.get_Item.call(dict8, $T04().COMPY_POISON_LETHAL);
          $T09().prototype.set_Item.call(expr_E09, $T04().COMPY_POISON_LETHAL, ((num + 1) | 0));
        }
      }
      if (!flag) {
        if (this.Actor$type$value.valueOf() === 0) {
          this.InputHuman();
        } else {
          this.InputAI();
        }
      }
      if (this.HasAttr($T04().STEALTHY)) {
        if (!((!$thisType.Actor$player$value.IsWithinSightRangeOf(
                this.get_row(), 
                this.get_col()
              ) && 
              !$T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, 
                this.get_row(), 
                this.get_col()
              ).IsLit()) || !$thisType.Actor$player$value.HasLOS(
              this.get_row(), 
              this.get_col()
            ))) {
          if (this.IsHiddenFrom($thisType.Actor$player$value)) {
            var arg_EF2_0 = ((((this.Stealth() * $S0C().CallVirtual("DistanceFrom", null, this, $thisType.Actor$player$value)) | 0) * 10) | 0);
            var expr_ED4 = (dict9 = this.attrs);
            num = $T09().prototype.get_Item.call(dict9, $T04().TURNS_VISIBLE);
            $T09().prototype.set_Item.call(expr_ED4, $T04().TURNS_VISIBLE, (((num9 = num) + 1) | 0));
            if (((arg_EF2_0 - ((num9 * 5) | 0)) | 0) < $T24().Roll(1, 100)) {
              $T09().prototype.set_Item.call(this.attrs, $T04().TURNS_VISIBLE, -1);
              if ($S0C().CallVirtual("DistanceFrom", null, this, $thisType.Actor$player$value) > 3) {
                $thisType.Actor$B$value.Add(("You notice " + this.PhysicalObject$a_name$value + ". "), JSIL.Array.New($T10(), 0));
              } else {
                $thisType.Actor$B$value.Add(("You notice " + this.PhysicalObject$a_name$value + " nearby. "), JSIL.Array.New($T10(), 0));
              }
            }
          } else {
            $T09().prototype.set_Item.call(this.attrs, $T04().TURNS_VISIBLE, -1);
          }
        } else if ($T09().prototype.get_Item.call(this.attrs, $T04().TURNS_VISIBLE) >= 0) {
          $T09().prototype.set_Item.call(this.attrs, $T04().TURNS_VISIBLE, 0);
        } else {
          var expr_FB2 = (dict10 = this.attrs);
          num9 = $T09().prototype.get_Item.call(dict10, $T04().TURNS_VISIBLE);
          $T09().prototype.set_Item.call(expr_FB2, $T04().TURNS_VISIBLE, (((num = num9) - 1) | 0));
          if (num === -10) {
            $T09().prototype.set_Item.call(this.attrs, $T04().TURNS_VISIBLE, 0);
          }
        }
      }
      if (!(!this.HasAttr($T04().ON_FIRE) || 
          ($T09().prototype.get_Item.call(this.attrs, $T04().ON_FIRE) >= 5) || 
          (this.time_of_last_action >= $thisType.Actor$Q$value.Queue$turn$value) || 
          (this.Actor$type$value === $T02().CORPSETOWER_BEHEMOTH) || !$T24().CoinFlip())) {
        if ($T09().prototype.get_Item.call(this.attrs, $T04().ON_FIRE) >= this.PhysicalObject$light_radius$value) {
          this.UpdateRadius(
            $T09().prototype.get_Item.call(this.attrs, $T04().ON_FIRE), 
            (($T09().prototype.get_Item.call(this.attrs, $T04().ON_FIRE) + 1) | 0)
          );
        }
        var expr_106F = (dict11 = this.attrs);
        num = $T09().prototype.get_Item.call(dict11, $T04().ON_FIRE);
        $T09().prototype.set_Item.call(expr_106F, $T04().ON_FIRE, ((num + 1) | 0));
      }
      if (!(!this.HasAttr($T04().CATCHING_FIRE) || 
          (this.time_of_last_action >= $thisType.Actor$Q$value.Queue$turn$value) || !$T24().OneIn(3))) {
        $T09().prototype.set_Item.call(this.attrs, $T04().CATCHING_FIRE, 0);
        if (!this.HasAttr($T04().ON_FIRE)) {
          if (this.PhysicalObject$light_radius$value === 0) {
            this.UpdateRadius(0, 1);
          }
          $T09().prototype.set_Item.call(this.attrs, $T04().ON_FIRE, 1);
          $T28().TutorialTip($T29().Fire);
        }
      }
      if (this.HasAttr($T04().STARTED_CATCHING_FIRE_THIS_TURN)) {
        if (!this.HasAttr($T04().CATCHING_FIRE)) {
          $T09().prototype.set_Item.call(this.attrs, $T04().CATCHING_FIRE, 1);
        }
        $T09().prototype.set_Item.call(this.attrs, $T04().STARTED_CATCHING_FIRE_THIS_TURN, 0);
      }
      this.time_of_last_action = $thisType.Actor$Q$value.Queue$turn$value;
      return;
    }
    if ($thisType.Actor$player$value.tile().Tile$type$value === $T1A().CHASM) {
      $thisType.Actor$B$value.Add("You fall. ", JSIL.Array.New($T10(), 0));
      $thisType.Actor$B$value.PrintAll();
      var num10 = $thisType.Actor$player$value.magic_penalty;
      var value2 = $T09().prototype.get_Item.call($thisType.Actor$player$value.attrs, $T04().RESTING);
      $T10().PhysicalObject$M$value.GenerateBossLevel(true);
      $thisType.Actor$player$value.magic_penalty = num10;
      $T09().prototype.set_Item.call($thisType.Actor$player$value.attrs, $T04().RESTING, value2);
      return;
    }
    if ($thisType.Actor$player$value.CanSee(this)) {
      $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " drops to the next level. "), JSIL.Array.New($T10(), 0));
    } else {
      $thisType.Actor$B$value.Add(("You hear a crash as " + this.PhysicalObject$the_name$value + " drops to the next level. "), JSIL.Array.New($T10(), 0));
    }
    $thisType.Actor$Q$value.Add($S5B().Construct(null, null, (((($T24().Roll(20) + 50) | 0) * 100) | 0), $T22().BOSS_ARRIVE, $T04().NO_ATTR, this.Actor$curhp$value, "", JSIL.Array.New($T10(), 0)));
    $T09().prototype.set_Item.call(this.attrs, $T04().BOSS_MONSTER, 0);
    this.TakeDamage($T31().NORMAL, $T32().NO_TYPE, 9999, null);
  };

  function Actor_InputAI () {
    var $temp00, $temp01, $temp02, $temp03, $temp04, $temp05, $temp06;
    var dict = null, dict2 = null, dict3 = null, dict4 = null, dict5 = null, dict6 = null, dict7 = null, dict8 = null;
    var flag = false;
    if (this.CanSee($thisType.Actor$player$value)) {
      if (!((this.target_location !== null) || !this.HasAttr($T04().BLOODSCENT))) {
        this.player_visibility_duration = -1;
        this.Actor$target$value = $thisType.Actor$player$value;
        this.target_location = $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, 
          $thisType.Actor$player$value.get_row(), 
          $thisType.Actor$player$value.get_col()
        );
        if (!((!$thisType.Actor$player$value.IsWithinSightRangeOf(this) && 
              !this.tile().IsLit()) || !$thisType.Actor$player$value.HasLOS(this))) {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, "'s gaze meets your eyes! "), JSIL.Array.New($T10(), [this]));
          if ($S0C().CallVirtual("DistanceFrom", null, this, $thisType.Actor$player$value) <= 6) {
            $thisType.Actor$player$value.MakeNoise();
          }
        }
        $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " snarls loudly. "), JSIL.Array.New($T10(), [this]));
        this.Q1();
        flag = true;
      } else {
        this.Actor$target$value = $thisType.Actor$player$value;
        this.target_location = $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, 
          $thisType.Actor$player$value.get_row(), 
          $thisType.Actor$player$value.get_col()
        );
        this.player_visibility_duration = -1;
      }
    } else if (!((!this.IsWithinSightRangeOf(
            $thisType.Actor$player$value.get_row(), 
            $thisType.Actor$player$value.get_col()
          ) && 
          !$T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, 
            $thisType.Actor$player$value.get_row(), 
            $thisType.Actor$player$value.get_col()
          ).IsLit()) || 
        !this.HasLOS(
          $thisType.Actor$player$value.get_row(), 
          $thisType.Actor$player$value.get_col()
        ) || ($thisType.Actor$player$value.HasAttr($T04().SHADOW_CLOAK) && 
          !this.HasAttr($T04().PLAYER_NOTICED) && 
          !$thisType.Actor$player$value.tile().IsLit() && 
          !this.HasAttr($T04().BLINDSIGHT)))) {
      var num = (!this.HasAttr($T04().KEEN_SENSES) ? 10 : 5);
      if ((((((($thisType.Actor$player$value.Stealth() * $S0C().CallVirtual("DistanceFrom", null, this, $thisType.Actor$player$value)) | 0) * num) | 0) - ((($temp00 = this.player_visibility_duration, 
                  this.player_visibility_duration = ((this.player_visibility_duration + 1) | 0), 
                  $temp00) * 5) | 0)) | 0) < $T24().Roll(1, 100)) {

        var $label0 = 0;
      $labelgroup0: 
        while (true) {
          switch ($label0) {
            case 0: /* $entry0 */ 
              this.player_visibility_duration = -1;
              var expr_249 = (dict = this.attrs);
              var num2 = $T09().prototype.get_Item.call(dict, $T04().PLAYER_NOTICED);
              $T09().prototype.set_Item.call(expr_249, $T04().PLAYER_NOTICED, ((num2 + 1) | 0));
              this.Actor$target$value = $thisType.Actor$player$value;
              this.target_location = $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, 
                $thisType.Actor$player$value.get_row(), 
                $thisType.Actor$player$value.get_col()
              );
              if (this.group !== null) {

                for (var a$0 = this.group._items, i$0 = 0, l$0 = this.group._size; i$0 < l$0; ($temp01 = i$0, 
                    i$0 = ((i$0 + 1) | 0), 
                    $temp01)) {
                  var current = a$0[i$0];
                  if (!((current === this) || ($S0C().CallVirtual("DistanceFrom", null, this, current) >= 3))) {
                    current.player_visibility_duration = -1;
                    var expr_2DD = (dict2 = current.attrs);
                    num2 = $T09().prototype.get_Item.call(dict2, $T04().PLAYER_NOTICED);
                    $T09().prototype.set_Item.call(expr_2DD, $T04().PLAYER_NOTICED, ((num2 + 1) | 0));
                    current.Actor$target$value = $thisType.Actor$player$value;
                    current.target_location = $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, 
                      $thisType.Actor$player$value.get_row(), 
                      $thisType.Actor$player$value.get_col()
                    );
                  }
                }
              }
              switch (this.Actor$type$value.valueOf()) {
                case 1: 
                case 19: 
                  $thisType.Actor$B$value.Add(JSIL.ConcatString(this.TheVisible(), " squeaks at you. "), JSIL.Array.New($T10(), 0));
                  $thisType.Actor$player$value.MakeNoise();
                  break $labelgroup0;

                case 3: 
                case 14: 
                case 15: 
                  $thisType.Actor$B$value.Add(JSIL.ConcatString(this.TheVisible(), " growls. "), JSIL.Array.New($T10(), 0));
                  $thisType.Actor$player$value.MakeNoise();
                  break $labelgroup0;

                case 5: 
                  $thisType.Actor$B$value.Add(JSIL.ConcatString(this.TheVisible(), " snarls at you. "), JSIL.Array.New($T10(), 0));
                  $thisType.Actor$player$value.MakeNoise();
                  break $labelgroup0;

                case 7: 
                  if (!($T10().PhysicalObject$M$value.get_wiz_lite() || 
                      $T10().PhysicalObject$M$value.Map$wiz_dark$value || ($thisType.Actor$player$value.LightRadius() <= 0))) {
                    $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " notices your light. "), JSIL.Array.New($T10(), [this]));
                  }
                  break $labelgroup0;

                case 8: 
                case 30: 
                case 33: 
                  $thisType.Actor$B$value.Add(JSIL.ConcatString(this.TheVisible(), " shouts. "), JSIL.Array.New($T10(), 0));
                  $thisType.Actor$player$value.MakeNoise();
                  break $labelgroup0;

                case 10: 
                case 16: 
                case 37: 
                case 49: 
                case 54: 
                case 55: 
                  break $labelgroup0;

                case 11: 
                  $thisType.Actor$B$value.Add(JSIL.ConcatString(this.TheVisible(), " makes a chittering sound. "), JSIL.Array.New($T10(), 0));
                  $thisType.Actor$player$value.MakeNoise();
                  break $labelgroup0;

                case 13: 
                case 20: 
                  $thisType.Actor$B$value.Add(JSIL.ConcatString(this.TheVisible(), " yells. "), JSIL.Array.New($T10(), 0));
                  $thisType.Actor$player$value.MakeNoise();
                  break $labelgroup0;

                case 18: 
                  $thisType.Actor$B$value.Add(JSIL.ConcatString(this.TheVisible(), " moans. Uhhhhhhghhh. "), JSIL.Array.New($T10(), 0));
                  $thisType.Actor$player$value.MakeNoise();
                  break $labelgroup0;

                case 21: 
                  $thisType.Actor$B$value.Add(JSIL.ConcatString(this.TheVisible(), " hisses faintly. "), JSIL.Array.New($T10(), 0));
                  break $labelgroup0;

                case 22: 
                  $thisType.Actor$B$value.Add(JSIL.ConcatString(this.TheVisible(), " shrieks. "), JSIL.Array.New($T10(), 0));
                  $thisType.Actor$player$value.MakeNoise();
                  break $labelgroup0;

                case 23: 
                  $thisType.Actor$B$value.Add(JSIL.ConcatString(this.TheVisible(), " howls. "), JSIL.Array.New($T10(), 0));
                  $thisType.Actor$player$value.MakeNoise();
                  break $labelgroup0;

                case 25: 
                  $thisType.Actor$B$value.Add(JSIL.ConcatString(this.TheVisible(), " starts babbling incoherently. "), JSIL.Array.New($T10(), 0));
                  break $labelgroup0;

                case 27: 
                  $thisType.Actor$B$value.Add(JSIL.ConcatString(this.TheVisible(), " cackles. "), JSIL.Array.New($T10(), 0));
                  $thisType.Actor$player$value.MakeNoise();
                  break $labelgroup0;

                case 28: 
                  $thisType.Actor$B$value.Add(JSIL.ConcatString(this.TheVisible(), " squeaks. "), JSIL.Array.New($T10(), 0));
                  $thisType.Actor$player$value.MakeNoise();
                  break $labelgroup0;

                case 31: 
                case 46: 
                  $thisType.Actor$B$value.Add(JSIL.ConcatString(this.TheVisible(), " growls viciously. "), JSIL.Array.New($T10(), 0));
                  $thisType.Actor$player$value.MakeNoise();
                  break $labelgroup0;

                case 36: 
                  $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " stares at you for a moment. "), JSIL.Array.New($T10(), [this]));
                  break $labelgroup0;

                case 38: 
                  $thisType.Actor$B$value.Add(JSIL.ConcatString(this.TheVisible(), " bellows at you. "), JSIL.Array.New($T10(), 0));
                  $thisType.Actor$player$value.MakeNoise();
                  break $labelgroup0;

                case 39: 
                case 48: 
                  $thisType.Actor$B$value.Add(JSIL.ConcatString(this.TheVisible(), " snarls loudly. "), JSIL.Array.New($T10(), 0));
                  $thisType.Actor$player$value.MakeNoise();
                  break $labelgroup0;

                case 43: 
                  $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " starts moving. "), JSIL.Array.New($T10(), [this]));
                  break $labelgroup0;

                case 50: 
                  $thisType.Actor$B$value.Add(JSIL.ConcatString(this.TheVisible(), " starts chanting in low tones. "), JSIL.Array.New($T10(), 0));
                  break $labelgroup0;

              }
              $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " notices you. "), JSIL.Array.New($T10(), [this]));
              break $labelgroup0;

          }
        }
        /* Original label IL_813 */ 
        this.Q1();
        flag = true;
      }
    } else if (this.player_visibility_duration >= 0) {
      this.player_visibility_duration = 0;
    } else if (!((this.target_location !== null) || 
        (($temp02 = this.player_visibility_duration, 
            this.player_visibility_duration = ((this.player_visibility_duration - 1) | 0), 
            $temp02) !== (-((10 + (($T09().prototype.get_Item.call(this.attrs, $T04().ALERTED) * 40) | 0)) | 0) | 0)) || ($T09().prototype.get_Item.call(this.attrs, $T04().ALERTED) >= 2))) {
      var expr_886 = (dict3 = this.attrs);
      num2 = $T09().prototype.get_Item.call(dict3, $T04().ALERTED);
      $T09().prototype.set_Item.call(expr_886, $T04().ALERTED, ((num2 + 1) | 0));
      this.player_visibility_duration = 0;
      this.Actor$target$value = null;
    }
    if (!((this.Actor$type$value !== $T02().MARBLE_HORROR) || !this.tile().IsLit())) {
      $thisType.Actor$B$value.Add("The marble horror reverts to its statue form. ", JSIL.Array.New($T10(), [this]));
      this.Actor$type$value = $T02().MARBLE_HORROR_STATUE;
      this.SetName("marble horror statue");
      $T09().prototype.set_Item.call(this.attrs, $T04().NEVER_MOVES, 1);
      $T09().prototype.set_Item.call(this.attrs, $T04().INVULNERABLE, 1);
      $T09().prototype.set_Item.call(this.attrs, $T04().IMMUNE_FIRE, 1);
    }
    if (!((this.Actor$type$value !== $T02().MARBLE_HORROR_STATUE) || this.tile().IsLit())) {
      $thisType.Actor$B$value.Add("The marble horror animates once more. ", JSIL.Array.New($T10(), [this]));
      this.Actor$type$value = $T02().MARBLE_HORROR;
      this.SetName("marble horror");
      $T09().prototype.set_Item.call(this.attrs, $T04().NEVER_MOVES, 0);
      $T09().prototype.set_Item.call(this.attrs, $T04().INVULNERABLE, 0);
      $T09().prototype.set_Item.call(this.attrs, $T04().IMMUNE_FIRE, 0);
    }
    if (!((this.Actor$type$value !== $T02().COMPY) || 
        (this.group === null) || (this.Actor$target$value === null))) {
      if (!($T27().Any$b1($thisType)(this.group, function Actor_$lInputAI$gm__28 (a) {
              return (a.Actor$curhp$value < a.Actor$maxhp$value);
            }) || 
          (this.Actor$target$value.Actor$curhp$value < 20) || 
          this.Actor$target$value.HasAttr($T04().ASLEEP) || 
          this.Actor$target$value.HasAttr($T04().PARALYZED) || this.Actor$target$value.HasAttr($T04().IN_COMBAT))) {
        this.Actor$target$value = null;
        this.target_location = null;
      }
    }
    if (!(flag || 
        (this.Actor$type$value === $T02().CULTIST) || 
        (this.Actor$type$value === $T02().CORPSETOWER_BEHEMOTH) || 
        (this.Actor$type$value === $T02().BLOOD_MOTH) || 
        (this.Actor$type$value === $T02().MUD_TENTACLE) || 
        (this.Actor$type$value === $T02().DREAM_CLONE) || 
        (this.Actor$type$value === $T02().ZOMBIE) || (this.Actor$type$value === $T02().CARNIVOROUS_BRAMBLE))) {
      if (this.HasAttr($T04().HUMANOID_INTELLIGENCE)) {
        if (!(!this.HasAttr($T04().CATCHING_FIRE) || !$T24().OneIn(10))) {
          $T09().prototype.set_Item.call(this.attrs, $T04().CATCHING_FIRE, 0);
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " stops the flames from spreading. "), JSIL.Array.New($T10(), [this]));
          this.Q1();
          flag = true;
        } else if (this.HasAttr($T04().ON_FIRE)) {
          if (!(($T09().prototype.get_Item.call(this.attrs, $T04().ON_FIRE) !== 1) || !$T24().OneIn(4))) {
            var flag2 = false;
            var from = this.LightRadius();
            if ($T09().prototype.get_Item.call(this.attrs, $T04().ON_FIRE) > this.PhysicalObject$light_radius$value) {
              flag2 = true;
            }
            $T09().prototype.set_Item.call(this.attrs, $T04().ON_FIRE, 0);
            if (flag2) {
              this.UpdateRadius(from, this.LightRadius());
            }
            $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " puts out the fire. "), JSIL.Array.New($T10(), [this]));
            this.Q1();
            flag = true;
          } else if (!(($T09().prototype.get_Item.call(this.attrs, $T04().ON_FIRE) <= 1) || ($T24().Roll(10) > 8))) {
            var flag3 = false;
            var from2 = this.LightRadius();
            if ($T09().prototype.get_Item.call(this.attrs, $T04().ON_FIRE) > this.PhysicalObject$light_radius$value) {
              flag3 = true;
            }
            var num3 = 2;
            if ($T24().Roll(1, 3) === 3) {
              num3 = 1;
            }
            var expr_BFF = (dict4 = this.attrs);
            num2 = $T09().prototype.get_Item.call(dict4, $T04().ON_FIRE);
            $T09().prototype.set_Item.call(expr_BFF, $T04().ON_FIRE, ((num2 - num3) | 0));
            if ($T09().prototype.get_Item.call(this.attrs, $T04().ON_FIRE) < 0) {
              $T09().prototype.set_Item.call(this.attrs, $T04().ON_FIRE, 0);
            }
            if (flag3) {
              this.UpdateRadius(from2, this.LightRadius());
            }
            if (this.HasAttr($T04().ON_FIRE)) {
              $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " puts out some of the fire. "), JSIL.Array.New($T10(), [this]));
            } else {
              $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " puts out the fire. "), JSIL.Array.New($T10(), [this]));
            }
            this.Q1();
            flag = true;
          } else if (!(($T09().prototype.get_Item.call(this.attrs, $T04().ON_FIRE) <= 2) || ((($T24().Roll(2) + $T09().prototype.get_Item.call(this.attrs, $T04().ON_FIRE)) | 0) < 5))) {
            if (this.HasAttr($T04().MEDIUM_HUMANOID)) {
              $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " runs around with arms flailing. "), JSIL.Array.New($T10(), [this]));
            } else {
              $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " flails about. "), JSIL.Array.New($T10(), [this]));
            }
            this.AI_Step(this.TileInDirection($T24().RandomDirection()));
            this.Q1();
            flag = true;
          } else {
            var flag4 = false;
            var from3 = this.LightRadius();
            if ($T09().prototype.get_Item.call(this.attrs, $T04().ON_FIRE) > this.PhysicalObject$light_radius$value) {
              flag4 = true;
            }
            var num4 = 2;
            if ($T24().Roll(1, 3) === 3) {
              num4 = 1;
            }
            var expr_D98 = (dict5 = this.attrs);
            num2 = $T09().prototype.get_Item.call(dict5, $T04().ON_FIRE);
            $T09().prototype.set_Item.call(expr_D98, $T04().ON_FIRE, ((num2 - num4) | 0));
            if ($T09().prototype.get_Item.call(this.attrs, $T04().ON_FIRE) < 0) {
              $T09().prototype.set_Item.call(this.attrs, $T04().ON_FIRE, 0);
            }
            if (flag4) {
              this.UpdateRadius(from3, this.LightRadius());
            }
            if (this.HasAttr($T04().ON_FIRE)) {
              $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " puts out some of the fire. "), JSIL.Array.New($T10(), [this]));
            } else {
              $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " puts out the fire. "), JSIL.Array.New($T10(), [this]));
            }
            this.Q1();
            flag = true;
          }
        }
      } else if (!(!this.HasAttr($T04().CATCHING_FIRE) || !$T24().CoinFlip())) {
        $T09().prototype.set_Item.call(this.attrs, $T04().CATCHING_FIRE, 0);
        if (this.Actor$type$value === $T02().SHADOW) {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " reforms itself to stop the flames. "), JSIL.Array.New($T10(), [this]));
        } else if (!((this.Actor$type$value !== $T02().BANSHEE) && (this.Actor$type$value !== $T02().VAMPIRE))) {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " stops the flames from spreading. "), JSIL.Array.New($T10(), [this]));
        } else {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " rolls on the ground to stop the flames. "), JSIL.Array.New($T10(), [this]));
        }
        this.Q1();
        flag = true;
      } else if (!(!this.HasAttr($T04().ON_FIRE) || ($T24().Roll(3) < 2))) {
        var flag5 = false;
        var from4 = this.LightRadius();
        if ($T09().prototype.get_Item.call(this.attrs, $T04().ON_FIRE) > this.PhysicalObject$light_radius$value) {
          flag5 = true;
        }
        var num5 = 2;
        if ($T24().Roll(1, 3) === 3) {
          num5 = 1;
        }
        var expr_F74 = (dict6 = this.attrs);
        num2 = $T09().prototype.get_Item.call(dict6, $T04().ON_FIRE);
        $T09().prototype.set_Item.call(expr_F74, $T04().ON_FIRE, ((num2 - num5) | 0));
        if ($T09().prototype.get_Item.call(this.attrs, $T04().ON_FIRE) < 0) {
          $T09().prototype.set_Item.call(this.attrs, $T04().ON_FIRE, 0);
        }
        if (flag5) {
          this.UpdateRadius(from4, this.LightRadius());
        }
        if (this.HasAttr($T04().ON_FIRE)) {
          if (this.Actor$type$value === $T02().SHADOW) {
            $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " reforms itself to put out some of the fire. "), JSIL.Array.New($T10(), [this]));
          } else if (this.Actor$type$value === $T02().BANSHEE) {
            $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " puts out some of the fire. "), JSIL.Array.New($T10(), [this]));
          } else {
            $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " rolls on the ground to put out some of the fire. "), JSIL.Array.New($T10(), [this]));
          }
        } else if (this.Actor$type$value === $T02().SHADOW) {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " reforms itself to put out the fire. "), JSIL.Array.New($T10(), [this]));
        } else if (this.Actor$type$value === $T02().BANSHEE) {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " puts out the fire. "), JSIL.Array.New($T10(), [this]));
        } else {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " rolls on the ground to put out the fire. "), JSIL.Array.New($T10(), [this]));
        }
        this.Q1();
        flag = true;
      }
    }
    if (!(!$S0A().CallVirtual("Is", null, this.tile(), $T19().QUICKFIRE) && 
        !$S0A().CallVirtual("Is", null, this.tile(), $T19().POISON_GAS) && (!this.HasAttr($T04().LIGHT_ALLERGY) || 
          !this.tile().IsLit()))) {
      var list = $S12().Construct();
      var flag6 = false;
      if (!(!this.HasAttr($T04().LIGHT_ALLERGY) || (this.Actor$target$value !== null))) {

        for (var a$1 = this.TilesWithinDistance(1)._items, i$1 = 0, l$1 = this.TilesWithinDistance(1)._size; i$1 < l$1; ($temp03 = i$1, 
            i$1 = ((i$1 + 1) | 0), 
            $temp03)) {
          var current2 = a$1[i$1];
          if (!(!current2.IsLit() || !current2.Tile$passable$value)) {
            list.Add(current2);
            if (current2 === this.tile()) {
              flag6 = true;
            }
          }
        }
      }
      if (!(this.HasAttr($T04().IMMUNE_FIRE) || 
          this.HasAttr($T04().INVULNERABLE) || 
          this.HasAttr($T04().RESIST_FIRE) || 
          (this.Actor$type$value === $T02().ZOMBIE) || 
          (this.Actor$type$value === $T02().CORPSETOWER_BEHEMOTH) || 
          (this.Actor$type$value === $T02().SKELETON) || 
          (this.Actor$type$value === $T02().SKELETAL_SABERTOOTH) || 
          (this.Actor$type$value === $T02().CULTIST) || 
          (this.Actor$type$value === $T02().PHASE_SPIDER) || 
          (this.Actor$type$value === $T02().MARBLE_HORROR) || (this.Actor$type$value === $T02().MECHANICAL_KNIGHT))) {

        for (var a$2 = this.TilesWithinDistance(1)._items, i$2 = 0, l$2 = this.TilesWithinDistance(1)._size; i$2 < l$2; ($temp04 = i$2, 
            i$2 = ((i$2 + 1) | 0), 
            $temp04)) {
          var current3 = a$2[i$2];
          if ($S0A().CallVirtual("Is", null, current3, $T19().QUICKFIRE)) {
            $T27().AddUnique$b1($T17())(list, current3);
            if (current3 === this.tile()) {
              flag6 = true;
            }
          }
        }
      }
      if (!(this.HasAttr($T04().IMMUNE_TOXINS) || 
          this.HasAttr($T04().UNDEAD) || 
          this.HasAttr($T04().CONSTRUCT) || 
          (this.Actor$type$value === $T02().CULTIST) || 
          (this.Actor$type$value === $T02().PHASE_SPIDER) || (this.Actor$type$value === $T02().MECHANICAL_KNIGHT))) {

        for (var a$3 = this.TilesWithinDistance(1)._items, i$3 = 0, l$3 = this.TilesWithinDistance(1)._size; i$3 < l$3; ($temp05 = i$3, 
            i$3 = ((i$3 + 1) | 0), 
            $temp05)) {
          var current4 = a$3[i$3];
          if ($S0A().CallVirtual("Is", null, current4, $T19().POISON_GAS)) {
            $T27().AddUnique$b1($T17())(list, current4);
            if (current4 === this.tile()) {
              flag6 = true;
            }
          }
        }
      }
      if (flag6) {
        var list2 = $S12().Construct();

        for (var a$4 = this.TilesAtDistance(1)._items, i$4 = 0, l$4 = this.TilesAtDistance(1)._size; i$4 < l$4; ($temp06 = i$4, 
            i$4 = ((i$4 + 1) | 0), 
            $temp06)) {
          var current5 = a$4[i$4];
          if (!(!current5.Tile$passable$value || 
              (current5.actor() !== null) || list.Contains(current5))) {
            list2.Add(current5);
          }
        }
        if (!((list2.get_Count() <= 0) || !this.AI_Step($T27().Random$b1($T17())(list2)))) {
          this.QS();
          flag = true;
        }
      }
    }
    if (!((this.Actor$type$value !== $T02().MECHANICAL_KNIGHT) || this.HasAttr($T04().COOLDOWN_1))) {
      $T09().prototype.set_Item.call(this.attrs, $T04().MECHANICAL_SHIELD, 1);
    }
    if (!((this.group === null) || (this.group.get_Count() !== 0))) {
      this.group = null;
    }
    if (!flag) {
      if (this.Actor$target$value !== null) {
        if (this.CanSee(this.Actor$target$value)) {
          this.ActiveAI();
        } else {
          this.SeekAI();
        }
      } else {
        this.IdleAI();
      }
    }
    if (this.Actor$type$value === $T02().DARKNESS_DWELLER) {
      if (this.HasAttr($T04().COOLDOWN_2)) {
        if (this.tile().IsLit()) {
          $T09().prototype.set_Item.call(this.attrs, $T04().COOLDOWN_2, 5);
        } else {
          var expr_14CF = (dict7 = this.attrs);
          num2 = $T09().prototype.get_Item.call(dict7, $T04().COOLDOWN_2);
          $T09().prototype.set_Item.call(expr_14CF, $T04().COOLDOWN_2, ((num2 - 1) | 0));
        }
      } else if (this.tile().IsLit()) {
        $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " is blinded by the light! "), JSIL.Array.New($T10(), [this]));
        var expr_1525 = (dict8 = this.attrs);
        num2 = $T09().prototype.get_Item.call(dict8, $T04().COOLDOWN_1);
        $T09().prototype.set_Item.call(expr_1525, $T04().COOLDOWN_1, ((num2 + 1) | 0));
        $T09().prototype.set_Item.call(this.attrs, $T04().COOLDOWN_2, 5);
        $thisType.Actor$Q$value.Add($S1A().Construct(this, (((($T24().Roll(2) + 4) | 0) * 100) | 0), $T04().COOLDOWN_1, JSIL.ConcatString(this.PhysicalObject$the_name$value, " is no longer blinded. "), JSIL.Array.New($T10(), [this])));
      }
    }
    if (this.Actor$type$value === $T02().SHADOW) {
      this.CalculateDimming();
    }
  };

  function Actor_InputHuman () {
    var $temp00, $temp01, $temp02, $temp03, $temp04, $temp05, $temp06, $temp07, $temp08, $temp09, $temp0A, $temp0B, $temp0C, $temp0D, $temp0E, $temp0F, $temp10, $temp11, $temp12, $temp13, $temp14, $temp15, $temp16, $temp17, $temp18, $temp19, $temp1A, $temp1B, $temp1C, $temp1D, $temp1E, $temp1F, $temp20, $temp21, $temp22;
    var $s00 = new JSIL.MethodSignature($asm01.System.Boolean, [$asm00.TypeRef("Forays.WeaponType")], []);
    var $s01 = new JSIL.MethodSignature($asm02.TypeRef("System.Collections.Generic.LinkedListNode`1", [$asm00.TypeRef("Forays.WeaponType")]), [$asm00.TypeRef("Forays.WeaponType")], []);
    var $s02 = new JSIL.MethodSignature($asm01.System.Boolean, [$asm00.TypeRef("Forays.ArmorType")], []);
    var $s03 = new JSIL.MethodSignature($asm02.TypeRef("System.Collections.Generic.LinkedListNode`1", [$asm00.TypeRef("Forays.ArmorType")]), [$asm00.TypeRef("Forays.ArmorType")], []);
    var dict = null, dict2 = null, dict3 = null, dict4 = null, dict5 = null, dict6 = null, disposable = null;

    var $label1 = 0;
  $labelgroup1: 
    while (true) {
      switch ($label1) {
        case 0: /* $entry1 */ 
          this.DisplayStats(true);
          if (this.HasFeat($T41().DANGER_SENSE)) {
            $T10().PhysicalObject$M$value.UpdateDangerValues();
          }
          $T10().PhysicalObject$M$value.Draw();
          if (!(!this.HasAttr($T04().AUTOEXPLORE) || 
              (this.path.get_Count() !== 0) || this.FindAutoexplorePath())) {
            $thisType.Actor$B$value.Add("You don't see a path for further exploration. ", JSIL.Array.New($T10(), 0));
          }
          if (!(this.HasAttr($T04().AFRAID) || 
              this.HasAttr($T04().PARALYZED) || 
              this.HasAttr($T04().FROZEN) || this.HasAttr($T04().ASLEEP))) {
            $thisType.Actor$B$value.Print(false);
          } else {
            $thisType.Actor$B$value.DisplayNow();
          }
          this.Cursor();
          $T4A().set_CursorVisible(true);
          if (!(!this.HasAttr($T04().PARALYZED) && 
              !this.HasAttr($T04().AFRAID) && !this.HasAttr($T04().ASLEEP))) {
            if (this.HasAttr($T04().AFRAID)) {
              $S32().CallStatic($T49(), "Sleep", null, 250);
            }
            if (this.HasAttr($T04().ASLEEP)) {
              $S32().CallStatic($T49(), "Sleep", null, 100);
            }
            this.Q1();
            return;
          }
          if (this.HasAttr($T04().FROZEN)) {
            var num = (($T24().Roll($T3A().Damage(this.weapons.get_First().get_Value()).dice, 6) + this.TotalSkill($T07().COMBAT)) | 0);
            var num2 = $T09().prototype.get_Item.call(dict, $T04().FROZEN);
            $T09().prototype.set_Item.call((dict = this.attrs), $T04().FROZEN, ((num2 - num) | 0));
            if ($T09().prototype.get_Item.call(this.attrs, $T04().FROZEN) < 0) {
              $T09().prototype.set_Item.call(this.attrs, $T04().FROZEN, 0);
            }
            if (this.HasAttr($T04().FROZEN)) {
              $thisType.Actor$B$value.Add("You attempt to break free. ", JSIL.Array.New($T10(), 0));
            } else {
              $thisType.Actor$B$value.Add("You break free! ", JSIL.Array.New($T10(), 0));
            }
            this.Q1();
            return;
          }
          if (!(!$T24().Option($T58().AUTOPICKUP) || 
              (this.tile().Tile$inv$value === null) || 
              this.tile().Tile$inv$value.Item$ignored$value || $S0A().CallVirtual("Is", null, this.tile(), $T19().QUICKFIRE))) {
            var flag = false;

            for (var a$0 = this.TilesWithinDistance(1)._items, i$0 = 0, l$0 = this.TilesWithinDistance(1)._size; i$0 < l$0; ($temp07 = i$0, 
                i$0 = ((i$0 + 1) | 0), 
                $temp07)) {
              var current = a$0[i$0];
              if ($S0A().CallVirtual("Is", null, current, $T19().GRENADE)) {
                flag = true;
              }
            }
            if (!(flag || 
                this.HasAttr($T04().ON_FIRE) || this.HasAttr($T04().CATCHING_FIRE))) {
              var flag2 = false;

            $loop1: 
              for (var a$1 = $T10().PhysicalObject$M$value.AllActors()._items, i$1 = 0, l$1 = $T10().PhysicalObject$M$value.AllActors()._size; i$1 < l$1; ($temp08 = i$1, 
                  i$1 = ((i$1 + 1) | 0), 
                  $temp08)) {
                var current2 = a$1[i$1];
                if (!((current2 === this) || !this.CanSee(current2))) {
                  flag2 = true;
                  break $loop1;
                }
              }
              if (!flag2) {
                if (this.StunnedThisTurn()) {
                  return;
                }
                var inv = this.tile().Tile$inv$value;
                inv.set_row(-1);
                inv.set_col(-1);
                this.tile().Tile$inv$value = null;
                $thisType.Actor$B$value.Add(("You pick up " + inv.TheName() + ". "), JSIL.Array.New($T10(), 0));
                var flag3 = false;

              $loop2: 
                for (var a$2 = this.Actor$inv$value._items, i$2 = 0, l$2 = this.Actor$inv$value._size; i$2 < l$2; ($temp09 = i$2, 
                    i$2 = ((i$2 + 1) | 0), 
                    $temp09)) {
                  var current3 = a$2[i$2];
                  if (!((current3.Item$type$value !== inv.Item$type$value) || 
                      current3.Item$do_not_stack$value || inv.Item$do_not_stack$value)) {
                    ($temp00 = ((current3.Item$quantity$value + inv.Item$quantity$value) | 0), 
                      current3.Item$quantity$value = $temp00, 
                      $temp00);
                    flag3 = true;
                    break $loop2;
                  }
                }
                if (!flag3) {
                  this.Actor$inv$value.Add(inv);
                }
                this.Q1();
                return;
              }
            }
          }
          if (this.path.get_Count() > 0) {
            var flag4 = false;

            for (var a$3 = $T10().PhysicalObject$M$value.AllActors()._items, i$3 = 0, l$3 = $T10().PhysicalObject$M$value.AllActors()._size; i$3 < l$3; ($temp0A = i$3, 
                i$3 = ((i$3 + 1) | 0), 
                $temp0A)) {
              var current4 = a$3[i$3];
              if (!((current4 === this) || 
                  !this.CanSee(current4) || !this.HasLOS(
                    current4.get_row(), 
                    current4.get_col()
                  ))) {
                flag4 = true;
              }
            }
            if (!flag4) {
              if (!$T4A().get_KeyAvailable()) {
                this.PlayerWalk($S5C().CallVirtual("DirectionOf", null, this, this.path.get_Item(0).MemberwiseClone()));
                if (!((this.path.get_Count() <= 0) || ($S52().CallVirtual("DistanceFrom", null, this, this.path.get_Item(0).MemberwiseClone()) !== 0))) {
                  this.path.RemoveAt(0);
                }
                return;
              }
              $T4A().ReadKey(true);
              this.Interrupt();
            } else {
              this.Interrupt();
            }
          }
          if (this.HasAttr($T04().RUNNING)) {
            var flag5 = false;

            for (var a$4 = $T10().PhysicalObject$M$value.AllActors()._items, i$4 = 0, l$4 = $T10().PhysicalObject$M$value.AllActors()._size; i$4 < l$4; ($temp0B = i$4, 
                i$4 = ((i$4 + 1) | 0), 
                $temp0B)) {
              var current5 = a$4[i$4];
              if (!((current5 === this) || 
                  !this.CanSee(current5) || !this.HasLOS(
                    current5.get_row(), 
                    current5.get_col()
                  ))) {
                flag5 = true;
              }
            }
            var tile = this.TileInDirection($T09().prototype.get_Item.call(this.attrs, $T04().RUNNING));
            var flag6 = false;
            if (!(!tile.IsKnownTrap() && 
                !$S0A().CallVirtual("Is", null, tile, $T19().FUNGUS_ACTIVE) && 
                !$S0A().CallVirtual("Is", null, tile, $T19().FUNGUS_PRIMED) && 
                !$S0A().CallVirtual("Is", null, tile, $T19().GRENADE) && 
                !$S0A().CallVirtual("Is", null, tile, $T19().POISON_GAS) && !$S0A().CallVirtual("Is", null, tile, $T19().QUICKFIRE))) {
              flag6 = true;
            }
            if (!(flag5 || 
                flag6 || $T4A().get_KeyAvailable())) {
              if ($T09().prototype.get_Item.call(this.attrs, $T04().RUNNING) === 5) {
                var num3 = (!this.HasFeat($T41().ENDURING_SOUL) ? 10 : 20);
                if (((this.Actor$curhp$value % num3) | 0) !== 0) {
                  this.Q1();
                  return;
                }
                if (this.HasAttr($T04().WAITING)) {
                  var expr_62B = (dict2 = this.attrs);
                  num2 = $T09().prototype.get_Item.call(dict2, $T04().WAITING);
                  $T09().prototype.set_Item.call(expr_62B, $T04().WAITING, ((num2 - 1) | 0));
                  this.Q1();
                  return;
                }
                $T09().prototype.set_Item.call(this.attrs, $T04().RUNNING, 0);
              } else {
                if (tile.Tile$passable$value) {
                  this.PlayerWalk($T09().prototype.get_Item.call(this.attrs, $T04().RUNNING));
                  return;
                }
                var tile2 = this.TileInDirection(this.RotateDirection($T09().prototype.get_Item.call(this.attrs, $T04().RUNNING), true, 4));
                var num4 = 0;
                var num5 = 0;

                for (var a$5 = this.TilesAtDistance(1)._items, i$5 = 0, l$5 = this.TilesAtDistance(1)._size; i$5 < l$5; ($temp0C = i$5, 
                    i$5 = ((i$5 + 1) | 0), 
                    $temp0C)) {
                  var current6 = a$5[i$5];
                  if (!((current6 === tile2) || (!current6.Tile$passable$value && 
                        (current6.Tile$type$value !== $T1A().DOOR_C)))) {
                    num4 = ((num4 + 1) | 0);
                    num5 = $S1E().CallVirtual("DirectionOf", null, this, current6);
                  }
                }
                if (num4 === 1) {
                  $T09().prototype.set_Item.call(this.attrs, $T04().RUNNING, num5);
                  this.PlayerWalk(num5);
                  return;
                }
                $T09().prototype.set_Item.call(this.attrs, $T04().RUNNING, 0);
                $T09().prototype.set_Item.call(this.attrs, $T04().WAITING, 0);
              }
            } else {
              if ($T4A().get_KeyAvailable()) {
                $T4A().ReadKey(true);
              }
              $T09().prototype.set_Item.call(this.attrs, $T04().RUNNING, 0);
              $T09().prototype.set_Item.call(this.attrs, $T04().WAITING, 0);
            }
          }
          if (this.HasAttr($T04().RESTING)) {
            if ($T09().prototype.get_Item.call(this.attrs, $T04().RESTING) === 10) {
              $T09().prototype.set_Item.call(this.attrs, $T04().RESTING, -1);
              ($temp01 = ((this.Actor$curhp$value + ((((this.Actor$maxhp$value - this.Actor$curhp$value) | 0) / 2) | 0)) | 0), 
                this.Actor$curhp$value = $temp01, 
                $temp01);
              this.ResetSpells();
              $thisType.Actor$B$value.Add("You rest...you feel great! ", JSIL.Array.New($T10(), 0));
              $thisType.Actor$B$value.Print(false);
              this.DisplayStats(true);
              this.Cursor();
            } else {
              var flag7 = false;

              for (var a$6 = $T10().PhysicalObject$M$value.AllActors()._items, i$6 = 0, l$6 = $T10().PhysicalObject$M$value.AllActors()._size; i$6 < l$6; ($temp0D = i$6, 
                  i$6 = ((i$6 + 1) | 0), 
                  $temp0D)) {
                var current7 = a$6[i$6];
                if (!((current7 === this) || 
                    !this.CanSee(current7) || !this.HasLOS(
                      current7.get_row(), 
                      current7.get_col()
                    ))) {
                  flag7 = true;
                }
              }
              if (!flag7 && !$T4A().get_KeyAvailable()) {
                var expr_91C = (dict3 = this.attrs);
                num2 = $T09().prototype.get_Item.call(dict3, $T04().RESTING);
                $T09().prototype.set_Item.call(expr_91C, $T04().RESTING, ((num2 + 1) | 0));
                $thisType.Actor$B$value.Add("You rest... ", JSIL.Array.New($T10(), 0));
                this.Q1();
                return;
              }
              if ($T4A().get_KeyAvailable()) {
                $T4A().ReadKey(true);
              }
              if (flag7) {
                $T09().prototype.set_Item.call(this.attrs, $T04().RESTING, 0);
                $thisType.Actor$B$value.Add("You rest...you are interrupted! ", JSIL.Array.New($T10(), 0));
                $thisType.Actor$B$value.Print(false);
                this.Cursor();
              } else {
                $T09().prototype.set_Item.call(this.attrs, $T04().RESTING, 0);
                $thisType.Actor$B$value.Add("You rest...you stop resting. ", JSIL.Array.New($T10(), 0));
                $thisType.Actor$B$value.Print(false);
                this.Cursor();
              }
            }
          }
          if ($thisType.Actor$Q$value.Queue$turn$value === 0) {
            $T28().TutorialTip($T29().Movement);
            this.Cursor();
          }
          if (!($T62().prototype.get_Item.call($T28().displayed, $T29().Attacking) || !$T27().Any$b1($thisType)(
                $T10().PhysicalObject$M$value.AllActors(), 
                function Actor_$lInputHuman$gm__25 (a) {
                  return ((a !== this) && 
                    this.CanSee(a));
                }.bind(this)
              ))) {
            $T28().TutorialTip($T29().Attacking);
            this.Cursor();
          }
          var k = $T4A().ReadKey(true).MemberwiseClone();
          var c = $thisType.ConvertInput(k.MemberwiseClone());
          c = $thisType.ConvertVIKeys(c);
          var flag8 = false;
          var flag9 = false;
          var flag10 = false;
          if ($T4E().$Cast((k.get_Modifiers() & $T4E().Alt)) === $T4E().Alt) {
            flag8 = true;
          }
          if ($T4E().$Cast((k.get_Modifiers() & $T4E().Control)) === $T4E().Control) {
            flag9 = true;
          }
          if ($T4E().$Cast((k.get_Modifiers() & $T4E().Shift)) === $T4E().Shift) {
            flag10 = true;
          }
          var c2 = c;
          switch (c2) {
            case " ": 
              this.Q0();
              $label1 = 1 /* goto IL_40EC */ ;
              continue $labelgroup1;

            case "!": 
            case "#": 
            case "$": 
            case "%": 
            case "@": 
              if (this.HasAttr($T04().CURSED_WEAPON)) {
                $thisType.Actor$B$value.Add(("Your " + $T3A().Name(this.weapons.get_First().get_Value()) + " is stuck to your hand and can't be dropped. "), JSIL.Array.New($T10(), 0));
                this.Q0();
              } else {
                var weaponType = $T15().NO_WEAPON;
                var c3 = c;
                switch (c3) {
                  case "!": 
                    weaponType = $T15().SWORD;
                    break;

                  default: 
                  case "\"": 
                    if (c3.charCodeAt(0) === "@".charCodeAt(0)) {
                      weaponType = $T15().MACE;
                    }
                    break;

                  case "#": 
                    weaponType = $T15().DAGGER;
                    break;

                  case "$": 
                    weaponType = $T15().STAFF;
                    break;

                  case "%": 
                    weaponType = $T15().BOW;
                    break;

                }
                var value = this.weapons.get_First().get_Value();
                if (weaponType === $T3A().BaseWeapon(value)) {
                  this.Q0();
                } else if (!this.StunnedThisTurn()) {

                  for (var flag11 = false; !flag11; ) {
                    var value2 = this.weapons.get_First().get_Value();
                    $s00.CallVirtual("Remove", null, this.weapons, value2);
                    $s01.Call($T0D().prototype, "AddLast", null, this.weapons, value2);
                    if (weaponType === $T3A().BaseWeapon(this.weapons.get_First().get_Value())) {
                      flag11 = true;
                    }
                  }
                  if (this.HasFeat($T41().QUICK_DRAW)) {
                    $thisType.Actor$B$value.Add(("You quickly ready your " + $T3A().Name(this.weapons.get_First().get_Value()) + ". "), JSIL.Array.New($T10(), 0));
                    this.Q0();
                  } else {
                    $thisType.Actor$B$value.Add(("You ready your " + $T3A().Name(this.weapons.get_First().get_Value()) + ". "), JSIL.Array.New($T10(), 0));
                    this.Q1();
                  }
                  $S5D().CallVirtual("UpdateOnEquip", null, this, value, this.weapons.get_First().get_Value());
                }
              }
              $label1 = 1 /* goto IL_40EC */ ;
              continue $labelgroup1;

            default: 
            case "\"": 
            case "&": 
            case "'": 
            case "+": 
            case ",": 
            case "0": 
            case ":": 
            case "<": 
            case "A": 
            case "B": 
            case "C": 
            case "D": 
            case "E": 
            case "F": 
            case "G": 
            case "H": 
            case "I": 
            case "J": 
            case "K": 
            case "L": 
            case "M": 
            case "N": 
              switch (c2) {
                case "a": 
                  if (this.Actor$inv$value.get_Count() === 0) {
                    $thisType.Actor$B$value.Add("You have nothing in your pack. ", JSIL.Array.New($T10(), 0));
                    this.Q0();
                  } else {
                    var num6 = -1;
                    $S3D().CallStatic($T1F(), "WriteMapString", null, 0, 0, System.String.PadRight("", 66, "-"));
                    var c4 = "a";
                    var num7 = 1;

                    for (var a$7 = this.InventoryList()._items, i$7 = 0, l$7 = this.InventoryList()._size; i$7 < l$7; ($temp0E = i$7, 
                        i$7 = ((i$7 + 1) | 0), 
                        $temp0E)) {
                      var current8 = a$7[i$7];
                      var text = (JSIL.ConcatString.apply(null, JSIL.Array.New($T60(), ["[", c4, "] ", current8])));
                      $S3D().CallStatic($T1F(), "WriteMapString", null, num7, 0, System.String.PadRight(text, 66, ' '));
                      $S35().CallStatic($T1F(), "WriteMapChar", null, num7, 1, $S24().Construct($T03().Cyan, c4));
                      c4 += "\x01";
                      num7 = ((num7 + 1) | 0);
                    }
                    $S3D().CallStatic($T1F(), "WriteMapString", null, num7, 0, System.String.PadRight(("------Space left: " + System.String.PadRight((((20 - this.InventoryCount()) | 0)).toString(), 7, "-") + "[?] for help"), 66, "-"));
                    $S35().CallStatic($T1F(), "WriteMapChar", null, num7, 26, $S24().Construct($T03().Cyan, "?"));
                    if (num7 < 22) {
                      $S3D().CallStatic($T1F(), "WriteMapString", null, ((num7 + 1) | 0), 0, System.String.PadRight("", 66, ' '));
                    }
                    $thisType.Actor$B$value.DisplayNow("Apply which item? ");
                    $T4A().set_CursorVisible(true);
                    k = $T4A().ReadKey(true).MemberwiseClone();
                    c = $thisType.ConvertInput(k.MemberwiseClone());
                    var num8 = (String.fromCharCode((c.charCodeAt(0) - "a".charCodeAt(0)))).charCodeAt(0);
                    if (!((num8 < 0) || (num8 >= this.InventoryList().get_Count()))) {
                      num6 = num8;
                    } else if (c.charCodeAt(0) === "?".charCodeAt(0)) {
                      $T28().DisplayHelp($T63().Items);
                      num6 = -1;
                    }
                    $T10().PhysicalObject$M$value.RedrawWithStrings();
                    if (num6 !== -1) {
                      if (!this.StunnedThisTurn()) {
                        if (this.Actor$inv$value.get_Item(num6).Use(this)) {
                          this.Q1();
                        } else {
                          this.Q0();
                        }
                      }
                    } else {
                      this.Q0();
                    }
                  }
                  $label1 = 1 /* goto IL_40EC */ ;
                  continue $labelgroup1;

                default: 
                case "b": 
                case "h": 
                case "j": 
                case "k": 
                case "l": 
                case "m": 
                case "n": 
                case "u": 
                case "v": 
                case "y": 
                case "{": 
                case "|": 
                case "}": 
                  if (c2.charCodeAt(0) !== "\t".charCodeAt(0)) {
                    $thisType.Actor$B$value.Add("Press '?' for help. ", JSIL.Array.New($T10(), 0));
                    this.Q0();
                    $label1 = 1 /* goto IL_40EC */ ;
                    continue $labelgroup1;
                  }
                  this.GetTarget(true, -1, true);
                  this.Q0();
                  $label1 = 1 /* goto IL_40EC */ ;
                  continue $labelgroup1;

                case "c": 
                  this.DisplayCharacterInfo();
                  this.Q0();
                  $label1 = 1 /* goto IL_40EC */ ;
                  continue $labelgroup1;

                case "d": 
                  if (this.Actor$inv$value.get_Count() === 0) {
                    $thisType.Actor$B$value.Add("You have nothing to drop. ", JSIL.Array.New($T10(), 0));
                    this.Q0();
                  } else {
                    var num9 = -1;
                    $S3D().CallStatic($T1F(), "WriteMapString", null, 0, 0, System.String.PadRight("", 66, "-"));
                    var c5 = "a";
                    var num10 = 1;

                    for (var a$8 = this.InventoryList()._items, i$8 = 0, l$8 = this.InventoryList()._size; i$8 < l$8; ($temp0F = i$8, 
                        i$8 = ((i$8 + 1) | 0), 
                        $temp0F)) {
                      var current9 = a$8[i$8];
                      var text2 = (JSIL.ConcatString.apply(null, JSIL.Array.New($T60(), ["[", c5, "] ", current9])));
                      $S3D().CallStatic($T1F(), "WriteMapString", null, num10, 0, System.String.PadRight(text2, 66, ' '));
                      $S35().CallStatic($T1F(), "WriteMapChar", null, num10, 1, $S24().Construct($T03().Cyan, c5));
                      c5 += "\x01";
                      num10 = ((num10 + 1) | 0);
                    }
                    $S3D().CallStatic($T1F(), "WriteMapString", null, num10, 0, System.String.PadRight(("------Space left: " + System.String.PadRight((((20 - this.InventoryCount()) | 0)).toString(), 7, "-") + "[?] for help"), 66, "-"));
                    $S35().CallStatic($T1F(), "WriteMapChar", null, num10, 26, $S24().Construct($T03().Cyan, "?"));
                    if (num10 < 22) {
                      $S3D().CallStatic($T1F(), "WriteMapString", null, ((num10 + 1) | 0), 0, System.String.PadRight("", 66, ' '));
                    }
                    $thisType.Actor$B$value.DisplayNow("Drop which item? ");
                    $T4A().set_CursorVisible(true);
                    k = $T4A().ReadKey(true).MemberwiseClone();
                    c = $thisType.ConvertInput(k.MemberwiseClone());
                    var num11 = (String.fromCharCode((c.charCodeAt(0) - "a".charCodeAt(0)))).charCodeAt(0);
                    if (!((num11 < 0) || (num11 >= this.InventoryList().get_Count()))) {
                      num9 = num11;
                    } else if (c.charCodeAt(0) === "?".charCodeAt(0)) {
                      $T28().DisplayHelp($T63().Items);
                      num9 = -1;
                    }
                    $T10().PhysicalObject$M$value.RedrawWithStrings();
                    if (num9 !== -1) {
                      if (!this.StunnedThisTurn()) {
                        var item = this.Actor$inv$value.get_Item(num9);
                        if (item.Item$quantity$value <= 1) {
                          if (this.tile().Tile$type$value === $T1A().HEALING_POOL) {
                            $thisType.Actor$B$value.Add(("You drop " + item.TheName() + " into the healing pool. "), JSIL.Array.New($T10(), 0));
                            this.Actor$inv$value.Remove(item);
                            if (this.Actor$curhp$value < this.Actor$maxhp$value) {
                              $thisType.Actor$B$value.Add("The pool glows briefly. ", JSIL.Array.New($T10(), 0));
                              $thisType.Actor$B$value.Add("You suddenly feel great again! ", JSIL.Array.New($T10(), 0));
                              $thisType.Actor$B$value.Add("The healing pool dries up. ", JSIL.Array.New($T10(), 0));
                              this.Actor$curhp$value = this.Actor$maxhp$value;
                            } else {
                              $thisType.Actor$B$value.Add("The pool glows briefly, then dries up. ", JSIL.Array.New($T10(), 0));
                            }
                            this.tile().TurnToFloor();
                            this.Q1();
                          } else if (this.tile().GetItem(item)) {
                            $thisType.Actor$B$value.Add(("You drop " + item.TheName() + ". "), JSIL.Array.New($T10(), 0));
                            this.Actor$inv$value.Remove(item);
                            item.Item$ignored$value = true;
                            this.Q1();
                          } else {
                            $thisType.Actor$B$value.Add("There is no room. ", JSIL.Array.New($T10(), 0));
                            this.Q0();
                          }
                        } else if (this.tile().Tile$type$value === $T1A().HEALING_POOL) {
                          var item2 = $S1C().Construct(item, this.get_row(), this.get_col());
                          item2.Item$quantity$value = 1;
                          ($temp02 = ((item.Item$quantity$value - 1) | 0), 
                            item.Item$quantity$value = $temp02, 
                            $temp02);
                          $thisType.Actor$B$value.Add(("You drop " + item2.TheName() + " into the healing pool. "), JSIL.Array.New($T10(), 0));
                          if (this.Actor$curhp$value < this.Actor$maxhp$value) {
                            $thisType.Actor$B$value.Add("The pool glows briefly. ", JSIL.Array.New($T10(), 0));
                            $thisType.Actor$B$value.Add("You suddenly feel great again! ", JSIL.Array.New($T10(), 0));
                            $thisType.Actor$B$value.Add("The healing pool dries up. ", JSIL.Array.New($T10(), 0));
                            this.Actor$curhp$value = this.Actor$maxhp$value;
                          } else {
                            $thisType.Actor$B$value.Add("The pool glows briefly, then dries up. ", JSIL.Array.New($T10(), 0));
                          }
                          this.tile().TurnToFloor();
                          this.Q1();
                        } else {
                          $thisType.Actor$B$value.DisplayNow(JSIL.ConcatString("Drop how many? (1-", item.Item$quantity$value, "): "));
                          var num12 = $T24().EnterInt();
                          if (num12 === 0) {
                            this.Q0();
                          } else if (!((num12 < item.Item$quantity$value) && (num12 !== -1))) {
                            if (this.tile().GetItem(item)) {
                              $thisType.Actor$B$value.Add(("You drop " + item.TheName() + ". "), JSIL.Array.New($T10(), 0));
                              this.Actor$inv$value.Remove(item);
                              item.Item$ignored$value = true;
                              this.Q1();
                            } else {
                              $thisType.Actor$B$value.Add("There is no room. ", JSIL.Array.New($T10(), 0));
                              this.Q0();
                            }
                          } else {
                            var item3 = $S1C().Construct(item, this.get_row(), this.get_col());
                            item3.Item$quantity$value = num12;
                            if (this.tile().GetItem(item3)) {
                              ($temp03 = ((item.Item$quantity$value - num12) | 0), 
                                item.Item$quantity$value = $temp03, 
                                $temp03);
                              $thisType.Actor$B$value.Add(("You drop " + item3.TheName() + ". "), JSIL.Array.New($T10(), 0));
                              item3.Item$ignored$value = true;
                              this.Q1();
                            } else {
                              $thisType.Actor$B$value.Add("There is no room. ", JSIL.Array.New($T10(), 0));
                              this.Q0();
                            }
                          }
                        }
                      }
                    } else {
                      this.Q0();
                    }
                  }
                  $label1 = 1 /* goto IL_40EC */ ;
                  continue $labelgroup1;

                case "e": 
                  var array = this.DisplayEquipment();
                  var weaponType2 = $T3A().BaseWeapon($T15().$Cast(array[0]));
                  var armorType = $T3F().BaseArmor($T16().$Cast(array[1]));
                  var value3 = this.weapons.get_First().get_Value();
                  var value4 = this.armors.get_First().get_Value();
                  var flag12 = (weaponType2 !== $T3A().BaseWeapon(value3));
                  var flag13 = (armorType !== $T3F().BaseArmor(value4));
                  var flag14 = false;
                  if (!(!flag12 || !this.HasAttr($T04().CURSED_WEAPON))) {
                    flag14 = true;
                    flag12 = false;
                  }
                  if (!(flag12 || flag13)) {
                    if (flag14) {
                      $thisType.Actor$B$value.Add(("Your " + $T3A().Name(this.weapons.get_First().get_Value()) + " is stuck to your hand and can't be dropped. "), JSIL.Array.New($T10(), 0));
                    }
                    this.Q0();
                  } else if (!this.StunnedThisTurn()) {
                    if (flag12) {

                      for (var flag15 = false; !flag15; ) {
                        var value5 = this.weapons.get_First().get_Value();
                        $s00.CallVirtual("Remove", null, this.weapons, value5);
                        $s01.Call($T0D().prototype, "AddLast", null, this.weapons, value5);
                        if (weaponType2 === $T3A().BaseWeapon(this.weapons.get_First().get_Value())) {
                          flag15 = true;
                        }
                      }
                      if (!(!this.HasFeat($T41().QUICK_DRAW) || flag13)) {
                        $thisType.Actor$B$value.Add(("You quickly ready your " + $T3A().Name(this.weapons.get_First().get_Value()) + ". "), JSIL.Array.New($T10(), 0));
                      } else {
                        $thisType.Actor$B$value.Add(("You ready your " + $T3A().Name(this.weapons.get_First().get_Value()) + ". "), JSIL.Array.New($T10(), 0));
                      }
                      $S5D().CallVirtual("UpdateOnEquip", null, this, value3, this.weapons.get_First().get_Value());
                    }
                    if (flag13) {

                      for (var flag16 = false; !flag16; ) {
                        var value6 = this.armors.get_First().get_Value();
                        $s02.CallVirtual("Remove", null, this.armors, value6);
                        $s03.Call($T0E().prototype, "AddLast", null, this.armors, value6);
                        if (armorType === $T3F().BaseArmor(this.armors.get_First().get_Value())) {
                          flag16 = true;
                        }
                      }
                      $thisType.Actor$B$value.Add(("You wear your " + $T3F().Name(this.armors.get_First().get_Value()) + ". "), JSIL.Array.New($T10(), 0));
                      $S0E().CallVirtual("UpdateOnEquip", null, this, value4, this.armors.get_First().get_Value());
                    }
                    if (flag14) {
                      $thisType.Actor$B$value.Add(("Your " + $T3A().Name(this.weapons.get_First().get_Value()) + " is stuck to your hand and can't be dropped. "), JSIL.Array.New($T10(), 0));
                    }
                    if (!(!this.HasFeat($T41().QUICK_DRAW) || flag13)) {
                      this.Q0();
                    } else {
                      this.Q1();
                    }
                  }
                  $label1 = 1 /* goto IL_40EC */ ;
                  continue $labelgroup1;

                case "f": 
                  var list = $S5E().Construct();
                  var list2 = $S5E().Construct();

                  for (var a$9 = $thisType.feats_in_order._items, i$9 = 0, l$9 = $thisType.feats_in_order._size; i$9 < l$9; ($temp10 = i$9, 
                      i$9 = ((i$9 + 1) | 0), 
                      $temp10)) {
                    var current10 = a$9[i$9];
                    if ($T51().IsActivated(current10)) {
                      list.Add(current10);
                    } else {
                      list2.Add(current10);
                    }
                  }
                  $S3D().CallStatic($T1F(), "WriteMapString", null, 0, 0, System.String.PadRight("", 66, "-"));
                  var num13 = 1;
                  if (list.get_Count() > 0) {
                    $S3D().CallStatic($T1F(), "WriteMapString", null, num13, 0, $T27().PadToMapSize("Active feats:"));
                    num13 = ((num13 + 1) | 0);
                    var c6 = "a";

                    for (var a$a = list._items, i$a = 0, l$a = list._size; i$a < l$a; ($temp11 = i$a, 
                        i$a = ((i$a + 1) | 0), 
                        $temp11)) {
                      var current11 = a$a[i$a];
                      var s = (JSIL.ConcatString.apply(null, JSIL.Array.New($T60(), ["[", c6, "] ", $T51().Name(current11)])));
                      $S3D().CallStatic($T1F(), "WriteMapString", null, num13, 0, $T27().PadToMapSize(s));
                      $T1F().WriteMapChar(num13, 1, c6, $T03().Cyan);
                      num13 = ((num13 + 1) | 0);
                      c6 += "\x01";
                    }
                    $S3D().CallStatic($T1F(), "WriteMapString", null, num13, 0, $T27().PadToMapSize(""));
                    num13 = ((num13 + 1) | 0);
                  }
                  if (list2.get_Count() > 0) {
                    $S3D().CallStatic($T1F(), "WriteMapString", null, num13, 0, $T27().PadToMapSize("Passive feats:"));
                    num13 = ((num13 + 1) | 0);

                    for (var a$b = list2._items, i$b = 0, l$b = list2._size; i$b < l$b; ($temp12 = i$b, 
                        i$b = ((i$b + 1) | 0), 
                        $temp12)) {
                      var current12 = a$b[i$b];
                      var s2 = (JSIL.ConcatString("    ", $T51().Name(current12)));
                      $S3D().CallStatic($T1F(), "WriteMapString", null, num13, 0, $T27().PadToMapSize(s2));
                      num13 = ((num13 + 1) | 0);
                    }
                    $S3D().CallStatic($T1F(), "WriteMapString", null, num13, 0, $T27().PadToMapSize(""));
                    num13 = ((num13 + 1) | 0);
                  }
                  $S3D().CallStatic($T1F(), "WriteMapString", null, num13, 0, $T27().PadToMapSize("Feats currently being learned:"));
                  num13 = ((num13 + 1) | 0);
                  if ($thisType.partial_feats_in_order.get_Count() === 0) {
                    $S3D().CallStatic($T1F(), "WriteMapString", null, num13, 0, $T27().PadToMapSize("    None"));
                    num13 = ((num13 + 1) | 0);
                  } else if ((($thisType.partial_feats_in_order.get_Count() + num13) | 0) > 21) {
                    var num14 = (((($thisType.partial_feats_in_order.get_Count() + num13) | 0) - 21) | 0);

                  $loop16: 
                    for (var a$c = $thisType.partial_feats_in_order._items, i$c = 0, l$c = $thisType.partial_feats_in_order._size; i$c < l$c; ($temp13 = i$c, 
                        i$c = ((i$c + 1) | 0), 
                        $temp13)) {
                      var current13 = a$c[i$c];
                      if (num13 === 21) {
                        break $loop16;
                      }
                      $S3D().CallStatic($T1F(), "WriteMapString", null, num13, 0, JSIL.ConcatString("    ", System.String.PadRight($T51().Name(current13), 21, ' ')));
                      if (num14 > 0) {
                        $S3D().CallStatic($T1F(), "WriteMapString", null, num13, 25, JSIL.ConcatString.apply(null, JSIL.Array.New($T60(), ["(", (-$T0A().prototype.get_Item.call(this.feats, current13) | 0), "/", $T51().MaxRank(current13), System.String.PadRight(")", 7, ' ')])));
                        var featType = $thisType.partial_feats_in_order.get_Item((($thisType.partial_feats_in_order.get_Count() - num14) | 0));
                        $S3D().CallStatic($T1F(), "WriteMapString", null, num13, 36, System.String.PadRight($T51().Name(featType), 21, ' '));
                        $S3D().CallStatic($T1F(), "WriteMapString", null, num13, 57, JSIL.ConcatString.apply(null, JSIL.Array.New($T60(), ["(", (-$T0A().prototype.get_Item.call(this.feats, featType) | 0), "/", $T51().MaxRank(featType), System.String.PadRight(")", 6, ' ')])));
                        num13 = ((num13 + 1) | 0);
                        num14 = ((num14 - 1) | 0);
                      } else {
                        $S3D().CallStatic($T1F(), "WriteMapString", null, num13, 25, JSIL.ConcatString.apply(null, JSIL.Array.New($T60(), ["(", (-$T0A().prototype.get_Item.call(this.feats, current13) | 0), "/", $T51().MaxRank(current13), System.String.PadRight(")", 37, ' ')])));
                        num13 = ((num13 + 1) | 0);
                      }
                    }
                  } else {

                    for (var a$d = $thisType.partial_feats_in_order._items, i$d = 0, l$d = $thisType.partial_feats_in_order._size; i$d < l$d; ($temp14 = i$d, 
                        i$d = ((i$d + 1) | 0), 
                        $temp14)) {
                      var current14 = a$d[i$d];
                      $S3D().CallStatic($T1F(), "WriteMapString", null, num13, 0, JSIL.ConcatString("    ", System.String.PadRight($T51().Name(current14), 21, ' ')));
                      $S3D().CallStatic($T1F(), "WriteMapString", null, num13, 25, JSIL.ConcatString.apply(null, JSIL.Array.New($T60(), ["(", (-$T0A().prototype.get_Item.call(this.feats, current14) | 0), "/", $T51().MaxRank(current14), System.String.PadRight(")", 37, ' ')])));
                      num13 = ((num13 + 1) | 0);
                    }
                  }
                  $S3D().CallStatic($T1F(), "WriteMapString", null, num13, 0, System.String.PadRight(JSIL.ConcatString(System.String.PadRight("", 25, "-"), "[?] for help"), 66, "-"));
                  $S35().CallStatic($T1F(), "WriteMapChar", null, num13, 26, $S24().Construct($T03().Cyan, "?"));
                  num13 = ((num13 + 1) | 0);
                  if (num13 <= 21) {
                    $S3D().CallStatic($T1F(), "WriteMapString", null, num13, 0, $T27().PadToMapSize(""));
                  }
                  $T1F().ResetColors();
                  if (list.get_Count() > 0) {
                    $thisType.Actor$B$value.DisplayNow("Use which feat? ");
                  } else {
                    $thisType.Actor$B$value.DisplayNow("Feats: ");
                  }
                  $T4A().set_CursorVisible(true);
                  var featType2 = $T41().NO_FEAT;

                  for (var flag17 = false; !flag17; ) {
                    k = $T4A().ReadKey(true).MemberwiseClone();
                    c = $thisType.ConvertInput(k.MemberwiseClone());
                    var num15 = (String.fromCharCode((c.charCodeAt(0) - "a".charCodeAt(0)))).charCodeAt(0);
                    if (!((list.get_Count() <= num15) || (num15 < 0))) {
                      featType2 = list.get_Item(num15);
                      flag17 = true;
                    } else if (c.charCodeAt(0) === "?".charCodeAt(0)) {
                      $T28().DisplayHelp($T63().Feats);
                      flag17 = true;
                    } else {
                      flag17 = true;
                    }
                  }
                  $T10().PhysicalObject$M$value.RedrawWithStrings();
                  if (featType2 !== $T41().NO_FEAT) {
                    if (!this.StunnedThisTurn()) {
                      if (!this.UseFeat(featType2)) {
                        this.Q0();
                      }
                    }
                  } else {
                    this.Q0();
                  }
                  $label1 = 1 /* goto IL_40EC */ ;
                  continue $labelgroup1;

                case "i": 
                  if (this.Actor$inv$value.get_Count() === 0) {
                    $thisType.Actor$B$value.Add("You have nothing in your pack. ", JSIL.Array.New($T10(), 0));
                    this.Q0();
                  } else {
                    $S3D().CallStatic($T1F(), "WriteMapString", null, 0, 0, System.String.PadRight("", 66, "-"));
                    var c7 = "a";
                    var num16 = 1;

                    for (var a$e = this.InventoryList()._items, i$e = 0, l$e = this.InventoryList()._size; i$e < l$e; ($temp15 = i$e, 
                        i$e = ((i$e + 1) | 0), 
                        $temp15)) {
                      var current15 = a$e[i$e];
                      var text3 = (JSIL.ConcatString.apply(null, JSIL.Array.New($T60(), ["[", c7, "] ", current15])));
                      $S3D().CallStatic($T1F(), "WriteMapString", null, num16, 0, System.String.PadRight(text3, 66, ' '));
                      $S35().CallStatic($T1F(), "WriteMapChar", null, num16, 1, $S24().Construct($T03().Cyan, c7));
                      c7 += "\x01";
                      num16 = ((num16 + 1) | 0);
                    }
                    $S3D().CallStatic($T1F(), "WriteMapString", null, num16, 0, System.String.PadRight(("------Space left: " + System.String.PadRight((((20 - this.InventoryCount()) | 0)).toString(), 7, "-") + "[?] for help"), 66, "-"));
                    $S35().CallStatic($T1F(), "WriteMapChar", null, num16, 26, $S24().Construct($T03().Cyan, "?"));
                    if (num16 < 22) {
                      $S3D().CallStatic($T1F(), "WriteMapString", null, ((num16 + 1) | 0), 0, System.String.PadRight("", 66, ' '));
                    }
                    $thisType.Actor$B$value.DisplayNow("In your pack: ");
                    $T4A().set_CursorVisible(true);
                    k = $T4A().ReadKey(true).MemberwiseClone();
                    c = $thisType.ConvertInput(k.MemberwiseClone());
                    if (c.charCodeAt(0) === "?".charCodeAt(0)) {
                      $T28().DisplayHelp($T63().Items);
                    }
                    $T10().PhysicalObject$M$value.RedrawWithStrings();
                    this.Q0();
                  }
                  $label1 = 1 /* goto IL_40EC */ ;
                  continue $labelgroup1;

                case "o": 
                  var num17 = 0;
                  var num18 = 0;

                  for (var a$f = this.TilesAtDistance(1)._items, i$f = 0, l$f = this.TilesAtDistance(1)._size; i$f < l$f; ($temp16 = i$f, 
                      i$f = ((i$f + 1) | 0), 
                      $temp16)) {
                    var current16 = a$f[i$f];
                    if (!(((current16.Tile$type$value !== $T1A().DOOR_C) && 
                          (current16.Tile$type$value !== $T1A().DOOR_O) && 
                          (current16.Tile$type$value !== $T1A().RUBBLE) && 
                          (!this.HasFeat($T41().DISARM_TRAP) || 
                            !current16.IsKnownTrap())) || 
                        (current16.actor() !== null) || ((current16.Tile$inv$value !== null) && 
                          !current16.IsTrap()))) {
                      num17 = $S1E().CallVirtual("DirectionOf", null, this, current16);
                      num18 = ((num18 + 1) | 0);
                    }
                  }
                  if (num18 === 1) {
                    var tile3 = this.TileInDirection(num17);
                    if (!((tile3.Tile$type$value !== $T1A().DOOR_C) && 
                        (tile3.Tile$type$value !== $T1A().DOOR_O) && (tile3.Tile$type$value !== $T1A().RUBBLE))) {
                      if (this.StunnedThisTurn()) {
                        return;
                      }
                      tile3.Toggle(this);
                      this.Q1();
                    } else if (tile3.IsTrap()) {
                      if (this.GrabPreventsMovement(tile3)) {
                        $thisType.Actor$B$value.Add("You can't currently reach that trap. ", JSIL.Array.New($T10(), 0));
                        this.Q0();
                        return;
                      }
                      if (this.StunnedThisTurn()) {
                        return;
                      }
                      if ($T24().Roll(5) <= 4) {
                        $thisType.Actor$B$value.Add(("You disarm " + $T17().Prototype(tile3.Tile$type$value).PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), 0));
                        tile3.Toggle(this);
                        this.Q1();
                      } else if ($T24().Roll(20) <= $T06().prototype.get_Item.call(this.skills, $T07().DEFENSE)) {
                        $thisType.Actor$B$value.Add(("You almost set off " + $T17().Prototype(tile3.Tile$type$value).PhysicalObject$the_name$value + "! "), JSIL.Array.New($T10(), 0));
                        this.Q1();
                      } else {
                        $thisType.Actor$B$value.Add(("You set off " + $T17().Prototype(tile3.Tile$type$value).PhysicalObject$the_name$value + "! "), JSIL.Array.New($T10(), 0));
                        this.Move(
                          tile3.get_row(), 
                          tile3.get_col()
                        );
                        this.Q1();
                      }
                    } else {
                      this.Q0();
                    }
                  } else {
                    num17 = this.GetDirection("Operate something in which direction? ");
                    if (num17 !== -1) {

                      var $label0 = 0;
                    $labelgroup0: 
                      while (true) {
                        switch ($label0) {
                          case 0: /* $entry0 */ 
                            var tile4 = this.TileInDirection(num17);
                            if (tile4.IsKnownTrap()) {
                              if (!this.HasFeat($T41().DISARM_TRAP)) {
                                $thisType.Actor$B$value.Add("You don't know how to disable that trap. ", JSIL.Array.New($T10(), 0));
                                this.Q0();
                                return;
                              }
                              if (this.GrabPreventsMovement(tile4)) {
                                $thisType.Actor$B$value.Add("You can't currently reach that trap. ", JSIL.Array.New($T10(), 0));
                                this.Q0();
                                return;
                              }
                              if (this.StunnedThisTurn()) {
                                return;
                              }
                              if ($T24().Roll(5) <= 4) {
                                $thisType.Actor$B$value.Add(("You disarm " + $T17().Prototype(tile4.Tile$type$value).PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), 0));
                                tile4.Toggle(this);
                                this.Q1();
                              } else if ($T24().Roll(20) <= $T06().prototype.get_Item.call(this.skills, $T07().DEFENSE)) {
                                $thisType.Actor$B$value.Add(("You almost set off " + $T17().Prototype(tile4.Tile$type$value).PhysicalObject$the_name$value + "! "), JSIL.Array.New($T10(), 0));
                                this.Q1();
                              } else {
                                $thisType.Actor$B$value.Add(("You set off " + $T17().Prototype(tile4.Tile$type$value).PhysicalObject$the_name$value + "! "), JSIL.Array.New($T10(), 0));
                                this.Move(
                                  tile4.get_row(), 
                                  tile4.get_col()
                                );
                                this.Q1();
                              }
                            } else {
                              var type = tile4.Tile$type$value;
                              switch (type.valueOf()) {
                                case 2: 
                                case 3: 
                                  break;

                                case 4: 
                                  $thisType.Actor$B$value.Add("Stand on the stairs and press '>' to descend. ", JSIL.Array.New($T10(), 0));
                                  this.Q0();
                                  $label0 = 1 /* goto IL_136D */ ;
                                  continue $labelgroup0;

                                case 5: 
                                  $thisType.Actor$B$value.Add("Stand on the chest and press 'g' to retrieve its contents. ", JSIL.Array.New($T10(), 0));
                                  this.Q0();
                                  $label0 = 1 /* goto IL_136D */ ;
                                  continue $labelgroup0;

                                default: 
                                  if (type !== $T1A().RUBBLE) {
                                    this.Q0();
                                    $label0 = 1 /* goto IL_136D */ ;
                                    continue $labelgroup0;
                                  }
                                  break;

                              }
                              if (!this.StunnedThisTurn()) {
                                tile4.Toggle(this);
                                this.Q1();
                              }
                            }

                            $label0 = 1 /* goto IL_136D */ ;
                            continue $labelgroup0;
                          case 1: /* IL_136D */ 
                            break $labelgroup0;

                        }
                      }
                    } else {
                      this.Q0();
                    }
                  }
                  $label1 = 1 /* goto IL_40EC */ ;
                  continue $labelgroup1;

                case "p": 
                  $S3D().CallStatic($T1F(), "WriteMapString", null, 0, 0, System.String.PadRight("", 66, "-"));
                  var num19 = 1;

                  for (var a$10 = $thisType.Actor$B$value.GetMessages()._items, i$10 = 0, l$10 = $thisType.Actor$B$value.GetMessages()._size; i$10 < l$10; ($temp17 = i$10, 
                      i$10 = ((i$10 + 1) | 0), 
                      $temp17)) {
                    var current17 = a$10[i$10];
                    $S3D().CallStatic($T1F(), "WriteMapString", null, num19, 0, System.String.PadRight(current17, 66, ' '));
                    num19 = ((num19 + 1) | 0);
                  }
                  $S3D().CallStatic($T1F(), "WriteMapString", null, 21, 0, System.String.PadRight("", 66, "-"));
                  $thisType.Actor$B$value.DisplayNow("Previous messages: ");
                  $T4A().set_CursorVisible(true);
                  $T4A().ReadKey(true);
                  this.Q0();
                  $label1 = 1 /* goto IL_40EC */ ;
                  continue $labelgroup1;

                case "q": 
                  var list3 = $S4E().Construct();
                  list3.Add("Save your progress and exit to main menu");
                  list3.Add("Save your progress and quit game");
                  list3.Add("Abandon character and exit to main menu");
                  list3.Add("Abandon character and quit game");
                  list3.Add("Quit game immediately - don't save anything");
                  list3.Add("Continue playing");
                  $T4A().set_CursorVisible(true);
                  switch (this.Select("Quit? ", list3)) {
                    case 0: 
                      $T24().SaveGame($thisType.Actor$B$value, $T10().PhysicalObject$M$value, $thisType.Actor$Q$value);
                      $T24().GAME_OVER = true;
                      $T24().SAVING = true;
                      break;

                    case 1: 
                      $T24().SaveGame($thisType.Actor$B$value, $T10().PhysicalObject$M$value, $thisType.Actor$Q$value);
                      $T24().GAME_OVER = true;
                      $T24().QUITTING = true;
                      $T24().SAVING = true;
                      break;

                    case 2: 
                      $T24().GAME_OVER = true;
                      $T24().KILLED_BY = "giving up";
                      break;

                    case 3: 
                      $T24().GAME_OVER = true;
                      $T24().QUITTING = true;
                      $T24().KILLED_BY = "giving up";
                      break;

                    case 4: 
                      $T24().Quit();
                      break;

                  }
                  this.Q0();
                  $label1 = 1 /* goto IL_40EC */ ;
                  continue $labelgroup1;

                case "r": 
                  if ($T09().prototype.get_Item.call(this.attrs, $T04().RESTING) !== -1) {
                    var flag18 = false;

                    for (var a$11 = $T10().PhysicalObject$M$value.AllActors()._items, i$11 = 0, l$11 = $T10().PhysicalObject$M$value.AllActors()._size; i$11 < l$11; ($temp18 = i$11, 
                        i$11 = ((i$11 + 1) | 0), 
                        $temp18)) {
                      var current18 = a$11[i$11];
                      if (!((current18 === this) || 
                          !this.CanSee(current18) || !this.HasLOS(
                            current18.get_row(), 
                            current18.get_col()
                          ))) {
                        flag18 = true;
                      }
                    }
                    if (!flag18) {
                      var flag19 = false;
                      if (this.magic_penalty > 0) {
                        flag19 = true;
                      }
                      if (!((this.Actor$curhp$value >= this.Actor$maxhp$value) && !flag19)) {
                        if (!this.StunnedThisTurn()) {
                          $T09().prototype.set_Item.call(this.attrs, $T04().RESTING, 1);
                          $thisType.Actor$B$value.Add("You rest... ", JSIL.Array.New($T10(), 0));
                          this.Q1();
                        }
                      } else {
                        $thisType.Actor$B$value.Add("You don't need to rest right now. ", JSIL.Array.New($T10(), 0));
                        this.Q0();
                      }
                    } else {
                      $thisType.Actor$B$value.Add("You can't rest while there are enemies around! ", JSIL.Array.New($T10(), 0));
                      this.Q0();
                    }
                  } else {
                    $thisType.Actor$B$value.Add("You find it impossible to rest again on this dungeon level. ", JSIL.Array.New($T10(), 0));
                    this.Q0();
                  }
                  $label1 = 1 /* goto IL_40EC */ ;
                  continue $labelgroup1;

                case "s": 
                  if (!(($T3A().BaseWeapon(this.weapons.get_First().get_Value()) !== $T15().BOW) && !this.HasFeat($T41().QUICK_DRAW))) {
                    if ((this.ActorsAtDistance(1)).get_Count() > 0) {
                      if ((this.ActorsAtDistance(1)).get_Count() === 1) {
                        $thisType.Actor$B$value.Add("You can't fire with an enemy so close. ", JSIL.Array.New($T10(), 0));
                      } else {
                        $thisType.Actor$B$value.Add("You can't fire with enemies so close. ", JSIL.Array.New($T10(), 0));
                      }
                      this.Q0();
                    } else {
                      var target = $S2B().CallVirtual("GetTarget", null, this, 12);
                      if (target !== null) {
                        $S4D().CallVirtual("FireArrow", null, this, target);
                      } else {
                        this.Q0();
                      }
                    }
                  } else {
                    $thisType.Actor$B$value.Add("You can't fire arrows without your bow equipped. ", JSIL.Array.New($T10(), 0));
                    this.Q0();
                  }
                  $label1 = 1 /* goto IL_40EC */ ;
                  continue $labelgroup1;

                case "t": 
                  if (this.StunnedThisTurn()) {
                    $label1 = 1 /* goto IL_40EC */ ;
                    continue $labelgroup1;
                  }
                  if (this.PhysicalObject$light_radius$value === 0) {
                    if (this.HasAttr($T04().ENHANCED_TORCH)) {
                      this.UpdateRadius(
                        this.LightRadius(), 
                        ((12 - (($T09().prototype.get_Item.call(this.attrs, $T04().DIM_LIGHT) * 2) | 0)) | 0), 
                        true
                      );
                    } else {
                      this.UpdateRadius(
                        this.LightRadius(), 
                        ((6 - $T09().prototype.get_Item.call(this.attrs, $T04().DIM_LIGHT)) | 0), 
                        true
                      );
                    }
                    if (!$T10().PhysicalObject$M$value.Map$wiz_dark$value) {
                      $thisType.Actor$B$value.Add("You bring out your torch. ", JSIL.Array.New($T10(), 0));
                    } else {
                      $thisType.Actor$B$value.Add("You bring out your torch, but it gives off no light! ", JSIL.Array.New($T10(), 0));
                    }
                  } else {
                    this.UpdateRadius(this.LightRadius(), 0, true);
                    this.UpdateRadius(0, $T09().prototype.get_Item.call(this.attrs, $T04().ON_FIRE));
                    if (!$T10().PhysicalObject$M$value.get_wiz_lite()) {
                      $thisType.Actor$B$value.Add("You put away your torch. ", JSIL.Array.New($T10(), 0));
                    } else {
                      $thisType.Actor$B$value.Add("You put away your torch. The air still shines brightly. ", JSIL.Array.New($T10(), 0));
                    }
                  }
                  this.Q1();
                  $label1 = 1 /* goto IL_40EC */ ;
                  continue $labelgroup1;

                case "w": 
                  var direction = this.GetDirection("Start walking in which direction? ", false, true);
                  if (direction !== 0) {
                    var flag20 = false;

                    for (var a$12 = $T10().PhysicalObject$M$value.AllActors()._items, i$12 = 0, l$12 = $T10().PhysicalObject$M$value.AllActors()._size; i$12 < l$12; ($temp19 = i$12, 
                        i$12 = ((i$12 + 1) | 0), 
                        $temp19)) {
                      var current19 = a$12[i$12];
                      if (!((current19 === this) || 
                          !this.CanSee(current19) || !this.HasLOS(
                            current19.get_row(), 
                            current19.get_col()
                          ))) {
                        flag20 = true;
                      }
                    }
                    if (direction !== 5) {
                      this.PlayerWalk(direction);
                    } else {
                      this.Q1();
                    }
                    if (!flag20) {
                      $T09().prototype.set_Item.call(this.attrs, $T04().RUNNING, direction);
                      var num20 = (!this.HasFeat($T41().ENDURING_SOUL) ? 10 : 20);
                      if (!((((this.Actor$curhp$value % num20) | 0) !== 0) || (direction !== 5))) {
                        $T09().prototype.set_Item.call(this.attrs, $T04().WAITING, 20);
                      }
                    }
                  } else {
                    this.Q0();
                  }
                  $label1 = 1 /* goto IL_40EC */ ;
                  continue $labelgroup1;

                case "x": 
                  var expr_20E0 = (dict4 = this.attrs);
                  var num21 = $T09().prototype.get_Item.call(dict4, $T04().AUTOEXPLORE);
                  $T09().prototype.set_Item.call(expr_20E0, $T04().AUTOEXPLORE, ((num21 + 1) | 0));
                  this.Q0();
                  $label1 = 1 /* goto IL_40EC */ ;
                  continue $labelgroup1;

                case "z": 

                  for (var a$13 = this.ActorsWithinDistance(2)._items, i$13 = 0, l$13 = this.ActorsWithinDistance(2)._size; i$13 < l$13; ($temp1A = i$13, 
                      i$13 = ((i$13 + 1) | 0), 
                      $temp1A)) {
                    var current20 = a$13[i$13];
                    if (!(!current20.HasAttr($T04().SPELL_DISRUPTION) || !current20.HasLOE(this))) {
                      if (this === $thisType.Actor$player$value) {
                        if (this.CanSee(current20)) {
                          $thisType.Actor$B$value.Add(JSIL.ConcatString(current20.Your(), " presence prevents you from casting! "), JSIL.Array.New($T10(), 0));
                        } else {
                          $thisType.Actor$B$value.Add("Something prevents you from casting! ", JSIL.Array.New($T10(), 0));
                        }
                      }
                      this.Q0();
                      return;
                    }
                  }
                  var list4 = $S56().Construct();
                  var list5 = $S18().Construct();
                  var flag21 = false;

                  for (var a$14 = $thisType.spells_in_order._items, i$14 = 0, l$14 = $thisType.spells_in_order._size; i$14 < l$14; ($temp1B = i$14, 
                      i$14 = ((i$14 + 1) | 0), 
                      $temp1B)) {
                    var current21 = a$14[i$14];
                    if (this.HasSpell(current21)) {
                      var colorstring = $S59().Construct(JSIL.ConcatString(System.String.PadRight($T42().Name(current21), 15, ' '), System.String.PadLeft(($T42().Level(current21)).toString(), 3, ' ')), $T03().Gray);
                      colorstring.strings.Add($S57().Construct(JSIL.ConcatString(System.String.PadLeft((this.FailRate(current21)).toString(), 9, ' '), "%"), $S5F().CallVirtual("FailColor", null, this, current21)));
                      if (!(!this.HasFeat($T41().MASTERS_EDGE) || 
                          !$T42().IsDamaging(current21) || flag21)) {
                        flag21 = true;
                        colorstring = $T59().op_Addition(colorstring, $T42().DescriptionWithIncreasedDamage(current21));
                      } else {
                        colorstring = $T59().op_Addition(colorstring, $T42().Description(current21));
                      }
                      list4.Add(colorstring);
                      list5.Add(current21);
                    }
                  }
                  if (list5.get_Count() > 0) {
                    var top_border = $S59().Construct("------------------Level---Fail rate--------Description------------", $T03().Gray);
                    var num22 = ((this.magic_penalty * 5) | 0);
                    if (!this.HasFeat($T41().ARMORED_MAGE)) {
                      num22 = ((num22 + $T3F().AddedFailRate(this.armors.get_First().get_Value())) | 0);
                    }
                    var bottom_border = $S60().Construct("------------Base fail rate: ", $T03().Gray, JSIL.ConcatString(System.String.PadLeft((num22).toString(), 3, ' '), "%"), $S58().CallVirtual("FailColor", null, this, num22), "----------[", $T03().Gray, "?", $T03().Cyan, System.String.PadRight("] for help", 22, "-"), $T03().Gray);
                    var num23 = this.Select(
                      "Cast which spell? ", 
                      top_border, 
                      bottom_border, 
                      list4, 
                      false, 
                      false, 
                      true, 
                      true, 
                      $T63().Spells
                    );
                    if (num23 !== -1) {
                      if (!this.CastSpell(list5.get_Item(num23))) {
                        this.Q0();
                      }
                    } else {
                      this.Q0();
                    }
                  } else {
                    $thisType.Actor$B$value.Add("You don't know any spells. ", JSIL.Array.New($T10(), 0));
                    this.Q0();
                  }
                  $label1 = 1 /* goto IL_40EC */ ;
                  continue $labelgroup1;

                case "~": 
                  this.Q0();
                  $label1 = 1 /* goto IL_40EC */ ;
                  continue $labelgroup1;

              }
              break;

            case "(": 
            case ")": 
            case "*": 
              var armorType2 = $T16().NO_ARMOR;
              switch (c) {
                case "(": 
                  armorType2 = $T16().CHAINMAIL;
                  break;

                case ")": 
                  armorType2 = $T16().FULL_PLATE;
                  break;

                case "*": 
                  armorType2 = $T16().LEATHER;
                  break;

              }
              var value7 = this.armors.get_First().get_Value();
              if (armorType2 === $T3F().BaseArmor(value7)) {
                this.Q0();
              } else if (!this.StunnedThisTurn()) {

                for (var flag22 = false; !flag22; ) {
                  var value8 = this.armors.get_First().get_Value();
                  $s02.CallVirtual("Remove", null, this.armors, value8);
                  $s03.Call($T0E().prototype, "AddLast", null, this.armors, value8);
                  if (armorType2 === $T3F().BaseArmor(this.armors.get_First().get_Value())) {
                    flag22 = true;
                  }
                }
                $thisType.Actor$B$value.Add(("You wear your " + $T3F().Name(this.armors.get_First().get_Value()) + ". "), JSIL.Array.New($T10(), 0));
                this.Q1();
                $S0E().CallVirtual("UpdateOnEquip", null, this, value7, this.armors.get_First().get_Value());
              }
              $label1 = 1 /* goto IL_40EC */ ;
              continue $labelgroup1;

            case "-": 
              $T4A().set_CursorVisible(false);
              var list6 = $T28().HelpText($T63().Commands);
              $T5B().prototype.RemoveRange.call(list6, 0, 2);
              $S3D().CallStatic($T1F(), "WriteMapString", null, 0, 0, System.String.PadRight("", 66, "-"));

              for (var i = 0; i < 20; i = ((i + 1) | 0)) {
                $S3D().CallStatic($T1F(), "WriteMapString", null, ((i + 1) | 0), 0, System.String.PadRight(list6.get_Item(i), 66, ' '));
              }
              $S3D().CallStatic($T1F(), "WriteMapString", null, 21, 0, System.String.PadRight("", 66, "-"));
              $thisType.Actor$B$value.DisplayNow("Commands: ");
              $T4A().set_CursorVisible(true);
              $T4A().ReadKey(true);
              this.Q0();
              $label1 = 1 /* goto IL_40EC */ ;
              continue $labelgroup1;

            case ".": 
            case "5": 
              if (!(!this.HasFeat($T41().FULL_DEFENSE) || 
                  (this.EnemiesAdjacent() <= 0) || 
                  this.HasAttr($T04().CATCHING_FIRE) || this.HasAttr($T04().ON_FIRE))) {
                var expr_C53 = (dict5 = this.attrs);
                num2 = $T09().prototype.get_Item.call(dict5, $T04().DEFENSIVE_STANCE);
                $T09().prototype.set_Item.call(expr_C53, $T04().DEFENSIVE_STANCE, ((num2 + 1) | 0));
                $thisType.Actor$B$value.Add("You ready yourself. ", JSIL.Array.New($T10(), 0));
              }
              if (this.HasAttr($T04().CATCHING_FIRE)) {
                $T09().prototype.set_Item.call(this.attrs, $T04().CATCHING_FIRE, 0);
                $thisType.Actor$B$value.Add("You stop the flames from spreading. ", JSIL.Array.New($T10(), 0));
              } else if (this.HasAttr($T04().ON_FIRE)) {
                var flag23 = false;
                var from = this.LightRadius();
                if ($T09().prototype.get_Item.call(this.attrs, $T04().ON_FIRE) > this.PhysicalObject$light_radius$value) {
                  flag23 = true;
                }
                var num24 = 2;
                if ($T24().Roll(1, 3) === 3) {
                  num24 = 1;
                }
                var expr_D00 = (dict6 = this.attrs);
                num2 = $T09().prototype.get_Item.call(dict6, $T04().ON_FIRE);
                $T09().prototype.set_Item.call(expr_D00, $T04().ON_FIRE, ((num2 - num24) | 0));
                if ($T09().prototype.get_Item.call(this.attrs, $T04().ON_FIRE) < 0) {
                  $T09().prototype.set_Item.call(this.attrs, $T04().ON_FIRE, 0);
                }
                if (flag23) {
                  this.UpdateRadius(from, this.LightRadius());
                }
                if (this.HasAttr($T04().ON_FIRE)) {
                  $thisType.Actor$B$value.Add("You put out some of the fire. ", JSIL.Array.New($T10(), 0));
                } else {
                  $thisType.Actor$B$value.Add("You put out the fire. ", JSIL.Array.New($T10(), 0));
                }
              }
              if ($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, 
                  this.get_row(), 
                  this.get_col()
                ).Tile$inv$value !== null) {
                $thisType.Actor$B$value.Add(("You see " + $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, 
                    this.get_row(), 
                    this.get_col()
                  ).Tile$inv$value.AName() + ". "), JSIL.Array.New($T10(), 0));
              }
              this.QS();
              $label1 = 1 /* goto IL_40EC */ ;
              continue $labelgroup1;

            case "/": 
            case "?": 
              $T28().DisplayHelp();
              this.Q0();
              $label1 = 1 /* goto IL_40EC */ ;
              continue $labelgroup1;

            case "1": 
            case "2": 
            case "3": 
            case "4": 
            case "6": 
            case "7": 
            case "8": 
            case "9": 
              var num25 = (String.fromCharCode((c.charCodeAt(0) - "0".charCodeAt(0)))).charCodeAt(0);
              if (!(!flag10 && 
                  !flag8 && !flag9)) {
                var flag24 = false;

                for (var a$15 = $T10().PhysicalObject$M$value.AllActors()._items, i$15 = 0, l$15 = $T10().PhysicalObject$M$value.AllActors()._size; i$15 < l$15; ($temp1C = i$15, 
                    i$15 = ((i$15 + 1) | 0), 
                    $temp1C)) {
                  var current22 = a$15[i$15];
                  if (!((current22 === this) || 
                      !this.CanSee(current22) || !this.HasLOS(
                        current22.get_row(), 
                        current22.get_col()
                      ))) {
                    flag24 = true;
                  }
                }
                this.PlayerWalk(num25);
                if (!flag24) {
                  $T09().prototype.set_Item.call(this.attrs, $T04().RUNNING, num25);
                }
              } else {
                this.PlayerWalk(num25);
              }
              $label1 = 1 /* goto IL_40EC */ ;
              continue $labelgroup1;

            case "=": 
            case "O": 
              var flag25 = false;

              while (!flag25) {
                this.Select(
                  "Options: ", 
                  ($S4E().Construct()).__Initialize__([[JSIL.ConcatString(System.String.PadRight("Use last target when possible", 58, ' '), System.String.PadLeft((!$T24().Option($T58().LAST_TARGET) ? "no " : "yes "), 4, ' '))], [JSIL.ConcatString(System.String.PadRight("Automatically pick up items (if safe)", 58, ' '), System.String.PadLeft((!$T24().Option($T58().AUTOPICKUP) ? "no " : "yes "), 4, ' '))], [JSIL.ConcatString(System.String.PadRight("Hide old messages instead of darkening them", 58, ' '), System.String.PadLeft((!$T24().Option($T58().HIDE_OLD_MESSAGES) ? "no " : "yes "), 4, ' '))], [JSIL.ConcatString(System.String.PadRight("Hide the command hints on the side", 58, ' '), System.String.PadLeft((!$T24().Option($T58().HIDE_COMMANDS) ? "no " : "yes "), 4, ' '))], [JSIL.ConcatString(System.String.PadRight("Cast a spell instead of attacking", 46, ' '), System.String.PadLeft(((this.Actor$F$value[0] !== $T05().NO_SPELL) ? $T42().Name(this.Actor$F$value[0]) : "no "), 16, ' '))], [JSIL.ConcatString(System.String.PadRight("Don't use roman numerals for automatic naming", 58, ' '), System.String.PadLeft((!$T24().Option($T58().NO_ROMAN_NUMERALS) ? "no " : "yes "), 4, ' '))], [JSIL.ConcatString(System.String.PadRight("Never show tutorial tips", 58, ' '), System.String.PadLeft((!$T24().Option($T58().NEVER_DISPLAY_TIPS) ? "no " : "yes "), 4, ' '))], [JSIL.ConcatString(System.String.PadRight("Reset tutorial tips before each game", 58, ' '), System.String.PadLeft((!$T24().Option($T58().ALWAYS_RESET_TIPS) ? "no " : "yes "), 4, ' '))]]), 
                  true, 
                  false, 
                  false
                );
                $T4A().set_CursorVisible(true);
                c = $thisType.ConvertInput($T4A().ReadKey(true).MemberwiseClone());
                c3 = c;
                switch (c3) {
                  case "a": 
                    $T24().Options.set_Item($T58().LAST_TARGET, !$T24().Option($T58().LAST_TARGET));
                    break;

                  case "b": 
                    $T24().Options.set_Item($T58().AUTOPICKUP, !$T24().Option($T58().AUTOPICKUP));
                    break;

                  case "c": 
                    $T24().Options.set_Item($T58().HIDE_OLD_MESSAGES, !$T24().Option($T58().HIDE_OLD_MESSAGES));
                    break;

                  case "d": 
                    $T24().Options.set_Item($T58().HIDE_COMMANDS, !$T24().Option($T58().HIDE_COMMANDS));
                    break;

                  case "e": 
                    if ($T06().prototype.get_Item.call(this.skills, $T07().MAGIC) > 0) {
                      $T10().PhysicalObject$M$value.RedrawWithStrings();
                      var list7 = $S56().Construct();
                      var list8 = $S18().Construct();
                      var flag26 = false;

                      for (var a$16 = $thisType.spells_in_order._items, i$16 = 0, l$16 = $thisType.spells_in_order._size; i$16 < l$16; ($temp1D = i$16, 
                          i$16 = ((i$16 + 1) | 0), 
                          $temp1D)) {
                        var current23 = a$16[i$16];
                        if (this.HasSpell(current23)) {
                          var colorstring2 = $S59().Construct(JSIL.ConcatString(System.String.PadRight($T42().Name(current23), 15, ' '), System.String.PadLeft(($T42().Level(current23)).toString(), 3, ' ')), $T03().Gray);
                          colorstring2.strings.Add($S57().Construct(JSIL.ConcatString(System.String.PadLeft((this.FailRate(current23)).toString(), 9, ' '), "%"), $S5F().CallVirtual("FailColor", null, this, current23)));
                          if (!(!this.HasFeat($T41().MASTERS_EDGE) || 
                              !$T42().IsDamaging(current23) || flag26)) {
                            flag26 = true;
                            colorstring2 = $T59().op_Addition(colorstring2, $T42().DescriptionWithIncreasedDamage(current23));
                          } else {
                            colorstring2 = $T59().op_Addition(colorstring2, $T42().Description(current23));
                          }
                          list7.Add(colorstring2);
                          list8.Add(current23);
                        }
                      }
                      if (list8.get_Count() > 0) {
                        var top_border2 = $S59().Construct("------------------Level---Fail rate--------Description------------", $T03().Gray);
                        var num26 = ((this.magic_penalty * 5) | 0);
                        if (!this.HasFeat($T41().ARMORED_MAGE)) {
                          num26 = ((num26 + $T3F().AddedFailRate(this.armors.get_First().get_Value())) | 0);
                        }
                        var bottom_border2 = $S5A().Construct("------------Base fail rate: ", $T03().Gray, JSIL.ConcatString(System.String.PadLeft((num26).toString(), 3, ' '), "%"), $S58().CallVirtual("FailColor", null, this, num26), System.String.PadRight("", 37, "-"), $T03().Gray);
                        var num27 = this.Select(
                          "Automatically cast which spell? ", 
                          top_border2, 
                          bottom_border2, 
                          list7, 
                          false, 
                          false, 
                          false, 
                          false, 
                          $T63().Overview
                        );
                        if (num27 !== -1) {
                          this.Actor$F$value[0] = list8.get_Item(num27);
                        } else {
                          this.Actor$F$value[0] = $T05().NO_SPELL;
                        }
                      }
                    }
                    break;

                  case "f": 
                    $T24().Options.set_Item($T58().NO_ROMAN_NUMERALS, !$T24().Option($T58().NO_ROMAN_NUMERALS));
                    break;

                  case "g": 
                    $T24().Options.set_Item($T58().NEVER_DISPLAY_TIPS, !$T24().Option($T58().NEVER_DISPLAY_TIPS));
                    break;

                  case "h": 
                    $T24().Options.set_Item($T58().ALWAYS_RESET_TIPS, !$T24().Option($T58().ALWAYS_RESET_TIPS));
                    break;

                  default: 
                    if ((c3.charCodeAt(0) === "\r".charCodeAt(0)) || 
                      (c3.charCodeAt(0) === "\x1b".charCodeAt(0)) || (c3.charCodeAt(0) === " ".charCodeAt(0))) {
                      flag25 = true;
                    }
                    break;

                }
              }
              this.Q0();
              $label1 = 1 /* goto IL_40EC */ ;
              continue $labelgroup1;

            case ">": 
              if ($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, 
                  this.get_row(), 
                  this.get_col()
                ).Tile$type$value === $T1A().STAIRS) {
                if (!this.StunnedThisTurn()) {
                  var flag27 = false;
                  if (this.magic_penalty > 0) {
                    flag27 = true;
                  }
                  if (!(($T09().prototype.get_Item.call(this.attrs, $T04().RESTING) === -1) || ((this.Actor$curhp$value >= this.Actor$maxhp$value) && 
                        !flag27))) {
                    $thisType.Actor$B$value.DisplayNow("Really take the stairs without resting first?(y/n): ");
                    $T4A().set_CursorVisible(true);

                    for (var flag28 = false; !flag28; ) {
                      c3 = $T4A().ReadKey(true).get_KeyChar();
                      if (!((c3.charCodeAt(0) === "Y".charCodeAt(0)) || (c3.charCodeAt(0) === "y".charCodeAt(0)))) {
                        this.Q0();
                        return;
                      }
                      flag28 = true;
                    }
                  }
                  $thisType.Actor$B$value.Add("You walk down the stairs. ", JSIL.Array.New($T10(), 0));
                  $thisType.Actor$B$value.PrintAll();
                  if ($T10().PhysicalObject$M$value.Map$current_level$value < 20) {
                    $T10().PhysicalObject$M$value.GenerateLevel();
                  } else {
                    $T10().PhysicalObject$M$value.GenerateBossLevel(false);
                    $thisType.Actor$B$value.Add("You enter a sweltering cavern. ", JSIL.Array.New($T10(), 0));
                    $thisType.Actor$B$value.Add("Bones lie scattered across the sulfurous ground. ", JSIL.Array.New($T10(), 0));
                  }
                  this.Q0();
                }
              } else {
                var tile5 = null;

              $loop30: 
                for (var a$17 = $T10().PhysicalObject$M$value.AllTiles()._items, i$17 = 0, l$17 = $T10().PhysicalObject$M$value.AllTiles()._size; i$17 < l$17; ($temp1E = i$17, 
                    i$17 = ((i$17 + 1) | 0), 
                    $temp1E)) {
                  var current24 = a$17[i$17];
                  if (!((current24.Tile$type$value !== $T1A().STAIRS) || !current24.Tile$seen$value)) {
                    tile5 = current24;
                    break $loop30;
                  }
                }
                if (tile5 !== null) {
                  $thisType.Actor$B$value.DisplayNow("Travel to the stairs?(y/n): ");
                  $T4A().set_CursorVisible(true);

                  for (var flag29 = false; !flag29; ) {
                    c3 = $T4A().ReadKey(true).get_KeyChar();
                    if (!((c3.charCodeAt(0) === "\r".charCodeAt(0)) || 
                        (c3.charCodeAt(0) === ">".charCodeAt(0)) || 
                        (c3.charCodeAt(0) === "Y".charCodeAt(0)) || (c3.charCodeAt(0) === "y".charCodeAt(0)))) {
                      this.Q0();
                      return;
                    }
                    flag29 = true;
                  }
                  $S61().CallVirtual("FindPath", null, this, tile5, -1, true);
                  this.Q0();
                } else {
                  $thisType.Actor$B$value.Add("You don't see any stairs here. ", JSIL.Array.New($T10(), 0));
                  this.Q0();
                }
              }
              $label1 = 1 /* goto IL_40EC */ ;
              continue $labelgroup1;

          }
          if (this.tile().Tile$inv$value === null) {
            if (this.tile().Tile$type$value === $T1A().CHEST) {
              if (!this.StunnedThisTurn()) {
                this.tile().OpenChest();
                this.Q1();
              }
            } else if (this.tile().IsShrine()) {
              if (!this.StunnedThisTurn()) {
                switch (this.tile().Tile$type$value.valueOf()) {
                  case 21: 
                    this.IncreaseSkill($T07().COMBAT);
                    break;

                  case 22: 
                    this.IncreaseSkill($T07().DEFENSE);
                    break;

                  case 23: 
                    this.IncreaseSkill($T07().MAGIC);
                    break;

                  case 24: 
                    this.IncreaseSkill($T07().SPIRIT);
                    break;

                  case 25: 
                    this.IncreaseSkill($T07().STEALTH);
                    break;

                  case 27: 
                    var list9 = $S56().Construct();
                    var list10 = $S18().Construct();
                    var flag30 = false;

                    for (var a$18 = $thisType.spells_in_order._items, i$18 = 0, l$18 = $thisType.spells_in_order._size; i$18 < l$18; ($temp1F = i$18, 
                        i$18 = ((i$18 + 1) | 0), 
                        $temp1F)) {
                      var current25 = a$18[i$18];
                      if (this.HasSpell(current25)) {
                        var colorstring3 = $S59().Construct(JSIL.ConcatString(System.String.PadRight($T42().Name(current25), 15, ' '), System.String.PadLeft(($T42().Level(current25)).toString(), 3, ' ')), $T03().Gray);
                        colorstring3.strings.Add($S57().Construct(JSIL.ConcatString(System.String.PadLeft((this.FailRate(current25)).toString(), 9, ' '), "%"), $S5F().CallVirtual("FailColor", null, this, current25)));
                        if (!(!this.HasFeat($T41().MASTERS_EDGE) || 
                            !$T42().IsDamaging(current25) || flag30)) {
                          flag30 = true;
                          colorstring3 = $T59().op_Addition(colorstring3, $T42().DescriptionWithIncreasedDamage(current25));
                        } else {
                          colorstring3 = $T59().op_Addition(colorstring3, $T42().Description(current25));
                        }
                        list9.Add(colorstring3);
                        list10.Add(current25);
                      }
                    }
                    if (list10.get_Count() > 0) {
                      var top_border3 = $S59().Construct("------------------Level---Fail rate--------Description------------", $T03().Gray);
                      var num28 = ((this.magic_penalty * 5) | 0);
                      if (!this.HasFeat($T41().ARMORED_MAGE)) {
                        num28 = ((num28 + $T3F().AddedFailRate(this.armors.get_First().get_Value())) | 0);
                      }
                      var bottom_border3 = $S60().Construct("------------Base fail rate: ", $T03().Gray, JSIL.ConcatString(System.String.PadLeft((num28).toString(), 3, ' '), "%"), $S58().CallVirtual("FailColor", null, this, num28), "----------[", $T03().Gray, "?", $T03().Cyan, System.String.PadRight("] for help", 22, "-"), $T03().Gray);
                      var num29 = this.Select(
                        "Trade one of your spells for another? ", 
                        top_border3, 
                        bottom_border3, 
                        list9, 
                        false, 
                        false, 
                        true, 
                        true, 
                        $T63().Spells
                      );
                      if (num29 !== -1) {
                        var list11 = $S18().Construct();
                        var enumerator26 = (JSIL.GetEnumerator($T66().GetValues($T05().__Type__)));
                        try {

                          while ($IM01().Call(enumerator26, null)) {
                            var spellType = $T05().$Cast($IM02().Call(enumerator26, null));
                            if (!(this.HasSpell(spellType) || 
                                (spellType === $T05().BLESS) || 
                                (spellType === $T05().MINOR_HEAL) || 
                                (spellType === $T05().HOLY_SHIELD) || 
                                (spellType === $T05().NO_SPELL) || (spellType === $T05().NUM_SPELLS))) {
                              list11.Add(spellType);
                            }
                          }
                        } finally {
                          if ((disposable = $T39().$As(enumerator26)) !== null) {
                            $IM00().Call(disposable, null);
                          }
                        }
                        var spellType2 = list10.get_Item(num29);
                        $thisType.spells_in_order.Remove(spellType2);
                        $T0B().prototype.set_Item.call(this.spells, spellType2, 0);
                        var spellType3 = $T27().Random$b1($T05())(list11);
                        $T0B().prototype.set_Item.call(this.spells, spellType3, 1);
                        $thisType.spells_in_order.Add(spellType3);
                        $thisType.Actor$B$value.Add(JSIL.ConcatString.apply(null, JSIL.Array.New($T13(), ["You forget ", $T42().Name(spellType2), ". You learn ", $T42().Name(spellType3), ". "])), JSIL.Array.New($T10(), 0));
                        this.tile().TransformTo($T1A().RUINED_SHRINE);
                      } else {
                        this.Q0();
                      }
                    }
                    break;

                }
                if (this.tile().Tile$type$value !== $T1A().SPELL_EXCHANGE_SHRINE) {
                  this.Q1();
                }
                if (!((this.tile().Tile$type$value !== $T1A().MAGIC_SHRINE) || ($thisType.spells_in_order.get_Count() <= 1))) {
                  this.tile().TransformTo($T1A().SPELL_EXCHANGE_SHRINE);
                } else if (this.tile().Tile$type$value !== $T1A().SPELL_EXCHANGE_SHRINE) {
                  this.tile().TransformTo($T1A().RUINED_SHRINE);
                }

                for (var a$19 = this.TilesAtDistance(2)._items, i$19 = 0, l$19 = this.TilesAtDistance(2)._size; i$19 < l$19; ($temp20 = i$19, 
                    i$19 = ((i$19 + 1) | 0), 
                    $temp20)) {
                  var current26 = a$19[i$19];
                  if (current26.IsShrine()) {
                    current26.TransformTo($T1A().RUINED_SHRINE);
                  }
                }
              }
            } else {
              $thisType.Actor$B$value.Add("There's nothing here to pick up. ", JSIL.Array.New($T10(), 0));
              this.Q0();
            }
          } else if (!this.StunnedThisTurn()) {
            if (this.InventoryCount() < 20) {
              if (((this.InventoryCount() + this.tile().Tile$inv$value.Item$quantity$value) | 0) <= 20) {
                var inv2 = this.tile().Tile$inv$value;
                this.tile().Tile$inv$value = null;
                if (inv2.PhysicalObject$light_radius$value > 0) {
                  inv2.UpdateRadius(inv2.PhysicalObject$light_radius$value, 0);
                }
                inv2.set_row(-1);
                inv2.set_col(-1);
                $thisType.Actor$B$value.Add(("You pick up " + inv2.TheName() + ". "), JSIL.Array.New($T10(), 0));
                var flag31 = false;

              $loop34: 
                for (var a$1a = this.Actor$inv$value._items, i$1a = 0, l$1a = this.Actor$inv$value._size; i$1a < l$1a; ($temp21 = i$1a, 
                    i$1a = ((i$1a + 1) | 0), 
                    $temp21)) {
                  var current27 = a$1a[i$1a];
                  if (!((current27.Item$type$value !== inv2.Item$type$value) || 
                      current27.Item$do_not_stack$value || inv2.Item$do_not_stack$value)) {
                    ($temp04 = ((current27.Item$quantity$value + inv2.Item$quantity$value) | 0), 
                      current27.Item$quantity$value = $temp04, 
                      $temp04);
                    flag31 = true;
                    break $loop34;
                  }
                }
                if (!flag31) {
                  this.Actor$inv$value.Add(inv2);
                }
                this.Q1();
              } else {
                var num30 = ((20 - this.InventoryCount()) | 0);
                var inv3 = this.tile().Tile$inv$value;
                var item4 = $S1C().Construct(inv3, this.get_row(), this.get_col());
                item4.Item$quantity$value = num30;
                ($temp05 = ((inv3.Item$quantity$value - num30) | 0), 
                  inv3.Item$quantity$value = $temp05, 
                  $temp05);
                $thisType.Actor$B$value.Add(JSIL.ConcatString.apply(null, JSIL.Array.New($T13(), ["You pick up ", item4.TheName(), ", but have no room for the other ", (inv3.Item$quantity$value).toString(), ". "])), JSIL.Array.New($T10(), 0));
                var flag32 = false;

              $loop33: 
                for (var a$1b = this.Actor$inv$value._items, i$1b = 0, l$1b = this.Actor$inv$value._size; i$1b < l$1b; ($temp22 = i$1b, 
                    i$1b = ((i$1b + 1) | 0), 
                    $temp22)) {
                  var current28 = a$1b[i$1b];
                  if (!((current28.Item$type$value !== item4.Item$type$value) || 
                      current28.Item$do_not_stack$value || item4.Item$do_not_stack$value)) {
                    ($temp06 = ((current28.Item$quantity$value + item4.Item$quantity$value) | 0), 
                      current28.Item$quantity$value = $temp06, 
                      $temp06);
                    flag32 = true;
                    break $loop33;
                  }
                }
                if (!flag32) {
                  this.Actor$inv$value.Add(item4);
                }
                this.Q1();
              }
            } else {
              $thisType.Actor$B$value.Add(("Your pack is too full to pick up " + this.tile().Tile$inv$value.TheName() + ". "), JSIL.Array.New($T10(), 0));
              this.Q0();
            }
          }

          $label1 = 1 /* goto IL_40EC */ ;
          continue $labelgroup1;
        case 1: /* IL_40EC */ 
          if (c.charCodeAt(0) !== "x".charCodeAt(0)) {
            $T09().prototype.set_Item.call(this.attrs, $T04().AUTOEXPLORE, 0);
          }

          break $labelgroup1;
      }
    }
  };

  function Actor_Interrupt () {
    if (this.HasAttr($T04().RESTING)) {
      $T09().prototype.set_Item.call(this.attrs, $T04().RESTING, 0);
    }
    $T09().prototype.set_Item.call(this.attrs, $T04().RUNNING, 0);
    $T09().prototype.set_Item.call(this.attrs, $T04().WAITING, 0);
    $T09().prototype.set_Item.call(this.attrs, $T04().AUTOEXPLORE, 0);
    if (!((this.path === null) || (this.path.get_Count() <= 0))) {
      this.path.Clear();
    }
  };

  function Actor_InventoryCount () {
    var $temp00;
    var num = 0;

    for (var a$0 = this.Actor$inv$value._items, i$0 = 0, l$0 = this.Actor$inv$value._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      num = ((num + current.Item$quantity$value) | 0);
    }
    return num;
  };

  function Actor_InventoryList () {
    var $temp00;
    var list = $S4E().Construct();

    for (var a$0 = this.Actor$inv$value._items, i$0 = 0, l$0 = this.Actor$inv$value._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      list.Add(current.AName());
    }
    return list;
  };

  function Actor_IsHiddenFrom (a) {
    if (this === a) {
      return false;
    }
    if (!(!this.HasAttr($T04().SHADOW_CLOAK) || 
        this.tile().IsLit() || a.HasAttr($T04().BLINDSIGHT))) {
      if (!((this !== $thisType.Actor$player$value) || a.HasAttr($T04().PLAYER_NOTICED))) {
        return true;
      }
      if (!((a !== $thisType.Actor$player$value) || this.HasAttr($T04().NOTICED))) {
        return true;
      }
    }
    if (this.Actor$type$value.valueOf() === 0) {
      return (a.player_visibility_duration >= 0);
    }
    return ((a.Actor$type$value.valueOf() === 0) && !(!this.HasAttr($T04().STEALTHY) || 
        ($T09().prototype.get_Item.call(this.attrs, $T04().TURNS_VISIBLE) < 0)));
  };

  function Actor_IsHit (plus_to_hit) {
    return ((($T24().Roll(1, 100) + plus_to_hit) | 0) > 25);
  };

  function Actor_IsWithinSightRangeOf$44 (o) {
    return this.IsWithinSightRangeOf(
      o.get_row(), 
      o.get_col()
    );
  };

  function Actor_IsWithinSightRangeOf$45 (r, c) {
    var $temp00;
    var num = this.DistanceFrom(r, c);
    var num2 = (!this.HasAttr($T04().DIM_VISION) ? 1 : 3);
    if (num <= ((3 / num2) | 0)) {
      return true;
    }
    if (!((num > ((5 / num2) | 0)) || !this.HasAttr($T04().LOW_LIGHT_VISION))) {
      return true;
    }
    if (!((num > ((8 / num2) | 0)) || !this.HasAttr($T04().DARKVISION))) {
      return true;
    }
    if ($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, r, c).get_opaque()) {

      for (var a$0 = $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, r, c).NeighborsBetween(
          this.get_row(), 
          this.get_col()
        )._items, i$0 = 0, l$0 = $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, r, c).NeighborsBetween(
          this.get_row(), 
          this.get_col()
        )._size; i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current = a$0[i$0];
        if (this.IsWithinSightRangeOf(
            current.get_row(), 
            current.get_col()
          )) {
          return true;
        }
      }
      return false;
    }
    return false;
  };

  function Actor_LightRadius () {
    return $T2D().Max(this.PhysicalObject$light_radius$value, $T09().prototype.get_Item.call(this.attrs, $T04().ON_FIRE));
  };

  function Actor_MakeNoise () {
    var $temp00;

    for (var a$0 = this.ActorsWithinDistance(12, true)._items, i$0 = 0, l$0 = this.ActorsWithinDistance(12, true)._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      if (current !== $thisType.Actor$player$value) {
        var flag = false;
        var flag2 = current.HasLOS(
          this.get_row(), 
          this.get_col()
        );
        if ($S0C().CallVirtual("DistanceFrom", null, current, this) <= 4) {
          flag = true;
        } else if (!((!current.IsWithinSightRangeOf(
                this.get_row(), 
                this.get_col()
              ) && 
              !this.tile().IsLit()) || !flag2)) {
          flag = true;
        }
        if (flag) {
          current.player_visibility_duration = -1;
          $T09().prototype.set_Item.call(current.attrs, $T04().PLAYER_NOTICED, 1);
          if (flag2) {
            current.target_location = this.tile();
          } else {
            $S55().CallVirtual("FindPath", null, current, this, 8);
          }
        }
      }
    }
  };

  function Actor_MonsterDescriptionBox (type, max_string_length) {
    var $temp00, $temp01;
    var wordWrappedList = $T27().GetWordWrappedList($thisType.MonsterDescriptionText(type), max_string_length);
    var color = $T03().Green;
    var color2 = $T03().Yellow;
    var color3 = $T03().Gray;
    var num = 20;

    for (var a$0 = wordWrappedList._items, i$0 = 0, l$0 = wordWrappedList._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      if (current.length > num) {
        num = current.length;
      }
    }
    num = ((num + 2) | 0);
    var list = $S56().Construct();
    list.Add($S5A().Construct("+", color2, System.String.PadRight("", num, "-"), color, "+", color2));

    for (var a$1 = wordWrappedList._items, i$1 = 0, l$1 = wordWrappedList._size; i$1 < l$1; ($temp01 = i$1, 
        i$1 = ((i$1 + 1) | 0), 
        $temp01)) {
      var current2 = a$1[i$1];
      list.Add($T59().op_Addition($T59().op_Addition($S59().Construct("|", color), $T27().GetColorString($T27().PadOuter(current2, num), color3)), $S59().Construct("|", color)));
    }
    list.Add($S5A().Construct("|", color, System.String.PadRight("", num, ' '), $T03().Gray, "|", color));
    list.Add($T59().op_Addition($T59().op_Addition($S59().Construct("|", color), $T27().GetColorString($T27().PadOuter("[=] Hide description", num), color3)), $S59().Construct("|", color)));
    list.Add($S5A().Construct("+", color2, System.String.PadRight("", num, "-"), color, "+", color2));
    return list;
  };

  function Actor_MonsterDescriptionText (type) {
    switch (type.valueOf()) {
      case 2: 
        return "Huge, deadly, and hungry for your charred flesh, the fire drake prepares to drag your valuables back to its lair. You have no doubts that you now face the snarling fiery master of this dungeon.";

      case 3: 
        return "The goblin is a small ugly humanoid, often found inhabiting the upper reaches of any cave, chamber, or tunnel it can find.";

      case 4: 
        return "The bats here are substantially bigger than most, perhaps because their insect prey is also unusually large.";

      case 5: 
        return "Lithe and quick, this canine predator has formidable teeth and powerful jaws.";

      case 6: 
        return "A humanoid skeleton, animated by magic, seeing without eyes, and moving without muscles.";

      case 7: 
        return "Found fluttering around any source of light, this huge moth is named for the rivulets of crimson on its wings that mimic dripping blood. Unlike most moths, it has a wide razor-filled mouth.";

      case 8: 
        return "Always ready for a fight, the swordsman twirls his sword in his hand as he walks. His eyes never leave his foe, watching and waiting for the next advance.";

      case 9: 
        return "This pale dirty humanoid wears tattered rags. Its huge eyes are sensitive to light.";

      case 10: 
        return "Sharp tangles of thorny branches spread out from its center. The closest branches seem to follow your movements.";

      case 11: 
        return "An alien-looking creature of cold, the frostling possesses insectlike mandibles, claws, and smooth whitish skin. A fog of chill condensation surrounds it.";

      case 12: 
      case 53: 
        return "The features of this warrior are hard to make out, but the curved blade held at the ready is clear enough.";

      case 13: 
        return "This cultist wears a crimson robe that reaches the ground. His head has been shaved and tattooed in devotion to his demon lord.";

      case 14: 
        return "This goblin carries a crude bow and wears a quiver of arrows. It glances around, looking for inviting targets.";

      case 15: 
        return "This goblin's markings identify it as a tribe leader and shaman. It carries a small staff and wears a necklace of ears and fingers.";

      case 16: 
        return "The mimic changes its shape to that of an ordinary object, then waits for an unwary goblin or adventurer. It can secrete a powerful adhesive to hold its prey.";

      case 17: 
        return "This rogue dashes from shadow to shadow, dagger in hand. A smirk appears as the killer overtakes another victim.";

      case 18: 
        return "The zombie is a rotting, shambling corpse animated by the dark art of necromancy. It mindlessly seeks the flesh of the living.";

      case 19: 
        return "With red eyes and long yellow teeth, most dire rats outweigh forty of their smaller brethren.";

      case 20: 
        return "A holy symbol hangs, silver and forked, from the neck of the zealot. The holy magic of the church's spells promises the zealot a swift victory over heretics.";

      case 21: 
        return "Shadows are manifest darkness, barely maintaining a physical presence. A dark environment hides them utterly, but the light reveals their warped human shape.";

      case 22: 
        return "The banshee floats shrieking, trailing wisps of a faded dress behind her. Her nails are blood-caked claws. The banshee's hateful scream is painful for the living to hear.";

      case 23: 
        return "This wolf has white fur with black markings. Its eyes are too human for your liking.";

      case 24: 
        return "Heedless of the laws of nature, this brilliantly iridescent spider steps to the side and appears twenty feet away. Even when you're looking right at it, you think you can hear it behind you.";

      case 25: 
        return "This solitary monk constantly kicks and punches at empty space, madly repeating words of nonsense. Those nearby will find themselves uttering the same gibberish.";

      case 26: 
        return "This troublesome spirit has a penchant for throwing things and upending furniture. It affords no rest to intruders in the area that it haunts.";

      case 27: 
        return "The hag's foul brand of magic can impart a nasty curse on those who cross her. Cracked, warty skin hides surprising strength, used to wrestle her victims into the stewpot.";

      case 28: 
        return "Compys are little waste-eating scavengers that possess a subtle poison. These lizards tend to ignore healthy creatures, preferring to surround those who are weak, helpless, or otherwise occupied.";

      case 29: 
        return "The noxious worm, almost as tall as a man, slams foes with its bulk. It vomits a thick stench from its maw.";

      case 30: 
        return "In battle, the berserker enters a state of unfeeling rage, axe swinging at anything within reach. Trophies of war adorn the berserker's minimally armored form.";

      case 31: 
        return "The troll towers above you, all muscles, claws, and warty greenish skin. The regenerative powers of the troll are well-known, as is the suggestion to fight them with fire.";

      case 32: 
        return "The vampire floats above the ground with hunger in its eyes. A dark cape flows around its pale form.";

      case 33: 
        return "This knight's armor bears the holy symbols of his church. He holds his torch aloft, awaiting the appearance of evildoers.";

      case 34: 
        return "The skeletal remains of an enormous feline predator stand here, seemingly ready to pounce at any moment.";

      case 35: 
        return "As the mud elemental oozes across the floor, bits of dirt seem to animate and are absorbed into its body.";

      case 36: 
        return "The entrancer bends a weak-minded being to her will and has it fight on her behalf, at least until a more desirable thrall appears. In battle, the entrancer can protect and teleport the enthralled creature.";

      case 37: 
        return "Its shape is still that of a statue, but the darkness reveals the diseased appearance of its pale skin. No light is reflected from its empty eyes.";

      case 38: 
        return "Built like an orc, but as big as a troll, this tusked brute wields a giant club.";

      case 39: 
        return "Orcs are a burly and warlike race, quick to make enemies. This one carries a satchel filled with deadly orcish explosives.";

      case 40: 
        return "The shadowveil duelist hides under a cloak of shadows to strike unseen. A spinning, feinting fighting style keeps the duelist in motion.";

      case 41: 
        return "This many-legged segmented insect crawls over the ground and walls in search of carrion. When threatened or lacking another source of food, tentacles on its head are used to apply a paralyzing substance to living prey.";

      case 42: 
        return "Using fairy enchantments to influence the flow of magic, this pixie causes its every wingbeat to reverberate in the skulls of those nearby, stifling words of magic.";

      case 43: 
        return "Constructs of stone are often created to guard or serve. Their rocky nature grants them a degree of resistance to many forms of attack.";

      case 44: 
        return "Tall and wide-shouldered descendants of flame, the pyren are a strange race of men. Though they are flesh and blood, they still possess the power to ignite nearby objects.";

      case 45: 
        return "This orcish stalker is well camouflaged. A wicked grin shows off sharp teeth as the assassin brandishes a long blade.";

      case 46: 
        return "The seer is a leader among the solitary troll population, sought for augury and council. Spells and arcane tricks are passed down from seer to seer. ";

      case 47: 
        return "The mechanical knight's shield moves with unnatural speed, ready to foil any onslaught. Its exposed gears appear vulnerable to any attack that could bypass its shield.";

      case 48: 
        return "The destruction wreaked by warmages evokes respect and feat even among their own kind. They often lead raids and war parties, using tracking spells to complement their lethal magic.";

      case 49: 
        return "The lasher is a tall mass of fungal growth with several ropelike tentacles extending from it.";

      case 50: 
        return "Necromancers practice the dark arts, raising the dead to serve them. They gain power through unholy rituals that make them unwelcome in any civilized place.";

      case 51: 
        return "The radiance of this empyreal being makes your eyes hurt after a few seconds. When you look again it still has the shape of a human, but occasionally its silhouette seems to have wings, horns, or four legs.";

      case 52: 
        return "This monstrosity looks like it was stitched together from corpses of several different species. You see pieces of humans, orcs, and trolls, in addition to some you can't begin to identify.";

      case 54: 
        return "A writhing, grasping tendril of mud emerges from the wall.";

      case 55: 
        return "As a statue, the marble horror is invulnerable and inactive. It will remain in this form as long as light falls upon it.";

      default: 
        return "Phantoms are beings of illusion, but real enough to do lasting harm. Because they vanish at the slightest touch, they are easily dispatched with magic spells.";

    }
  };

  function Actor_Move$46 (r, c) {
    this.Move(r, c, true);
  };

  function Actor_Move$47 (r, c, trigger_traps) {
    var $temp00;
    var dict = null;
    if (!((r < 0) || 
        (r >= 22) || 
        (c < 0) || (c >= 66))) {
      if ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, r, c) === null) {
        if (this.HasAttr($T04().GRABBED)) {

          for (var a$0 = this.ActorsAtDistance(1)._items, i$0 = 0, l$0 = this.ActorsAtDistance(1)._size; i$0 < l$0; ($temp00 = i$0, 
              i$0 = ((i$0 + 1) | 0), 
              $temp00)) {
            var current = a$0[i$0];
            if ($T09().prototype.get_Item.call(current.attrs, $T04().GRABBING) === $S1E().CallVirtual("DirectionOf", null, current, this)) {
              if (current.DistanceFrom(r, c) > 1) {
                var num = $T09().prototype.get_Item.call(dict, $T04().GRABBED);
                $T09().prototype.set_Item.call((dict = this.attrs), $T04().GRABBED, ((num - 1) | 0));
                $T09().prototype.set_Item.call(current.attrs, $T04().GRABBING, 0);
              } else {
                $T09().prototype.set_Item.call(current.attrs, $T04().GRABBING, $S5C().CallVirtual("DirectionOf", null, current, new ($T1B())(r, c)));
              }
            }
          }
        }
        var flag = false;
        if (this.LightRadius() > 0) {
          flag = true;
          this.UpdateRadius(this.LightRadius(), 0);
        }
        $T2C().prototype.set_Item.call($T10().PhysicalObject$M$value.actor, r, c, this);
        if (!((this.get_row() < 0) || 
            (this.get_row() >= 22) || 
            (this.get_col() < 0) || (this.get_col() >= 66))) {
          $T2C().prototype.set_Item.call($T10().PhysicalObject$M$value.actor, 
            this.get_row(), 
            this.get_col(), 
            null
          );
          if (!((this !== $thisType.Actor$player$value) || ($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, 
                  this.get_row(), 
                  this.get_col()
                ).Tile$inv$value === null))) {
            $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, this.PhysicalObject$row, this.PhysicalObject$col).Tile$inv$value.Item$ignored$value = true;
          }
        }
        this.set_row(r);
        this.set_col(c);
        if (flag) {
          this.UpdateRadius(0, this.LightRadius());
        }
        if (!(!trigger_traps || 
            !this.tile().IsTrap() || 
            this.HasAttr($T04().FLYING) || 
            this.HasAttr($T04().SMALL) || ((this.Actor$type$value.valueOf() !== 0) && 
              (this.Actor$target$value !== $thisType.Actor$player$value)))) {
          this.tile().TriggerTrap();
        }
      } else {
        var actor = $T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, r, c);
        var flag2 = false;
        var flag3 = false;
        if (this.LightRadius() > 0) {
          flag2 = true;
          this.UpdateRadius(this.LightRadius(), 0);
        }
        if (actor.LightRadius() > 0) {
          flag3 = true;
          actor.UpdateRadius(actor.LightRadius(), 0);
        }
        if (!((this.get_row() < 0) || 
            (this.get_row() >= 22) || 
            (this.get_col() < 0) || 
            (this.get_col() >= 66) || 
            (this !== $thisType.Actor$player$value) || ($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, 
                this.get_row(), 
                this.get_col()
              ).Tile$inv$value === null))) {
          $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, this.PhysicalObject$row, this.PhysicalObject$col).Tile$inv$value.Item$ignored$value = true;
        }
        $T2C().prototype.set_Item.call($T10().PhysicalObject$M$value.actor, r, c, this);
        $T2C().prototype.set_Item.call($T10().PhysicalObject$M$value.actor, 
          this.get_row(), 
          this.get_col(), 
          actor
        );
        actor.set_row(this.get_row());
        actor.set_col(this.get_col());
        this.set_row(r);
        this.set_col(c);
        if (flag2) {
          this.UpdateRadius(0, this.LightRadius());
        }
        if (flag3) {
          actor.UpdateRadius(0, actor.LightRadius());
        }
      }
    }
  };

  function Actor_PathStep$48 () {
    return this.PathStep(false);
  };

  function Actor_PathStep$49 (never_clear_path) {
    if (!((this.path.get_Count() <= 0) || this.HasAttr($T04().NEVER_MOVES))) {
      if (!(($S52().CallVirtual("DistanceFrom", null, this, this.path.get_Item(0).MemberwiseClone()) !== 1) || ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, this.path.get_Item(0)) === null))) {
        if (!((this.group === null) || 
            (this.group.get_Item(0) !== this) || !this.group.Contains($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, this.path.get_Item(0))))) {
          if (!(!this.GrabPreventsMovement($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, this.path.get_Item(0))) && !($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, this.path.get_Item(0))).GrabPreventsMovement(this.tile()))) {
            this.path.Clear();
          } else {
            this.Move(
              this.path.get_Item(0).row, 
              this.path.get_Item(0).col
            );
            if ($S52().CallVirtual("DistanceFrom", null, this, this.path.get_Item(0).MemberwiseClone()) === 0) {
              this.path.RemoveAt(0);
            }
          }
        } else if (this.path.get_Count() === 1) {
          if (!never_clear_path) {
            this.path.Clear();
          }
        } else {
          this.AI_Step($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, this.path.get_Item(0)));
          if ($S52().CallVirtual("DistanceFrom", null, this, this.path.get_Item(1).MemberwiseClone()) > 1) {
            if (!never_clear_path) {
              this.path.Clear();
            }
          } else if ($S52().CallVirtual("DistanceFrom", null, this, this.path.get_Item(1).MemberwiseClone()) === 0) {
            this.path.RemoveAt(0);
            this.path.RemoveAt(0);
          }
        }
      } else {
        this.AI_Step($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, this.path.get_Item(0)));
        if ($S52().CallVirtual("DistanceFrom", null, this, this.path.get_Item(0).MemberwiseClone()) === 0) {
          this.path.RemoveAt(0);
        } else {
          if (!((this.path.get_Count() <= 0) || ($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, this.path.get_Item(0)).Tile$type$value !== $T1A().CHASM))) {
            this.path.Clear();
          }
          if (!((this.path.get_Count() <= 1) || ($S52().CallVirtual("DistanceFrom", null, this, this.path.get_Item(1).MemberwiseClone()) !== 1))) {
            this.path.RemoveAt(0);
          }
        }
      }
      this.QS();
      return true;
    }
    return false;
  };

  function Actor_PlayerWalk (dir) {
    var $temp00;
    var dict = null, dict2 = null;
    if (dir > 0) {
      if (this.ActorInDirection(dir) !== null) {
        if (!this.ActorInDirection(dir).IsHiddenFrom(this)) {
          if (this.Actor$F$value[0] === $T05().NO_SPELL) {
            this.Attack(0, this.ActorInDirection(dir));
          } else if (!$S21().CallVirtual("CastSpell", null, this, this.Actor$F$value[0], this.TileInDirection(dir))) {
            this.Q0();
          }
        } else {
          $T09().prototype.set_Item.call(this.ActorInDirection(dir).attrs, $T04().TURNS_VISIBLE, -1);
          var expr_8D = (dict = this.ActorInDirection(dir).attrs);
          var num = $T09().prototype.get_Item.call(dict, $T04().NOTICED);
          $T09().prototype.set_Item.call(expr_8D, $T04().NOTICED, ((num + 1) | 0));
          if (!this.IsHiddenFrom(this.ActorInDirection(dir))) {
            $thisType.Actor$B$value.Add(("You walk straight into " + this.ActorInDirection(dir).AVisible() + "! "), JSIL.Array.New($T10(), 0));
          } else {
            $thisType.Actor$B$value.Add(("You walk straight into " + this.ActorInDirection(dir).AVisible() + "! "), JSIL.Array.New($T10(), 0));
            if (this.CanSee(this.ActorInDirection(dir))) {
              $thisType.Actor$B$value.Add(JSIL.ConcatString(this.ActorInDirection(dir).PhysicalObject$the_name$value, " looks just as surprised as you. "), JSIL.Array.New($T10(), 0));
            }
            this.ActorInDirection(dir).player_visibility_duration = -1;
            var expr_160 = (dict2 = this.ActorInDirection(dir).attrs);
            num = $T09().prototype.get_Item.call(dict2, $T04().PLAYER_NOTICED);
            $T09().prototype.set_Item.call(expr_160, $T04().PLAYER_NOTICED, ((num + 1) | 0));
          }
          this.Q1();
        }
      } else if (this.TileInDirection(dir).Tile$passable$value) {
        if (this.GrabPreventsMovement(this.TileInDirection(dir))) {
          var list = $S16().Construct();

          for (var a$0 = this.ActorsAtDistance(1)._items, i$0 = 0, l$0 = this.ActorsAtDistance(1)._size; i$0 < l$0; ($temp00 = i$0, 
              i$0 = ((i$0 + 1) | 0), 
              $temp00)) {
            var current = a$0[i$0];
            if ($T09().prototype.get_Item.call(current.attrs, $T04().GRABBING) === $S1E().CallVirtual("DirectionOf", null, current, this)) {
              list.Add(current);
            }
          }
          $thisType.Actor$B$value.Add(JSIL.ConcatString($T27().Random$b1($thisType)(list).PhysicalObject$the_name$value, " prevents you from moving away! "), JSIL.Array.New($T10(), 0));
          this.Q0();
          return;
        }
        if (this.TileInDirection(dir).Tile$type$value === $T1A().STAIRS) {
          if (!$T24().Option($T58().HIDE_COMMANDS)) {
            $thisType.Actor$B$value.Add("There are stairs here - press > to descend. ", JSIL.Array.New($T10(), 0));
          } else {
            $thisType.Actor$B$value.Add("There are stairs here. ", JSIL.Array.New($T10(), 0));
          }
        }
        if (this.TileInDirection(dir).IsShrine()) {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.TileInDirection(dir).PhysicalObject$the_name$value, " glows faintly - press g to touch it. "), JSIL.Array.New($T10(), 0));
        }
        if ($S0B().CallVirtual("Is", null, this.TileInDirection(dir), $T1A().CHEST)) {
          $thisType.Actor$B$value.Add("There is a chest here - press g to open it. ", JSIL.Array.New($T10(), 0));
        }
        if ($S0B().CallVirtual("Is", null, this.TileInDirection(dir), $T1A().HEALING_POOL)) {
          $thisType.Actor$B$value.Add("There is a healing pool here. ", JSIL.Array.New($T10(), 0));
          $T28().TutorialTip($T29().HealingPool);
        }
        if (!(!$S0B().CallVirtual("Is", null, this.TileInDirection(dir), $T1A().CHASM) || this.HasAttr($T04().FLYING))) {
          this.Interrupt();
          $thisType.Actor$B$value.DisplayNow("Jump into the chasm?(y/n): ");
          $T4A().set_CursorVisible(true);

          for (var flag = false; !flag; ) {
            var keyChar = $T4A().ReadKey(true).get_KeyChar();
            if (!((keyChar.charCodeAt(0) === "Y".charCodeAt(0)) || (keyChar.charCodeAt(0) === "y".charCodeAt(0)))) {
              this.Q0();
              return;
            }
            flag = true;
          }
        }
        if (this.TileInDirection(dir).Tile$inv$value !== null) {
          $thisType.Actor$B$value.Add(("You see " + this.TileInDirection(dir).Tile$inv$value.AName() + ". "), JSIL.Array.New($T10(), 0));
        }
        this.Move(
          this.TileInDirection(dir).get_row(), 
          this.TileInDirection(dir).get_col()
        );
        this.QS();
        if (!($T62().prototype.get_Item.call($T28().displayed, $T29().Recovery) || 
            this.HasAttr($T04().POISONED) || 
            this.HasAttr($T04().ON_FIRE) || 
            this.HasAttr($T04().CATCHING_FIRE) || 
            (((this.Actor$curhp$value % 10) | 0) <= 0) || 
            (((this.Actor$curhp$value % 10) | 0) > 5) || $T27().Any$b1($thisType)(
              $T10().PhysicalObject$M$value.AllActors(), 
              function Actor_$lPlayerWalk$gm__26 (a) {
                return ((a !== this) && 
                  this.CanSee(a));
              }.bind(this)
            ))) {
          if (!$T27().Any$b1($T17())(
              this.TilesWithinDistance(1), 
              function Actor_$lPlayerWalk$gm__27 (t) {
                return ($S0A().CallVirtual("Is", null, t, $T19().FUNGUS_ACTIVE) || 
                  $S0A().CallVirtual("Is", null, t, $T19().FUNGUS_PRIMED) || 
                  $S0A().CallVirtual("Is", null, t, $T19().GRENADE) || 
                  $S0A().CallVirtual("Is", null, t, $T19().POISON_GAS) || 
                  $S0A().CallVirtual("Is", null, t, $T19().QUICKFIRE) || $S0B().CallVirtual("Is", null, t, $T1A().FIRE_GEYSER));
              }
            )) {
            $T28().TutorialTip($T29().Recovery);
            this.Interrupt();
          }
        }
      } else if (!((this.TileInDirection(dir).Tile$type$value !== $T1A().DOOR_C) && (this.TileInDirection(dir).Tile$type$value !== $T1A().RUBBLE))) {
        if (this.StunnedThisTurn()) {
          return;
        }
        this.TileInDirection(dir).Toggle(this);
        this.Q1();
      } else {
        $thisType.Actor$B$value.Add(("There is " + this.TileInDirection(dir).PhysicalObject$a_name$value + " in the way. "), JSIL.Array.New($T10(), 0));
        this.Q0();
      }
    } else {
      this.Q0();
    }
  };

  function Actor_Prototype (type) {
    return $T01().prototype.get_Item.call($thisType.proto, type);
  };

  function Actor_Q0 () {
    $thisType.Actor$Q$value.Add($S29().Construct(this, 0));
  };

  function Actor_Q1 () {
    $thisType.Actor$Q$value.Add($S29().Construct(this, 100));
  };

  function Actor_QS () {
    $thisType.Actor$Q$value.Add($S29().Construct(this, this.Actor$speed$value));
  };

  function Actor_RemoveTarget (a) {
    if (this.Actor$target$value === a) {
      this.Actor$target$value = null;
    }
  };

  function Actor_ResetForNewLevel () {
    this.Actor$target$value = null;
    this.target_location = null;
    if (this.HasAttr($T04().DIM_LIGHT)) {
      $T09().prototype.set_Item.call(this.attrs, $T04().DIM_LIGHT, 0);
      if (this.PhysicalObject$light_radius$value > 0) {
        if (this.HasAttr($T04().ENHANCED_TORCH)) {
          this.PhysicalObject$light_radius$value = 12;
        } else {
          this.PhysicalObject$light_radius$value = 6;
        }
      }
    }
    if ($T09().prototype.get_Item.call(this.attrs, $T04().RESTING) === -1) {
      $T09().prototype.set_Item.call(this.attrs, $T04().RESTING, 0);
    }
    if (this.HasAttr($T04().GRABBED)) {
      $T09().prototype.set_Item.call(this.attrs, $T04().GRABBED, 0);
    }
    this.ResetSpells();
    $S28().CallVirtual("KillEvents", null, $thisType.Actor$Q$value, null, $T22().CHECK_FOR_HIDDEN);
  };

  function Actor_ResetSpells () {
    this.magic_penalty = 0;
  };

  function Actor_SeekAI () {
    var $temp00, $temp01, $temp02, $temp03;
    if (this.PathStep()) {
      return;
    }
    var type = this.Actor$type$value;
    switch (type.valueOf()) {
      case 48: 

        for (var a$0 = this.ActorsWithinDistance(2)._items, i$0 = 0, l$0 = this.ActorsWithinDistance(2)._size; i$0 < l$0; ($temp00 = i$0, 
            i$0 = ((i$0 + 1) | 0), 
            $temp00)) {
          var current = a$0[i$0];
          if (!(!current.HasAttr($T04().SPELL_DISRUPTION) || !current.HasLOE(this))) {
            this.QS();
            return;
          }
        }
        if (!this.HasAttr($T04().BLOODSCENT)) {
          this.CastSpell($T05().BLOODSCENT);
        } else {
          this.QS();
        }
        return;

      default: 
      case 50: 
      case 51: 
      case 52: 
      case 53: 
        switch (type.valueOf()) {
          case 7: 
            var physicalObject = null;
            if (!$T10().PhysicalObject$M$value.get_wiz_lite()) {
              var list = $S11().Construct();

              for (var a$1 = $T10().PhysicalObject$M$value.AllTiles()._items, i$1 = 0, l$1 = $T10().PhysicalObject$M$value.AllTiles()._size; i$1 < l$1; ($temp01 = i$1, 
                  i$1 = ((i$1 + 1) | 0), 
                  $temp01)) {
                var current2 = a$1[i$1];
                var num = current2.PhysicalObject$light_radius$value;
                var physicalObject2 = current2;
                if (!((current2.Tile$inv$value === null) || (current2.Tile$inv$value.PhysicalObject$light_radius$value <= num))) {
                  num = current2.Tile$inv$value.PhysicalObject$light_radius$value;
                  physicalObject2 = current2.Tile$inv$value;
                }
                if (!((current2.actor() === null) || (current2.actor().LightRadius() <= num))) {
                  num = current2.actor().LightRadius();
                  physicalObject2 = current2.actor();
                }
                if (num > 0) {
                  if (!((list.get_Count() !== 0) || !this.CanSee(current2))) {
                    list.Add(physicalObject2);
                  } else {

                  $loop2: 
                    for (var a$2 = list._items, i$2 = 0, l$2 = list._size; i$2 < l$2; ($temp02 = i$2, 
                        i$2 = ((i$2 + 1) | 0), 
                        $temp02)) {
                      var current3 = a$2[i$2];
                      if (num > current3.PhysicalObject$light_radius$value) {
                        if (this.CanSee(current2)) {
                          list.Clear();
                          list.Add(physicalObject2);
                          break $loop2;
                        }
                      } else if (!((num !== current3.PhysicalObject$light_radius$value) || ($S0C().CallVirtual("DistanceFrom", null, this, current2) >= $S0C().CallVirtual("DistanceFrom", null, this, current3)))) {
                        if (this.CanSee(current2)) {
                          list.Clear();
                          list.Add(physicalObject2);
                          break $loop2;
                        }
                      } else if (!((num !== current3.PhysicalObject$light_radius$value) || 
                          ($S0C().CallVirtual("DistanceFrom", null, this, current2) !== $S0C().CallVirtual("DistanceFrom", null, this, current3)) || 
                          (physicalObject2 !== $thisType.Actor$player$value) || !this.CanSee(current2))) {
                        list.Clear();
                        list.Add(physicalObject2);
                        break $loop2;
                      }
                    }
                  }
                }
              }
              if (list.get_Count() > 0) {
                physicalObject = $T27().Random$b1($T10())(list);
              }
            }
            if (physicalObject !== null) {
              if ($S0C().CallVirtual("DistanceFrom", null, this, physicalObject) <= 1) {
                var list2 = $S12().Construct();

                for (var a$3 = this.TilesAtDistance(1)._items, i$3 = 0, l$3 = this.TilesAtDistance(1)._size; i$3 < l$3; ($temp03 = i$3, 
                    i$3 = ((i$3 + 1) | 0), 
                    $temp03)) {
                  var current4 = a$3[i$3];
                  if (!(($S0C().CallVirtual("DistanceFrom", null, current4, physicalObject) > 1) || 
                      !current4.Tile$passable$value || (current4.actor() !== null))) {
                    list2.Add(current4);
                  }
                }
                if (list2.get_Count() > 0) {
                  this.AI_Step($T27().Random$b1($T17())(list2));
                }
                this.QS();
              } else {
                this.AI_Step(physicalObject);
                this.QS();
              }
            } else {
              var dir = $T24().RandomDirection();
              if (!((($T27().Where$b1($T17())(this.TilesAtDistance(1), function Actor_$lSeekAI$gm__38 (t) {
                          return !t.Tile$passable$value;
                        })).get_Count() <= 4) || this.TileInDirection(dir).Tile$passable$value)) {
                dir = $T24().RandomDirection();
              }
              if (!(!this.TileInDirection(dir).Tile$passable$value || (this.ActorInDirection(dir) !== null))) {
                this.AI_Step(this.TileInDirection(dir));
                this.QS();
              } else {
                if ($thisType.Actor$player$value.HasLOS(this.TileInDirection(dir))) {
                  if (!this.TileInDirection(dir).Tile$passable$value) {
                    $thisType.Actor$B$value.Add((this.PhysicalObject$the_name$value + " brushes up against " + this.TileInDirection(dir).PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [this]));
                  } else if (this.ActorInDirection(dir) !== null) {
                    $thisType.Actor$B$value.Add((this.PhysicalObject$the_name$value + " brushes up against " + this.ActorInDirection(dir).TheVisible() + ". "), JSIL.Array.New($T10(), [this]));
                  }
                }
                this.QS();
              }
            }
            return;

          default: 
          case 8: 
          case 9: 
            if (type === $T02().FIRE_DRAKE) {
              this.FindPath($thisType.Actor$player$value);
              this.QS();
              return;
            }
            if (type !== $T02().PHASE_SPIDER) {
              if (this.target_location !== null) {
                if (!(($S0C().CallVirtual("DistanceFrom", null, this, this.target_location) !== 1) || ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, this.target_location.p) === null))) {
                  if (!(!this.GrabPreventsMovement(this.target_location) && 
                      !$T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, this.target_location.p).GrabPreventsMovement(this.tile()) && 
                      !this.HasAttr($T04().NEVER_MOVES) && !$T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, this.target_location.p).HasAttr($T04().NEVER_MOVES))) {
                    this.QS();
                  } else {
                    this.Move(
                      this.target_location.get_row(), 
                      this.target_location.get_col()
                    );
                    this.target_location = null;
                    this.QS();
                  }
                } else if (this.AI_Step(this.target_location)) {
                  this.QS();
                  if ($S0C().CallVirtual("DistanceFrom", null, this, this.target_location) === 0) {
                    this.target_location = null;
                  }
                } else {
                  if (!(($S0C().CallVirtual("DistanceFrom", null, this, this.target_location) !== 1) || this.target_location.Tile$passable$value)) {
                    this.target_location = null;
                  }
                  this.QS();
                }
              } else if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) <= 5) {
                if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) <= 3) {
                  var list3 = $S49().CallVirtual("GetPath", null, this, this.Actor$target$value, 4);
                  if (list3.get_Count() > 0) {
                    this.path = list3;
                    this.player_visibility_duration = -1;
                  }
                } else {
                  var list4 = $S49().CallVirtual("GetPath", null, this, this.Actor$target$value, 8);
                  if (list4.get_Count() <= 10) {
                    this.path = list4;
                  }
                }
                if (this.PathStep()) {
                  return;
                }
                this.QS();
              } else {
                this.Actor$target$value = null;
                if (!((this.group === null) || 
                    (this.group.get_Item(0) === this) || ($S0C().CallVirtual("DistanceFrom", null, this, this.group.get_Item(0)) <= 1))) {
                  var dir2 = $S1E().CallVirtual("DirectionOf", null, this, this.group.get_Item(0));
                  var flag = false;

                $loop4: 
                  for (var i = -1; i <= 1; i = ((i + 1) | 0)) {
                    var actor = this.ActorInDirection(this.RotateDirection(dir2, true, i));
                    if (!((actor === null) || !this.group.Contains(actor))) {
                      flag = true;
                      break $loop4;
                    }
                  }
                  if (!flag) {
                    if (this.HasLOS(this.group.get_Item(0))) {
                      this.AI_Step(this.group.get_Item(0));
                    } else {
                      $S55().CallVirtual("FindPath", null, this, this.group.get_Item(0), 8);
                      if (this.PathStep()) {
                        return;
                      }
                    }
                  }
                }
                this.QS();
              }
              return;
            }
            if ($S0C().CallVirtual("DistanceFrom", null, this, this.Actor$target$value) <= 10) {
              if ($T24().Roll(1, 4) === 4) {
                var list5 = $S12().Construct();

                for (var j = 0; j < 22; j = ((j + 1) | 0)) {

                  for (var k = 0; k < 66; k = ((k + 1) | 0)) {
                    if (!(!$T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, j, k).Tile$passable$value || 
                        ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, j, k) !== null) || 
                        (this.DistanceFrom(j, k) > 10) || 
                        (this.Actor$target$value.DistanceFrom(j, k) > 10) || !this.Actor$target$value.CanSee(j, k))) {
                      list5.Add($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, j, k));
                    }
                  }
                }
                if (list5.get_Count() > 0) {
                  var tile = list5.get_Item((($T24().Roll(1, list5.get_Count()) - 1) | 0));
                  this.Move(
                    tile.get_row(), 
                    tile.get_col()
                  );
                }
                this.QS();
              } else {
                this.QS();
              }
            } else {
              this.Actor$target$value = null;
              this.QS();
            }
            return;

        }
        break;

    }
    this.QS();
  };

  function Actor_Select$4A (message, strings) {
    return this.Select(
      message, 
      System.String.PadLeft("", 66, "-"), 
      System.String.PadLeft("", 66, "-"), 
      strings, 
      false, 
      false, 
      true
    );
  };

  function Actor_Select$4B (message, strings, no_ask, no_cancel, easy_cancel) {
    return this.Select(
      message, 
      System.String.PadLeft("", 66, "-"), 
      System.String.PadLeft("", 66, "-"), 
      strings, 
      no_ask, 
      no_cancel, 
      easy_cancel
    );
  };

  function Actor_Select$4C (message, top_border, strings) {
    return this.Select(
      message, 
      top_border, 
      System.String.PadLeft("", 66, "-"), 
      strings, 
      false, 
      false, 
      true
    );
  };

  function Actor_Select$4D (message, top_border, strings, no_ask, no_cancel, easy_cancel) {
    return this.Select(
      message, 
      top_border, 
      System.String.PadLeft("", 66, "-"), 
      strings, 
      no_ask, 
      no_cancel, 
      easy_cancel
    );
  };

  function Actor_Select$4E (message, top_border, bottom_border, strings) {
    return this.Select(
      message, 
      top_border, 
      bottom_border, 
      strings, 
      false, 
      false, 
      true
    );
  };

  function Actor_Select$4F (message, top_border, bottom_border, strings, no_ask, no_cancel, easy_cancel) {
    var $temp00;
    $S3D().CallStatic($T1F(), "WriteMapString", null, 0, 0, top_border);
    var c = "a";
    var num = 1;

    for (var a$0 = strings._items, i$0 = 0, l$0 = strings._size; i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      var text = (JSIL.ConcatString.apply(null, JSIL.Array.New($T60(), ["[", c, "] ", current])));
      $S3D().CallStatic($T1F(), "WriteMapString", null, num, 0, System.String.PadRight(text, 66, ' '));
      $S35().CallStatic($T1F(), "WriteMapChar", null, num, 1, $S24().Construct($T03().Cyan, c));
      c += "\x01";
      num = ((num + 1) | 0);
    }
    $S3D().CallStatic($T1F(), "WriteMapString", null, num, 0, bottom_border);
    if (num < 21) {
      $S3D().CallStatic($T1F(), "WriteMapString", null, ((num + 1) | 0), 0, System.String.PadRight("", 66, ' '));
    }
    if (no_ask) {
      $thisType.Actor$B$value.DisplayNow(message);
      return -1;
    }
    var selection = this.GetSelection(
      message, 
      strings.get_Count(), 
      no_cancel, 
      easy_cancel, 
      false
    );
    $T10().PhysicalObject$M$value.RedrawWithStrings();
    return selection;
  };

  function Actor_Select$50 (message, top_border, bottom_border, strings, no_ask, no_cancel, easy_cancel, help_key, help_topic) {
    var $temp00;

    for (var num = -2; num === -2; ) {
      $S54().CallStatic($T1F(), "WriteMapString", null, 0, 0, top_border);
      var c = "a";
      var num2 = 1;

      for (var a$0 = strings._items, i$0 = 0, l$0 = strings._size; i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current = a$0[i$0];
        $S54().CallStatic($T1F(), "WriteMapString", null, num2, 0, $S5A().Construct("[", $T03().Gray, c.toString(), $T03().Cyan, "] ", $T03().Gray));
        $S54().CallStatic($T1F(), "WriteMapString", null, num2, 4, current);
        c += "\x01";
        num2 = ((num2 + 1) | 0);
      }
      $S54().CallStatic($T1F(), "WriteMapString", null, num2, 0, bottom_border);
      if (num2 < 21) {
        $S3D().CallStatic($T1F(), "WriteMapString", null, ((num2 + 1) | 0), 0, System.String.PadRight("", 66, ' '));
      }
      if (no_ask) {
        $thisType.Actor$B$value.DisplayNow(message);
        return -1;
      }
      num = this.GetSelection(
        message, 
        strings.get_Count(), 
        no_cancel, 
        easy_cancel, 
        help_key
      );
      if (num !== -2) {
        $T10().PhysicalObject$M$value.RedrawWithStrings();
        return num;
      }
      $T28().DisplayHelp(help_topic);
    }
    return -1;
  };

  function Actor_set_B (value) {
    $thisType.Actor$B$value = value;
  };

  function Actor_set_curhp (value) {
    this.Actor$curhp$value = value;
  };

  function Actor_set_F (value) {
    this.Actor$F$value = value;
  };

  function Actor_set_inv (value) {
    this.Actor$inv$value = value;
  };

  function Actor_set_level (value) {
    this.Actor$level$value = value;
  };

  function Actor_set_maxhp (value) {
    this.Actor$maxhp$value = value;
  };

  function Actor_set_player (value) {
    $thisType.Actor$player$value = value;
  };

  function Actor_set_Q (value) {
    $thisType.Actor$Q$value = value;
  };

  function Actor_set_speed (value) {
    this.Actor$speed$value = value;
  };

  function Actor_set_target (value) {
    this.Actor$target$value = value;
  };

  function Actor_set_type (value) {
    this.Actor$type$value = value;
  };

  function Actor_SightRange () {
    var num = (!this.HasAttr($T04().DIM_VISION) ? 1 : 3);
    if (this.HasAttr($T04().DARKVISION)) {
      return ((8 / num) | 0);
    }
    if (this.HasAttr($T04().LOW_LIGHT_VISION)) {
      return ((5 / num) | 0);
    }
    return ((3 / num) | 0);
  };

  function Actor_Stealth$51 () {
    return this.Stealth(
      this.get_row(), 
      this.get_col()
    );
  };

  function Actor_Stealth$52 (r, c) {
    if (this.LightRadius() > 0) {
      return 0;
    }
    var num = this.TotalSkill($T07().STEALTH);
    if (!($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, r, c).IsLit() || ((this.Actor$type$value.valueOf() !== 0) && 
          $thisType.Actor$player$value.HasAttr($T04().SHADOWSIGHT)))) {
      num = ((num + 2) | 0);
    }
    if (!(this.HasFeat($T41().SILENT_CHAINMAIL) && ($T3F().BaseArmor(this.armors.get_First().get_Value()) === $T16().CHAINMAIL))) {
      num = ((num - $T3F().StealthPenalty(this.armors.get_First().get_Value())) | 0);
    }
    return num;
  };

  function Actor_StunnedThisTurn () {
    if (!this.HasAttr($T04().STUNNED) || !$T24().OneIn(3)) {
      return false;
    }
    if (this.HasAttr($T04().NEVER_MOVES)) {
      this.QS();
      return true;
    }
    var dir = $T24().RandomDirection();
    if (!this.TileInDirection(dir).Tile$passable$value) {
      $thisType.Actor$B$value.Add((this.You("stagger") + " into " + this.TileInDirection(dir).PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [this]));
    } else if (this.ActorInDirection(dir) !== null) {
      $thisType.Actor$B$value.Add(
        (this.YouVisible("stagger") + " into " + this.ActorInDirection(dir).TheVisible() + ". "), 
        JSIL.Array.New($T10(), [this, this.ActorInDirection(dir)])
      );
    } else if (this.GrabPreventsMovement(this.TileInDirection(dir))) {
      if (this.Actor$type$value.valueOf() === 0) {
        $thisType.Actor$B$value.Add("You stagger and almost fall over. ", JSIL.Array.New($T10(), 0));
      } else {
        $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " staggers and almost falls over. "), JSIL.Array.New($T10(), [this]));
      }
    } else {
      $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("stagger"), ". "), JSIL.Array.New($T10(), [this]));
      this.Move(
        this.TileInDirection(dir).get_row(), 
        this.TileInDirection(dir).get_col()
      );
    }
    this.QS();
    return true;
  };

  function Actor_TakeDamage$53 (dmgtype, damclass, dmg, source) {
    return this.TakeDamage($S62().Construct(dmgtype, damclass, source, dmg), "");
  };

  function Actor_TakeDamage$54 (dmgtype, damclass, dmg, source, cause_of_death) {
    return this.TakeDamage($S62().Construct(dmgtype, damclass, source, dmg), cause_of_death);
  };

  function Actor_TakeDamage$55 (dmg, cause_of_death) {
    var $temp00, $temp01, $temp02, $temp03, $temp04, $temp05, $temp06, $temp07, $temp08, $temp09, $temp0A, $temp0B, $temp0C, $temp0D, $temp0E, $temp0F, $temp10, $temp11, $temp12, $temp13, $temp14, $temp15, $temp16, $temp17;
    var $s00 = new JSIL.MethodSignature($asm01.System.Boolean, [$asm00.TypeRef("Forays.MagicItemType")], []);
    var dict = null, dict2 = null, dict3 = null, dict4 = null, dict5 = null, dict6 = null, dict7 = null, dict8 = null, dict9 = null, dict10 = null, dict11 = null, dict12 = null, dict13 = null, dict14 = null;
    var flag = false;
    var curhp = this.Actor$curhp$value;
    if (this.HasAttr($T04().FROZEN)) {
      var num = $T09().prototype.get_Item.call(dict, $T04().FROZEN);
      $T09().prototype.set_Item.call((dict = this.attrs), $T04().FROZEN, ((num - ((((dmg.get_amount() * 9) | 0) / 10) | 0)) | 0));
      if ($T09().prototype.get_Item.call(this.attrs, $T04().FROZEN) <= 0) {
        $T09().prototype.set_Item.call(this.attrs, $T04().FROZEN, 0);
        $thisType.Actor$B$value.Add("The ice breaks! ", JSIL.Array.New($T10(), [this]));
      }
      dmg.set_amount(((dmg.get_amount() / 10) | 0));
    }
    if (this.HasAttr($T04().MECHANICAL_SHIELD)) {
      $thisType.Actor$B$value.Add(JSIL.ConcatString(this.Your(), " shield moves to protect it from harm. "), JSIL.Array.New($T10(), [this]));
      return true;
    }
    if (this.HasAttr($T04().INVULNERABLE)) {
      dmg.set_amount(0);
    }
    if (!(!this.HasAttr($T04().TOUGH) || (dmg.damclass.valueOf() !== 0))) {
      ($temp00 = ((dmg.get_amount() - 2) | 0), 
        dmg.set_amount($temp00), 
        $temp00);
    }
    if (dmg.damclass === $T32().MAGICAL) {
      ($temp01 = ((dmg.get_amount() - ((this.TotalSkill($T07().SPIRIT) / 2) | 0)) | 0), 
        dmg.set_amount($temp01), 
        $temp01);
    }
    if (this.HasAttr($T04().ARCANE_SHIELDED)) {
      if ($T09().prototype.get_Item.call(this.attrs, $T04().ARCANE_SHIELDED) >= dmg.get_amount()) {
        var expr_148 = (dict2 = this.attrs);
        num = $T09().prototype.get_Item.call(dict2, $T04().ARCANE_SHIELDED);
        $T09().prototype.set_Item.call(expr_148, $T04().ARCANE_SHIELDED, ((num - dmg.get_amount()) | 0));
        if ($T09().prototype.get_Item.call(this.attrs, $T04().ARCANE_SHIELDED) < 0) {
          $T09().prototype.set_Item.call(this.attrs, $T04().ARCANE_SHIELDED, 0);
        }
        dmg.set_amount(0);
      } else {
        ($temp02 = ((dmg.get_amount() - $T09().prototype.get_Item.call(this.attrs, $T04().ARCANE_SHIELDED)) | 0), 
          dmg.set_amount($temp02), 
          $temp02);
        $T09().prototype.set_Item.call(this.attrs, $T04().ARCANE_SHIELDED, 0);
      }
      if (!this.HasAttr($T04().ARCANE_SHIELDED)) {
        $thisType.Actor$B$value.Add(JSIL.ConcatString(this.Your(), " arcane shield crumbles. "), JSIL.Array.New($T10(), [this]));
      }
    }
    var flag2 = false;
    switch (dmg.type.valueOf()) {
      case 0: 
        if (dmg.get_amount() > 0) {
          ($temp03 = ((this.Actor$curhp$value - dmg.get_amount()) | 0), 
            this.Actor$curhp$value = $temp03, 
            $temp03);
          flag = true;
        } else {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.YouAre(), " undamaged. "), JSIL.Array.New($T10(), [this]));
        }
        break;

      case 1: 
        var num2 = 1;
        if (this.HasAttr($T04().IMMUNE_FIRE)) {
          dmg.set_amount(0);
        } else if (this.HasAttr($T04().RESIST_FIRE)) {

          for (var i = $T09().prototype.get_Item.call(this.attrs, $T04().RESIST_FIRE); i > 0; i = ((i - 1) | 0)) {
            num2 = ((num2 * 2) | 0);
          }
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("resist"), ". "), JSIL.Array.New($T10(), [this]));
          flag2 = true;
        }
        dmg.set_amount(((dmg.get_amount() / num2) | 0));
        if (dmg.get_amount() > 0) {
          ($temp04 = ((this.Actor$curhp$value - dmg.get_amount()) | 0), 
            this.Actor$curhp$value = $temp04, 
            $temp04);
          flag = true;
        } else if (this.Actor$type$value !== $T02().CORPSETOWER_BEHEMOTH) {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.YouAre(), " unburnt. "), JSIL.Array.New($T10(), [this]));
        }
        break;

      case 2: 
        var num3 = 1;
        if (this.HasAttr($T04().IMMUNE_COLD)) {
          dmg.set_amount(0);
        } else if (this.HasAttr($T04().RESIST_COLD)) {

          for (var j = $T09().prototype.get_Item.call(this.attrs, $T04().RESIST_COLD); j > 0; j = ((j - 1) | 0)) {
            num3 = ((num3 * 2) | 0);
          }
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("resist"), ". "), JSIL.Array.New($T10(), [this]));
          flag2 = true;
        }
        dmg.set_amount(((dmg.get_amount() / num3) | 0));
        if (dmg.get_amount() > 0) {
          ($temp05 = ((this.Actor$curhp$value - dmg.get_amount()) | 0), 
            this.Actor$curhp$value = $temp05, 
            $temp05);
          flag = true;
        } else {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.YouAre(), " unharmed. "), JSIL.Array.New($T10(), [this]));
        }
        break;

      case 3: 
        var num4 = 1;
        if (this.HasAttr($T04().RESIST_ELECTRICITY)) {

          for (var k = $T09().prototype.get_Item.call(this.attrs, $T04().RESIST_ELECTRICITY); k > 0; k = ((k - 1) | 0)) {
            num4 = ((num4 * 2) | 0);
          }
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("resist"), ". "), JSIL.Array.New($T10(), [this]));
          flag2 = true;
        }
        dmg.set_amount(((dmg.get_amount() / num4) | 0));
        if (dmg.get_amount() > 0) {
          ($temp06 = ((this.Actor$curhp$value - dmg.get_amount()) | 0), 
            this.Actor$curhp$value = $temp06, 
            $temp06);
          flag = true;
        } else {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.YouAre(), " unharmed. "), JSIL.Array.New($T10(), [this]));
        }
        break;

      case 4: 
        if (!(!this.HasAttr($T04().UNDEAD) && 
            !this.HasAttr($T04().CONSTRUCT) && !this.HasAttr($T04().IMMUNE_TOXINS))) {
          dmg.set_amount(0);
        }
        if (dmg.get_amount() > 0) {
          ($temp07 = ((this.Actor$curhp$value - dmg.get_amount()) | 0), 
            this.Actor$curhp$value = $temp07, 
            $temp07);
          flag = true;
          if (this.Actor$type$value.valueOf() === 0) {
            if ($S0A().CallVirtual("Is", null, this.tile(), $T19().POISON_GAS)) {
              $thisType.Actor$B$value.Add("The poisonous gas burns your skin! ", JSIL.Array.New($T10(), 0));
            } else {
              $thisType.Actor$B$value.Add("You feel the poison coursing through your veins! ", JSIL.Array.New($T10(), 0));
            }
          } else if ($T24().Roll(1, 5) === 5) {
            $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " shudders. "), JSIL.Array.New($T10(), [this]));
          }
        }
        break;

      case 5: 
        ($temp08 = ((this.Actor$curhp$value + dmg.get_amount()) | 0), 
          this.Actor$curhp$value = $temp08, 
          $temp08);
        if (this.Actor$curhp$value > this.Actor$maxhp$value) {
          this.Actor$curhp$value = this.Actor$maxhp$value;
        }
        break;

      case 6: 
        var num5 = 1;
        if (this.HasAttr($T04().RESIST_SLASH)) {

          for (var l = $T09().prototype.get_Item.call(this.attrs, $T04().RESIST_SLASH); l > 0; l = ((l - 1) | 0)) {
            num5 = ((num5 * 2) | 0);
          }
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("resist"), ". "), JSIL.Array.New($T10(), [this]));
          flag2 = true;
        }
        dmg.set_amount(((dmg.get_amount() / num5) | 0));
        if (dmg.get_amount() > 0) {
          ($temp09 = ((this.Actor$curhp$value - dmg.get_amount()) | 0), 
            this.Actor$curhp$value = $temp09, 
            $temp09);
          flag = true;
        } else {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.YouAre(), " unharmed. "), JSIL.Array.New($T10(), [this]));
        }
        break;

      case 7: 
        var num6 = 1;
        if (this.HasAttr($T04().RESIST_BASH)) {

          for (var m = $T09().prototype.get_Item.call(this.attrs, $T04().RESIST_BASH); m > 0; m = ((m - 1) | 0)) {
            num6 = ((num6 * 2) | 0);
          }
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("resist"), ". "), JSIL.Array.New($T10(), [this]));
          flag2 = true;
        }
        dmg.set_amount(((dmg.get_amount() / num6) | 0));
        if (dmg.get_amount() > 0) {
          ($temp0A = ((this.Actor$curhp$value - dmg.get_amount()) | 0), 
            this.Actor$curhp$value = $temp0A, 
            $temp0A);
          flag = true;
        } else {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.YouAre(), " unharmed. "), JSIL.Array.New($T10(), [this]));
        }
        break;

      case 8: 
        var num7 = 1;
        if (this.HasAttr($T04().RESIST_PIERCE)) {

          for (var n = $T09().prototype.get_Item.call(this.attrs, $T04().RESIST_PIERCE); n > 0; n = ((n - 1) | 0)) {
            num7 = ((num7 * 2) | 0);
          }
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("resist"), ". "), JSIL.Array.New($T10(), [this]));
          flag2 = true;
        }
        dmg.set_amount(((dmg.get_amount() / num7) | 0));
        if (dmg.get_amount() > 0) {
          ($temp0B = ((this.Actor$curhp$value - dmg.get_amount()) | 0), 
            this.Actor$curhp$value = $temp0B, 
            $temp0B);
          flag = true;
        } else {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.YouAre(), " unharmed. "), JSIL.Array.New($T10(), [this]));
        }
        break;

      case 9: 
        if (dmg.get_amount() > 0) {
          ($temp0C = ((this.Actor$curhp$value - dmg.get_amount()) | 0), 
            this.Actor$curhp$value = $temp0C, 
            $temp0C);
          flag = true;
        } else {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.YouAre(), " unharmed. "), JSIL.Array.New($T10(), [this]));
        }
        break;

    }
    if (!((dmg.source === null) || 
        (dmg.source !== $thisType.Actor$player$value) || 
        (dmg.damclass.valueOf() !== 0) || 
        !flag2 || ((cause_of_death.indexOf("arrow") != -1)))) {
      $T28().TutorialTip($T29().Resistance);
    }
    if (flag) {
      if (this.HasAttr($T04().MAGICAL_BLOOD)) {
        this.recover_time = (($thisType.Actor$Q$value.Queue$turn$value + 200) | 0);
      } else {
        this.recover_time = (($thisType.Actor$Q$value.Queue$turn$value + 500) | 0);
      }
      this.Interrupt();
      if (this.HasAttr($T04().ASLEEP)) {
        $T09().prototype.set_Item.call(this.attrs, $T04().ASLEEP, 0);
        $T24().FlushInput();
      }
      if (!((dmg.source === null) || 
          (this.Actor$type$value.valueOf() === 0) || (dmg.source === this))) {
        this.Actor$target$value = dmg.source;
        this.target_location = $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, 
          dmg.source.get_row(), 
          dmg.source.get_col()
        );
        if (dmg.source.IsHiddenFrom(this)) {
          this.player_visibility_duration = -1;
        }
        if (!((this.Actor$type$value !== $T02().CRUSADING_KNIGHT) || 
            (dmg.source !== $thisType.Actor$player$value) || 
            this.HasAttr($T04().COOLDOWN_1) || 
            $T10().PhysicalObject$M$value.get_wiz_lite() || 
            this.CanSee($thisType.Actor$player$value) || (this.Actor$curhp$value <= 0))) {
          var l2 = ($S4E().Construct()).__Initialize__([["Show yourself"], ["Reveal yourself"], ["Unfold thyself"], ["Present yourself"], ["Unveil yourself"], ["Make yourself known"]]);
          var l3 = ($S4E().Construct()).__Initialize__([["despicable"], ["filthy"], ["foul"], ["nefarious"], ["vulgar"], ["sorry"], ["unworthy"]]);
          var l4 = ($S4E().Construct()).__Initialize__([["villain"], ["blackguard"], ["devil"], ["scoundrel"], ["wretch"], ["cur"], ["rogue"]]);
          $thisType.Actor$B$value.Add(JSIL.ConcatString.apply(null, JSIL.Array.New($T13(), [this.TheVisible(), " shouts \"", $T27().Random$b1($T13())(l2), ", ", $T27().Random$b1($T13())(l3), " ", $T27().Random$b1($T13())(l4), "!\" "])), JSIL.Array.New($T10(), 0));
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " raises a gauntlet. "), JSIL.Array.New($T10(), [this]));
          $thisType.Actor$B$value.Add("Sunlight fills the dungeon. ", JSIL.Array.New($T10(), 0));
          $T10().PhysicalObject$M$value.set_wiz_lite(true);
          $T10().PhysicalObject$M$value.Map$wiz_dark$value = false;
          var expr_C0E = (dict3 = this.attrs);
          num = $T09().prototype.get_Item.call(dict3, $T04().COOLDOWN_1);
          $T09().prototype.set_Item.call(expr_C0E, $T04().COOLDOWN_1, ((num + 1) | 0));
        }
      }
      if (!(!this.HasAttr($T04().SPORE_BURST) || this.HasAttr($T04().COOLDOWN_1))) {
        var expr_C45 = (dict4 = this.attrs);
        num = $T09().prototype.get_Item.call(dict4, $T04().COOLDOWN_1);
        $T09().prototype.set_Item.call(expr_C45, $T04().COOLDOWN_1, ((num + 1) | 0));
        $thisType.Actor$Q$value.Add($S0F().Construct(this, (((($T24().Roll(1, 5) + 1) | 0) * 100) | 0), $T04().COOLDOWN_1));
        $thisType.Actor$B$value.Add(JSIL.ConcatString(this.You("retaliate"), " with a burst of spores! "), JSIL.Array.New($T10(), [this]));

        for (var num8 = 2; num8 <= 8; num8 = ((num8 + 2) | 0)) {
          this.AnimateStorm(
            num8, 
            1, 
            ((((((((num8 * 2) | 0) + 1) | 0) * ((((num8 * 2) | 0) + 1) | 0)) | 0) / 4) | 0), 
            "*", 
            $T03().DarkYellow
          );
        }

        for (var a$0 = this.ActorsWithinDistance(8)._items, i$0 = 0, l$0 = this.ActorsWithinDistance(8)._size; i$0 < l$0; ($temp0F = i$0, 
            i$0 = ((i$0 + 1) | 0), 
            $temp0F)) {
          var current = a$0[i$0];
          if (!(!this.HasLOE(
                current.get_row(), 
                current.get_col()
              ) || (current === this))) {
            $thisType.Actor$B$value.Add(("The spores hit " + current.PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), [current]));
            if (!(current.HasAttr($T04().UNDEAD) || 
                current.HasAttr($T04().CONSTRUCT) || 
                current.HasAttr($T04().SPORE_BURST) || current.HasAttr($T04().IMMUNE_TOXINS))) {
              var num9 = $T24().Roll(2, 4);
              var expr_D83 = (dict5 = current.attrs);
              num = $T09().prototype.get_Item.call(dict5, $T04().POISONED);
              $T09().prototype.set_Item.call(expr_D83, $T04().POISONED, ((num + 1) | 0));
              $thisType.Actor$Q$value.Add($S0F().Construct(current, ((num9 * 100) | 0), $T04().POISONED));
              if (current.PhysicalObject$$name$value == "you") {
                $thisType.Actor$B$value.Add("You are poisoned. ", JSIL.Array.New($T10(), 0));
              }
              if (!current.HasAttr($T04().STUNNED)) {
                var expr_DF2 = (dict6 = current.attrs);
                num = $T09().prototype.get_Item.call(dict6, $T04().STUNNED);
                $T09().prototype.set_Item.call(expr_DF2, $T04().STUNNED, ((num + 1) | 0));
                $thisType.Actor$Q$value.Add($S1A().Construct(current, ((num9 * 100) | 0), $T04().STUNNED, JSIL.ConcatString(current.YouAre(), " no longer stunned. "), JSIL.Array.New($T10(), [current])));
                $thisType.Actor$B$value.Add(JSIL.ConcatString(current.YouAre(), " stunned. "), JSIL.Array.New($T10(), [current]));
              }
            } else {
              $thisType.Actor$B$value.Add(JSIL.ConcatString(current.YouAre(), " unaffected. "), JSIL.Array.New($T10(), [current]));
            }
          }
        }
      }
      if (!(!this.HasAttr($T04().HOLY_SHIELDED) || (dmg.source === null))) {
        $thisType.Actor$B$value.Add((this.YourVisible() + " holy shield burns " + dmg.source.TheVisible() + ". "), JSIL.Array.New($T10(), [this, dmg.source]));
        var num10 = $T24().Roll(2, 6);
        if (num10 >= dmg.source.Actor$curhp$value) {
          num10 = ((dmg.source.Actor$curhp$value - 1) | 0);
        }
        dmg.source.TakeDamage($T31().MAGIC, $T32().MAGICAL, num10, this);
      }
      if (!(!this.HasFeat($T41().BOILING_BLOOD) || 
          (dmg.type === $T31().POISON) || ($T09().prototype.get_Item.call(this.attrs, $T04().BLOOD_BOILED) >= 5))) {
        $thisType.Actor$B$value.Add("Your blood boils! ", JSIL.Array.New($T10(), 0));
        ($temp0D = ((this.Actor$speed$value - 10) | 0), 
          this.Actor$speed$value = $temp0D, 
          $temp0D);
        var expr_F9B = (dict7 = this.attrs);
        num = $T09().prototype.get_Item.call(dict7, $T04().BLOOD_BOILED);
        $T09().prototype.set_Item.call(expr_F9B, $T04().BLOOD_BOILED, ((num + 1) | 0));
        $S51().CallVirtual("KillEvents", null, $thisType.Actor$Q$value, this, $T04().BLOOD_BOILED);
        $thisType.Actor$Q$value.Add($S63().Construct(this, 1000, $T04().BLOOD_BOILED, $T09().prototype.get_Item.call(this.attrs, $T04().BLOOD_BOILED), "Your blood cools. "));
      }
      if (!((this.Actor$type$value !== $T02().MECHANICAL_KNIGHT) || 
          (this.Actor$curhp$value > 10) || 
          (this.Actor$curhp$value <= 0) || 
          this.HasAttr($T04().COOLDOWN_1) || this.HasAttr($T04().COOLDOWN_2))) {
        if ($T24().CoinFlip()) {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.Your(), " arms are destroyed! "), JSIL.Array.New($T10(), [this]));
          var expr_105C = (dict8 = this.attrs);
          num = $T09().prototype.get_Item.call(dict8, $T04().COOLDOWN_1);
          $T09().prototype.set_Item.call(expr_105C, $T04().COOLDOWN_1, ((num + 1) | 0));
          $T09().prototype.set_Item.call(this.attrs, $T04().MECHANICAL_SHIELD, 0);
        } else {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.Your(), " legs are destroyed! "), JSIL.Array.New($T10(), [this]));
          var expr_10B0 = (dict9 = this.attrs);
          num = $T09().prototype.get_Item.call(dict9, $T04().COOLDOWN_2);
          $T09().prototype.set_Item.call(expr_10B0, $T04().COOLDOWN_2, ((num + 1) | 0));
          var expr_10CD = (dict10 = this.attrs);
          num = $T09().prototype.get_Item.call(dict10, $T04().NEVER_MOVES);
          $T09().prototype.set_Item.call(expr_10CD, $T04().NEVER_MOVES, ((num + 1) | 0));
          this.path.Clear();
          this.target_location = null;
        }
      }
    }
    if (this.Actor$curhp$value <= 0) {
      if (this.Actor$type$value.valueOf() === 0) {
        if (!this.magic_items.Contains($T1C().PENDANT_OF_LIFE)) {
          if (!((cause_of_death.length <= 0) || ((cause_of_death[0]).charCodeAt(0) !== "*".charCodeAt(0)))) {
            $T24().KILLED_BY = (cause_of_death.substr(1));
          } else {
            $T24().KILLED_BY = (JSIL.ConcatString("killed by ", cause_of_death));
          }
          $T10().PhysicalObject$M$value.Draw();
          if (!$T24().GAME_OVER) {
            $thisType.Actor$B$value.Add("You die. ", JSIL.Array.New($T10(), 0));
          }
          $thisType.Actor$B$value.PrintAll();
          $T24().GAME_OVER = true;
          return false;
        }
        $s00.CallVirtual("Remove", null, this.magic_items, $T1C().PENDANT_OF_LIFE);
        this.Actor$curhp$value = 1;
        $thisType.Actor$B$value.Add("Your pendant glows brightly, then crumbles to dust. ", JSIL.Array.New($T10(), 0));
      } else {
        if (this.HasAttr($T04().BOSS_MONSTER)) {
          $T10().PhysicalObject$M$value.Draw();
          $thisType.Actor$B$value.Add("The fire drake dies. ", JSIL.Array.New($T10(), 0));
          $thisType.Actor$B$value.PrintAll();
          if ($thisType.Actor$player$value.Actor$curhp$value > 0) {
            $thisType.Actor$B$value.Add("The threat to your nation has been slain! You begin the long trek home to deliver the good news... ", JSIL.Array.New($T10(), 0));
            $T24().KILLED_BY = "Died of ripe old age";
          } else {
            $thisType.Actor$B$value.Add("The threat to your nation has been slain! Unfortunately, you won't be able to deliver the news... ", JSIL.Array.New($T10(), 0));
          }
          $thisType.Actor$B$value.PrintAll();
          $T24().GAME_OVER = true;
          $T24().BOSS_KILLED = true;
        }
        if (!((this.Actor$type$value !== $T02().BERSERKER) || (dmg.get_amount() >= 1000))) {
          if (!this.HasAttr($T04().COOLDOWN_1)) {
            var expr_128D = (dict11 = this.attrs);
            num = $T09().prototype.get_Item.call(dict11, $T04().COOLDOWN_1);
            $T09().prototype.set_Item.call(expr_128D, $T04().COOLDOWN_1, ((num + 1) | 0));
            $thisType.Actor$Q$value.Add($S0F().Construct(this, 350, $T04().COOLDOWN_1));
            $S51().CallVirtual("KillEvents", null, $thisType.Actor$Q$value, this, $T04().COOLDOWN_2);
            if (!this.HasAttr($T04().COOLDOWN_2)) {
              $T09().prototype.set_Item.call(this.attrs, $T04().COOLDOWN_2, $S1E().CallVirtual("DirectionOf", null, this, $thisType.Actor$player$value));
            }
            $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " somehow remains standing! He screams with fury! "), JSIL.Array.New($T10(), [this]));
          }
          return true;
        }
        if (!(!this.HasAttr($T04().REGENERATES_FROM_DEATH) || (dmg.type === $T31().FIRE))) {
          $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " falls to the ground, still twitching. "), JSIL.Array.New($T10(), [this]));
          var tile = null;

          for (var num11 = 0; (num11 < 66) && (tile === null); num11 = ((num11 + 1) | 0)) {

          $loop16: 
            for (var a$1 = this.TilesAtDistance(num11)._items, i$1 = 0, l$1 = this.TilesAtDistance(num11)._size; i$1 < l$1; ($temp10 = i$1, 
                i$1 = ((i$1 + 1) | 0), 
                $temp10)) {
              var current2 = a$1[i$1];
              if (!(!current2.Tile$passable$value || 
                  $S0A().CallVirtual("Is", null, current2, $T19().TROLL_CORPSE) || 
                  $S0A().CallVirtual("Is", null, current2, $T19().TROLL_SEER_CORPSE) || $S0A().CallVirtual("Is", null, current2, $T19().QUICKFIRE))) {
                if (this.Actor$type$value === $T02().TROLL) {
                  current2.features.Add($T19().TROLL_CORPSE);
                } else {
                  current2.features.Add($T19().TROLL_SEER_CORPSE);
                }
                tile = current2;
                break $loop16;
              }
            }
          }
          ($temp0E = ((this.Actor$curhp$value - (($T24().Roll(10) + 5) | 0)) | 0), 
            this.Actor$curhp$value = $temp0E, 
            $temp0E);
          if (this.Actor$curhp$value < -50) {
            this.Actor$curhp$value = -50;
          }
          var attr_ = (!this.HasAttr($T04().COOLDOWN_1) ? $T04().NO_ATTR : $T04().COOLDOWN_1);
          $thisType.Actor$Q$value.Add($S5B().Construct(tile, null, 200, $T22().REGENERATING_FROM_DEATH, attr_, this.Actor$curhp$value, "", JSIL.Array.New($T10(), 0)));
        } else if (!((dmg.get_amount() >= 1000) || this.HasAttr($T04().BOSS_MONSTER))) {
          if (!(!this.HasAttr($T04().UNDEAD) && !this.HasAttr($T04().CONSTRUCT))) {
            $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " is destroyed. "), JSIL.Array.New($T10(), [this]));
          } else {
            $thisType.Actor$B$value.Add(JSIL.ConcatString(this.PhysicalObject$the_name$value, " dies. "), JSIL.Array.New($T10(), [this]));
          }
        }
        if (this.LightRadius() > 0) {
          this.UpdateRadius(this.LightRadius(), 0);
        }
        if (!((this.Actor$type$value !== $T02().SHADOW) || !$thisType.Actor$player$value.HasAttr($T04().DIM_LIGHT))) {
          this.Actor$type$value = $T02().ZOMBIE;
          this.CalculateDimming();
        }
        if (this.Actor$type$value === $T02().STONE_GOLEM) {

          for (var a$2 = this.TilesWithinDistance(4)._items, i$2 = 0, l$2 = this.TilesWithinDistance(4)._size; i$2 < l$2; ($temp11 = i$2, 
              i$2 = ((i$2 + 1) | 0), 
              $temp11)) {
            var current3 = a$2[i$2];
            if (!(!(current3.PhysicalObject$$name$value == "floor") || 
                ((current3.actor() !== null) && 
                  (current3.actor() !== this)) || 
                !this.HasLOE(current3) || (($S0C().CallVirtual("DistanceFrom", null, this, current3) > 2) && 
                  !$T24().CoinFlip()))) {
              current3.TransformTo($T1A().RUBBLE);
            }
          }
        }
        if ($thisType.Actor$player$value.HasAttr($T04().CONVICTION)) {
          var expr_1611 = (dict12 = $thisType.Actor$player$value.attrs);
          num = $T09().prototype.get_Item.call(dict12, $T04().KILLSTREAK);
          $T09().prototype.set_Item.call(expr_1611, $T04().KILLSTREAK, ((num + 1) | 0));
        }
        if (!((!(this.HasAttr($T04().HUMANOID_INTELLIGENCE) && 
                (this.Actor$type$value !== $T02().DREAM_CLONE) && 
                (this.Actor$type$value !== $T02().FIRE_DRAKE)) && 
              (this.Actor$type$value !== $T02().ZOMBIE)) || 
            !$T24().CoinFlip() || this.HasAttr($T04().NO_ITEM))) {
          this.tile().GetItem($T18().Create($T18().RandomItem(), -1, -1));
        }

        for (var a$3 = this.Actor$inv$value._items, i$3 = 0, l$3 = this.Actor$inv$value._size; i$3 < l$3; ($temp12 = i$3, 
            i$3 = ((i$3 + 1) | 0), 
            $temp12)) {
          var current4 = a$3[i$3];
          this.tile().GetItem(current4);
        }
        $S28().CallVirtual("KillEvents", null, $thisType.Actor$Q$value, this, $T22().ANY_EVENT);
        $T10().PhysicalObject$M$value.RemoveTargets(this);
        var num12 = $thisType.tiebreakers.IndexOf(this);
        if (num12 !== -1) {
          $thisType.tiebreakers.set_Item($thisType.tiebreakers.IndexOf(this), null);
        }
        if (this.group !== null) {
          if (!((this.group.get_Count() < 2) || 
              (this !== this.group.get_Item(0)) || 
              !this.HasAttr($T04().WANDERING) || 
              (this.Actor$type$value === $T02().NECROMANCER) || (this.Actor$type$value === $T02().DREAM_WARRIOR))) {
            var expr_1779 = (dict13 = this.group.get_Item(1).attrs);
            num = $T09().prototype.get_Item.call(dict13, $T04().WANDERING);
            $T09().prototype.set_Item.call(expr_1779, $T04().WANDERING, ((num + 1) | 0));
          }
          if (!((this.group.get_Count() > 2) && 
              (this.Actor$type$value !== $T02().NECROMANCER) && (this.Actor$type$value !== $T02().DREAM_WARRIOR))) {

            for (var a$4 = this.group._items, i$4 = 0, l$4 = this.group._size; i$4 < l$4; ($temp13 = i$4, 
                i$4 = ((i$4 + 1) | 0), 
                $temp13)) {
              var current5 = a$4[i$4];
              if (current5 !== this) {
                current5.group = null;
              }
            }
            this.group.Clear();
            this.group = null;
          } else {
            this.group.Remove(this);
            this.group = null;
          }
        }
        $T2C().prototype.set_Item.call($T10().PhysicalObject$M$value.actor, 
          this.get_row(), 
          this.get_col(), 
          null
        );
        return false;
      }
    } else {
      if (!(!this.HasFeat($T41().FEEL_NO_PAIN) || 
          !flag || 
          (this.Actor$curhp$value >= 20) || (curhp < 20))) {
        $thisType.Actor$B$value.Add("You can feel no pain! ", JSIL.Array.New($T10(), 0));
        var expr_1896 = (dict14 = this.attrs);
        num = $T09().prototype.get_Item.call(dict14, $T04().INVULNERABLE);
        $T09().prototype.set_Item.call(expr_1896, $T04().INVULNERABLE, ((num + 1) | 0));
        $thisType.Actor$Q$value.Add($S26().Construct(this, 500, $T04().INVULNERABLE, "You can feel pain again. "));
      }
      if (!(!this.magic_items.Contains($T1C().CLOAK_OF_DISAPPEARANCE) || 
          !flag || (dmg.get_amount() < this.Actor$curhp$value))) {
        $thisType.Actor$B$value.PrintAll();
        $T10().PhysicalObject$M$value.Draw();
        $thisType.Actor$B$value.DisplayNow("Your cloak starts to vanish. Use your cloak to escape?(y/n): ");
        $T4A().set_CursorVisible(true);
        var flag3 = false;

      $loop8: 
        while (!flag3) {

          var $label0 = 0;
        $labelgroup0: 
          while (true) {
            switch ($label0) {
              case 0: /* $entry0 */ 
                var keyChar = $T4A().ReadKey(true).get_KeyChar();
                if (keyChar.charCodeAt(0) !== "N".charCodeAt(0)) {
                  if (keyChar.charCodeAt(0) !== "Y".charCodeAt(0)) {
                    if (keyChar.charCodeAt(0) === "n".charCodeAt(0)) {
                      $label0 = 1 /* goto IL_195D */ ;
                      continue $labelgroup0;
                    }
                    if (keyChar.charCodeAt(0) !== "y".charCodeAt(0)) {
                      continue $loop8;
                    }
                  }
                  flag3 = true;
                  var array = JSIL.MultidimensionalArray.New($T30(), 22, 66);

                  for (var a$5 = $T10().PhysicalObject$M$value.AllTiles()._items, i$5 = 0, l$5 = $T10().PhysicalObject$M$value.AllTiles()._size; i$5 < l$5; ($temp14 = i$5, 
                      i$5 = ((i$5 + 1) | 0), 
                      $temp14)) {
                    var current6 = a$5[i$5];
                    if (current6.Tile$passable$value) {
                      array.Set(
                        current6.get_row(), 
                        current6.get_col(), 
                        true
                      );
                    } else {
                      array.Set(
                        current6.get_row(), 
                        current6.get_col(), 
                        false
                      );
                    }
                  }

                  for (var a$6 = $T10().PhysicalObject$M$value.AllActors()._items, i$6 = 0, l$6 = $T10().PhysicalObject$M$value.AllActors()._size; i$6 < l$6; ($temp15 = i$6, 
                      i$6 = ((i$6 + 1) | 0), 
                      $temp15)) {
                    var current7 = a$6[i$6];

                    for (var a$7 = $T10().PhysicalObject$M$value.AllTiles()._items, i$7 = 0, l$7 = $T10().PhysicalObject$M$value.AllTiles()._size; i$7 < l$7; ($temp16 = i$7, 
                        i$7 = ((i$7 + 1) | 0), 
                        $temp16)) {
                      var current8 = a$7[i$7];
                      if (!(!array.Get(
                            current8.get_row(), 
                            current8.get_col()
                          ) || (($S0C().CallVirtual("DistanceFrom", null, current7, current8) >= 6) && 
                            !current7.HasLOS(
                              current8.get_row(), 
                              current8.get_col()
                            )))) {
                        array.Set(
                          current8.get_row(), 
                          current8.get_col(), 
                          false
                        );
                      }
                    }
                  }
                  var list = $S12().Construct();
                  var tile2 = null;

                $loop12: 
                  for (var num13 = 4; num13 < 66; num13 = ((num13 + 1) | 0)) {

                    for (var a$8 = this.PositionsAtDistance(num13)._items, i$8 = 0, l$8 = this.PositionsAtDistance(num13)._size; i$8 < l$8; ($temp17 = i$8, 
                        i$8 = ((i$8 + 1) | 0), 
                        $temp17)) {
                      var current9 = a$8[i$8].MemberwiseClone();
                      if (array.Get(current9.row, current9.col)) {
                        list.Add($T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, current9.row, current9.col));
                      }
                    }
                    if (list.get_Count() > 0) {
                      tile2 = list.get_Item((($T24().Roll(1, list.get_Count()) - 1) | 0));
                      break $loop12;
                    }
                  }
                  if (tile2 !== null) {
                    this.Move(
                      tile2.get_row(), 
                      tile2.get_col()
                    );
                  } else {

                  $loop14: 
                    for (var num14 = 0; num14 < 9999; num14 = ((num14 + 1) | 0)) {
                      var num15 = $T24().Roll(1, 20);
                      var num16 = $T24().Roll(1, 64);
                      if (!(!$T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num15, num16).Tile$passable$value || 
                          ($T2C().prototype.get_Item.call($T10().PhysicalObject$M$value.actor, num15, num16) !== null) || 
                          (this.DistanceFrom(num15, num16) < 6) || $T34().prototype.get_Item.call($T10().PhysicalObject$M$value.tile, num15, num16).IsTrap())) {
                        this.Move(num15, num16);
                        break $loop14;
                      }
                    }
                  }
                  $thisType.Actor$B$value.Add("You escape. ", JSIL.Array.New($T10(), 0));
                  continue $loop8;
                }

                $label0 = 1 /* goto IL_195D */ ;
                continue $labelgroup0;
              case 1: /* IL_195D */ 
                flag3 = true;

                break $labelgroup0;
            }
          }
        }
        $thisType.Actor$B$value.Add("Your cloak vanishes completely! ", JSIL.Array.New($T10(), 0));
        $s00.CallVirtual("Remove", null, this.magic_items, $T1C().CLOAK_OF_DISAPPEARANCE);
      }
    }
    return true;
  };

  function Actor_TheVisible () {
    if ($thisType.Actor$player$value.CanSee(this)) {
      return this.PhysicalObject$the_name$value;
    }
    return "something";
  };

  function Actor_toString () {
    return this.PhysicalObject$symbol$value.toString();
  };

  function Actor_TotalSkill (skill) {
    var num = $T06().prototype.get_Item.call(this.skills, skill);
    switch (skill.valueOf()) {
      case 0: 
        num = ((num + $T09().prototype.get_Item.call(this.attrs, $T04().BONUS_COMBAT)) | 0);
        break;

      case 1: 
        num = ((num + $T09().prototype.get_Item.call(this.attrs, $T04().BONUS_DEFENSE)) | 0);
        break;

      case 2: 
        num = ((num + $T09().prototype.get_Item.call(this.attrs, $T04().BONUS_MAGIC)) | 0);
        break;

      case 3: 
        num = ((num + $T09().prototype.get_Item.call(this.attrs, $T04().BONUS_SPIRIT)) | 0);
        break;

      case 4: 
        num = ((num + $T09().prototype.get_Item.call(this.attrs, $T04().BONUS_STEALTH)) | 0);
        break;

    }
    return num;
  };

  function Actor_UpdateOnEquip$56 (from, to) {
    var dict = null, dict2 = null, dict3 = null, dict4 = null, dict5 = null, dict6 = null, dict7 = null, dict8 = null;
    switch (from.valueOf()) {
      case 5: 
        var num = $T09().prototype.get_Item.call(dict, $T04().FIRE_HIT);
        $T09().prototype.set_Item.call((dict = this.attrs), $T04().FIRE_HIT, ((num - 1) | 0));
        break;

      case 6: 
        var expr_45 = (dict2 = this.attrs);
        num = $T09().prototype.get_Item.call(dict2, $T04().FORCE_HIT);
        $T09().prototype.set_Item.call(expr_45, $T04().FORCE_HIT, ((num - 1) | 0));
        break;

      case 7: 
        var expr_65 = (dict3 = this.attrs);
        num = $T09().prototype.get_Item.call(dict3, $T04().POISON_HIT);
        $T09().prototype.set_Item.call(expr_65, $T04().POISON_HIT, ((num - 1) | 0));
        break;

      case 8: 
        var expr_87 = (dict4 = this.attrs);
        num = $T09().prototype.get_Item.call(dict4, $T04().BONUS_MAGIC);
        $T09().prototype.set_Item.call(expr_87, $T04().BONUS_MAGIC, ((num - 1) | 0));
        break;

    }
    switch (to.valueOf()) {
      case 5: 
        var expr_C8 = (dict5 = this.attrs);
        num = $T09().prototype.get_Item.call(dict5, $T04().FIRE_HIT);
        $T09().prototype.set_Item.call(expr_C8, $T04().FIRE_HIT, ((num + 1) | 0));
        break;

      case 6: 
        var expr_EA = (dict6 = this.attrs);
        num = $T09().prototype.get_Item.call(dict6, $T04().FORCE_HIT);
        $T09().prototype.set_Item.call(expr_EA, $T04().FORCE_HIT, ((num + 1) | 0));
        break;

      case 7: 
        var expr_10C = (dict7 = this.attrs);
        num = $T09().prototype.get_Item.call(dict7, $T04().POISON_HIT);
        $T09().prototype.set_Item.call(expr_10C, $T04().POISON_HIT, ((num + 1) | 0));
        break;

      case 8: 
        var expr_12E = (dict8 = this.attrs);
        num = $T09().prototype.get_Item.call(dict8, $T04().BONUS_MAGIC);
        $T09().prototype.set_Item.call(expr_12E, $T04().BONUS_MAGIC, ((num + 1) | 0));
        break;

    }
  };

  function Actor_UpdateOnEquip$57 (from, to) {
    var dict = null, dict2 = null, dict3 = null, dict4 = null, dict5 = null, dict6 = null, dict7 = null, dict8 = null, dict9 = null, dict10 = null;
    switch (from.valueOf()) {
      case 3: 
        var num = $T09().prototype.get_Item.call(dict, $T04().BONUS_STEALTH);
        $T09().prototype.set_Item.call((dict = this.attrs), $T04().BONUS_STEALTH, ((num - 2) | 0));
        break;

      case 4: 
        var expr_41 = (dict2 = this.attrs);
        num = $T09().prototype.get_Item.call(dict2, $T04().BONUS_MAGIC);
        $T09().prototype.set_Item.call(expr_41, $T04().BONUS_MAGIC, ((num - 1) | 0));
        break;

      case 5: 
        var expr_61 = (dict3 = this.attrs);
        num = $T09().prototype.get_Item.call(dict3, $T04().RESIST_FIRE);
        $T09().prototype.set_Item.call(expr_61, $T04().RESIST_FIRE, ((num - 1) | 0));
        var expr_7E = (dict4 = this.attrs);
        num = $T09().prototype.get_Item.call(dict4, $T04().RESIST_COLD);
        $T09().prototype.set_Item.call(expr_7E, $T04().RESIST_COLD, ((num - 1) | 0));
        var expr_9B = (dict5 = this.attrs);
        num = $T09().prototype.get_Item.call(dict5, $T04().RESIST_ELECTRICITY);
        $T09().prototype.set_Item.call(expr_9B, $T04().RESIST_ELECTRICITY, ((num - 1) | 0));
        break;

    }
    switch (to.valueOf()) {
      case 3: 
        var expr_D8 = (dict6 = this.attrs);
        num = $T09().prototype.get_Item.call(dict6, $T04().BONUS_STEALTH);
        $T09().prototype.set_Item.call(expr_D8, $T04().BONUS_STEALTH, ((num + 2) | 0));
        break;

      case 4: 
        var expr_FA = (dict7 = this.attrs);
        num = $T09().prototype.get_Item.call(dict7, $T04().BONUS_MAGIC);
        $T09().prototype.set_Item.call(expr_FA, $T04().BONUS_MAGIC, ((num + 1) | 0));
        break;

      case 5: 
        var expr_11C = (dict8 = this.attrs);
        num = $T09().prototype.get_Item.call(dict8, $T04().RESIST_FIRE);
        $T09().prototype.set_Item.call(expr_11C, $T04().RESIST_FIRE, ((num + 1) | 0));
        var expr_139 = (dict9 = this.attrs);
        num = $T09().prototype.get_Item.call(dict9, $T04().RESIST_COLD);
        $T09().prototype.set_Item.call(expr_139, $T04().RESIST_COLD, ((num + 1) | 0));
        var expr_156 = (dict10 = this.attrs);
        num = $T09().prototype.get_Item.call(dict10, $T04().RESIST_ELECTRICITY);
        $T09().prototype.set_Item.call(expr_156, $T04().RESIST_ELECTRICITY, ((num + 1) | 0));
        if (!(!this.HasAttr($T04().ON_FIRE) && 
            !this.HasAttr($T04().CATCHING_FIRE) && !this.HasAttr($T04().STARTED_CATCHING_FIRE_THIS_TURN))) {
          $thisType.Actor$B$value.Add("You are no longer on fire. ", JSIL.Array.New($T10(), 0));
          var num2 = this.LightRadius();
          $T09().prototype.set_Item.call(this.attrs, $T04().ON_FIRE, 0);
          $T09().prototype.set_Item.call(this.attrs, $T04().CATCHING_FIRE, 0);
          $T09().prototype.set_Item.call(this.attrs, $T04().STARTED_CATCHING_FIRE_THIS_TURN, 0);
          if (num2 !== this.LightRadius()) {
            this.UpdateRadius(num2, this.LightRadius());
          }
        }
        break;

    }
  };

  function Actor_UpdateOnEquip$58 (from, to) {
    var dict = null, dict2 = null, dict3 = null, dict4 = null, dict5 = null, dict6 = null;
    if (from === $T1C().RING_OF_RESISTANCE) {
      var expr_14 = (dict = this.attrs);
      var num = $T09().prototype.get_Item.call(dict, $T04().RESIST_FIRE);
      $T09().prototype.set_Item.call(expr_14, $T04().RESIST_FIRE, ((num - 1) | 0));
      var expr_2F = (dict2 = this.attrs);
      num = $T09().prototype.get_Item.call(dict2, $T04().RESIST_COLD);
      $T09().prototype.set_Item.call(expr_2F, $T04().RESIST_COLD, ((num - 1) | 0));
      var expr_4A = (dict3 = this.attrs);
      num = $T09().prototype.get_Item.call(dict3, $T04().RESIST_ELECTRICITY);
      $T09().prototype.set_Item.call(expr_4A, $T04().RESIST_ELECTRICITY, ((num - 1) | 0));
    }
    if (to === $T1C().RING_OF_RESISTANCE) {
      var expr_7A = (dict4 = this.attrs);
      num = $T09().prototype.get_Item.call(dict4, $T04().RESIST_FIRE);
      $T09().prototype.set_Item.call(expr_7A, $T04().RESIST_FIRE, ((num + 1) | 0));
      var expr_97 = (dict5 = this.attrs);
      num = $T09().prototype.get_Item.call(dict5, $T04().RESIST_COLD);
      $T09().prototype.set_Item.call(expr_97, $T04().RESIST_COLD, ((num + 1) | 0));
      var expr_B4 = (dict6 = this.attrs);
      num = $T09().prototype.get_Item.call(dict6, $T04().RESIST_ELECTRICITY);
      $T09().prototype.set_Item.call(expr_B4, $T04().RESIST_ELECTRICITY, ((num + 1) | 0));
      if (!(!this.HasAttr($T04().ON_FIRE) && 
          !this.HasAttr($T04().CATCHING_FIRE) && !this.HasAttr($T04().STARTED_CATCHING_FIRE_THIS_TURN))) {
        $thisType.Actor$B$value.Add("You are no longer on fire. ", JSIL.Array.New($T10(), 0));
        var num2 = this.LightRadius();
        $T09().prototype.set_Item.call(this.attrs, $T04().ON_FIRE, 0);
        $T09().prototype.set_Item.call(this.attrs, $T04().CATCHING_FIRE, 0);
        $T09().prototype.set_Item.call(this.attrs, $T04().STARTED_CATCHING_FIRE_THIS_TURN, 0);
        if (num2 !== this.LightRadius()) {
          this.UpdateRadius(num2, this.LightRadius());
        }
      }
    }
  };

  function Actor_UseFeat (feat) {
    var $temp00, $temp01, $temp02, $temp03, $temp04;
    var dict = null, dict2 = null, dict3 = null, dict4 = null, dict5 = null, dict6 = null;
    switch (feat.valueOf()) {
      case 7: 
        this.Actor$target$value = null;
        var target = this.GetTarget(false, 2, false);
        this.Actor$target$value = null;
        var tile = null;
        if (target !== null) {
          tile = $T27().Last$b1($T17())(target);
        }
        if ((tile === null) || 
          !tile.Tile$passable$value || 
          (tile.actor() !== null) || this.GrabPreventsMovement(tile)) {
          if (this.GrabPreventsMovement(tile)) {
            $thisType.Actor$B$value.Add("You can't currently reach that spot. ", JSIL.Array.New($T10(), 0));
          }
          return false;
        }
        var list = $S16().Construct();
        var flag = false;

        for (var a$0 = tile.NeighborsBetween(
            this.get_row(), 
            this.get_col()
          )._items, i$0 = 0, l$0 = tile.NeighborsBetween(
            this.get_row(), 
            this.get_col()
          )._size; i$0 < l$0; ($temp00 = i$0, 
            i$0 = ((i$0 + 1) | 0), 
            $temp00)) {
          var current = a$0[i$0];
          if (current.actor() !== null) {
            list.Add(current.actor());
          }
          if (!(!current.Tile$passable$value || flag)) {
            $thisType.Actor$B$value.Add("You tumble. ", JSIL.Array.New($T10(), 0));
            this.Move(
              tile.get_row(), 
              tile.get_col()
            );
            flag = true;
            var num = $T09().prototype.get_Item.call(dict, $T04().TUMBLING);
            $T09().prototype.set_Item.call((dict = this.attrs), $T04().TUMBLING, ((num + 1) | 0));
            if (this.HasAttr($T04().CATCHING_FIRE)) {
              $T09().prototype.set_Item.call(this.attrs, $T04().CATCHING_FIRE, 0);
              $thisType.Actor$B$value.Add("You stop the flames from spreading. ", JSIL.Array.New($T10(), 0));
              if (this.HasAttr($T04().STARTED_CATCHING_FIRE_THIS_TURN)) {
                $T09().prototype.set_Item.call(this.attrs, $T04().STARTED_CATCHING_FIRE_THIS_TURN, 0);
                $thisType.Actor$B$value.Add("You stop the flames from spreading. ", JSIL.Array.New($T10(), 0));
              }
            } else if (this.HasAttr($T04().STARTED_CATCHING_FIRE_THIS_TURN)) {
              $T09().prototype.set_Item.call(this.attrs, $T04().STARTED_CATCHING_FIRE_THIS_TURN, 0);
              $thisType.Actor$B$value.Add("You stop the flames from spreading. ", JSIL.Array.New($T10(), 0));
            } else if (this.HasAttr($T04().ON_FIRE)) {
              var flag2 = false;
              var from = this.LightRadius();
              if ($T09().prototype.get_Item.call(this.attrs, $T04().ON_FIRE) > this.PhysicalObject$light_radius$value) {
                flag2 = true;
              }
              var num2 = 2;
              if ($T24().Roll(1, 3) === 3) {
                num2 = 1;
              }
              var expr_35E = (dict2 = this.attrs);
              num = $T09().prototype.get_Item.call(dict2, $T04().ON_FIRE);
              $T09().prototype.set_Item.call(expr_35E, $T04().ON_FIRE, ((num - num2) | 0));
              if ($T09().prototype.get_Item.call(this.attrs, $T04().ON_FIRE) < 0) {
                $T09().prototype.set_Item.call(this.attrs, $T04().ON_FIRE, 0);
              }
              if (flag2) {
                this.UpdateRadius(from, this.LightRadius());
              }
              if (this.HasAttr($T04().ON_FIRE)) {
                $thisType.Actor$B$value.Add("You put out some of the fire. ", JSIL.Array.New($T10(), 0));
              } else {
                $thisType.Actor$B$value.Add("You put out the fire. ", JSIL.Array.New($T10(), 0));
              }
            }
          }
        }
        if (flag) {

          for (var a$1 = list._items, i$1 = 0, l$1 = list._size; i$1 < l$1; ($temp01 = i$1, 
              i$1 = ((i$1 + 1) | 0), 
              $temp01)) {
            var current2 = a$1[i$1];
            var num3 = ((10 - $T24().Roll(this.Stealth())) | 0);
            if (num3 < 0) {
              num3 = 0;
            }
            current2.player_visibility_duration = num3;
          }
          $thisType.Actor$Q$value.Add($S0D().Construct(this, 200, $T22().MOVE));
          return true;
        }
        $thisType.Actor$B$value.Add("The way is blocked! ", JSIL.Array.New($T10(), 0));
        return false;

      default: 
      case 8: 
      case 9: 
        if (feat !== $T41().DISTRACT) {
          if (feat === $T41().DISARM_TRAP) {
            var direction = this.GetDirection("Disarm which trap? ");
            if (!((direction === -1) || !this.TileInDirection(direction).IsKnownTrap())) {
              if (this.ActorInDirection(direction) !== null) {
                $thisType.Actor$B$value.Add(("There is " + this.ActorInDirection(direction).AVisible() + " in the way. "), JSIL.Array.New($T10(), 0));
              } else {
                if (this.GrabPreventsMovement(this.TileInDirection(direction))) {
                  $thisType.Actor$B$value.Add("You can't currently reach that trap. ", JSIL.Array.New($T10(), 0));
                  this.Q0();
                  return true;
                }
                if ($T24().Roll(5) <= 4) {
                  $thisType.Actor$B$value.Add(("You disarm " + $T17().Prototype(this.TileInDirection(direction).Tile$type$value).PhysicalObject$the_name$value + ". "), JSIL.Array.New($T10(), 0));
                  this.TileInDirection(direction).Toggle(this);
                  this.Q1();
                } else if ($T24().Roll(20) <= $T06().prototype.get_Item.call(this.skills, $T07().DEFENSE)) {
                  $thisType.Actor$B$value.Add(("You almost set off " + $T17().Prototype(this.TileInDirection(direction).Tile$type$value).PhysicalObject$the_name$value + "! "), JSIL.Array.New($T10(), 0));
                  this.Q1();
                } else {
                  $thisType.Actor$B$value.Add(("You set off " + $T17().Prototype(this.TileInDirection(direction).Tile$type$value).PhysicalObject$the_name$value + "! "), JSIL.Array.New($T10(), 0));
                  this.Move(
                    this.TileInDirection(direction).get_row(), 
                    this.TileInDirection(direction).get_col()
                  );
                  this.Q1();
                }
              }
            } else {
              this.Q0();
            }
            return true;
          }
          if (feat !== $T41().LUNGE) {
            return false;
          }
          var target2 = $S2B().CallVirtual("GetTarget", null, this, 2);
          var tile2 = null;
          if (target2 !== null) {
            tile2 = $T27().Last$b1($T17())(target2);
          }
          if ((tile2 === null) || (tile2.actor() === null)) {
            return false;
          }
          var flag3 = false;
          if (!(($S0C().CallVirtual("DistanceFrom", null, this, tile2) !== 2) || 
              !target2.get_Item(1).Tile$passable$value || 
              ((target2.get_Item(1)).actor() !== null) || this.GrabPreventsMovement(target2.get_Item(1)))) {
            flag3 = true;
            $thisType.Actor$B$value.Add("You lunge! ", JSIL.Array.New($T10(), 0));
            this.Move(
              (target2.get_Item(1)).get_row(), 
              (target2.get_Item(1)).get_col()
            );
            var expr_E0 = (dict3 = this.attrs);
            num = $T09().prototype.get_Item.call(dict3, $T04().BONUS_COMBAT);
            $T09().prototype.set_Item.call(expr_E0, $T04().BONUS_COMBAT, ((num + 4) | 0));
            this.Attack(0, tile2.actor());
            var expr_10D = (dict4 = this.attrs);
            num = $T09().prototype.get_Item.call(dict4, $T04().BONUS_COMBAT);
            $T09().prototype.set_Item.call(expr_10D, $T04().BONUS_COMBAT, ((num - 4) | 0));
          }
          if (flag3) {
            this.MakeNoise();
            return true;
          }
          if (this.GrabPreventsMovement(target2.get_Item(1))) {
            $thisType.Actor$B$value.Add("You can't currently reach that spot. ", JSIL.Array.New($T10(), 0));
            return false;
          }
          $thisType.Actor$B$value.Add("The way is blocked! ", JSIL.Array.New($T10(), 0));
          return false;
        } else {
          var target3 = $S36().CallVirtual("GetTarget", null, this, 12, 3);
          var tile3 = null;
          if (target3 !== null) {
            tile3 = $T27().Last$b1($T17())(target3);
          }
          if (tile3 === null) {
            return false;
          }
          if (!tile3.Tile$passable$value) {
            tile3 = $T27().LastBeforeSolidTile(target3);
          }
          $thisType.Actor$B$value.Add("You throw a small stone. ", JSIL.Array.New($T10(), 0));

          for (var a$2 = tile3.ActorsWithinDistance(3)._items, i$2 = 0, l$2 = tile3.ActorsWithinDistance(3)._size; i$2 < l$2; ($temp02 = i$2, 
              i$2 = ((i$2 + 1) | 0), 
              $temp02)) {
            var current3 = a$2[i$2];
            if (!((current3 === this) || (current3.player_visibility_duration < 0))) {
              if (current3.HasAttr($T04().DISTRACTED)) {
                $thisType.Actor$B$value.Add(JSIL.ConcatString(current3.PhysicalObject$the_name$value, " isn't fooled. "), JSIL.Array.New($T10(), [current3]));
                current3.player_visibility_duration = 999;
              } else {
                var list2 = current3.GetPath(tile3);
                if (list2.get_Count() <= 6) {
                  current3.path = list2;
                  if ($T24().CoinFlip()) {
                    var expr_B26 = (dict5 = current3.attrs);
                    var num4 = $T09().prototype.get_Item.call(dict5, $T04().DISTRACTED);
                    $T09().prototype.set_Item.call(expr_B26, $T04().DISTRACTED, ((num4 + 1) | 0));
                  }
                }
              }
            }
          }
        }
        break;

      case 10: 
        if (this.magic_penalty >= 20) {
          $thisType.Actor$B$value.Add("Your magic reserves are empty! ", JSIL.Array.New($T10(), 0));
          return false;
        }
        this.magic_penalty = ((this.magic_penalty + 5) | 0);
        if (this.magic_penalty > 20) {
          this.magic_penalty = 20;
        }
        $thisType.Actor$B$value.Add("You drain your magic reserves. ", JSIL.Array.New($T10(), 0));
        var num5 = (($T24().Roll(((this.TotalSkill($T07().MAGIC) / 2) | 0), 6) + 25) | 0);
        if (this.HasAttr($T04().ARCANE_SHIELDED)) {
          $thisType.Actor$B$value.Add("You strengthen your arcane barrier. ", JSIL.Array.New($T10(), 0));
        } else {
          $thisType.Actor$B$value.Add("An arcane barrier surrounds you. ", JSIL.Array.New($T10(), 0));
        }
        var expr_558 = (dict6 = this.attrs);
        num = $T09().prototype.get_Item.call(dict6, $T04().ARCANE_SHIELDED);
        $T09().prototype.set_Item.call(expr_558, $T04().ARCANE_SHIELDED, ((num + num5) | 0));
        $S51().CallVirtual("KillEvents", null, $thisType.Actor$Q$value, this, $T04().ARCANE_SHIELDED);
        $thisType.Actor$Q$value.Add($S26().Construct(this, 2000, $T04().ARCANE_SHIELDED, "Your arcane shield dissolves. "));
        break;

      case 11: 

        for (var a$3 = this.ActorsWithinDistance(2)._items, i$3 = 0, l$3 = this.ActorsWithinDistance(2)._size; i$3 < l$3; ($temp03 = i$3, 
            i$3 = ((i$3 + 1) | 0), 
            $temp03)) {
          var current4 = a$3[i$3];
          if (!(!current4.HasAttr($T04().SPELL_DISRUPTION) || !current4.HasLOE(this))) {
            if (this === $thisType.Actor$player$value) {
              if (this.CanSee(current4)) {
                $thisType.Actor$B$value.Add(JSIL.ConcatString(current4.Your(), " presence prevents you from casting! "), JSIL.Array.New($T10(), 0));
              } else {
                $thisType.Actor$B$value.Add("Something prevents you from casting! ", JSIL.Array.New($T10(), 0));
              }
            }
            return false;
          }
        }
        if (this.magic_penalty >= 20) {
          $thisType.Actor$B$value.Add("Your magic reserves are empty! ", JSIL.Array.New($T10(), 0));
          return false;
        }
        var num6 = ((this.magic_penalty * 5) | 0);
        num6 = ((num6 - (($T06().prototype.get_Item.call(this.skills, $T07().SPIRIT) * 2) | 0)) | 0);
        if (num6 > 100) {
          num6 = 100;
        }
        if (num6 < 0) {
          num6 = 0;
        }
        var list3 = $S56().Construct();
        var list4 = $S18().Construct();
        var flag4 = false;

        for (var a$4 = $thisType.spells_in_order._items, i$4 = 0, l$4 = $thisType.spells_in_order._size; i$4 < l$4; ($temp04 = i$4, 
            i$4 = ((i$4 + 1) | 0), 
            $temp04)) {
          var current5 = a$4[i$4];
          if (this.HasSpell(current5)) {
            var colorstring = $S59().Construct(JSIL.ConcatString(System.String.PadRight($T42().Name(current5), 15, ' '), System.String.PadLeft(($T42().Level(current5)).toString(), 3, ' ')), $T03().Gray);
            colorstring.strings.Add($S57().Construct(JSIL.ConcatString(System.String.PadLeft((num6).toString(), 9, ' '), "%"), $S58().CallVirtual("FailColor", null, this, num6)));
            if (!(!this.HasFeat($T41().MASTERS_EDGE) || 
                !$T42().IsDamaging(current5) || flag4)) {
              flag4 = true;
              colorstring = $T59().op_Addition(colorstring, $T42().DescriptionWithIncreasedDamage(current5));
            } else {
              colorstring = $T59().op_Addition(colorstring, $T42().Description(current5));
            }
            list3.Add(colorstring);
            list4.Add(current5);
          }
        }
        if (list4.get_Count() <= 0) {
          this.Q0();
          return true;
        }
        var top_border = $S59().Construct("------------------Level---Fail rate--------Description------------", $T03().Gray);
        var bottom_border = $S5A().Construct("---Force of will fail rate: ", $T03().Gray, JSIL.ConcatString(System.String.PadLeft((num6).toString(), 3, ' '), "%"), $S58().CallVirtual("FailColor", null, this, num6), System.String.PadRight("", 37, "-"), $T03().Gray);
        var num7 = this.Select(
          "Use force of will to cast which spell? ", 
          top_border, 
          bottom_border, 
          list3, 
          false, 
          false, 
          true, 
          true, 
          $T63().Spells
        );
        if (num7 === -1) {
          this.Q0();
          return true;
        }
        if (!$S64().CallVirtual("CastSpell", null, this, list4.get_Item(num7), true)) {
          this.Q0();
          return true;
        }
        return true;

    }
    this.Q1();
    return true;
  };

  function Actor_WoundStatus () {
    var $temp00;
    if (!((this.Actor$type$value !== $T02().DREAM_CLONE) || 
        (this.group === null) || (this.group.get_Count() <= 0))) {

      for (var a$0 = this.group._items, i$0 = 0, l$0 = this.group._size; i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current = a$0[i$0];
        if (current.Actor$type$value === $T02().DREAM_WARRIOR) {
          return current.WoundStatus();
        }
      }
    }
    var num = ((((this.Actor$curhp$value * 100) | 0) / this.Actor$maxhp$value) | 0);
    if (num === 100) {
      return "(unhurt)";
    }
    if (num > 90) {
      return "(scratched)";
    }
    if (num > 70) {
      return "(slightly damaged)";
    }
    if (num > 50) {
      return "(somewhat damaged)";
    }
    if (num > 30) {
      return "(heavily damaged)";
    }
    if (num > 10) {
      return "(extremely damaged)";
    }
    if (!(!this.HasAttr($T04().UNDEAD) && !this.HasAttr($T04().CONSTRUCT))) {
      return "(almost destroyed)";
    }
    return "(almost dead)";
  };

  function Actor_YourVisible () {
    if (this.PhysicalObject$$name$value == "you") {
      return "your";
    }
    if ($thisType.Actor$player$value.CanSee(this)) {
      return JSIL.ConcatString(this.PhysicalObject$the_name$value, "'s");
    }
    return "something's";
  };

  function Actor_YouVisible$59 (s) {
    return this.YouVisible(s, false);
  };

  function Actor_YouVisible$5A (s, ends_in_es) {
    if (this.PhysicalObject$$name$value == "you") {
      return JSIL.ConcatString("you ", s);
    }
    if (ends_in_es) {
      return (this.TheVisible() + " " + s + "es");
    }
    return (this.TheVisible() + " " + s + "s");
  };

  function Actor_YouVisibleAre () {
    if (this.PhysicalObject$$name$value == "you") {
      return "you are";
    }
    if ($thisType.Actor$player$value.CanSee(this)) {
      return JSIL.ConcatString(this.PhysicalObject$the_name$value, " is");
    }
    return "something is";
  };

  JSIL.MakeClass($asm00.TypeRef("Forays.PhysicalObject"), "Forays.Actor", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], []), 
      Actor__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Type, $.Int32, 
          $.Int32
        ], []), 
      Actor__ctor$01
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.ActorType"), $.String, 
          $.Char, $asm00.TypeRef("Forays.Color"), 
          $.Int32, $.Int32, 
          $.Int32, $.Int32, 
          $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.AttrType")])
        ], []), 
      Actor__ctor$02
    );

    $.Method({Static:true , Public:false}, "$lActiveAI$gm__29", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Tile")], []), 
      Actor_$lActiveAI$gm__29
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "$lActiveAI$gm__2A", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Item")], []), 
      Actor_$lActiveAI$gm__2A
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "$lActiveAI$gm__2B", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Item")], []), 
      Actor_$lActiveAI$gm__2B
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "$lActiveAI$gm__34", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Tile")], []), 
      Actor_$lActiveAI$gm__34
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "$lIdleAI$gm__39", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Tile")], []), 
      Actor_$lIdleAI$gm__39
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "$lInputAI$gm__28", 
      new JSIL.MethodSignature($.Boolean, [$.Type], []), 
      Actor_$lInputAI$gm__28
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "$lInputHuman$gm__25", 
      new JSIL.MethodSignature($.Boolean, [$.Type], []), 
      Actor_$lInputHuman$gm__25
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "$lPlayerWalk$gm__26", 
      new JSIL.MethodSignature($.Boolean, [$.Type], []), 
      Actor_$lPlayerWalk$gm__26
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "$lPlayerWalk$gm__27", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Tile")], []), 
      Actor_$lPlayerWalk$gm__27
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "$lSeekAI$gm__38", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Tile")], []), 
      Actor_$lSeekAI$gm__38
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "ActiveAI", 
      new JSIL.MethodSignature(null, [], []), 
      Actor_ActiveAI
    );

    $.Method({Static:false, Public:true }, "AI_MoveOrOpen", 
      new JSIL.MethodSignature($.Boolean, [$.Int32], []), 
      Actor_AI_MoveOrOpen$03
    );

    $.Method({Static:false, Public:true }, "AI_MoveOrOpen", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $.Int32], []), 
      Actor_AI_MoveOrOpen$04
    );

    $.Method({Static:false, Public:true }, "AI_Sidestep", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.PhysicalObject")], []), 
      Actor_AI_Sidestep
    );

    $.Method({Static:false, Public:true }, "AI_Step", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.PhysicalObject")], []), 
      Actor_AI_Step$05
    );

    $.Method({Static:false, Public:true }, "AI_Step", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.PhysicalObject"), $.Boolean], []), 
      Actor_AI_Step$06
    );

    $.Method({Static:false, Public:true }, "AlwaysWanders", 
      new JSIL.MethodSignature($.Boolean, [], []), 
      Actor_AlwaysWanders
    );

    $.Method({Static:false, Public:true }, "AnimateBeam", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.PhysicalObject"), $asm00.TypeRef("Forays.Color"), 
          $.Char
        ], []), 
      Actor_AnimateBeam$07
    );

    $.Method({Static:false, Public:true }, "AnimateBeam", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.PhysicalObject"), $.Char, 
          $asm00.TypeRef("Forays.Color")
        ], []), 
      Actor_AnimateBeam$08
    );

    $.Method({Static:false, Public:true }, "AnimateBeam", 
      new JSIL.MethodSignature(null, [
          $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), $.Char, 
          $asm00.TypeRef("Forays.Color")
        ], []), 
      Actor_AnimateBeam$09
    );

    $.Method({Static:false, Public:true }, "AnimateBoltBeam", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.PhysicalObject"), $asm00.TypeRef("Forays.Color")], []), 
      Actor_AnimateBoltBeam$0A
    );

    $.Method({Static:false, Public:true }, "AnimateBoltBeam", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), $asm00.TypeRef("Forays.Color")], []), 
      Actor_AnimateBoltBeam$0B
    );

    $.Method({Static:false, Public:true }, "AnimateBoltProjectile", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.PhysicalObject"), $asm00.TypeRef("Forays.Color")], []), 
      Actor_AnimateBoltProjectile$0C
    );

    $.Method({Static:false, Public:true }, "AnimateBoltProjectile", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), $asm00.TypeRef("Forays.Color")], []), 
      Actor_AnimateBoltProjectile$0D
    );

    $.Method({Static:false, Public:true }, "AnimateExplosion", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.PhysicalObject"), $.Int32, 
          $asm00.TypeRef("Forays.Color"), $.Char
        ], []), 
      Actor_AnimateExplosion$0E
    );

    $.Method({Static:false, Public:true }, "AnimateExplosion", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.PhysicalObject"), $.Int32, 
          $.Char, $asm00.TypeRef("Forays.Color")
        ], []), 
      Actor_AnimateExplosion$0F
    );

    $.Method({Static:false, Public:true }, "AnimateMapCell", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.PhysicalObject"), $asm00.TypeRef("Forays.Color"), 
          $.Char
        ], []), 
      Actor_AnimateMapCell$10
    );

    $.Method({Static:false, Public:true }, "AnimateMapCell", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.PhysicalObject"), $.Char, 
          $asm00.TypeRef("Forays.Color")
        ], []), 
      Actor_AnimateMapCell$11
    );

    $.Method({Static:false, Public:true }, "AnimateProjectile", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.PhysicalObject"), $asm00.TypeRef("Forays.Color"), 
          $.Char
        ], []), 
      Actor_AnimateProjectile$12
    );

    $.Method({Static:false, Public:true }, "AnimateProjectile", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.PhysicalObject"), $.Char, 
          $asm00.TypeRef("Forays.Color")
        ], []), 
      Actor_AnimateProjectile$13
    );

    $.Method({Static:false, Public:true }, "AnimateProjectile", 
      new JSIL.MethodSignature(null, [
          $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), $.Char, 
          $asm00.TypeRef("Forays.Color")
        ], []), 
      Actor_AnimateProjectile$14
    );

    $.Method({Static:false, Public:true }, "AnimateStorm", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32, $.Char, 
          $asm00.TypeRef("Forays.Color")
        ], []), 
      Actor_AnimateStorm
    );

    $.Method({Static:false, Public:true }, "ArmorClass", 
      new JSIL.MethodSignature($.Int32, [], []), 
      Actor_ArmorClass
    );

    $.Method({Static:false, Public:true }, "Attack", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $.Type], []), 
      Actor_Attack
    );

    $.Method({Static:false, Public:true , Virtual:true }, "AVisible", 
      new JSIL.MethodSignature($.String, [], []), 
      Actor_AVisible
    );

    $.Method({Static:false, Public:true }, "CalculateDimming", 
      new JSIL.MethodSignature(null, [], []), 
      Actor_CalculateDimming
    );

    $.Method({Static:false, Public:true }, "CanSee", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $.Int32], []), 
      Actor_CanSee$15
    );

    $.Method({Static:false, Public:true }, "CanSee", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.PhysicalObject")], []), 
      Actor_CanSee$16
    );

    $.Method({Static:false, Public:true }, "CanWander", 
      new JSIL.MethodSignature($.Boolean, [], []), 
      Actor_CanWander
    );

    $.Method({Static:false, Public:true }, "CastRandomSpell", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.PhysicalObject"), $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.SpellType")])], []), 
      Actor_CastRandomSpell
    );

    $.Method({Static:false, Public:true }, "CastSpell", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.SpellType")], []), 
      Actor_CastSpell$17
    );

    $.Method({Static:false, Public:true }, "CastSpell", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.SpellType"), $.Boolean], []), 
      Actor_CastSpell$18
    );

    $.Method({Static:false, Public:true }, "CastSpell", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.SpellType"), $asm00.TypeRef("Forays.PhysicalObject")], []), 
      Actor_CastSpell$19
    );

    $.Method({Static:false, Public:true }, "CastSpell", 
      new JSIL.MethodSignature($.Boolean, [
          $asm00.TypeRef("Forays.SpellType"), $asm00.TypeRef("Forays.PhysicalObject"), 
          $.Boolean
        ], []), 
      Actor_CastSpell$1A
    );

    $.Method({Static:true , Public:true }, "ConvertInput", 
      new JSIL.MethodSignature($.Char, [$asm01.TypeRef("System.ConsoleKeyInfo")], []), 
      Actor_ConvertInput
    );

    $.Method({Static:true , Public:true }, "ConvertVIKeys", 
      new JSIL.MethodSignature($.Char, [$.Char], []), 
      Actor_ConvertVIKeys
    );

    $.Method({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [
          $asm00.TypeRef("Forays.ActorType"), $.Int32, 
          $.Int32
        ], []), 
      Actor_Create$1B
    );

    $.Method({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [
          $asm00.TypeRef("Forays.ActorType"), $.Int32, 
          $.Int32, $.Boolean, 
          $.Boolean
        ], []), 
      Actor_Create$1C
    );

    $.Method({Static:true , Public:true }, "CreatePhantom", 
      new JSIL.MethodSignature($.Type, [$.Int32, $.Int32], []), 
      Actor_CreatePhantom
    );

    $.Method({Static:true , Public:false}, "Define", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.ActorType"), $.String, 
          $.Char, $asm00.TypeRef("Forays.Color"), 
          $.Int32, $.Int32, 
          $.Int32, $.Int32, 
          $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.AttrType")])
        ], []), 
      Actor_Define
    );

    $.Method({Static:false, Public:true }, "DisplayCharacterInfo", 
      new JSIL.MethodSignature(null, [], []), 
      Actor_DisplayCharacterInfo$1D
    );

    $.Method({Static:false, Public:true }, "DisplayCharacterInfo", 
      new JSIL.MethodSignature(null, [$.Boolean], []), 
      Actor_DisplayCharacterInfo$1E
    );

    $.Method({Static:false, Public:true }, "DisplayEquipment", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Int32]), [], []), 
      Actor_DisplayEquipment
    );

    $.Method({Static:false, Public:true }, "DisplayStats", 
      new JSIL.MethodSignature(null, [], []), 
      Actor_DisplayStats$1F
    );

    $.Method({Static:false, Public:true }, "DisplayStats", 
      new JSIL.MethodSignature(null, [$.Boolean], []), 
      Actor_DisplayStats$20
    );

    $.Method({Static:false, Public:true }, "DurationOfMagicalEffect", 
      new JSIL.MethodSignature($.Int32, [$.Int32], []), 
      Actor_DurationOfMagicalEffect
    );

    $.Method({Static:false, Public:true }, "EnemiesAdjacent", 
      new JSIL.MethodSignature($.Int32, [], []), 
      Actor_EnemiesAdjacent
    );

    $.Method({Static:false, Public:true }, "FailColor", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Color"), [$asm00.TypeRef("Forays.SpellType")], []), 
      Actor_FailColor$21
    );

    $.Method({Static:false, Public:true }, "FailColor", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Color"), [$.Int32], []), 
      Actor_FailColor$22
    );

    $.Method({Static:false, Public:true }, "FailRate", 
      new JSIL.MethodSignature($.Int32, [$asm00.TypeRef("Forays.SpellType")], []), 
      Actor_FailRate
    );

    $.Method({Static:false, Public:true }, "FindAutoexplorePath", 
      new JSIL.MethodSignature($.Boolean, [], []), 
      Actor_FindAutoexplorePath
    );

    $.Method({Static:false, Public:true }, "FindPath", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.PhysicalObject")], []), 
      Actor_FindPath$23
    );

    $.Method({Static:false, Public:true }, "FindPath", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.PhysicalObject"), $.Int32], []), 
      Actor_FindPath$24
    );

    $.Method({Static:false, Public:true }, "FindPath", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.PhysicalObject"), $.Int32, 
          $.Boolean
        ], []), 
      Actor_FindPath$25
    );

    $.Method({Static:false, Public:true }, "FindPath", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32], []), 
      Actor_FindPath$26
    );

    $.Method({Static:false, Public:true }, "FindPath", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32
        ], []), 
      Actor_FindPath$27
    );

    $.Method({Static:false, Public:true }, "FindPath", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32, $.Boolean
        ], []), 
      Actor_FindPath$28
    );

    $.Method({Static:false, Public:true }, "FireArrow", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.PhysicalObject")], []), 
      Actor_FireArrow$29
    );

    $.Method({Static:false, Public:true }, "FireArrow", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")])], []), 
      Actor_FireArrow$2A
    );

    $.Method({Static:false, Public:true }, "GainAttr", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.AttrType"), $.Int32], []), 
      Actor_GainAttr$2B
    );

    $.Method({Static:false, Public:true }, "GainAttr", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.AttrType"), $.Int32, 
          $.Int32
        ], []), 
      Actor_GainAttr$2C
    );

    $.Method({Static:false, Public:true }, "GainAttr", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.AttrType"), $.Int32, 
          $.String, $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.PhysicalObject")])
        ], []), 
      Actor_GainAttr$2D
    );

    $.Method({Static:false, Public:true }, "GainAttr", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.AttrType"), $.Int32, 
          $.Int32, $.String, 
          $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.PhysicalObject")])
        ], []), 
      Actor_GainAttr$2E
    );

    $.Method({Static:false, Public:true }, "GainAttrRefreshDuration", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.AttrType"), $.Int32], []), 
      Actor_GainAttrRefreshDuration$2F
    );

    $.Method({Static:false, Public:true }, "GainAttrRefreshDuration", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Forays.AttrType"), $.Int32, 
          $.String, $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.PhysicalObject")])
        ], []), 
      Actor_GainAttrRefreshDuration$30
    );

    $.Method({Static:false, Public:true }, "GainSpell", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.SpellType")])], []), 
      Actor_GainSpell
    );

    $.Method({Static:true , Public:true }, "get_B", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Buffer"), [], []), 
      Actor_get_B
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_curhp", 
      new JSIL.MethodSignature($.Int32, [], []), 
      Actor_get_curhp
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_F", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.SpellType")]), [], []), 
      Actor_get_F
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_inv", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Item")]), [], []), 
      Actor_get_inv
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_level", 
      new JSIL.MethodSignature($.Int32, [], []), 
      Actor_get_level
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_maxhp", 
      new JSIL.MethodSignature($.Int32, [], []), 
      Actor_get_maxhp
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:true }, "get_player", 
      new JSIL.MethodSignature($.Type, [], []), 
      Actor_get_player
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:true }, "get_Q", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Queue"), [], []), 
      Actor_get_Q
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_speed", 
      new JSIL.MethodSignature($.Int32, [], []), 
      Actor_get_speed
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_target", 
      new JSIL.MethodSignature($.Type, [], []), 
      Actor_get_target
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_type", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.ActorType"), [], []), 
      Actor_get_type
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "GetDirection", 
      new JSIL.MethodSignature($.Int32, [], []), 
      Actor_GetDirection$31
    );

    $.Method({Static:false, Public:true }, "GetDirection", 
      new JSIL.MethodSignature($.Int32, [$.Boolean, $.Boolean], []), 
      Actor_GetDirection$32
    );

    $.Method({Static:false, Public:true }, "GetDirection", 
      new JSIL.MethodSignature($.Int32, [$.String], []), 
      Actor_GetDirection$33
    );

    $.Method({Static:false, Public:true }, "GetDirection", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Boolean, 
          $.Boolean
        ], []), 
      Actor_GetDirection$34
    );

    $.Method({Static:false, Public:true }, "GetKnockedBack", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.PhysicalObject")], []), 
      Actor_GetKnockedBack$35
    );

    $.Method({Static:false, Public:true }, "GetKnockedBack", 
      new JSIL.MethodSignature($.Boolean, [$asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")])], []), 
      Actor_GetKnockedBack$36
    );

    $.Method({Static:false, Public:true }, "GetPath", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.pos")]), [$asm00.TypeRef("Forays.PhysicalObject")], []), 
      Actor_GetPath$37
    );

    $.Method({Static:false, Public:true }, "GetPath", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.pos")]), [$asm00.TypeRef("Forays.PhysicalObject"), $.Int32], []), 
      Actor_GetPath$38
    );

    $.Method({Static:false, Public:true }, "GetPath", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.pos")]), [
          $asm00.TypeRef("Forays.PhysicalObject"), $.Int32, 
          $.Boolean
        ], []), 
      Actor_GetPath$39
    );

    $.Method({Static:false, Public:true }, "GetPath", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.pos")]), [$.Int32, $.Int32], []), 
      Actor_GetPath$3A
    );

    $.Method({Static:false, Public:true }, "GetPath", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.pos")]), [
          $.Int32, $.Int32, 
          $.Int32
        ], []), 
      Actor_GetPath$3B
    );

    $.Method({Static:false, Public:true }, "GetPath", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.pos")]), [
          $.Int32, $.Int32, 
          $.Int32, $.Boolean
        ], []), 
      Actor_GetPath$3C
    );

    $.Method({Static:false, Public:true }, "GetSelection", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $.Boolean, $.Boolean, 
          $.Boolean
        ], []), 
      Actor_GetSelection
    );

    $.Method({Static:false, Public:true }, "GetTarget", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), [], []), 
      Actor_GetTarget$3D
    );

    $.Method({Static:false, Public:true }, "GetTarget", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), [$.Boolean], []), 
      Actor_GetTarget$3E
    );

    $.Method({Static:false, Public:true }, "GetTarget", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), [$.Int32], []), 
      Actor_GetTarget$3F
    );

    $.Method({Static:false, Public:true }, "GetTarget", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), [$.Int32, $.Int32], []), 
      Actor_GetTarget$40
    );

    $.Method({Static:false, Public:true }, "GetTarget", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), [$.Boolean, $.Int32], []), 
      Actor_GetTarget$41
    );

    $.Method({Static:false, Public:true }, "GetTarget", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), [
          $.Boolean, $.Int32, 
          $.Boolean
        ], []), 
      Actor_GetTarget$42
    );

    $.Method({Static:false, Public:true }, "GetTarget", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Tile")]), [
          $.Boolean, $.Int32, 
          $.Boolean, $.Int32
        ], []), 
      Actor_GetTarget$43
    );

    $.Method({Static:false, Public:true }, "GrabPreventsMovement", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.PhysicalObject")], []), 
      Actor_GrabPreventsMovement
    );

    $.Method({Static:false, Public:true }, "HasAttr", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.AttrType")], []), 
      Actor_HasAttr
    );

    $.Method({Static:false, Public:true }, "HasFeat", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.FeatType")], []), 
      Actor_HasFeat
    );

    $.Method({Static:false, Public:true }, "HasSpell", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.SpellType")], []), 
      Actor_HasSpell
    );

    $.Method({Static:false, Public:true }, "IdleAI", 
      new JSIL.MethodSignature(null, [], []), 
      Actor_IdleAI
    );

    $.Method({Static:false, Public:true }, "IncreaseSkill", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.SkillType")], []), 
      Actor_IncreaseSkill
    );

    $.Method({Static:false, Public:true }, "Input", 
      new JSIL.MethodSignature(null, [], []), 
      Actor_Input
    );

    $.Method({Static:false, Public:true }, "InputAI", 
      new JSIL.MethodSignature(null, [], []), 
      Actor_InputAI
    );

    $.Method({Static:false, Public:true }, "InputHuman", 
      new JSIL.MethodSignature(null, [], []), 
      Actor_InputHuman
    );

    $.Method({Static:false, Public:true }, "Interrupt", 
      new JSIL.MethodSignature(null, [], []), 
      Actor_Interrupt
    );

    $.Method({Static:false, Public:true }, "InventoryCount", 
      new JSIL.MethodSignature($.Int32, [], []), 
      Actor_InventoryCount
    );

    $.Method({Static:false, Public:true }, "InventoryList", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$.String]), [], []), 
      Actor_InventoryList
    );

    $.Method({Static:false, Public:true }, "IsHiddenFrom", 
      new JSIL.MethodSignature($.Boolean, [$.Type], []), 
      Actor_IsHiddenFrom
    );

    $.Method({Static:false, Public:true }, "IsHit", 
      new JSIL.MethodSignature($.Boolean, [$.Int32], []), 
      Actor_IsHit
    );

    $.Method({Static:false, Public:true }, "IsWithinSightRangeOf", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.PhysicalObject")], []), 
      Actor_IsWithinSightRangeOf$44
    );

    $.Method({Static:false, Public:true }, "IsWithinSightRangeOf", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $.Int32], []), 
      Actor_IsWithinSightRangeOf$45
    );

    $.Method({Static:false, Public:true }, "LightRadius", 
      new JSIL.MethodSignature($.Int32, [], []), 
      Actor_LightRadius
    );

    $.Method({Static:false, Public:true }, "MakeNoise", 
      new JSIL.MethodSignature(null, [], []), 
      Actor_MakeNoise
    );

    $.Method({Static:true , Public:true }, "MonsterDescriptionBox", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.colorstring")]), [$asm00.TypeRef("Forays.ActorType"), $.Int32], []), 
      Actor_MonsterDescriptionBox
    );

    $.Method({Static:true , Public:true }, "MonsterDescriptionText", 
      new JSIL.MethodSignature($.String, [$asm00.TypeRef("Forays.ActorType")], []), 
      Actor_MonsterDescriptionText
    );

    $.Method({Static:false, Public:true }, "Move", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32], []), 
      Actor_Move$46
    );

    $.Method({Static:false, Public:true }, "Move", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Boolean
        ], []), 
      Actor_Move$47
    );

    $.Method({Static:false, Public:true }, "PathStep", 
      new JSIL.MethodSignature($.Boolean, [], []), 
      Actor_PathStep$48
    );

    $.Method({Static:false, Public:true }, "PathStep", 
      new JSIL.MethodSignature($.Boolean, [$.Boolean], []), 
      Actor_PathStep$49
    );

    $.Method({Static:false, Public:true }, "PlayerWalk", 
      new JSIL.MethodSignature(null, [$.Int32], []), 
      Actor_PlayerWalk
    );

    $.Method({Static:true , Public:true }, "Prototype", 
      new JSIL.MethodSignature($.Type, [$asm00.TypeRef("Forays.ActorType")], []), 
      Actor_Prototype
    );

    $.Method({Static:false, Public:true }, "Q0", 
      new JSIL.MethodSignature(null, [], []), 
      Actor_Q0
    );

    $.Method({Static:false, Public:true }, "Q1", 
      new JSIL.MethodSignature(null, [], []), 
      Actor_Q1
    );

    $.Method({Static:false, Public:true }, "QS", 
      new JSIL.MethodSignature(null, [], []), 
      Actor_QS
    );

    $.Method({Static:false, Public:true }, "RemoveTarget", 
      new JSIL.MethodSignature(null, [$.Type], []), 
      Actor_RemoveTarget
    );

    $.Method({Static:false, Public:true }, "ResetForNewLevel", 
      new JSIL.MethodSignature(null, [], []), 
      Actor_ResetForNewLevel
    );

    $.Method({Static:false, Public:true }, "ResetSpells", 
      new JSIL.MethodSignature(null, [], []), 
      Actor_ResetSpells
    );

    $.Method({Static:false, Public:true }, "SeekAI", 
      new JSIL.MethodSignature(null, [], []), 
      Actor_SeekAI
    );

    $.Method({Static:false, Public:true }, "Select", 
      new JSIL.MethodSignature($.Int32, [$.String, $asm01.TypeRef("System.Collections.Generic.List`1", [$.String])], []), 
      Actor_Select$4A
    );

    $.Method({Static:false, Public:true }, "Select", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $asm01.TypeRef("System.Collections.Generic.List`1", [$.String]), 
          $.Boolean, $.Boolean, 
          $.Boolean
        ], []), 
      Actor_Select$4B
    );

    $.Method({Static:false, Public:true }, "Select", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $asm01.TypeRef("System.Collections.Generic.List`1", [$.String])
        ], []), 
      Actor_Select$4C
    );

    $.Method({Static:false, Public:true }, "Select", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $asm01.TypeRef("System.Collections.Generic.List`1", [$.String]), $.Boolean, 
          $.Boolean, $.Boolean
        ], []), 
      Actor_Select$4D
    );

    $.Method({Static:false, Public:true }, "Select", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $.String, $asm01.TypeRef("System.Collections.Generic.List`1", [$.String])
        ], []), 
      Actor_Select$4E
    );

    $.Method({Static:false, Public:true }, "Select", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $.String, $asm01.TypeRef("System.Collections.Generic.List`1", [$.String]), 
          $.Boolean, $.Boolean, 
          $.Boolean
        ], []), 
      Actor_Select$4F
    );

    $.Method({Static:false, Public:true }, "Select", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $asm00.TypeRef("Forays.colorstring"), 
          $asm00.TypeRef("Forays.colorstring"), $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.colorstring")]), 
          $.Boolean, $.Boolean, 
          $.Boolean, $.Boolean, 
          $asm00.TypeRef("Forays.HelpTopic")
        ], []), 
      Actor_Select$50
    );

    $.Method({Static:true , Public:true }, "set_B", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.Buffer")], []), 
      Actor_set_B
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_curhp", 
      new JSIL.MethodSignature(null, [$.Int32], []), 
      Actor_set_curhp
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_F", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.SpellType")])], []), 
      Actor_set_F
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_inv", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Item")])], []), 
      Actor_set_inv
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_level", 
      new JSIL.MethodSignature(null, [$.Int32], []), 
      Actor_set_level
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_maxhp", 
      new JSIL.MethodSignature(null, [$.Int32], []), 
      Actor_set_maxhp
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:true }, "set_player", 
      new JSIL.MethodSignature(null, [$.Type], []), 
      Actor_set_player
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:true }, "set_Q", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.Queue")], []), 
      Actor_set_Q
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_speed", 
      new JSIL.MethodSignature(null, [$.Int32], []), 
      Actor_set_speed
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_target", 
      new JSIL.MethodSignature(null, [$.Type], []), 
      Actor_set_target
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_type", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.ActorType")], []), 
      Actor_set_type
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "SightRange", 
      new JSIL.MethodSignature($.Int32, [], []), 
      Actor_SightRange
    );

    $.Method({Static:false, Public:true }, "Stealth", 
      new JSIL.MethodSignature($.Int32, [], []), 
      Actor_Stealth$51
    );

    $.Method({Static:false, Public:true }, "Stealth", 
      new JSIL.MethodSignature($.Int32, [$.Int32, $.Int32], []), 
      Actor_Stealth$52
    );

    $.Method({Static:false, Public:true }, "StunnedThisTurn", 
      new JSIL.MethodSignature($.Boolean, [], []), 
      Actor_StunnedThisTurn
    );

    $.Method({Static:false, Public:true }, "TakeDamage", 
      new JSIL.MethodSignature($.Boolean, [
          $asm00.TypeRef("Forays.DamageType"), $asm00.TypeRef("Forays.DamageClass"), 
          $.Int32, $.Type
        ], []), 
      Actor_TakeDamage$53
    );

    $.Method({Static:false, Public:true }, "TakeDamage", 
      new JSIL.MethodSignature($.Boolean, [
          $asm00.TypeRef("Forays.DamageType"), $asm00.TypeRef("Forays.DamageClass"), 
          $.Int32, $.Type, 
          $.String
        ], []), 
      Actor_TakeDamage$54
    );

    $.Method({Static:false, Public:true }, "TakeDamage", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Damage"), $.String], []), 
      Actor_TakeDamage$55
    );

    $.Method({Static:false, Public:true , Virtual:true }, "TheVisible", 
      new JSIL.MethodSignature($.String, [], []), 
      Actor_TheVisible
    );

    $.Method({Static:false, Public:true , Virtual:true }, "toString", 
      new JSIL.MethodSignature($.String, [], []), 
      Actor_toString
    );

    $.Method({Static:false, Public:true }, "TotalSkill", 
      new JSIL.MethodSignature($.Int32, [$asm00.TypeRef("Forays.SkillType")], []), 
      Actor_TotalSkill
    );

    $.Method({Static:false, Public:true }, "UpdateOnEquip", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.WeaponType"), $asm00.TypeRef("Forays.WeaponType")], []), 
      Actor_UpdateOnEquip$56
    );

    $.Method({Static:false, Public:true }, "UpdateOnEquip", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.ArmorType"), $asm00.TypeRef("Forays.ArmorType")], []), 
      Actor_UpdateOnEquip$57
    );

    $.Method({Static:false, Public:true }, "UpdateOnEquip", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.MagicItemType"), $asm00.TypeRef("Forays.MagicItemType")], []), 
      Actor_UpdateOnEquip$58
    );

    $.Method({Static:false, Public:true }, "UseFeat", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.FeatType")], []), 
      Actor_UseFeat
    );

    $.Method({Static:false, Public:true }, "WoundStatus", 
      new JSIL.MethodSignature($.String, [], []), 
      Actor_WoundStatus
    );

    $.Method({Static:false, Public:true }, "YourVisible", 
      new JSIL.MethodSignature($.String, [], []), 
      Actor_YourVisible
    );

    $.Method({Static:false, Public:true , Virtual:true }, "YouVisible", 
      new JSIL.MethodSignature($.String, [$.String], []), 
      Actor_YouVisible$59
    );

    $.Method({Static:false, Public:true , Virtual:true }, "YouVisible", 
      new JSIL.MethodSignature($.String, [$.String, $.Boolean], []), 
      Actor_YouVisible$5A
    );

    $.Method({Static:false, Public:true }, "YouVisibleAre", 
      new JSIL.MethodSignature($.String, [], []), 
      Actor_YouVisibleAre
    );

    $.Constant({Static:true , Public:false}, "ROWS", 22); 
    $.Constant({Static:true , Public:false}, "COLS", 66); 
    $.Field({Static:false, Public:true }, "attrs", $asm00.TypeRef("Forays.Dict`2", [$asm00.TypeRef("Forays.AttrType"), $.Int32])); 
    $.Field({Static:false, Public:true }, "skills", $asm00.TypeRef("Forays.Dict`2", [$asm00.TypeRef("Forays.SkillType"), $.Int32])); 
    $.Field({Static:false, Public:true }, "feats", $asm00.TypeRef("Forays.Dict`2", [$asm00.TypeRef("Forays.FeatType"), $.Int32])); 
    $.Field({Static:false, Public:true }, "spells", $asm00.TypeRef("Forays.Dict`2", [$asm00.TypeRef("Forays.SpellType"), $.Int32])); 
    $.Field({Static:false, Public:true }, "magic_penalty", $.Int32); 
    $.Field({Static:false, Public:true }, "time_of_last_action", $.Int32); 
    $.Field({Static:false, Public:true }, "recover_time", $.Int32); 
    $.Field({Static:false, Public:true }, "path", $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.pos")])); 
    $.Field({Static:false, Public:true }, "target_location", $asm00.TypeRef("Forays.Tile")); 
    $.Field({Static:false, Public:true }, "player_visibility_duration", $.Int32); 
    $.Field({Static:false, Public:true }, "group", $asm01.TypeRef("System.Collections.Generic.List`1", [$.Type])); 
    $.Field({Static:false, Public:true }, "weapons", $asm02.TypeRef("System.Collections.Generic.LinkedList`1", [$asm00.TypeRef("Forays.WeaponType")])); 
    $.Field({Static:false, Public:true }, "armors", $asm02.TypeRef("System.Collections.Generic.LinkedList`1", [$asm00.TypeRef("Forays.ArmorType")])); 
    $.Field({Static:false, Public:true }, "magic_items", $asm02.TypeRef("System.Collections.Generic.LinkedList`1", [$asm00.TypeRef("Forays.MagicItemType")])); 
    $.Field({Static:true , Public:true }, "player_name", $.String); 
    $.Field({Static:true , Public:true }, "feats_in_order", $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.FeatType")]), null); 
    $.Field({Static:true , Public:true }, "partial_feats_in_order", $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.FeatType")]), null); 
    $.Field({Static:true , Public:true }, "spells_in_order", $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.SpellType")]), null); 
    $.Field({Static:true , Public:true }, "tiebreakers", $asm01.TypeRef("System.Collections.Generic.List`1", [$.Type]), null); 
    $.Field({Static:true , Public:true }, "attack", $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.AttackInfo")]), function ($pi) {
        return JSIL.Array.New($asm00.Forays.AttackInfo, 20);
      }); 
    $.Field({Static:true , Public:false}, "proto", $asm00.TypeRef("Forays.Dict`2", [$asm00.TypeRef("Forays.ActorType"), $.Type])); 
    $.Field({Static:false, Public:false}, "Actor$type$value", $asm00.TypeRef("Forays.ActorType"))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:false, Public:false}, "Actor$maxhp$value", $.Int32)
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:false, Public:false}, "Actor$curhp$value", $.Int32)
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:false, Public:false}, "Actor$speed$value", $.Int32)
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:false, Public:false}, "Actor$level$value", $.Int32)
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:false, Public:false}, "Actor$target$value", $.Type)
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:false, Public:false}, "Actor$inv$value", $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Item")]))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:false, Public:false}, "Actor$F$value", $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.SpellType")]))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "Actor$Q$value", $asm00.TypeRef("Forays.Queue"))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "Actor$B$value", $asm00.TypeRef("Forays.Buffer"))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "Actor$player$value", $.Type)
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "$am", $asm00.TypeRef("Forays.Extensions/BooleanDelegate`1", [$asm00.TypeRef("Forays.Tile")]))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "$am", $asm00.TypeRef("Forays.Extensions/BooleanDelegate`1", [$.Type]))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "$am", $asm00.TypeRef("Forays.Extensions/BooleanDelegate`1", [$asm00.TypeRef("Forays.Tile")]))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "$am", $asm00.TypeRef("Forays.Extensions/BooleanDelegate`1", [$asm00.TypeRef("Forays.Item")]))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "$am", $asm00.TypeRef("Forays.Extensions/BooleanDelegate`1", [$asm00.TypeRef("Forays.Item")]))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "$am", $asm00.TypeRef("Forays.Extensions/BooleanDelegate`1", [$asm00.TypeRef("Forays.Tile")]))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "$am", $asm00.TypeRef("Forays.Extensions/BooleanDelegate`1", [$asm00.TypeRef("Forays.Tile")]))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:true , Public:false}, "$am", $asm00.TypeRef("Forays.Extensions/BooleanDelegate`1", [$asm00.TypeRef("Forays.Tile")]))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    function Actor__cctor () {
      $thisType.feats_in_order = null;
      $thisType.partial_feats_in_order = null;
      $thisType.spells_in_order = null;
      $thisType.tiebreakers = null;
      $thisType.attack = JSIL.Array.New($T00(), 20);
      $thisType.proto = $S00().Construct();
      $thisType.Define(
        $T02().RAT, 
        "rat", 
        "r", 
        $T03().DarkGray, 
        15, 
        90, 
        1, 
        0, 
        JSIL.Array.New($T04(), [$T04().LOW_LIGHT_VISION, $T04().SMALL, $T04().KEEN_SENSES])
      );
      $thisType.Define(
        $T02().GOBLIN, 
        "goblin", 
        "g", 
        $T03().Green, 
        25, 
        100, 
        1, 
        0, 
        JSIL.Array.New($T04(), [$T04().HUMANOID_INTELLIGENCE, $T04().MEDIUM_HUMANOID, $T04().LOW_LIGHT_VISION])
      );
      $thisType.Define(
        $T02().LARGE_BAT, 
        "large bat", 
        "b", 
        $T03().DarkGray, 
        20, 
        60, 
        1, 
        0, 
        JSIL.Array.New($T04(), [$T04().DARKVISION, $T04().FLYING, $T04().SMALL, $T04().KEEN_SENSES, $T04().BLINDSIGHT])
      );
      $thisType.Define(
        $T02().WOLF, 
        "wolf", 
        "c", 
        $T03().DarkYellow, 
        25, 
        50, 
        1, 
        0, 
        JSIL.Array.New($T04(), [$T04().LOW_LIGHT_VISION, $T04().KEEN_SENSES])
      );
      $thisType.Define(
        $T02().SKELETON, 
        "skeleton", 
        "s", 
        $T03().White, 
        30, 
        100, 
        1, 
        0, 
        JSIL.Array.New($T04(), [$T04().UNDEAD, $T04().RESIST_SLASH, $T04().RESIST_PIERCE, $T04().RESIST_FIRE, $T04().RESIST_COLD, $T04().RESIST_ELECTRICITY, $T04().DARKVISION])
      );
      $thisType.Define(
        $T02().BLOOD_MOTH, 
        "blood moth", 
        "i", 
        $T03().Red, 
        25, 
        100, 
        1, 
        0, 
        JSIL.Array.New($T04(), [$T04().FLYING])
      );
      $thisType.Define(
        $T02().SWORDSMAN, 
        "swordsman", 
        "p", 
        $T03().White, 
        35, 
        100, 
        2, 
        0, 
        JSIL.Array.New($T04(), [$T04().HUMANOID_INTELLIGENCE, $T04().MEDIUM_HUMANOID])
      );
      $thisType.Define(
        $T02().DARKNESS_DWELLER, 
        "darkness dweller", 
        "h", 
        $T03().DarkGreen, 
        45, 
        100, 
        2, 
        0, 
        JSIL.Array.New($T04(), [$T04().HUMANOID_INTELLIGENCE, $T04().MEDIUM_HUMANOID, $T04().DARKVISION])
      );
      $thisType.Define(
        $T02().CARNIVOROUS_BRAMBLE, 
        "carnivorous bramble", 
        "B", 
        $T03().DarkYellow, 
        35, 
        100, 
        2, 
        0, 
        JSIL.Array.New($T04(), [$T04().PLANTLIKE, $T04().NEVER_MOVES, $T04().BLINDSIGHT])
      );
      $thisType.Define(
        $T02().FROSTLING, 
        "frostling", 
        "E", 
        $T03().Gray, 
        35, 
        100, 
        2, 
        0, 
        JSIL.Array.New($T04(), [$T04().IMMUNE_COLD, $T04().COLD_HIT])
      );
      $thisType.Define(
        $T02().DREAM_WARRIOR, 
        "dream warrior", 
        "p", 
        $T03().Cyan, 
        40, 
        100, 
        2, 
        0, 
        JSIL.Array.New($T04(), [$T04().HUMANOID_INTELLIGENCE, $T04().MEDIUM_HUMANOID, $T04().LOW_LIGHT_VISION])
      );
      $thisType.Define(
        $T02().DREAM_CLONE, 
        "dream warrior", 
        "p", 
        $T03().Cyan, 
        1, 
        100, 
        0, 
        0, 
        JSIL.Array.New($T04(), [$T04().HUMANOID_INTELLIGENCE, $T04().MEDIUM_HUMANOID, $T04().CONSTRUCT, $T04().LOW_LIGHT_VISION])
      );
      $thisType.Define(
        $T02().CULTIST, 
        "cultist", 
        "p", 
        $T03().DarkRed, 
        35, 
        100, 
        3, 
        0, 
        JSIL.Array.New($T04(), [$T04().HUMANOID_INTELLIGENCE, $T04().MEDIUM_HUMANOID, $T04().SMALL_GROUP])
      );
      $thisType.Define(
        $T02().GOBLIN_ARCHER, 
        "goblin archer", 
        "g", 
        $T03().DarkCyan, 
        25, 
        100, 
        3, 
        0, 
        JSIL.Array.New($T04(), [$T04().HUMANOID_INTELLIGENCE, $T04().MEDIUM_HUMANOID, $T04().LOW_LIGHT_VISION])
      );
      $thisType.Define(
        $T02().GOBLIN_SHAMAN, 
        "goblin shaman", 
        "g", 
        $T03().Magenta, 
        25, 
        100, 
        3, 
        0, 
        JSIL.Array.New($T04(), [$T04().HUMANOID_INTELLIGENCE, $T04().MEDIUM_HUMANOID, $T04().LOW_LIGHT_VISION])
      );
      $thisType.Prototype($T02().GOBLIN_SHAMAN).GainSpell(JSIL.Array.New($T05(), [$T05().FORCE_PALM, $T05().IMMOLATE, $T05().SCORCH]));
      $T06().prototype.set_Item.call($thisType.Prototype($T02().GOBLIN_SHAMAN).skills, $T07().MAGIC, 4);
      $thisType.Define(
        $T02().MIMIC, 
        "mimic", 
        "m", 
        $T03().White, 
        30, 
        200, 
        3, 
        0, 
        JSIL.Array.New($T04(), [$T04().GRAB_HIT])
      );
      $thisType.Define(
        $T02().SKULKING_KILLER, 
        "skulking killer", 
        "p", 
        $T03().DarkBlue, 
        35, 
        100, 
        3, 
        0, 
        JSIL.Array.New($T04(), [$T04().HUMANOID_INTELLIGENCE, $T04().MEDIUM_HUMANOID, $T04().STEALTHY, $T04().LOW_LIGHT_VISION])
      );
      $T06().prototype.set_Item.call($thisType.Prototype($T02().SKULKING_KILLER).skills, $T07().STEALTH, 4);
      $thisType.Define(
        $T02().ZOMBIE, 
        "zombie", 
        "z", 
        $T03().DarkGray, 
        50, 
        150, 
        4, 
        0, 
        JSIL.Array.New($T04(), [$T04().UNDEAD, $T04().MEDIUM_HUMANOID, $T04().RESIST_NECK_SNAP, $T04().RESIST_PIERCE, $T04().RESIST_COLD])
      );
      $thisType.Define(
        $T02().DIRE_RAT, 
        "dire rat", 
        "r", 
        $T03().DarkRed, 
        25, 
        90, 
        4, 
        0, 
        JSIL.Array.New($T04(), [$T04().LOW_LIGHT_VISION, $T04().LARGE_GROUP, $T04().SMALL, $T04().KEEN_SENSES])
      );
      $thisType.Define(
        $T02().ROBED_ZEALOT, 
        "robed zealot", 
        "p", 
        $T03().Yellow, 
        40, 
        100, 
        4, 
        6, 
        JSIL.Array.New($T04(), [$T04().HUMANOID_INTELLIGENCE, $T04().MEDIUM_HUMANOID])
      );
      $thisType.Prototype($T02().ROBED_ZEALOT).GainSpell(JSIL.Array.New($T05(), [$T05().MINOR_HEAL, $T05().BLESS, $T05().HOLY_SHIELD]));
      $T06().prototype.set_Item.call($thisType.Prototype($T02().ROBED_ZEALOT).skills, $T07().MAGIC, 6);
      $thisType.Define(
        $T02().SHADOW, 
        "shadow", 
        "G", 
        $T03().DarkGray, 
        40, 
        100, 
        4, 
        0, 
        JSIL.Array.New($T04(), [$T04().UNDEAD, $T04().RESIST_COLD, $T04().DARKVISION, $T04().SHADOW_CLOAK])
      );
      $thisType.Define(
        $T02().BANSHEE, 
        "banshee", 
        "G", 
        $T03().Magenta, 
        40, 
        80, 
        4, 
        0, 
        JSIL.Array.New($T04(), [$T04().UNDEAD, $T04().RESIST_COLD, $T04().LOW_LIGHT_VISION, $T04().FLYING])
      );
      $thisType.Define(
        $T02().WARG, 
        "warg", 
        "c", 
        $T03().White, 
        30, 
        50, 
        5, 
        0, 
        JSIL.Array.New($T04(), [$T04().LOW_LIGHT_VISION, $T04().MEDIUM_GROUP, $T04().KEEN_SENSES])
      );
      $thisType.Define(
        $T02().PHASE_SPIDER, 
        "phase spider", 
        "A", 
        $T03().Cyan, 
        45, 
        100, 
        5, 
        0, 
        JSIL.Array.New($T04(), [$T04().POISON_HIT, $T04().LOW_LIGHT_VISION])
      );
      $thisType.Define(
        $T02().DERANGED_ASCETIC, 
        "deranged ascetic", 
        "p", 
        $T03().RandomDark, 
        40, 
        100, 
        5, 
        0, 
        JSIL.Array.New($T04(), [$T04().HUMANOID_INTELLIGENCE, $T04().MEDIUM_HUMANOID, $T04().SPELL_DISRUPTION])
      );
      $thisType.Define(
        $T02().POLTERGEIST, 
        "poltergeist", 
        "G", 
        $T03().DarkGreen, 
        35, 
        100, 
        5, 
        0, 
        JSIL.Array.New($T04(), [$T04().UNDEAD, $T04().RESIST_COLD, $T04().LOW_LIGHT_VISION, $T04().SMALL, $T04().FLYING])
      );
      $thisType.Define(
        $T02().CAVERN_HAG, 
        "cavern hag", 
        "h", 
        $T03().Blue, 
        40, 
        100, 
        5, 
        0, 
        JSIL.Array.New($T04(), [$T04().HUMANOID_INTELLIGENCE, $T04().MEDIUM_HUMANOID])
      );
      $thisType.Define(
        $T02().COMPY, 
        "compy", 
        "l", 
        $T03().Green, 
        25, 
        100, 
        6, 
        0, 
        JSIL.Array.New($T04(), [$T04().SMALL, $T04().LARGE_GROUP, $T04().KEEN_SENSES])
      );
      $thisType.Define(
        $T02().NOXIOUS_WORM, 
        "noxious worm", 
        "w", 
        $T03().DarkMagenta, 
        55, 
        140, 
        6, 
        0, 
        JSIL.Array.New($T04(), [$T04().RESIST_BASH, $T04().IMMUNE_TOXINS])
      );
      $thisType.Define(
        $T02().BERSERKER, 
        "berserker", 
        "p", 
        $T03().Red, 
        40, 
        100, 
        6, 
        0, 
        JSIL.Array.New($T04(), [$T04().HUMANOID_INTELLIGENCE, $T04().MEDIUM_HUMANOID])
      );
      $thisType.Define(
        $T02().TROLL, 
        "troll", 
        "T", 
        $T03().DarkGreen, 
        50, 
        100, 
        6, 
        0, 
        JSIL.Array.New($T04(), [$T04().HUMANOID_INTELLIGENCE, $T04().REGENERATING, $T04().REGENERATES_FROM_DEATH, $T04().DARKVISION])
      );
      $thisType.Define(
        $T02().VAMPIRE, 
        "vampire", 
        "V", 
        $T03().Blue, 
        40, 
        100, 
        6, 
        0, 
        JSIL.Array.New($T04(), [$T04().UNDEAD, $T04().MEDIUM_HUMANOID, $T04().RESIST_NECK_SNAP, $T04().FLYING, $T04().LIGHT_ALLERGY, $T04().DESTROYED_BY_SUNLIGHT, $T04().LIFE_DRAIN_HIT, $T04().RESIST_COLD])
      );
      $thisType.Define(
        $T02().CRUSADING_KNIGHT, 
        "crusading knight", 
        "p", 
        $T03().DarkGray, 
        45, 
        100, 
        7, 
        6, 
        JSIL.Array.New($T04(), [$T04().HUMANOID_INTELLIGENCE, $T04().MEDIUM_HUMANOID])
      );
      $T06().prototype.set_Item.call($thisType.Prototype($T02().CRUSADING_KNIGHT).skills, $T07().DEFENSE, 7);
      $thisType.Define(
        $T02().SKELETAL_SABERTOOTH, 
        "skeletal sabertooth", 
        "f", 
        $T03().White, 
        40, 
        50, 
        7, 
        0, 
        JSIL.Array.New($T04(), [$T04().UNDEAD, $T04().RESIST_SLASH, $T04().RESIST_PIERCE, $T04().RESIST_FIRE, $T04().RESIST_COLD, $T04().RESIST_ELECTRICITY, $T04().DARKVISION, $T04().KEEN_SENSES])
      );
      $thisType.Define(
        $T02().MUD_ELEMENTAL, 
        "mud elemental", 
        "E", 
        $T03().DarkYellow, 
        35, 
        100, 
        7, 
        0, 
        JSIL.Array.New($T04(), [$T04().RESIST_BASH, $T04().RESIST_SLASH, $T04().RESIST_PIERCE, $T04().IMMUNE_TOXINS, $T04().IMMUNE_ARROWS])
      );
      $thisType.Define(
        $T02().MUD_TENTACLE, 
        "mud tentacle", 
        "~", 
        $T03().DarkYellow, 
        1, 
        100, 
        0, 
        0, 
        JSIL.Array.New($T04(), [$T04().CONSTRUCT, $T04().BLINDSIGHT, $T04().GRAB_HIT, $T04().NEVER_MOVES, $T04().IMMUNE_TOXINS])
      );
      $thisType.Define(
        $T02().ENTRANCER, 
        "entrancer", 
        "p", 
        $T03().DarkMagenta, 
        35, 
        100, 
        7, 
        0, 
        JSIL.Array.New($T04(), [$T04().HUMANOID_INTELLIGENCE, $T04().MEDIUM_HUMANOID])
      );
      $thisType.Define(
        $T02().MARBLE_HORROR, 
        "marble horror", 
        "&", 
        $T03().Gray, 
        45, 
        100, 
        7, 
        0, 
        JSIL.Array.New($T04(), [$T04().CONSTRUCT, $T04().DARKVISION, $T04().DIM_VISION_HIT, $T04().IMMUNE_TOXINS, $T04().DESTROYED_BY_SUNLIGHT])
      );
      $thisType.Define(
        $T02().OGRE, 
        "ogre", 
        "O", 
        $T03().Green, 
        55, 
        100, 
        8, 
        0, 
        JSIL.Array.New($T04(), [$T04().HUMANOID_INTELLIGENCE, $T04().DARKVISION, $T04().SMALL_GROUP])
      );
      $thisType.Define(
        $T02().ORC_GRENADIER, 
        "orc grenadier", 
        "o", 
        $T03().DarkYellow, 
        50, 
        100, 
        8, 
        0, 
        JSIL.Array.New($T04(), [$T04().HUMANOID_INTELLIGENCE, $T04().MEDIUM_HUMANOID, $T04().LOW_LIGHT_VISION])
      );
      $thisType.Define(
        $T02().SHADOWVEIL_DUELIST, 
        "shadowveil duelist", 
        "p", 
        $T03().DarkCyan, 
        40, 
        100, 
        8, 
        0, 
        JSIL.Array.New($T04(), [$T04().HUMANOID_INTELLIGENCE, $T04().MEDIUM_HUMANOID, $T04().SHADOW_CLOAK])
      );
      $thisType.Define(
        $T02().CARRION_CRAWLER, 
        "carrion crawler", 
        "i", 
        $T03().DarkGreen, 
        35, 
        100, 
        8, 
        0, 
        JSIL.Array.New($T04(), [$T04().PARALYSIS_HIT, $T04().DARKVISION])
      );
      $thisType.Define(
        $T02().SPELLMUDDLE_PIXIE, 
        "spellmuddle pixie", 
        "y", 
        $T03().RandomBright, 
        35, 
        50, 
        8, 
        0, 
        JSIL.Array.New($T04(), [$T04().SMALL, $T04().FLYING, $T04().SPELL_DISRUPTION])
      );
      $thisType.Define(
        $T02().STONE_GOLEM, 
        "stone golem", 
        "x", 
        $T03().Gray, 
        65, 
        120, 
        9, 
        0, 
        JSIL.Array.New($T04(), [$T04().CONSTRUCT, $T04().STALAGMITE_HIT, $T04().RESIST_SLASH, $T04().RESIST_PIERCE, $T04().RESIST_FIRE, $T04().RESIST_COLD, $T04().RESIST_ELECTRICITY, $T04().DARKVISION])
      );
      $thisType.Define(
        $T02().PYREN_ARCHER, 
        "pyren archer", 
        "P", 
        $T03().DarkRed, 
        55, 
        100, 
        9, 
        0, 
        JSIL.Array.New($T04(), [$T04().HUMANOID_INTELLIGENCE, $T04().MEDIUM_HUMANOID, $T04().FIRE_HIT, $T04().FIERY_ARROWS, $T04().RESIST_FIRE])
      );
      var expr_770 = JSIL.Array.New($T04(), 3);
      expr_770[0] = $T04().HUMANOID_INTELLIGENCE;
      expr_770[1] = $T04().MEDIUM_HUMANOID;
      $thisType.Define(
        $T02().ORC_ASSASSIN, 
        "orc assassin", 
        "o", 
        $T03().DarkBlue, 
        50, 
        100, 
        9, 
        0, 
        expr_770
      );
      $T06().prototype.set_Item.call($thisType.Prototype($T02().ORC_ASSASSIN).skills, $T07().STEALTH, 9);
      $thisType.Define(
        $T02().TROLL_SEER, 
        "troll seer", 
        "T", 
        $T03().Cyan, 
        50, 
        100, 
        9, 
        0, 
        JSIL.Array.New($T04(), [$T04().HUMANOID_INTELLIGENCE, $T04().REGENERATING, $T04().REGENERATES_FROM_DEATH, $T04().DARKVISION])
      );
      $thisType.Prototype($T02().TROLL_SEER).GainSpell(JSIL.Array.New($T05(), [$T05().GLACIAL_BLAST, $T05().SONIC_BOOM]));
      $T06().prototype.set_Item.call($thisType.Prototype($T02().TROLL_SEER).skills, $T07().MAGIC, 9);
      $thisType.Define(
        $T02().MECHANICAL_KNIGHT, 
        "mechanical knight", 
        "x", 
        $T03().DarkRed, 
        20, 
        100, 
        9, 
        0, 
        JSIL.Array.New($T04(), [$T04().CONSTRUCT, $T04().MECHANICAL_SHIELD, $T04().KEEN_SENSES, $T04().BLINDSIGHT])
      );
      $thisType.Define(
        $T02().ORC_WARMAGE, 
        "orc warmage", 
        "o", 
        $T03().Red, 
        50, 
        100, 
        10, 
        0, 
        JSIL.Array.New($T04(), [$T04().HUMANOID_INTELLIGENCE, $T04().MEDIUM_HUMANOID, $T04().LOW_LIGHT_VISION])
      );
      $thisType.Prototype($T02().ORC_WARMAGE).GainSpell(JSIL.Array.New($T05(), [$T05().FORCE_BEAM, $T05().IMMOLATE, $T05().VOLTAIC_SURGE, $T05().MAGIC_HAMMER, $T05().GLACIAL_BLAST, $T05().BLOODSCENT, $T05().PASSAGE]));
      $T06().prototype.set_Item.call($thisType.Prototype($T02().ORC_WARMAGE).skills, $T07().MAGIC, 10);
      $thisType.Define(
        $T02().LASHER_FUNGUS, 
        "lasher fungus", 
        "F", 
        $T03().DarkGreen, 
        50, 
        100, 
        10, 
        0, 
        JSIL.Array.New($T04(), [$T04().PLANTLIKE, $T04().SPORE_BURST, $T04().RESIST_BASH, $T04().RESIST_FIRE, $T04().DARKVISION, $T04().BLINDSIGHT, $T04().NEVER_MOVES])
      );
      $thisType.Define(
        $T02().NECROMANCER, 
        "necromancer", 
        "p", 
        $T03().Blue, 
        40, 
        100, 
        10, 
        0, 
        JSIL.Array.New($T04(), [$T04().HUMANOID_INTELLIGENCE, $T04().MEDIUM_HUMANOID])
      );
      $thisType.Define(
        $T02().LUMINOUS_AVENGER, 
        "luminous avenger", 
        "E", 
        $T03().Yellow, 
        40, 
        50, 
        10, 
        12, 
        JSIL.Array.New($T04(), [$T04().HOLY_SHIELDED])
      );
      $thisType.Define(
        $T02().CORPSETOWER_BEHEMOTH, 
        "corpsetower behemoth", 
        "z", 
        $T03().DarkMagenta, 
        75, 
        120, 
        10, 
        0, 
        JSIL.Array.New($T04(), [$T04().UNDEAD, $T04().TOUGH, $T04().REGENERATING, $T04().RESIST_COLD, $T04().STUN_HIT])
      );
      $thisType.Define(
        $T02().FIRE_DRAKE, 
        "fire drake", 
        "D", 
        $T03().DarkRed, 
        200, 
        50, 
        10, 
        2, 
        JSIL.Array.New($T04(), [$T04().BOSS_MONSTER, $T04().DARKVISION, $T04().FIRE_HIT, $T04().IMMUNE_FIRE, $T04().HUMANOID_INTELLIGENCE])
      );
      $thisType.Define(
        $T02().PHANTOM, 
        "phantom", 
        "?", 
        $T03().Cyan, 
        1, 
        100, 
        0, 
        0, 
        JSIL.Array.New($T04(), [$T04().CONSTRUCT, $T04().FLYING, $T04().IMMUNE_TOXINS])
      );
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      new JSIL.MethodSignature(null, [], []), 
      Actor__cctor
    );

    $.Property({Static:false, Public:true }, "type", $asm00.TypeRef("Forays.ActorType"));

    $.Property({Static:false, Public:true }, "maxhp", $.Int32);

    $.Property({Static:false, Public:true }, "curhp", $.Int32);

    $.Property({Static:false, Public:true }, "speed", $.Int32);

    $.Property({Static:false, Public:true }, "level", $.Int32);

    $.Property({Static:false, Public:true }, "target", $.Type);

    $.Property({Static:false, Public:true }, "inv", $asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.Item")]));

    $.Property({Static:false, Public:true }, "F", $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.SpellType")]));

    $.Property({Static:true , Public:true }, "Q", $asm00.TypeRef("Forays.Queue"));

    $.Property({Static:true , Public:true }, "B", $asm00.TypeRef("Forays.Buffer"));

    $.Property({Static:true , Public:true }, "player", $.Type);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function $lActiveAI$gc__AnonStorey2$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Forays.Tile)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Forays.PhysicalObject)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Forays.Actor)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.Tile))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature($asm01.TypeRef("System.Int32"), [$asm00.TypeRef("Forays.PhysicalObject")], []))) ();
  };

  function $lActiveAI$gc__AnonStorey2__ctor () {
  };

  function $lActiveAI$gc__AnonStorey2_$l$gm__2C (t) {
    return (!(!t.Tile$passable$value || 
        (t.actor() !== null)) && this.$this.Actor$target$value.GetBestExtendedLineOfEffect(this.thrall).Contains(t));
  };

  function $lActiveAI$gc__AnonStorey2_$l$gm__2D (t) {
    return (t.actor() === this.$this);
  };

  function $lActiveAI$gc__AnonStorey2_$l$gm__2E (x) {
    return (x.Tile$passable$value && ((x.actor() === null) || 
        (x.actor() === this.thrall)));
  };

  function $lActiveAI$gc__AnonStorey2_$l$gm__2F (x) {
    return (x.actor() === this.$this);
  };

  function $lActiveAI$gc__AnonStorey2_$l$gm__30 (t) {
    return (!(!t.Tile$passable$value || 
        (t.actor() !== null)) && ($S00().CallVirtual("DistanceFrom", null, t, this.$this.Actor$target$value) > $S00().CallVirtual("DistanceFrom", null, this.thrall, this.$this.Actor$target$value)));
  };

  function $lActiveAI$gc__AnonStorey2_$l$gm__31 (t) {
    return $S00().CallVirtual("DistanceFrom", null, this.$this, t);
  };

  function $lActiveAI$gc__AnonStorey2_$l$gm__32 (t) {
    return ($S00().CallVirtual("DistanceFrom", null, t, this.$this.Actor$target$value) > 2);
  };

  function $lActiveAI$gc__AnonStorey2_$l$gm__33 (t) {
    return ($S00().CallVirtual("DistanceFrom", null, t, this.$this.Actor$target$value) > 2);
  };

  function $lActiveAI$gc__AnonStorey2_$l$gm__35 (t) {
    return $S00().CallVirtual("DistanceFrom", null, this.$this, t);
  };

  function $lActiveAI$gc__AnonStorey2_$l$gm__36 (t) {
    return ($S00().CallVirtual("DistanceFrom", null, t, this.$this.Actor$target$value) > 2);
  };

  function $lActiveAI$gc__AnonStorey2_$l$gm__37 (t) {
    return ($S00().CallVirtual("DistanceFrom", null, t, this.$this.Actor$target$value) > 2);
  };

  JSIL.MakeClass($asm01.TypeRef("System.Object"), "Forays.Actor/<ActiveAI>c__AnonStorey2", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], []), 
      $lActiveAI$gc__AnonStorey2__ctor
    );

    $.Method({Static:false, Public:false}, "$l$gm__2C", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Tile")], []), 
      $lActiveAI$gc__AnonStorey2_$l$gm__2C
    );

    $.Method({Static:false, Public:false}, "$l$gm__2D", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Tile")], []), 
      $lActiveAI$gc__AnonStorey2_$l$gm__2D
    );

    $.Method({Static:false, Public:false}, "$l$gm__2E", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Tile")], []), 
      $lActiveAI$gc__AnonStorey2_$l$gm__2E
    );

    $.Method({Static:false, Public:false}, "$l$gm__2F", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Tile")], []), 
      $lActiveAI$gc__AnonStorey2_$l$gm__2F
    );

    $.Method({Static:false, Public:false}, "$l$gm__30", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Tile")], []), 
      $lActiveAI$gc__AnonStorey2_$l$gm__30
    );

    $.Method({Static:false, Public:false}, "$l$gm__31", 
      new JSIL.MethodSignature($.Int32, [$asm00.TypeRef("Forays.Tile")], []), 
      $lActiveAI$gc__AnonStorey2_$l$gm__31
    );

    $.Method({Static:false, Public:false}, "$l$gm__32", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Tile")], []), 
      $lActiveAI$gc__AnonStorey2_$l$gm__32
    );

    $.Method({Static:false, Public:false}, "$l$gm__33", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Tile")], []), 
      $lActiveAI$gc__AnonStorey2_$l$gm__33
    );

    $.Method({Static:false, Public:false}, "$l$gm__35", 
      new JSIL.MethodSignature($.Int32, [$asm00.TypeRef("Forays.Tile")], []), 
      $lActiveAI$gc__AnonStorey2_$l$gm__35
    );

    $.Method({Static:false, Public:false}, "$l$gm__36", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Tile")], []), 
      $lActiveAI$gc__AnonStorey2_$l$gm__36
    );

    $.Method({Static:false, Public:false}, "$l$gm__37", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.Tile")], []), 
      $lActiveAI$gc__AnonStorey2_$l$gm__37
    );

    $.Field({Static:false, Public:false}, "thrall", $asm00.TypeRef("Forays.Actor")); 
    $.Field({Static:false, Public:false}, "$this", $asm00.TypeRef("Forays.Actor")); 
    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

(function AttackList$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Forays.AttackInfo)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Forays.DamageType)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Forays.ActorType)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm01.System.Int32)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.AttackInfo"), [
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.DamageType"), $asm01.TypeRef("System.String")
      ]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.AttackInfo"), [$asm00.TypeRef("Forays.AttackInfo")]))) ();
  };

  function AttackList_Attack (type, num) {
    switch (type.valueOf()) {
      case 0: 
        return $S01().Construct($thisType.attack[0]);

      case 1: 
        return $S01().Construct($thisType.attack[2]);

      case 2: 
        switch (num) {
          case 0: 
            return $S01().Construct($thisType.attack[5]);

          case 1: 
            return $S01().Construct($thisType.attack[22]);

          case 2: 
            return $S01().Construct($thisType.attack[32]);

          default: 
            return null;

        }
        break;

      case 3: 
        return $S01().Construct($thisType.attack[1]);

      case 4: 
        if (num === 0) {
          return $S01().Construct($thisType.attack[2]);
        }
        if (num !== 1) {
          return null;
        }
        return $S01().Construct($thisType.attack[3]);

      case 5: 
        return $S01().Construct($thisType.attack[4]);

      case 6: 
        return $S01().Construct($thisType.attack[1]);

      case 7: 
        return $S01().Construct($thisType.attack[5]);

      case 8: 
        return $S01().Construct($thisType.attack[1]);

      case 9: 
        return $S01().Construct($thisType.attack[1]);

      case 10: 
        return $S01().Construct($thisType.attack[6]);

      case 11: 
        switch (num) {
          case 0: 
            return $S01().Construct($thisType.attack[1]);

          case 1: 
            return $S01().Construct($thisType.attack[7]);

          case 2: 
            return $S01().Construct($thisType.attack[8]);

          default: 
            return null;

        }
        break;

      case 12: 
        return $S01().Construct($thisType.attack[1]);

      case 13: 
        return $S01().Construct($thisType.attack[1]);

      case 14: 
      case 64: 
        return $S01().Construct($thisType.attack[1]);

      case 15: 
        return $S01().Construct($thisType.attack[1]);

      case 16: 
        return $S01().Construct($thisType.attack[1]);

      case 17: 
        return $S01().Construct($thisType.attack[1]);

      case 18: 
      case 57: 
        if (num === 0) {
          return $S01().Construct($thisType.attack[11]);
        }
        if (num !== 1) {
          return null;
        }
        return $S01().Construct($thisType.attack[5]);

      case 19: 
        return $S01().Construct($thisType.attack[2]);

      case 20: 
        return $S01().Construct($thisType.attack[12]);

      case 21: 
        return $S01().Construct($thisType.attack[13]);

      case 22: 
        return $S01().Construct($thisType.attack[14]);

      case 23: 
        return $S01().Construct($thisType.attack[4]);

      case 24: 
        return $S01().Construct($thisType.attack[2]);

      case 25: 
        switch (num) {
          case 0: 
            return $S01().Construct($thisType.attack[15]);

          case 1: 
            return $S01().Construct($thisType.attack[16]);

          case 2: 
            return $S01().Construct($thisType.attack[17]);

          default: 
            return null;

        }
        break;

      case 26: 
        if (num === 0) {
          return $S01().Construct($thisType.attack[19]);
        }
        if (num !== 1) {
          return null;
        }
        return $S01().Construct($thisType.attack[18]);

      case 27: 
        return $S01().Construct($thisType.attack[20]);

      case 28: 
        return $S01().Construct($thisType.attack[2]);

      case 29: 
        if (num === 0) {
          return $S01().Construct($thisType.attack[5]);
        }
        if (num !== 1) {
          return null;
        }
        return $S01().Construct($thisType.attack[21]);

      case 30: 
        return $S01().Construct($thisType.attack[10]);

      case 31: 
        return $S01().Construct($thisType.attack[22]);

      case 32: 
        return $S01().Construct($thisType.attack[4]);

      case 33: 
      case 58: 
        return $S01().Construct($thisType.attack[23]);

      case 34: 
      case 59: 
        return $S01().Construct($thisType.attack[5]);

      case 35: 
        return $S01().Construct($thisType.attack[1]);

      case 36: 
        return $S01().Construct($thisType.attack[1]);

      case 37: 
        return $S01().Construct($thisType.attack[10]);

      case 38: 
      case 60: 
        return $S01().Construct($thisType.attack[25]);

      case 39: 
        return $S01().Construct($thisType.attack[10]);

      case 40: 
        return $S01().Construct($thisType.attack[10]);

      case 41: 
        if (num === 0) {
          return $S01().Construct($thisType.attack[2]);
        }
        if (num !== 1) {
          return null;
        }
        return $S01().Construct($thisType.attack[26]);

      case 42: 
        return $S01().Construct($thisType.attack[27]);

      case 43: 
        return $S01().Construct($thisType.attack[28]);

      case 44: 
        return $S01().Construct($thisType.attack[1]);

      case 45: 
        return $S01().Construct($thisType.attack[10]);

      case 46: 
        return $S01().Construct($thisType.attack[22]);

      case 47: 
        if (num === 0) {
          return $S01().Construct($thisType.attack[10]);
        }
        if (num !== 1) {
          return null;
        }
        return $S01().Construct($thisType.attack[16]);

      case 48: 
        return $S01().Construct($thisType.attack[10]);

      case 49: 
        if (num === 0) {
          return $S01().Construct($thisType.attack[29]);
        }
        if (num !== 1) {
          return null;
        }
        return $S01().Construct($thisType.attack[30]);

      case 50: 
        return $S01().Construct($thisType.attack[1]);

      case 51: 
        return $S01().Construct($thisType.attack[17]);

      case 52: 
      case 61: 
        return $S01().Construct($thisType.attack[31]);

      case 53: 
        return $S01().Construct($thisType.attack[9]);

      case 54: 
        return $S01().Construct($thisType.attack[24]);

      case 62: 
        return $S01().Construct($thisType.attack[5]);

      case 63: 
        return $S01().Construct($thisType.attack[10]);

      case 65: 
        return $S01().Construct($thisType.attack[21]);

    }
    return null;
  };

  JSIL.MakeStaticClass("Forays.AttackList", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:true }, "Attack", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.AttackInfo"), [$asm00.TypeRef("Forays.ActorType"), $.Int32], []), 
      AttackList_Attack
    );

    $.Field({Static:true , Public:false}, "attack", $jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.AttackInfo")]), function ($pi) {
        return JSIL.Array.New($asm00.Forays.AttackInfo, 33);
      }); 
    function AttackList__cctor () {
      $thisType.attack = JSIL.Array.New($T00(), 33);
      $thisType.attack[0] = $S00().Construct(100, 1, $T01().NORMAL, "& ^hit *");
      $thisType.attack[1] = $S00().Construct(100, 2, $T01().NORMAL, "& ^hits *");
      $thisType.attack[2] = $S00().Construct(100, 1, $T01().PIERCING, "& ^bites *");
      $thisType.attack[3] = $S00().Construct(100, 1, $T01().SLASHING, "& ^scratches *");
      $thisType.attack[4] = $S00().Construct(100, 2, $T01().PIERCING, "& ^bites *");
      $thisType.attack[5] = $S00().Construct(100, 3, $T01().PIERCING, "& ^bites *");
      $thisType.attack[6] = $S00().Construct(100, 3, $T01().SLASHING, "& ^rakes *");
      $thisType.attack[7] = $S00().Construct(100, 2, $T01().COLD, "& hits * with a blast of cold");
      $thisType.attack[8] = $S00().Construct(100, 4, $T01().COLD, "& releases a burst of cold");
      $thisType.attack[9] = $S00().Construct(100, 0, $T01().NONE, "& ^hits *");
      $thisType.attack[10] = $S00().Construct(100, 3, $T01().NORMAL, "& ^hits *");
      $thisType.attack[11] = $S00().Construct(200, 2, $T01().NORMAL, "& lunges forward and ^hits *");
      $thisType.attack[12] = $S00().Construct(100, 3, $T01().BASHING, "& ^hammers *");
      $thisType.attack[13] = $S00().Construct(100, 2, $T01().NORMAL, "& touches *");
      $thisType.attack[14] = $S00().Construct(100, 2, $T01().SLASHING, "& ^claws *");
      $thisType.attack[15] = $S00().Construct(100, 3, $T01().NORMAL, "& ^punches *");
      $thisType.attack[16] = $S00().Construct(100, 3, $T01().NORMAL, "& ^kicks *");
      $thisType.attack[17] = $S00().Construct(100, 3, $T01().NORMAL, "& ^strikes *");
      $thisType.attack[18] = $S00().Construct(100, 2, $T01().NORMAL, "& slimes *");
      $thisType.attack[19] = $S00().Construct(100, 0, $T01().NONE, "& grabs at *");
      $thisType.attack[20] = $S00().Construct(100, 2, $T01().NORMAL, "& clutches at *");
      $thisType.attack[21] = $S00().Construct(100, 3, $T01().BASHING, "& ^slams *");
      $thisType.attack[22] = $S00().Construct(100, 3, $T01().SLASHING, "& ^claws *");
      $thisType.attack[23] = $S00().Construct(200, 5, $T01().BASHING, "& ^hits * with a huge mace");
      $thisType.attack[24] = $S00().Construct(100, 1, $T01().NORMAL, "& hits *");
      $thisType.attack[25] = $S00().Construct(100, 4, $T01().NORMAL, "& ^hits *");
      $thisType.attack[26] = $S00().Construct(100, 0, $T01().NONE, "& lashes * with a tentacle");
      $thisType.attack[27] = $S00().Construct(100, 2, $T01().SLASHING, "& ^scratches *");
      $thisType.attack[28] = $S00().Construct(100, 4, $T01().BASHING, "& ^slams *");
      $thisType.attack[29] = $S00().Construct(120, 3, $T01().NORMAL, "& extends a tentacle and ^hits *");
      $thisType.attack[30] = $S00().Construct(120, 1, $T01().NORMAL, "& extends a tentacle and drags * closer");
      $thisType.attack[31] = $S00().Construct(100, 5, $T01().BASHING, "& ^clobbers *");
      $thisType.attack[32] = $S00().Construct(150, 6, $T01().FIRE, "& breathes fire");
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      new JSIL.MethodSignature(null, [], []), 
      AttackList__cctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function Skill$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Forays.SkillType)) ();
  };

  function Skill_Name (type) {
    switch (type.valueOf()) {
      case 0: 
        return "Combat";

      case 1: 
        return "Defense";

      case 2: 
        return "Magic";

      case 3: 
        return "Spirit";

      case 4: 
        return "Stealth";

      default: 
        return "no skill";

    }
  };

  JSIL.MakeStaticClass("Forays.Skill", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:true }, "Name", 
      new JSIL.MethodSignature($.String, [$asm00.TypeRef("Forays.SkillType")], []), 
      Skill_Name
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

(function Feat$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Forays.FeatType)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm01.System.String))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Forays.SkillType)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm01.System.Int32)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm01.TypeRef("System.String")]), []))) ();
  };

  function Feat_Description (type) {
    switch (type.valueOf()) {
      case 0: 
        return ($S00().Construct()).__Initialize__([["Wielding a different weapon takes no time."], ["(This also enables you to fire arrows without first switching"], ["to your bow.)"]]);

      case 1: 
        return ($S00().Construct()).__Initialize__([["Your chance to score a critical hit increases by 10%. This"], ["bonus also increases by 5% for each 20% health that the target"], ["is missing."]]);

      case 2: 
        return ($S00().Construct()).__Initialize__([["Leap from one space away and attack your target (with a +4"], ["bonus to Combat). The intervening space must be unoccupied."]]);

      case 3: 
        return ($S00().Construct()).__Initialize__([["Enemies must yield ground in order to avoid your attacks."], ["(If your target has nowhere to run, your attacks will"], ["automatically hit.)"]]);

      case 4: 
        return ($S00().Construct()).__Initialize__([["You can wear chainmail with no penalty to stealth."]]);

      case 5: 
        return ($S00().Construct()).__Initialize__([["You can cast spells with no penalty from your armor."]]);

      case 6: 
        return ($S00().Construct()).__Initialize__([["Stand still to ready yourself for attack. You gain an extra"], ["50% chance to avoid attacks while readied. Enemies that try to"], ["hit you might hit other adjacent enemies instead."]]);

      case 7: 
        return ($S00().Construct()).__Initialize__([["Move up to 2 spaces while avoiding arrows. (Also useful for"], ["slipping behind enemies and putting out fires.)"]]);

      case 8: 
        return ($S00().Construct()).__Initialize__([["The first offensive spell you've learned will deal 1d6 extra"], ["damage. (Affects the first spell in the list that deals damage"], ["directly.)"]]);

      case 9: 
        return ($S00().Construct()).__Initialize__([["Casting a spell of higher level than your Magic skill will now"], ["only drain your magic reserves 50% of the time."]]);

      case 10: 
        return ($S00().Construct()).__Initialize__([["Drain your magic reserves to shield yourself. The shield lasts"], ["for 20 turns and can block 25 damage, plus a bonus for Magic"], ["skill. (Each drain on your magic reserves gives an extra 25%"], ["failure rate to your spells, and lasts until you rest.)"]]);

      case 11: 
        return ($S00().Construct()).__Initialize__([["Drain your magic reserves to flawlessly cast a spell. (The"], ["spell's level and any penalty from your armor are ignored. Any"], ["drain on your magic reserves still decreases your chances.)"], ["If you have skill in Spirit, your chances are increased."]]);

      case 12: 
        return ($S00().Construct()).__Initialize__([["Each turn you're engaged in combat (attacking/being attacked),"], ["you gain 1 bonus Spirit, and bonus Combat skill equal to half"], ["that."]]);

      case 13: 
        return ($S00().Construct()).__Initialize__([["Improves the amount by which your natural recovery can heal"], ["you. (You can recover to a multiple of 20HP instead of 10.)"]]);

      case 14: 
        return ($S00().Construct()).__Initialize__([["When your health becomes very low (less than 20%), you"], ["briefly enter a state of invulnerability. (For about 5 turns,"], ["you'll be immune to damage, but not other effects.)"]]);

      case 15: 
        return ($S00().Construct()).__Initialize__([["Taking damage briefly increases your movement speed. (This"], ["effect can stack up to 5 times. At 5 stacks, your speed is"], ["doubled.)"]]);

      case 16: 
        return ($S00().Construct()).__Initialize__([["Attempt to misdirect an unaware enemy, causing it to"], ["investigate the source of the sound."]]);

      case 17: 
        return ($S00().Construct()).__Initialize__([["Attempt to disable a trap without setting it off. If you have"], ["skill in Defense, you might avoid damage if you do trigger it."]]);

      case 18: 
        return ($S00().Construct()).__Initialize__([["Automatically perform a stealth kill when attacking an unaware"], ["medium humanoid. (Living enemies of approximately human size.)"]]);

      case 19: 
        return ($S00().Construct()).__Initialize__([["You can sense where it's safe and where enemies might detect"], ["you. Your torch must be extinguished while you're sneaking."]]);

      default: 
        return null;

    }
  };

  function Feat_IsActivated (type) {
    switch (type.valueOf()) {
      case 2: 
      case 7: 
      case 10: 
      case 11: 
      case 16: 
      case 17: 
        return true;

    }
    return false;
  };

  function Feat_MaxRank (type) {
    switch (type.valueOf()) {
      case 0: 
      case 4: 
      case 15: 
      case 16: 
      case 17: 
        return 2;

      case 1: 
      case 2: 
      case 3: 
      case 5: 
      case 6: 
      case 7: 
      case 9: 
      case 10: 
      case 11: 
      case 12: 
      case 14: 
        return 3;

      case 8: 
      case 13: 
      case 18: 
      case 19: 
        return 4;

      default: 
        return 0;

    }
  };

  function Feat_Name (type) {
    switch (type.valueOf()) {
      case 0: 
        return "Quick draw";

      case 1: 
        return "Lethality";

      case 2: 
        return "Lunge";

      case 3: 
        return "Drive back";

      case 4: 
        return "Silent chainmail";

      case 5: 
        return "Armored mage";

      case 6: 
        return "Full defense";

      case 7: 
        return "Tumble";

      case 8: 
        return "Master's edge";

      case 9: 
        return "Student's luck";

      case 10: 
        return "Arcane shield";

      case 11: 
        return "Force of will";

      case 12: 
        return "Conviction";

      case 13: 
        return "Enduring soul";

      case 14: 
        return "Feel no pain";

      case 15: 
        return "Boiling blood";

      case 16: 
        return "Distract";

      case 17: 
        return "Disarm trap";

      case 18: 
        return "Neck snap";

      case 19: 
        return "Danger sense";

      default: 
        return "no feat";

    }
  };

  function Feat_OfSkill (skill, num) {
    switch (skill.valueOf()) {
      case 0: 
        return $T00().$Cast(num);

      case 1: 
        return $asm00.Forays.FeatType.$Cast(num + $T00().SILENT_CHAINMAIL);

      case 2: 
        return $asm00.Forays.FeatType.$Cast(num + $T00().MASTERS_EDGE);

      case 3: 
        return $asm00.Forays.FeatType.$Cast(num + $T00().CONVICTION);

      case 4: 
        return $asm00.Forays.FeatType.$Cast(num + $T00().DISTRACT);

      default: 
        return $T00().NO_FEAT;

    }
  };

  JSIL.MakeStaticClass("Forays.Feat", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:true }, "Description", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$.String]), [$asm00.TypeRef("Forays.FeatType")], []), 
      Feat_Description
    );

    $.Method({Static:true , Public:true }, "IsActivated", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Forays.FeatType")], []), 
      Feat_IsActivated
    );

    $.Method({Static:true , Public:true }, "MaxRank", 
      new JSIL.MethodSignature($.Int32, [$asm00.TypeRef("Forays.FeatType")], []), 
      Feat_MaxRank
    );

    $.Method({Static:true , Public:true }, "Name", 
      new JSIL.MethodSignature($.String, [$asm00.TypeRef("Forays.FeatType")], []), 
      Feat_Name
    );

    $.Method({Static:true , Public:true }, "OfSkill", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.FeatType"), [$asm00.TypeRef("Forays.SkillType"), $.Int32], []), 
      Feat_OfSkill
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.MakeEnum(
  "Forays.HelpTopic", true, {
    Overview: 0, 
    Skills: 1, 
    Feats: 2, 
    Spells: 3, 
    Items: 4, 
    Commands: 5, 
    Advanced: 6, 
    Tips: 7
  }, false
);

JSIL.MakeEnum(
  "Forays.TutorialTopic", true, {
    Movement: 0, 
    Attacking: 1, 
    Torch: 2, 
    Resistance: 3, 
    Fire: 4, 
    Recovery: 5, 
    RangedAttacks: 6, 
    Feats: 7, 
    Armor: 8, 
    HealingPool: 9, 
    Consumables: 10
  }, false
);

(function Help$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Forays.Dict$b2.Of($asm00.Forays.TutorialTopic, $asm01.System.Boolean))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm01.System.Int32)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Forays.Color)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.colorstring))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Forays.colorstring)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm01.System.String)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm01.System.Char)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Forays.HelpTopic)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm01.System.IDisposable)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm01.System.Console)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.Forays.Screen)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm01.System.Array)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm01.System.Enum)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm01.System.String))) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm01.System.Boolean)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm01.System.Collections.IEnumerator)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm01.System.ConsoleKeyInfo)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm01.System.ConsoleKey)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm00.Forays.Actor)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm00.Forays.TutorialTopic)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize(System.Array.Of($asm01.System.String))) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm01.System.Void)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm01.System.IO.StreamReader)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm01.System.IO.TextReader)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm00.Forays.Global)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm00.Forays.OptionType)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize(System.Array.Of($asm00.Forays.colorstring))) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm00.Forays.Extensions)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm00.Forays.cstr)) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.cstr))) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize(System.Array.Of($asm00.Forays.colorchar))) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm01.System.Collections.Generic.List$b1.Of($asm00.Forays.colorstring)))) ();
  };
  var $T20 = function () {
    return ($T20 = JSIL.Memoize($asm01.System.Threading.Thread)) ();
  };
  var $T21 = function () {
    return ($T21 = JSIL.Memoize($asm00.Forays.Buffer)) ();
  };
  var $T22 = function () {
    return ($T22 = JSIL.Memoize($asm01.System.Collections.Generic.Dictionary$b2.Of($asm00.Forays.OptionType, $asm01.System.Boolean))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.Dict`2", [$asm00.TypeRef("Forays.TutorialTopic"), $asm01.TypeRef("System.Boolean")]), []))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.colorstring")]), []))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.colorstring"), [
        $asm01.TypeRef("System.String"), $asm00.TypeRef("Forays.Color"), 
        $asm01.TypeRef("System.String"), $asm00.TypeRef("Forays.Color"), 
        $asm01.TypeRef("System.String"), $asm00.TypeRef("Forays.Color")
      ]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $asm01.TypeRef("System.String")
      ], []))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm01.TypeRef("System.Int32"), $asm01.TypeRef("System.Int32"), 
        $asm00.TypeRef("Forays.colorstring")
      ], []))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm01.TypeRef("System.String")]), []))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.IO.StreamReader"), [$asm01.TypeRef("System.String")]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.colorstring"), [$asm01.TypeRef("System.String"), $asm00.TypeRef("Forays.Color")]))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.colorstring"), [$jsilcore.TypeRef("System.Array", [$asm00.TypeRef("Forays.cstr")])]))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Forays.cstr"), [$asm01.TypeRef("System.String"), $asm00.TypeRef("Forays.Color")]))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.colorstring")])]), []))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm01.TypeRef("System.Int32")], []))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm01.System.Collections.IEnumerator.MoveNext)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm01.System.Collections.IEnumerator.get_Current)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm01.System.IDisposable.Dispose)) ();
  };

  function Help_BoxAnimationFrame (height, width) {
    var color = $T02().Blue;
    var color2 = $T02().Yellow;
    var list = $S01().Construct();
    list.Add($S02().Construct("+", color2, System.String.PadRight("", ((width - 2) | 0), "-"), color, "+", color2));

    for (var i = 0; i < ((height - 2) | 0); i = ((i + 1) | 0)) {
      list.Add($S02().Construct("|", color, System.String.PadRight("", ((width - 2) | 0), ' '), $T02().Gray, "|", color));
    }
    list.Add($S02().Construct("+", color2, System.String.PadRight("", ((width - 2) | 0), "-"), color, "+", color2));
    return list;
  };

  function Help_DisplayHelp$00 () {
    $thisType.DisplayHelp($T07().Overview);
  };

  function Help_DisplayHelp$01 (h) {
    var disposable = null;
    $T09().set_CursorVisible(false);
    $T0A().Blank();
    var length = $T0C().GetValues($T07().__Type__).length;
    $T0A().WriteString(5, 4, "Topics:", $T02().Yellow);

    for (var i = 0; i < ((length + 1) | 0); i = ((i + 1) | 0)) {
      $S03().CallStatic($T0A(), "WriteString", null, ((i + 7) | 0), 0, "[ ]");
      $T0A().WriteChar(((i + 7) | 0), 1, String.fromCharCode(((i + 97) | 0)), $T02().Cyan);
    }
    $S03().CallStatic($T0A(), "WriteString", null, ((length + 7) | 0), 4, "Quit");
    $S03().CallStatic($T0A(), "WriteString", null, 0, 16, System.String.PadRight("", 61, "-"));
    $S03().CallStatic($T0A(), "WriteString", null, 23, 16, System.String.PadRight("", 61, "-"));
    var list = $thisType.HelpText(h);
    var num = 0;
    var flag = false;

  $loop1: 
    while (!flag) {

      var $label0 = 0;
    $labelgroup0: 
      while (true) {
        switch ($label0) {
          case 0: /* $entry0 */ 
            var enumerator = (JSIL.GetEnumerator($T0C().GetValues($T07().__Type__)));
            try {

              while ($IM00().Call(enumerator, null)) {
                var helpTopic = $T07().$Cast($IM01().Call(enumerator, null));
                if (h === helpTopic) {
                  $T0A().WriteString(
                    ($asm00.Forays.HelpTopic.$Cast(7 + helpTopic)).valueOf(), 
                    4, 
                    $T0C().GetName($T07().__Type__, helpTopic), 
                    $T02().Yellow
                  );
                } else {
                  $S03().CallStatic($T0A(), "WriteString", null, 
                    ($asm00.Forays.HelpTopic.$Cast(7 + helpTopic)).valueOf(), 
                    4, 
                    $T0C().GetName($T07().__Type__, helpTopic)
                  );
                }
              }
            } finally {
              if ((disposable = $T08().$As(enumerator)) !== null) {
                $IM02().Call(disposable, null);
              }
            }
            if (num > 0) {
              $S04().CallStatic($T0A(), "WriteString", null, 0, 77, $S02().Construct("[", $T02().Yellow, "-", $T02().Cyan, "]", $T02().Yellow));
            } else {
              $S03().CallStatic($T0A(), "WriteString", null, 0, 77, "---");
            }
            var flag2 = false;
            if (((num + 22) | 0) < list.get_Count()) {
              flag2 = true;
            }
            if (flag2) {
              $S04().CallStatic($T0A(), "WriteString", null, 23, 77, $S02().Construct("[", $T02().Yellow, "+", $T02().Cyan, "]", $T02().Yellow));
            } else {
              $S03().CallStatic($T0A(), "WriteString", null, 23, 77, "---");
            }

            for (var j = 1; j <= 22; j = ((j + 1) | 0)) {
              if (((list.get_Count() - num) | 0) < j) {
                $S03().CallStatic($T0A(), "WriteString", null, j, 16, System.String.PadRight("", 64, ' '));
              } else {
                $S03().CallStatic($T0A(), "WriteString", null, j, 16, System.String.PadRight(list.get_Item(((((j + num) | 0) - 1) | 0)), 64, ' '));
              }
            }
            var k = $T09().ReadKey(true);
            var key = k.get_Key();
            if (!((key !== $T11().Backspace) && (key !== $T11().PageUp))) {
              var c = "\x08";
            } else if (key === $T11().PageDown) {
              c = " ";
            } else {
              c = $T12().ConvertInput(k.MemberwiseClone());
            }
            var c2 = c;
            switch (c2) {
              case "_": 
                $label0 = 2 /* goto IL_3CB */ ;
                continue $labelgroup0;

              default: 
              case "`": 
                switch (c2) {
                  default: 
                  case ",": 
                    if (c2.charCodeAt(0) !== "\x08".charCodeAt(0)) {
                      if (c2.charCodeAt(0) !== "\r".charCodeAt(0)) {
                        if (c2.charCodeAt(0) === "\x1b".charCodeAt(0)) {
                          $label0 = 1 /* goto IL_3C3 */ ;
                          continue $labelgroup0;
                        }
                        if (c2.charCodeAt(0) !== " ".charCodeAt(0)) {
                          if (c2.charCodeAt(0) === "2".charCodeAt(0)) {
                            break;
                          }
                          if (c2.charCodeAt(0) === "8".charCodeAt(0)) {
                            $label0 = 2 /* goto IL_3CB */ ;
                            continue $labelgroup0;
                          }
                          if (c2.charCodeAt(0) !== "=".charCodeAt(0)) {
                            continue $labelgroup0;
                          }
                          break;
                        }
                      }
                      if (list.get_Count() > 22) {
                        num = ((num + 22) | 0);
                        if (((num + 22) | 0) > list.get_Count()) {
                          num = ((list.get_Count() - 22) | 0);
                        }
                      }
                      continue $labelgroup0;
                    }
                    if (num > 0) {
                      num = ((num - 22) | 0);
                      if (num < 0) {
                        num = 0;
                      }
                    }
                    continue $labelgroup0;

                  case "-": 
                    $label0 = 2 /* goto IL_3CB */ ;
                    continue $labelgroup0;

                }
                if (flag2) {
                  num = ((num + 1) | 0);
                }
                continue $labelgroup0;

              case "a": 
                if (h.valueOf() !== 0) {
                  h = $T07().Overview;
                  list = $thisType.HelpText(h);
                  num = 0;
                }
                continue $labelgroup0;

              case "b": 
                if (h !== $T07().Skills) {
                  h = $T07().Skills;
                  list = $thisType.HelpText(h);
                  num = 0;
                }
                continue $labelgroup0;

              case "c": 
                if (h !== $T07().Feats) {
                  h = $T07().Feats;
                  list = $thisType.HelpText(h);
                  num = 0;
                }
                continue $labelgroup0;

              case "d": 
                if (h !== $T07().Spells) {
                  h = $T07().Spells;
                  list = $thisType.HelpText(h);
                  num = 0;
                }
                continue $labelgroup0;

              case "e": 
                if (h !== $T07().Items) {
                  h = $T07().Items;
                  list = $thisType.HelpText(h);
                  num = 0;
                }
                continue $labelgroup0;

              case "f": 
                if (h !== $T07().Commands) {
                  h = $T07().Commands;
                  list = $thisType.HelpText(h);
                  num = 0;
                }
                continue $labelgroup0;

              case "g": 
                if (h !== $T07().Advanced) {
                  h = $T07().Advanced;
                  list = $thisType.HelpText(h);
                  num = 0;
                }
                continue $labelgroup0;

              case "h": 
                if (h !== $T07().Tips) {
                  h = $T07().Tips;
                  list = $thisType.HelpText(h);
                  num = 0;
                }
                continue $labelgroup0;

            }

            $label0 = 1 /* goto IL_3C3 */ ;
            continue $labelgroup0;
          case 1: /* IL_3C3 */ 
            flag = true;
            continue $loop1;

          case 2: /* IL_3CB */ 
            if (num > 0) {
              num = ((num - 1) | 0);
            }

            break $labelgroup0;
        }
      }
    }
    $T0A().Blank();
  };

  function Help_FrameWidth (previous_height, previous_width) {
    return ((previous_width - ((((previous_width * 2) | 0) / previous_height) | 0)) | 0);
  };

  function Help_HelpText (h) {
    var disposable = null;
    var num = 0;
    var num2 = -1;
    switch (h.valueOf()) {
      case 0: 
        var text = "help.txt";
        num2 = 54;
        break;

      case 1: 
        text = "feat_help.txt";
        num2 = 19;
        break;

      case 2: 
        text = "feat_help.txt";
        num = 21;
        break;

      case 3: 
        text = "spell_help.txt";
        break;

      case 4: 
        text = "item_help.txt";
        break;

      case 5: 
        text = "help.txt";
        num = 56;
        num2 = 26;
        break;

      case 6: 
        text = "advanced_help.txt";
        break;

      default: 
        text = "feat_help.txt";
        break;

    }
    var list = $S05().Construct();
    if (h === $T07().Tips) {
      list.Add("Viewing all tutorial tips:");
      list.Add("");
      list.Add("");
      list.Add("");
      var enumerator = (JSIL.GetEnumerator($T0C().GetValues($T13().__Type__)));
      try {

        while ($IM00().Call(enumerator, null)) {
          var topic = $T13().$Cast($IM01().Call(enumerator, null));
          var array = $thisType.TutorialText(topic);

          for (var i = 0; i < array.length; i = ((i + 1) | 0)) {
            var item = array[i];
            list.Add(item);
          }
          list.Add("");
          list.Add("");
          list.Add("");
        }
      } finally {
        if ((disposable = $T08().$As(enumerator)) !== null) {
          $IM02().Call(disposable, null);
        }
      }
      return list;
    }
    if (text != "") {
      var streamReader = $S06().Construct(text);

      for (var j = 0; j < num; j = ((j + 1) | 0)) {
        streamReader.ReadLine();
      }

    $loop3: 
      for (var num3 = 0; (num3 < num2) || (num2 === -1); num3 = ((num3 + 1) | 0)) {
        if (streamReader.Peek() === -1) {
          break $loop3;
        }
        list.Add(streamReader.ReadLine());
      }
      streamReader.Close();
    }
    return list;
  };

  function Help_NextColor (c) {
    if (c === $T02().DarkCyan) {
      return $T02().White;
    }
    return $asm00.Forays.Color.$Cast($T02().White + c.valueOf());
  };

  function Help_TutorialText (topic) {
    switch (topic.valueOf()) {
      case 0: 
        return JSIL.Array.New($T05(), ["Moving around", "", "Use the numpad [1-9] to move. Press", "[5] to wait.", "", "If you have no numpad, you can use", "the arrow keys or [hjkl] to move,", "using [yubn] for diagonal moves.", "", "This tip won't appear again. If you", "wish to view all tips, you can find", "them by pressing [?] for help."]);

      case 1: 
        return JSIL.Array.New($T05(), ["Attacking enemies", "", "To make a melee attack, simply try to", "move toward an adjacent monster."]);

      case 2: 
        return JSIL.Array.New($T05(), ["Using your torch", "", "You carry a torch that illuminates", "your surroundings, but its light makes", "your presence obvious to enemies.", "", "To put your torch away (or bring it", "back out), press [t].", "", "You won't be able to see quite as far without", "your torch (and you'll have a harder time", "spotting hidden things), but you'll be able", "to sneak around without automatically", "alerting monsters."]);

      case 3: 
        return JSIL.Array.New($T05(), ["Resisted!", "", "Some monsters take half damage from certain", "attack types. If a monster resists one of your", "attacks, you can switch to a different", "weapon by pressing [e] to access the", "equipment screen.", "", "For example, skeletons resist several types of", "damage, but are fully vulnerable to maces."]);

      case 4: 
        return JSIL.Array.New($T05(), ["You're on fire!", "", "You'll take damage each turn", "until you put it out.", "", "Stand still by pressing [.] and", "you'll try to put out the fire."]);

      case 5: 
        return JSIL.Array.New($T05(), ["Recovering health", "", "Take advantage of your natural recovery. Your", "health will slowly return until your HP reaches", "a multiple of 10 (so if your health is 74/100,", "it'll go back up to 80/100, and then stop).", "", "If that isn't enough, you can restore more HP by", "resting. Press [r], and if you're undisturbed for", "10 turns, you'll regain half of your missing HP", "(and restore your magic reserves, if applicable).", "", "You can rest only once per dungeon level, but your", "natural recovery always works."]);

      case 6: 
        return JSIL.Array.New($T05(), ["Ranged attacks", "", "There are some monsters that are best dispatched", "at a safe distance. You can switch to your bow", "by pressing [e] to access the equipment screen.", "", "Once you've readied your bow, press [s] to shoot."]);

      case 7: 
        return JSIL.Array.New($T05(), ["Feats", "", "Feats are special abilities", "you can learn at shrines.", "", "You need to put ALL of the required", "points into a feat before you can", "use it."]);

      case 8: 
        return JSIL.Array.New($T05(), ["Armor", "", "Armor helps you to avoid taking damage from", "attacks, but heavy armor also interferes with", "both stealth and magic spells.", "", "If you don't need stealth or magic, wear", "full plate for the best protection."]);

      case 9: 
        return JSIL.Array.New($T05(), ["Healing pools", "", "Perhaps a relative of wishing wells, healing", "pools are a rare feature of the dungeon that", "can fully restore your health.", "", "To activate a healing pool, drop in an item", "by pressing [d]."]);

      case 10: 
        return JSIL.Array.New($T05(), ["Using consumable items", "", "Sometimes death is unavoidable.", "", "However, consumable items can", "get you out of some desperate", "situations.", "", "When all hope seems lost, be sure to", "check your inventory."]);

      default: 
        return JSIL.Array.New($T05(), 0);

    }
  };

  function Help_TutorialTip (topic) {
    if (!(!$T18().Option($T19().NEVER_DISPLAY_TIPS) && !$T00().prototype.get_Item.call($thisType.displayed, topic))) {
      return;
    }
    var color = $T02().Blue;
    var color2 = $T02().Yellow;
    var color3 = $T02().Gray;
    var array = $thisType.TutorialText(topic);
    var num = 27;
    var array2 = array;

    for (var i = 0; i < array2.length; i = ((i + 1) | 0)) {
      var text = array2[i];
      if (text.length > num) {
        num = text.length;
      }
    }
    num = ((num + 4) | 0);
    var num2 = ((num + 2) | 0);
    var num3 = ((array.length + 5) | 0);
    var array3 = JSIL.Array.New($T04(), num3);
    array3[0] = $S02().Construct("+", color2, System.String.PadRight("", num, "-"), color, "+", color2);
    array3[((array.length + 1) | 0)] = $S02().Construct("|", color, System.String.PadRight("", num, ' '), $T02().Gray, "|", color);
    array3[((array.length + 2) | 0)] = $T04().op_Addition($T04().op_Addition($S07().Construct("|", color), $T1B().GetColorString($T1B().PadOuter("[Press any key to continue]", num), color3)), $S07().Construct("|", color));
    array3[((array.length + 3) | 0)] = $T04().op_Addition($T04().op_Addition($S07().Construct("|", color), $T1B().GetColorString($T1B().PadOuter("[=] Stop showing tips", num), color3)), $S07().Construct("|", color));
    array3[((array.length + 4) | 0)] = $S02().Construct("+", color2, System.String.PadRight("", num, "-"), color, "+", color2);
    var num4 = 1;
    var array4 = array;

    for (var j = 0; j < array4.length; j = ((j + 1) | 0)) {
      var s = array4[j];
      array3[num4] = $T04().op_Addition($T04().op_Addition($S07().Construct("|", color), $T1B().GetColorString($T1B().PadOuter(s, num), color3)), $S07().Construct("|", color));
      if (num4 === 1) {
        array3[num4] = $S08().Construct(JSIL.Array.New($T1C(), 0));
        array3[num4].strings.Add($S09().Construct("|", color));
        array3[num4].strings.Add($S09().Construct($T1B().PadOuter(s, num), $T02().Yellow));
        array3[num4].strings.Add($S09().Construct("|", color));
      }
      num4 = ((num4 + 1) | 0);
    }
    var num5 = ((((25 - num3) | 0) / 2) | 0);
    var num6 = ((((80 - num2) | 0) / 2) | 0);
    var currentRect = $T0A().GetCurrentRect(num5, num6, num3, num2);
    var list = $S0A().Construct();
    list.Add($thisType.BoxAnimationFrame(((num3 - 2) | 0), $thisType.FrameWidth(num3, num2)));

    for (var k = ((num3 - 4) | 0); k > 0; k = ((k - 2) | 0)) {
      list.Add($thisType.BoxAnimationFrame(k, $thisType.FrameWidth(
            $T1B().Last$b1($T03())(list).get_Count(), 
            ($T1B().Last$b1($T03())(list).get_Item(0)).Length()
          )));
    }

    for (var l = ((list.get_Count() - 1) | 0); l >= 0; l = ((l - 1) | 0)) {
      var num7 = ((l + 1) | 0);
      var num8 = ((((num2 - (list.get_Item(l).get_Item(0)).Length()) | 0) / 2) | 0);
      $T0A().WriteList(((num5 + num7) | 0), ((num6 + num8) | 0), list.get_Item(l));
      $S0B().CallStatic($T20(), "Sleep", null, 20);
    }
    var array5 = array3;

    for (var m = 0; m < array5.length; m = ((m + 1) | 0)) {
      var cs = array5[m];
      $S04().CallStatic($T0A(), "WriteString", null, num5, num6, cs);
      num5 = ((num5 + 1) | 0);
    }
    $T12().Actor$player$value.DisplayStats(false);
    if (topic !== $T13().Feats) {
      $T12().Actor$B$value.DisplayNow();
    }
    $T09().set_CursorVisible(false);
    $S0B().CallStatic($T20(), "Sleep", null, 500);
    $T18().FlushInput();
    if ($T09().ReadKey(true).get_KeyChar().charCodeAt(0) === "=".charCodeAt(0)) {
      $T18().Options.set_Item($T19().NEVER_DISPLAY_TIPS, true);
    }
    $T0A().WriteArray(((((25 - num3) | 0) / 2) | 0), num6, currentRect);
    if (topic !== $T13().Feats) {
      $T12().Actor$player$value.DisplayStats(true);
    }
    $T00().prototype.set_Item.call($thisType.displayed, topic, true);
    $T09().set_CursorVisible(true);
  };

  JSIL.MakeStaticClass("Forays.Help", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:false}, "BoxAnimationFrame", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Forays.colorstring")]), [$.Int32, $.Int32], []), 
      Help_BoxAnimationFrame
    );

    $.Method({Static:true , Public:true }, "DisplayHelp", 
      new JSIL.MethodSignature(null, [], []), 
      Help_DisplayHelp$00
    );

    $.Method({Static:true , Public:true }, "DisplayHelp", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.HelpTopic")], []), 
      Help_DisplayHelp$01
    );

    $.Method({Static:true , Public:false}, "FrameWidth", 
      new JSIL.MethodSignature($.Int32, [$.Int32, $.Int32], []), 
      Help_FrameWidth
    );

    $.Method({Static:true , Public:true }, "HelpText", 
      new JSIL.MethodSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$.String]), [$asm00.TypeRef("Forays.HelpTopic")], []), 
      Help_HelpText
    );

    $.Method({Static:true , Public:true }, "NextColor", 
      new JSIL.MethodSignature($asm00.TypeRef("Forays.Color"), [$asm00.TypeRef("Forays.Color")], []), 
      Help_NextColor
    );

    $.Method({Static:true , Public:true }, "TutorialText", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.String]), [$asm00.TypeRef("Forays.TutorialTopic")], []), 
      Help_TutorialText
    );

    $.Method({Static:true , Public:true }, "TutorialTip", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Forays.TutorialTopic")], []), 
      Help_TutorialTip
    );

    $.Field({Static:true , Public:true }, "displayed", $asm00.TypeRef("Forays.Dict`2", [$asm00.TypeRef("Forays.TutorialTopic"), $.Boolean])); 
    function Help__cctor () {
      $thisType.displayed = $S00().Construct();
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      new JSIL.MethodSignature(null, [], []), 
      Help__cctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

